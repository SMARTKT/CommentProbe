<?xml version="1.0" ?>
<COMMENTS project_name="libpng" project_path="/home/dewang/smartKT/SmartKT/kgg/projects/libpng">
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For floating point" comment_scope_start="22" comment_scope_end="22">
		<SYMBOLS>
			<macroDefinition type="" spelling="_ISOC99_SOURCE" id="2400239632471"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the floating point exception extension" comment_scope_start="23" comment_scope_end="23">
		<SYMBOLS>
			<macroDefinition type="" spelling="_GNU_SOURCE" id="2401494171093"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the floating point exception extension" comment_scope_start="24" comment_scope_end="24">
		<SYMBOLS>
			<macroDefinition type="" spelling="_BSD_SOURCE" id="2402981084020"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the floating point exception extension" comment_scope_start="25" comment_scope_end="25">
		<SYMBOLS>
			<macroDefinition type="" spelling="_DEFAULT_SOURCE" id="2403668919912"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="from config.h, if included" comment_scope_start="34" comment_scope_end="34"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Define the following to use this test against your installed libpng, rather
 * than the one being built here:" comment_scope_start="48" comment_scope_end="59">
		<SYMBOLS>
			<inclusionDirective type="" spelling="../../png.h" id="2402816610079"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For crc32" comment_scope_start="60" comment_scope_end="60">
		<SYMBOLS>
			<inclusionDirective type="" spelling="zlib.h" id="2401045314616"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1.6.1 added support for the configure test harness, which uses 77 to indicate
 * a skipped test, in earlier versions we need to succeed on a skipped test, so:" comment_scope_start="63" comment_scope_end="71">
		<SYMBOLS>
			<macroDefinition type="" spelling="SKIP" id="2400738079513"/>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2402577774972"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="pngvalid requires write support and one of the fixed or floating point APIs." comment_scope_start="72" comment_scope_end="77"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This deliberately lacks the const." comment_scope_start="78" comment_scope_end="80"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is copied from 1.5.1 png.h:" comment_scope_start="81" comment_scope_end="102"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="These are needed too for the default build:" comment_scope_start="103" comment_scope_end="106"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This comes from pnglibconf.h after 1.5:" comment_scope_start="107" comment_scope_end="113"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1.6.0 constifies many APIs, the following exists to allow pngvalid to be
    * compiled against earlier versions." comment_scope_start="114" comment_scope_end="120"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RELEASE_BUILD is true for releases and release candidates:" comment_scope_start="121" comment_scope_end="125"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!RELEASE_BUILD" comment_scope_start="126" comment_scope_end="126"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!RELEASE_BUILD" comment_scope_start="128" comment_scope_end="128"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For floating point constants" comment_scope_start="130" comment_scope_end="130"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For malloc" comment_scope_start="131" comment_scope_end="131"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For memcpy, memset" comment_scope_start="132" comment_scope_end="132"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For floor" comment_scope_start="133" comment_scope_end="133"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Convenience macros." comment_scope_start="135" comment_scope_end="145"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Unused formal parameter errors are removed using the following macro which is
 * expected to have no bad effects on performance." comment_scope_start="146" comment_scope_end="156"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="**************************** EXCEPTION HANDLING ****************************" comment_scope_start="157" comment_scope_end="169"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="__cplusplus" comment_scope_start="170" comment_scope_end="170"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following are macros to reduce typing everywhere where the well known
 * name 'the_exception_context' must be defined." comment_scope_start="175" comment_scope_end="181"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This macro returns the number of elements in an array as an (unsigned int),
 * it is necessary to avoid the inability of certain versions of GCC to use
 * the value of a compile-time constant when performing range checks.  It must
 * be passed an array name." comment_scope_start="182" comment_scope_end="188"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="GCC BUG 66447 (https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66447) requires
 * some broken GCC versions to be fixed up to avoid invalid whining about auto
 * variables that are *not* changed within the scope of a setjmp being changed.
 *
 * Feel free to extend the list of broken versions." comment_scope_start="189" comment_scope_end="198"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the moment just do it always; all versions of GCC seem to be broken:" comment_scope_start="199" comment_scope_end="202">
		<SYMBOLS>
			<VarDecl type="const void *volatile" spelling="make_volatile_for_gnu" id="2400255981773"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gcc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!GNUC broken versions" comment_scope_start="203" comment_scope_end="203"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!GNUC broken versions" comment_scope_start="205" comment_scope_end="205"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="****************************** UTILITIES ***********************************" comment_scope_start="207" comment_scope_end="253">
		<SYMBOLS>
			<FunctionDecl type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401119038850"/>
			<FunctionDecl type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2401927242147"/>
			<FunctionDecl type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400096861541"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [64]" spelling="number" id="2401080679282"/>
			<VarDecl type="char [64]" spelling="number" id="2400310893779"/>
			<VarDecl type="const char [8]" spelling="invalid" id="2400728969753"/>
			<VarDecl type="const char [3]" spelling="sep" id="2400264330589"/>
			<VarDecl type="const char *[8]" spelling="colour_types" id="2400409070014"/>
			<ParmDecl type="char *" spelling="buffer" id="2403096571056"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2400377652042"/>
			<ParmDecl type="size_t" spelling="pos" id="2403715598541"/>
			<ParmDecl type="const char *" spelling="cat" id="2401460934955"/>
			<ParmDecl type="char *" spelling="buffer" id="2400249009456"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2402465243578"/>
			<ParmDecl type="size_t" spelling="pos" id="2400838557434"/>
			<ParmDecl type="int" spelling="n" id="2400404469722"/>
			<ParmDecl type="char *" spelling="buffer" id="2402975209108"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2402648881199"/>
			<ParmDecl type="size_t" spelling="pos" id="2403453239745"/>
			<ParmDecl type="double" spelling="d" id="2401249175905"/>
			<ParmDecl type="int" spelling="precision" id="2400488200530"/>
			<CallExpr type="int" spelling="sprintf" id="2403099843046"/>
			<CallExpr type="size_t" spelling="safecat" id="2403600139887"/>
			<CallExpr type="int" spelling="sprintf" id="2402137008093"/>
			<CallExpr type="size_t" spelling="safecat" id="2403913963406"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403458826626"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2401300064212"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2401078269380"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2401018478731"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401285354893"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401654754477"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2402301211825"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400864757632"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400525950238"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403438437868"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403511825239"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2402331232863"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402709131831"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404027029491"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2400439152143"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403330262776"/>
			<DeclRefExpr type="int" spelling="n" id="2403180123451"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401180262085"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2400193400946"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403695937428"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402597335508"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2401052392538"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2402915344216"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403511596373"/>
			<DeclRefExpr type="int" spelling="precision" id="2401186913116"/>
			<DeclRefExpr type="double" spelling="d" id="2404279138383"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403691494224"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2402671930657"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400600054957"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403840056807"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403483727110"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2400664253385"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2402079660146"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2402317801872"/>
			<StringLiteral type="char [3]" spelling="&quot;%d&quot;" id="2403578839958"/>
			<StringLiteral type="char [5]" spelling="&quot;%.*f&quot;" id="2403066919586"/>
			<StringLiteral type="const char [8]" spelling="&quot;invalid&quot;" id="2403778186108"/>
			<StringLiteral type="const char [3]" spelling="&quot;: &quot;" id="2403203664889"/>
			<StringLiteral type="char [10]" spelling="&quot;grayscale&quot;" id="2401072992547"/>
			<StringLiteral type="char [11]" spelling="&quot;truecolour&quot;" id="2402546236181"/>
			<StringLiteral type="char [15]" spelling="&quot;indexed-colour&quot;" id="2401139045350"/>
			<StringLiteral type="char [21]" spelling="&quot;grayscale with alpha&quot;" id="2403436053069"/>
			<StringLiteral type="char [22]" spelling="&quot;truecolour with alpha&quot;" id="2401172467638"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400697350644"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401219733152"/>
			<UnexposedExpr type="const char *" spelling="cat" id="2403382547863"/>
			<UnexposedExpr type="const char *" spelling="cat" id="2401352773181"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402250100061"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404095294425"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2403062193150"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401618456250"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402717346392"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402978052350"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401467182972"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2401147433071"/>
			<UnexposedExpr type="char *" spelling="number" id="2402845502775"/>
			<UnexposedExpr type="int" spelling="n" id="2400820326863"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401142712392"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403971712232"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2400315903142"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402380850486"/>
			<UnexposedExpr type="const char *" spelling="number" id="2401236202235"/>
			<UnexposedExpr type="char *" spelling="number" id="2402059802972"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2403674008075"/>
			<UnexposedExpr type="char *" spelling="number" id="2402361721719"/>
			<UnexposedExpr type="int" spelling="precision" id="2402045171557"/>
			<UnexposedExpr type="double" spelling="d" id="2401952027003"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403883995462"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2401272775208"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2403720987542"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402847153612"/>
			<UnexposedExpr type="const char *" spelling="number" id="2401077214761"/>
			<UnexposedExpr type="char *" spelling="number" id="2401657572438"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2400518487905"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2403455544854"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2403244244816"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error handling is particularly problematic in production code - error
 * handlers often themselves have bugs which lead to programs that detect
 * minor errors crashing.  The following functions deal with one very
 * common class of errors in error handlers - attempting to format error or
 * warning messages into buffers that are too small." comment_scope_start="207" comment_scope_end="253">
		<SYMBOLS>
			<FunctionDecl type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401119038850"/>
			<FunctionDecl type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2401927242147"/>
			<FunctionDecl type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400096861541"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [64]" spelling="number" id="2401080679282"/>
			<VarDecl type="char [64]" spelling="number" id="2400310893779"/>
			<VarDecl type="const char [8]" spelling="invalid" id="2400728969753"/>
			<VarDecl type="const char [3]" spelling="sep" id="2400264330589"/>
			<VarDecl type="const char *[8]" spelling="colour_types" id="2400409070014"/>
			<ParmDecl type="char *" spelling="buffer" id="2403096571056"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2400377652042"/>
			<ParmDecl type="size_t" spelling="pos" id="2403715598541"/>
			<ParmDecl type="const char *" spelling="cat" id="2401460934955"/>
			<ParmDecl type="char *" spelling="buffer" id="2400249009456"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2402465243578"/>
			<ParmDecl type="size_t" spelling="pos" id="2400838557434"/>
			<ParmDecl type="int" spelling="n" id="2400404469722"/>
			<ParmDecl type="char *" spelling="buffer" id="2402975209108"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2402648881199"/>
			<ParmDecl type="size_t" spelling="pos" id="2403453239745"/>
			<ParmDecl type="double" spelling="d" id="2401249175905"/>
			<ParmDecl type="int" spelling="precision" id="2400488200530"/>
			<CallExpr type="int" spelling="sprintf" id="2403099843046"/>
			<CallExpr type="size_t" spelling="safecat" id="2403600139887"/>
			<CallExpr type="int" spelling="sprintf" id="2402137008093"/>
			<CallExpr type="size_t" spelling="safecat" id="2403913963406"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403458826626"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2401300064212"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2401078269380"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2401018478731"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401285354893"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401654754477"/>
			<DeclRefExpr type="const char *" spelling="cat" id="2402301211825"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400864757632"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400525950238"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403438437868"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403511825239"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2402331232863"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402709131831"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404027029491"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2400439152143"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403330262776"/>
			<DeclRefExpr type="int" spelling="n" id="2403180123451"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401180262085"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2400193400946"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403695937428"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402597335508"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2401052392538"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2402915344216"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403511596373"/>
			<DeclRefExpr type="int" spelling="precision" id="2401186913116"/>
			<DeclRefExpr type="double" spelling="d" id="2404279138383"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403691494224"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2402671930657"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400600054957"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403840056807"/>
			<DeclRefExpr type="char [64]" spelling="number" id="2403483727110"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2400664253385"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2402079660146"/>
			<DeclRefExpr type="const char [8]" spelling="invalid" id="2402317801872"/>
			<StringLiteral type="char [3]" spelling="&quot;%d&quot;" id="2403578839958"/>
			<StringLiteral type="char [5]" spelling="&quot;%.*f&quot;" id="2403066919586"/>
			<StringLiteral type="const char [8]" spelling="&quot;invalid&quot;" id="2403778186108"/>
			<StringLiteral type="const char [3]" spelling="&quot;: &quot;" id="2403203664889"/>
			<StringLiteral type="char [10]" spelling="&quot;grayscale&quot;" id="2401072992547"/>
			<StringLiteral type="char [11]" spelling="&quot;truecolour&quot;" id="2402546236181"/>
			<StringLiteral type="char [15]" spelling="&quot;indexed-colour&quot;" id="2401139045350"/>
			<StringLiteral type="char [21]" spelling="&quot;grayscale with alpha&quot;" id="2403436053069"/>
			<StringLiteral type="char [22]" spelling="&quot;truecolour with alpha&quot;" id="2401172467638"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400697350644"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401219733152"/>
			<UnexposedExpr type="const char *" spelling="cat" id="2403382547863"/>
			<UnexposedExpr type="const char *" spelling="cat" id="2401352773181"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402250100061"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404095294425"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2403062193150"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401618456250"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402717346392"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402978052350"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401467182972"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2401147433071"/>
			<UnexposedExpr type="char *" spelling="number" id="2402845502775"/>
			<UnexposedExpr type="int" spelling="n" id="2400820326863"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401142712392"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403971712232"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2400315903142"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402380850486"/>
			<UnexposedExpr type="const char *" spelling="number" id="2401236202235"/>
			<UnexposedExpr type="char *" spelling="number" id="2402059802972"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2403674008075"/>
			<UnexposedExpr type="char *" spelling="number" id="2402361721719"/>
			<UnexposedExpr type="int" spelling="precision" id="2402045171557"/>
			<UnexposedExpr type="double" spelling="d" id="2401952027003"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403883995462"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2401272775208"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2403720987542"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402847153612"/>
			<UnexposedExpr type="const char *" spelling="number" id="2401077214761"/>
			<UnexposedExpr type="char *" spelling="number" id="2401657572438"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2400518487905"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2403455544854"/>
			<UnexposedExpr type="const char *" spelling="invalid" id="2403244244816"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bugs" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="class" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Convert a double precision value to fixed point." comment_scope_start="254" comment_scope_end="260">
		<SYMBOLS>
			<FunctionDecl type="png_fixed_point (double)" spelling="fix" id="2403209184617"/>
			<TypeRef type="png_fixed_point" spelling="png_fixed_point" id="2403006306883"/>
			<TypeRef type="png_fixed_point" spelling="png_fixed_point" id="2403006306883"/>
			<ParmDecl type="double" spelling="d" id="2400883875874"/>
			<CallExpr type="double" spelling="floor" id="2401056366989"/>
			<DeclRefExpr type="double" spelling="d" id="2400009310053"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2403828119648"/>
			<DeclRefExpr type="double" spelling="d" id="2404057826667"/>
			<DeclRefExpr type="double" spelling="d" id="2403148315012"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2402573556678"/>
			<UnexposedExpr type="double" spelling="d" id="2403881122974"/>
			<UnexposedExpr type="double" spelling="d" id="2402974506116"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="fixed point"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="261" comment_scope_end="261"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate random bytes.  This uses a boring repeatable algorithm and it
 * is implemented here so that it gives the same set of numbers on every
 * architecture.  It's a linear congruential generator (Knuth or Sedgewick
 * &quot;Algorithms&quot;) but it comes from the 'feedback taps' table in Horowitz and
 * Hill, &quot;The Art of Electronics&quot; (Pseudo-Random Bit Sequences and Noise
 * Generation.)" comment_scope_start="263" comment_scope_end="275">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="png_uint_32" spelling="u0" id="2402534785196"/>
			<VarDecl type="png_uint_32" spelling="u1" id="2404098029651"/>
			<VarDecl type="png_bytep" spelling="bytes" id="2401334367193"/>
			<ParmDecl type="png_uint_32 *" spelling="seed" id="2402445857061"/>
			<ParmDecl type="void *" spelling="pv" id="2403464512834"/>
			<ParmDecl type="size_t" spelling="size" id="2403465348598"/>
			<DeclRefExpr type="png_uint_32 *" spelling="seed" id="2400815765580"/>
			<DeclRefExpr type="png_uint_32 *" spelling="seed" id="2401569227619"/>
			<DeclRefExpr type="void *" spelling="pv" id="2403384122036"/>
			<UnexposedExpr type="png_uint_32 *" spelling="seed" id="2400239165587"/>
			<UnexposedExpr type="png_uint_32 *" spelling="seed" id="2400013997396"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generation" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There are thirty three bits, the next bit in the sequence is bit-33 XOR
    * bit-20.  The top 1 bit is in u1, the bottom 32 are in u0." comment_scope_start="276" comment_scope_end="281">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="i" id="2402033058955"/>
			<DeclRefExpr type="size_t" spelling="i" id="2400000798990"/>
			<DeclRefExpr type="size_t" spelling="i" id="2402041647102"/>
			<DeclRefExpr type="size_t" spelling="size" id="2402777926213"/>
			<DeclRefExpr type="size_t" spelling="i" id="2400828579655"/>
			<UnexposedExpr type="size_t" spelling="i" id="2402414084557"/>
			<UnexposedExpr type="size_t" spelling="size" id="2403321663010"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="xor" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First generate 8 new bits then shift them in at the end." comment_scope_start="282" comment_scope_end="289">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="u" id="2401591119354"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2400698673588"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2403988538234"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2404074693585"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2400307091547"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2403248629995"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2402823878461"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2401087285235"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2401056432310"/>
			<DeclRefExpr type="png_uint_32" spelling="u" id="2403706714045"/>
			<DeclRefExpr type="png_bytep" spelling="bytes" id="2402763783057"/>
			<DeclRefExpr type="png_uint_32" spelling="u" id="2403053357006"/>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2401258416531"/>
			<UnexposedExpr type="png_uint_32" spelling="u1" id="2402291976556"/>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2400082561504"/>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2403357935716"/>
			<UnexposedExpr type="png_uint_32" spelling="u" id="2403074317587"/>
			<UnexposedExpr type="png_uint_32" spelling="u" id="2400346504232"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ" comment_scope_start="320" comment_scope_end="320"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_FILLER || READ_RGB_TO_GRAY" comment_scope_start="339" comment_scope_end="339"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ || WRITE_tRNS || WRITE_FILTER" comment_scope_start="341" comment_scope_end="341"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0 .. max-1" comment_scope_start="348" comment_scope_end="348">
		<SYMBOLS>
			<CallExpr type="png_uint_16" spelling="random_u16" id="2404261444606"/>
			<DeclRefExpr type="png_uint_16 (void)" spelling="random_u16" id="2401863073734"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400953936670"/>
			<UnexposedExpr type="unsigned int" spelling="random_u16" id="2401605596061"/>
			<UnexposedExpr type="png_uint_16 (*)(void)" spelling="random_u16" id="2403222043674"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400872644986"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_TRANSFORMS || WRITE_FILTER" comment_scope_start="350" comment_scope_end="350"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_RGB_TO_GRAY || READ_FILLER" comment_scope_start="359" comment_scope_end="359"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A numeric ID based on PNG file characteristics.  The 'do_interlace' field
 * simply records whether pngvalid did the interlace itself or whether it
 * was done by libpng.  Width and height must be less than 256.  'palette' is an
 * index of the palette to use for formats with a palette otherwise a boolean
 * indicating if a tRNS chunk was generated." comment_scope_start="361" comment_scope_end="378"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Utility to construct a standard name for a standard image." comment_scope_start="379" comment_scope_end="385">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="char *" spelling="buffer" id="2401119160672"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2400045842432"/>
			<ParmDecl type="size_t" spelling="pos" id="2401842791341"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2403859648631"/>
			<ParmDecl type="int" spelling="bit_depth" id="2404179984400"/>
			<ParmDecl type="unsigned int" spelling="npalette" id="2402898820840"/>
			<ParmDecl type="int" spelling="interlace_type" id="2400935661187"/>
			<ParmDecl type="png_uint_32" spelling="w" id="2403509620181"/>
			<ParmDecl type="png_uint_32" spelling="h" id="2401821087506"/>
			<ParmDecl type="int" spelling="do_interlace" id="2403735346044"/>
			<CallExpr type="size_t" spelling="safecat" id="2400486290847"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403410143313"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403861056287"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401763700370"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400152450712"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401796417031"/>
			<DeclRefExpr type="const char *[8]" spelling="colour_types" id="2402028100483"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402931205687"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403543623676"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2401669395832"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2402064391218"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401318334852"/>
			<UnexposedExpr type="const char **" spelling="colour_types" id="2401979980824"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403217964704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="utility" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="must have a palette" comment_scope_start="386" comment_scope_end="386">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401719023769"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401689716370"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402167836509"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Convenience API and defines to list valid formats.  Note that 16 bit read and
 * write support is required to do 16 bit read tests (we must be able to make a
 * 16 bit image to test!)" comment_scope_start="428" comment_scope_end="444"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following defines the number of different palettes to generate for
 * each log bit depth of a colour type 3 standard image." comment_scope_start="445" comment_scope_end="464">
		<SYMBOLS>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<ParmDecl type="png_bytep" spelling="colour_type" id="2401076874143"/>
			<ParmDecl type="png_bytep" spelling="bit_depth" id="2401434562043"/>
			<ParmDecl type="unsigned int *" spelling="palette_number" id="2404032018203"/>
			<ParmDecl type="int" spelling="low_depth_gray" id="2401048142650"/>
			<ParmDecl type="int" spelling="tRNS" id="2404088854045"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2401117840107"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2400041873242"/>
			<DeclRefExpr type="int" spelling="low_depth_gray" id="2403297696274"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2401632263363"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2403115685457"/>
			<DeclRefExpr type="unsigned int *" spelling="palette_number" id="2401154567617"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2401245183302"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2402860258704"/>
			<UnexposedExpr type="int" spelling="low_depth_gray" id="2401611681116"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2403519535406"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2403858434639"/>
			<UnexposedExpr type="unsigned int *" spelling="palette_number" id="2402411867645"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palettes"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no alpha channel" comment_scope_start="465" comment_scope_end="465">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2402706600326"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2402215748379"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add multiple palettes for colour type 3, one image with tRNS
       * and one without for other non-alpha formats:" comment_scope_start="467" comment_scope_end="472">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="unsigned int" spelling="pn" id="2401848992696"/>
			<VarDecl type="png_byte" spelling="ct" id="2401153485574"/>
			<DeclRefExpr type="unsigned int *" spelling="palette_number" id="2401083535922"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2401720210233"/>
			<UnexposedExpr type="unsigned int *" spelling="palette_number" id="2403052785783"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2400006378769"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palettes"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="GRAY" comment_scope_start="473" comment_scope_end="473">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="ct" id="2403150925539"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2402666593673"/>
			<DeclRefExpr type="int" spelling="tRNS" id="2400796143533"/>
			<DeclRefExpr type="unsigned int" spelling="pn" id="2401571473142"/>
			<UnexposedExpr type="int" spelling="ct" id="2402150629184"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2402663655117"/>
			<UnexposedExpr type="int" spelling="ct" id="2402146523018"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2404036290837"/>
			<UnexposedExpr type="int" spelling="tRNS" id="2401241384616"/>
			<UnexposedExpr type="unsigned int" spelling="pn" id="2403717510840"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB" comment_scope_start="473" comment_scope_end="473">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="ct" id="2403150925539"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2402666593673"/>
			<DeclRefExpr type="int" spelling="tRNS" id="2400796143533"/>
			<DeclRefExpr type="unsigned int" spelling="pn" id="2401571473142"/>
			<UnexposedExpr type="int" spelling="ct" id="2402150629184"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2402663655117"/>
			<UnexposedExpr type="int" spelling="ct" id="2402146523018"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2404036290837"/>
			<UnexposedExpr type="int" spelling="tRNS" id="2401241384616"/>
			<UnexposedExpr type="unsigned int" spelling="pn" id="2403717510840"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PALETTE" comment_scope_start="474" comment_scope_end="474">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="ct" id="2401650207051"/>
			<DeclRefExpr type="unsigned int" spelling="pn" id="2403032378750"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2400872675499"/>
			<UnexposedExpr type="int" spelling="ct" id="2404221010265"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2400821077802"/>
			<UnexposedExpr type="unsigned int" spelling="pn" id="2400850902194"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2402190491723"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="No: next bit depth" comment_scope_start="477" comment_scope_end="479">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int *" spelling="palette_number" id="2400414852099"/>
			<UnexposedExpr type="unsigned int *" spelling="palette_number" id="2400978355112"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Palette images are restricted to 8 bit depth" comment_scope_start="483" comment_scope_end="490">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2402798045258"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2403448459873"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2402485370188"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2402393135361"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2402138528817"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2402710247918"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="restricted" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Move to the next color type, or return 0 at the end." comment_scope_start="491" comment_scope_end="516">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2403638066888"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2400350787562"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2403054545335"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2403975424268"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2401109093945"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2403763192961"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2402153215210"/>
			<DeclRefExpr type="png_bytep" spelling="colour_type" id="2401577587710"/>
			<DeclRefExpr type="png_bytep" spelling="bit_depth" id="2401859080278"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2400586273964"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2403560538319"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2402457557896"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2403107420442"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2401293361580"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2400368914769"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2403117021547"/>
			<UnexposedExpr type="png_bytep" spelling="colour_type" id="2400029657669"/>
			<UnexposedExpr type="png_bytep" spelling="bit_depth" id="2402056812551"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Find a sample index for the desired sample:" comment_scope_start="526" comment_scope_end="529">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2403927412482"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400946303106"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2401614745775"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2402152664751"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2403468551235"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401902639593"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2401690458820"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!palette" comment_scope_start="530" comment_scope_end="530">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402231068520"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403000777274"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402655900906"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Alpha channel" comment_scope_start="536" comment_scope_end="536">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2403083005991"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2403819120979"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2401737509340"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Multiple channels; select one:" comment_scope_start="538" comment_scope_end="541">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400861253332"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2404182522823"/>
			<DeclRefExpr type="unsigned int" spelling="sample_index" id="2403272638554"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400172151995"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403809883799"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403568745631"/>
			<UnexposedExpr type="unsigned int" spelling="sample_index" id="2402846739127"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2402316878851"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400986492928"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the sample from the row as an integer." comment_scope_start="543" comment_scope_end="557">
		<SYMBOLS>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2403768147483"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2400970881091"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2401153814052"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2403294238661"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401387209150"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2401370594916"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403084675388"/>
			<DeclRefExpr type="int" spelling="swap16" id="2401810006833"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402357667355"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2403247239734"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2401425053573"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2404018036137"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_index" id="2402008572080"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2402738011706"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402475798324"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402132333399"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2403344969544"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402396951721"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400151035245"/>
			<UnexposedExpr type="int" spelling="swap16" id="2401017848445"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2403507215843"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2401877380871"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="integer" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Less than 8 bits per sample.  By default PNG has the big end of
    * the egg on the left of the screen, but if littleendian is set
    * then the big end is on the right." comment_scope_start="558" comment_scope_end="568">
		<SYMBOLS>
			<FunctionDecl type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2401219500584"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2402559451438"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2404067655142"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2400709472220"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2403518876456"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400912396511"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2402741926922"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_index" id="2400423328866"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402588981969"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2402266082389"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_index" id="2403707532786"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2403662895437"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402386848910"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2402988975044"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_index" id="2401204061481"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401329461985"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401622733323"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_TRANSFORMS_SUPPORTED" comment_scope_start="569" comment_scope_end="569"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Copy a single pixel, of a given size, from one buffer to another -
 * while this is basically bit addressed there is an implicit assumption
 * that pixels 8 or more bits in size are byte aligned and that pixels
 * do not otherwise cross byte boundaries.  (This is, so far as I know,
 * universally true in bitmap computer graphics.  [JCB 20101212])
 *
 * NOTE: The to and from buffers may be the same." comment_scope_start="571" comment_scope_end="583">
		<SYMBOLS>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="png_bytep" spelling="toBuffer" id="2400468209358"/>
			<ParmDecl type="png_uint_32" spelling="toIndex" id="2400153982056"/>
			<ParmDecl type="png_const_bytep" spelling="fromBuffer" id="2403910557061"/>
			<ParmDecl type="png_uint_32" spelling="fromIndex" id="2402588946873"/>
			<ParmDecl type="unsigned int" spelling="pixelSize" id="2404069209292"/>
			<ParmDecl type="int" spelling="littleendian" id="2403036387318"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="implicit" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Assume we can multiply by 'size' without overflow because we are
    * just working in a single buffer." comment_scope_start="584" comment_scope_end="588">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2402310832796"/>
			<DeclRefExpr type="unsigned int" spelling="pixelSize" id="2401793584783"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2402283288662"/>
			<DeclRefExpr type="unsigned int" spelling="pixelSize" id="2401795577117"/>
			<UnexposedExpr type="unsigned int" spelling="pixelSize" id="2402017916236"/>
			<UnexposedExpr type="unsigned int" spelling="pixelSize" id="2403006874212"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="multiply" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Sub-byte" comment_scope_start="589" comment_scope_end="589">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="pixelSize" id="2400744831625"/>
			<UnexposedExpr type="unsigned int" spelling="pixelSize" id="2401929039771"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Mask to select the location of the copied pixel:" comment_scope_start="591" comment_scope_end="593">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="destMask" id="2402202224727"/>
			<DeclRefExpr type="unsigned int" spelling="pixelSize" id="2402350032611"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2401663166290"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2401318290402"/>
			<DeclRefExpr type="unsigned int" spelling="pixelSize" id="2403963061700"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2403910644188"/>
			<UnexposedExpr type="unsigned int" spelling="pixelSize" id="2401415146335"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2402091789235"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2402476144037"/>
			<UnexposedExpr type="unsigned int" spelling="pixelSize" id="2401389882520"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2400893900259"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following read the entire pixels and clears the extra:" comment_scope_start="594" comment_scope_end="597">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="destByte" id="2403135004694"/>
			<VarDecl type="unsigned int" spelling="sourceByte" id="2401182634641"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2400934356212"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2400996190045"/>
			<DeclRefExpr type="unsigned int" spelling="destMask" id="2401583037393"/>
			<DeclRefExpr type="png_const_bytep" spelling="fromBuffer" id="2403805811328"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2401674286095"/>
			<UnexposedExpr type="png_bytep" spelling="toBuffer" id="2401607673475"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2404018165403"/>
			<UnexposedExpr type="unsigned int" spelling="destMask" id="2402867555317"/>
			<UnexposedExpr type="png_const_bytep" spelling="fromBuffer" id="2402294463730"/>
			<UnexposedExpr type="png_uint_32" spelling="fromIndex" id="2402242001381"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="clears" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't rely on &lt;&lt; or &gt;&gt; supporting '0' here, just in case:" comment_scope_start="598" comment_scope_end="613">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2403281963356"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2403510571284"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2402470790111"/>
			<DeclRefExpr type="unsigned int" spelling="sourceByte" id="2401298771137"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2401949522164"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2403789317729"/>
			<DeclRefExpr type="unsigned int" spelling="sourceByte" id="2401414972062"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2404054587751"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2401298904839"/>
			<DeclRefExpr type="unsigned int" spelling="sourceByte" id="2402308259606"/>
			<DeclRefExpr type="png_uint_32" spelling="fromIndex" id="2401879246649"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2403932527355"/>
			<DeclRefExpr type="unsigned int" spelling="sourceByte" id="2404277807158"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2402592369076"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2401781251292"/>
			<DeclRefExpr type="png_uint_32" spelling="toIndex" id="2402851336983"/>
			<DeclRefExpr type="unsigned int" spelling="destByte" id="2402884294955"/>
			<DeclRefExpr type="unsigned int" spelling="sourceByte" id="2402900379962"/>
			<DeclRefExpr type="unsigned int" spelling="destMask" id="2401424565542"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2402029892241"/>
			<UnexposedExpr type="png_uint_32" spelling="fromIndex" id="2401300637877"/>
			<UnexposedExpr type="png_uint_32" spelling="fromIndex" id="2400295604328"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2401269741192"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2402954744930"/>
			<UnexposedExpr type="png_uint_32" spelling="fromIndex" id="2400750501257"/>
			<UnexposedExpr type="png_uint_32" spelling="fromIndex" id="2403484079230"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2402035686610"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2401136538823"/>
			<UnexposedExpr type="png_bytep" spelling="toBuffer" id="2401450211498"/>
			<UnexposedExpr type="png_uint_32" spelling="toIndex" id="2402130324403"/>
			<UnexposedExpr type="unsigned int" spelling="destByte" id="2402306757926"/>
			<UnexposedExpr type="unsigned int" spelling="sourceByte" id="2400739047833"/>
			<UnexposedExpr type="unsigned int" spelling="destMask" id="2401267026010"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="One or more bytes" comment_scope_start="614" comment_scope_end="614"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Copy a complete row of pixels, taking into account potential partial
 * bytes at the end." comment_scope_start="619" comment_scope_end="641">
		<SYMBOLS>
			<FunctionDecl type="void (png_bytep, png_const_bytep, unsigned int, int)" spelling="row_copy" id="2402190750495"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="unsigned int" spelling="mask" id="2401072972211"/>
			<ParmDecl type="png_bytep" spelling="toBuffer" id="2400483472626"/>
			<ParmDecl type="png_const_bytep" spelling="fromBuffer" id="2402495147355"/>
			<ParmDecl type="unsigned int" spelling="bitWidth" id="2403880993233"/>
			<ParmDecl type="int" spelling="littleendian" id="2402852612796"/>
			<CallExpr type="void *" spelling="memcpy" id="2402394403395"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2400600145698"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2400443953885"/>
			<DeclRefExpr type="png_const_bytep" spelling="fromBuffer" id="2401179563953"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2401484978627"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2404096375398"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2400332543472"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2403042951492"/>
			<DeclRefExpr type="png_const_bytep" spelling="fromBuffer" id="2402633215356"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2403346195586"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2401098568567"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2402106349246"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2401337754746"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2401793254969"/>
			<DeclRefExpr type="unsigned int" spelling="bitWidth" id="2400350222318"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2400062977411"/>
			<DeclRefExpr type="png_bytep" spelling="toBuffer" id="2400894202900"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2400976750720"/>
			<DeclRefExpr type="png_const_bytep" spelling="fromBuffer" id="2402497210804"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2400302121069"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2401100818929"/>
			<UnexposedExpr type="void *" spelling="toBuffer" id="2403097251568"/>
			<UnexposedExpr type="png_bytep" spelling="toBuffer" id="2401287359805"/>
			<UnexposedExpr type="const void *" spelling="fromBuffer" id="2401624792355"/>
			<UnexposedExpr type="png_const_bytep" spelling="fromBuffer" id="2403854371664"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2401448199493"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2403178830923"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2403067525795"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2401068427894"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2401398259078"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2402755636993"/>
			<UnexposedExpr type="unsigned int" spelling="bitWidth" id="2403515634331"/>
			<UnexposedExpr type="png_bytep" spelling="toBuffer" id="2404006837367"/>
			<UnexposedExpr type="png_bytep" spelling="toBuffer" id="2404045346295"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2400390059495"/>
			<UnexposedExpr type="png_const_bytep" spelling="fromBuffer" id="2400481562983"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2402728339958"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="complete" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="partial" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Compare pixels - they are assumed to start at the first byte in the
 * given buffers." comment_scope_start="642" comment_scope_end="654">
		<SYMBOLS>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="png_const_bytep" spelling="pa" id="2401497524720"/>
			<ParmDecl type="png_const_bytep" spelling="pb" id="2402533681903"/>
			<ParmDecl type="png_uint_32" spelling="bit_width" id="2401110874175"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Ok, any differences?" comment_scope_start="655" comment_scope_end="660"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There are, but they may not be significant, remove the bits
       * after the end (the low order bits in PNG.)" comment_scope_start="661" comment_scope_end="668"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="From libpng-1.5.6 the overwrite should be fixed, so compare the trailing
    * bits too:" comment_scope_start="670" comment_scope_end="676">
		<SYMBOLS>
			<CallExpr type="int" spelling="memcmp" id="2403793720830"/>
			<DeclRefExpr type="int (const void *, const void *, unsigned long)" spelling="memcmp" id="2400023059773"/>
			<DeclRefExpr type="png_const_bytep" spelling="pa" id="2403660939350"/>
			<DeclRefExpr type="png_const_bytep" spelling="pb" id="2400394377163"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_width" id="2402263208742"/>
			<UnexposedExpr type="int (*)(const void *, const void *, unsigned long)" spelling="memcmp" id="2401645837189"/>
			<UnexposedExpr type="const void *" spelling="pa" id="2401169839272"/>
			<UnexposedExpr type="png_const_bytep" spelling="pa" id="2402380796775"/>
			<UnexposedExpr type="const void *" spelling="pb" id="2403480909817"/>
			<UnexposedExpr type="png_const_bytep" spelling="pb" id="2401297108888"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2402118004559"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the index of the changed byte." comment_scope_start="677" comment_scope_end="683">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="where" id="2400259763729"/>
			<DeclRefExpr type="png_const_bytep" spelling="pa" id="2401969551646"/>
			<DeclRefExpr type="png_uint_32" spelling="where" id="2400921559979"/>
			<DeclRefExpr type="png_const_bytep" spelling="pb" id="2404051004905"/>
			<DeclRefExpr type="png_uint_32" spelling="where" id="2403435472955"/>
			<DeclRefExpr type="png_uint_32" spelling="where" id="2404008535189"/>
			<DeclRefExpr type="png_uint_32" spelling="where" id="2400511235997"/>
			<UnexposedExpr type="png_const_bytep" spelling="pa" id="2401902339689"/>
			<UnexposedExpr type="png_uint_32" spelling="where" id="2402091632450"/>
			<UnexposedExpr type="png_const_bytep" spelling="pb" id="2400325965386"/>
			<UnexposedExpr type="png_uint_32" spelling="where" id="2402487020527"/>
			<UnexposedExpr type="png_uint_32" spelling="where" id="2403311574829"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="685" comment_scope_end="685"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="************************** BASIC PNG FILE WRITING **************************" comment_scope_start="687" comment_scope_end="691"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A png_store takes data from the sequential writer or provides data
 * to the sequential reader.  It can also store the result of a PNG
 * write for later retrieval." comment_scope_start="687" comment_scope_end="691"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="arbitrary" comment_scope_start="692" comment_scope_end="692"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: stored in reverse order" comment_scope_start="695" comment_scope_end="695">
		<SYMBOLS>
			<TypeRef type="struct png_store_buffer" spelling="struct png_store_buffer" id="2401425122215"/>
			<FieldDecl type="struct png_store_buffer *" spelling="prev" id="2401687526812"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reverse" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="record of a single palette entry" comment_scope_start="701" comment_scope_end="701"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="as many as you like..." comment_scope_start="711" comment_scope_end="711">
		<SYMBOLS>
			<TypeRef type="struct png_store_file" spelling="struct png_store_file" id="2401280284265"/>
			<FieldDecl type="struct png_store_file *" spelling="next" id="2400910109512"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of bits in IDAT size" comment_scope_start="713" comment_scope_end="713">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="IDAT_bits" id="2404218098389"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total size of IDAT data" comment_scope_start="714" comment_scope_end="714">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="IDAT_size" id="2404145888531"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="must be correct (see FILEID)" comment_scope_start="715" comment_scope_end="715">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="id" id="2402271542851"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In this (the last) buffer" comment_scope_start="716" comment_scope_end="716">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="datacount" id="2403967674160"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Last buffer in file" comment_scope_start="717" comment_scope_end="717">
		<SYMBOLS>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<FieldDecl type="png_store_buffer" spelling="data" id="2402775501192"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of entries in palette" comment_scope_start="718" comment_scope_end="718">
		<SYMBOLS>
			<FieldDecl type="int" spelling="npalette" id="2404231013521"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="May be NULL" comment_scope_start="719" comment_scope_end="719">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<FieldDecl type="store_palette_entry *" spelling="palette" id="2400377931800"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following is a pool of memory allocated by a single libpng read or write
 * operation." comment_scope_start="722" comment_scope_end="741">
		<SYMBOLS>
			<TypedefDecl type="store_pool" spelling="store_pool" id="2400782150943"/>
			<TypeRef type="struct png_store" spelling="struct png_store" id="2401228679494"/>
			<TypeRef type="struct store_memory" spelling="struct store_memory" id="2402134291218"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="struct png_store *" spelling="store" id="2403852098707"/>
			<FieldDecl type="struct store_memory *" spelling="list" id="2404092186094"/>
			<FieldDecl type="png_byte [4]" spelling="mark" id="2402809888388"/>
			<FieldDecl type="png_alloc_size_t" spelling="max" id="2403851607621"/>
			<FieldDecl type="png_alloc_size_t" spelling="current" id="2402270927466"/>
			<FieldDecl type="png_alloc_size_t" spelling="limit" id="2402924663863"/>
			<FieldDecl type="png_alloc_size_t" spelling="total" id="2404008101355"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_max" id="2403917432933"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_limit" id="2400007583894"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_total" id="2402023992999"/>
			<StructDecl type="struct store_pool" spelling="store_pool" id="2402909318205"/>
			<StructDecl type="struct store_memory" spelling="store_memory" id="2403729728358"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Back pointer" comment_scope_start="727" comment_scope_end="727">
		<SYMBOLS>
			<TypeRef type="struct png_store" spelling="struct png_store" id="2401228679494"/>
			<FieldDecl type="struct png_store *" spelling="store" id="2403852098707"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="List of allocated memory" comment_scope_start="728" comment_scope_end="728">
		<SYMBOLS>
			<TypeRef type="struct store_memory" spelling="struct store_memory" id="2402134291218"/>
			<FieldDecl type="struct store_memory *" spelling="list" id="2404092186094"/>
			<StructDecl type="struct store_memory" spelling="store_memory" id="2403729728358"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Before and after data" comment_scope_start="729" comment_scope_end="729">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte [4]" spelling="mark" id="2402809888388"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Statistics for this run." comment_scope_start="731" comment_scope_end="731"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Maximum single allocation" comment_scope_start="732" comment_scope_end="732">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="max" id="2403851607621"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Current allocation" comment_scope_start="733" comment_scope_end="733">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="current" id="2402270927466"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Highest current allocation" comment_scope_start="734" comment_scope_end="734">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="limit" id="2402924663863"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total allocation" comment_scope_start="735" comment_scope_end="735">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="total" id="2404008101355"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Overall statistics (retained across successive runs)." comment_scope_start="737" comment_scope_end="741">
		<SYMBOLS>
			<TypedefDecl type="store_pool" spelling="store_pool" id="2400782150943"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_max" id="2403917432933"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_limit" id="2400007583894"/>
			<FieldDecl type="png_alloc_size_t" spelling="max_total" id="2402023992999"/>
			<StructDecl type="struct store_pool" spelling="store_pool" id="2402909318205"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For cexcept.h exception handling - simply store one of these;
    * the context is a self pointer but it may point to a different
    * png_store (in fact it never does in this program.)" comment_scope_start="745" comment_scope_end="757">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<FieldDecl type="struct exception_context" spelling="exception_context" id="2400971925909"/>
			<FieldDecl type="unsigned int" spelling="verbose" id="2402241196550"/>
			<FieldDecl type="unsigned int" spelling="treat_warnings_as_errors" id="2402886815118"/>
			<FieldDecl type="unsigned int" spelling="expect_error" id="2402448928113"/>
			<FieldDecl type="unsigned int" spelling="expect_warning" id="2402298435855"/>
			<FieldDecl type="unsigned int" spelling="saw_warning" id="2403804434898"/>
			<FieldDecl type="unsigned int" spelling="speed" id="2403237867438"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="self" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="exception handling" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="use progressive read" comment_scope_start="758" comment_scope_end="758">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="progressive" id="2400188228907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="used as a temporary flag" comment_scope_start="759" comment_scope_end="759">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="validated" id="2402200112159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="temporary" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="number of options below:" comment_scope_start="762" comment_scope_end="762">
		<SYMBOLS>
			<FieldDecl type="int" spelling="noptions" id="2400214299704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="option number, 0..30" comment_scope_start="764" comment_scope_end="764">
		<SYMBOLS>
			<FieldDecl type="unsigned char" spelling="option" id="2401741713057"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="setting (unset,invalid,on,off)" comment_scope_start="765" comment_scope_end="765">
		<SYMBOLS>
			<FieldDecl type="unsigned char" spelling="setting" id="2404183757455"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Name of test" comment_scope_start="767" comment_scope_end="767">
		<SYMBOLS>
			<FieldDecl type="char [128]" spelling="test" id="2401255616111"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Share fields" comment_scope_start="770" comment_scope_end="770"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Length of chunk+overhead (chunkpos &gt;= 8)" comment_scope_start="771" comment_scope_end="771">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="chunklen" id="2402206307467"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Type of chunk (valid if chunkpos &gt;= 4)" comment_scope_start="772" comment_scope_end="772">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="chunktype" id="2400558643782"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Position in chunk" comment_scope_start="773" comment_scope_end="773">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="chunkpos" id="2400456504662"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Accumulated IDAT size in .new" comment_scope_start="774" comment_scope_end="774">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="IDAT_size" id="2401818316780"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Cache of the file store value" comment_scope_start="775" comment_scope_end="775">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="IDAT_bits" id="2400829454490"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read fields" comment_scope_start="777" comment_scope_end="777"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Used to read a saved file" comment_scope_start="778" comment_scope_end="778">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<FieldDecl type="png_structp" spelling="pread" id="2403809499888"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set when reading" comment_scope_start="780" comment_scope_end="780">
		<SYMBOLS>
			<TypeRef type="png_store_file" spelling="png_store_file" id="2403991237255"/>
			<FieldDecl type="png_store_file *" spelling="current" id="2401169336146"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set when reading" comment_scope_start="781" comment_scope_end="781">
		<SYMBOLS>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<FieldDecl type="png_store_buffer *" spelling="next" id="2403493061725"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Position in *next" comment_scope_start="782" comment_scope_end="782">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="readpos" id="2403944542815"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Buffer for reading interlaced images" comment_scope_start="783" comment_scope_end="783">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte *" spelling="image" id="2400479626817"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Size of this buffer" comment_scope_start="784" comment_scope_end="784">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="cb_image" id="2400154266918"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Row size of the image(s)" comment_scope_start="785" comment_scope_end="785">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="cb_row" id="2400766534421"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Used when re-chunking IDAT chunks" comment_scope_start="787" comment_scope_end="787">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="IDAT_len" id="2401671019775"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Used when re-chunking IDAT chunks" comment_scope_start="788" comment_scope_end="788">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="IDAT_pos" id="2400141602842"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of rows in a single image" comment_scope_start="789" comment_scope_end="789">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="image_h" id="2400076379950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Write fields" comment_scope_start="792" comment_scope_end="793">
		<SYMBOLS>
			<TypeRef type="png_store_file" spelling="png_store_file" id="2403991237255"/>
			<FieldDecl type="png_store_file *" spelling="saved" id="2401023432644"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Used when writing a new file" comment_scope_start="794" comment_scope_end="794">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<FieldDecl type="png_structp" spelling="pwrite" id="2402618488415"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Position in .new" comment_scope_start="796" comment_scope_end="796">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="writepos" id="2401051644251"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The end of the new PNG file being written." comment_scope_start="798" comment_scope_end="798">
		<SYMBOLS>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<FieldDecl type="png_store_buffer" spelling="new" id="2403848406980"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initialization and cleanup" comment_scope_start="804" comment_scope_end="813">
		<SYMBOLS>
			<FunctionDecl type="void (png_bytep)" spelling="store_pool_mark" id="2400550942311"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32 [2]" spelling="store_seed" id="2401717963986"/>
			<ParmDecl type="png_bytep" spelling="mark" id="2400298186774"/>
			<CallExpr type="void" spelling="make_four_random_bytes" id="2401048698018"/>
			<DeclRefExpr type="void (png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2400276363261"/>
			<DeclRefExpr type="png_uint_32 [2]" spelling="store_seed" id="2400484689526"/>
			<DeclRefExpr type="png_bytep" spelling="mark" id="2403429269356"/>
			<UnexposedExpr type="void (*)(png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2403409652264"/>
			<UnexposedExpr type="png_uint_32 *" spelling="store_seed" id="2401052973315"/>
			<UnexposedExpr type="png_bytep" spelling="mark" id="2402756564428"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use this for random 32 bit values; this function makes sure the result is
 * non-zero." comment_scope_start="814" comment_scope_end="832">
		<SYMBOLS>
			<FunctionDecl type="png_uint_32 (void)" spelling="random_32" id="2400740862511"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_byte [4]" spelling="mark" id="2403512011043"/>
			<VarDecl type="png_uint_32" spelling="result" id="2402391224812"/>
			<CallExpr type="void" spelling="store_pool_mark" id="2403331433573"/>
			<DeclRefExpr type="void (png_bytep)" spelling="store_pool_mark" id="2400427539586"/>
			<DeclRefExpr type="png_byte [4]" spelling="mark" id="2401100375556"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2400168221321"/>
			<DeclRefExpr type="png_byte [4]" spelling="mark" id="2402203124248"/>
			<DeclRefExpr type="png_byte [4]" spelling="mark" id="2404135370959"/>
			<DeclRefExpr type="png_byte [4]" spelling="mark" id="2400207482073"/>
			<DeclRefExpr type="png_byte [4]" spelling="mark" id="2403171956485"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2402465384824"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2403410874847"/>
			<UnexposedExpr type="void (*)(png_bytep)" spelling="store_pool_mark" id="2402105739713"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2404223492911"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2402501182510"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2404002795297"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="833" comment_scope_end="833"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the number of bits in 'num'" comment_scope_start="953" comment_scope_end="962">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="b" id="2402412994097"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2404043486402"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2403848728207"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2401523799548"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2401478962464"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402506853498"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2401042573337"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2401869994591"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2403549110954"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2403641933612"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2403155277403"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401631879147"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2403427500453"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2400139339086"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2404019200491"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2401566966782"/>
			<DeclRefExpr type="png_uint_32" spelling="num" id="2403322267432"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2403634829953"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2400351607419"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2401542172894"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2400433764630"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2404107093421"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2400206294134"/>
			<UnexposedExpr type="png_uint_32" spelling="num" id="2403160527320"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0..32" comment_scope_start="963" comment_scope_end="963">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401243927113"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2403636021001"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Main interface to file storage, after writing a new PNG file (see the API
 * below) call store_storefile to store the result with the given name and id." comment_scope_start="966" comment_scope_end="986">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_store_file" spelling="png_store_file" id="2403991237255"/>
			<VarDecl type="png_store_file *" spelling="pf" id="2402653400660"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401528294243"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401137358689"/>
			<CallExpr type="void" spelling="png_error" id="2401611582649"/>
			<CallExpr type="void *" spelling="malloc" id="2400439227411"/>
			<CallExpr type="void" spelling="png_error" id="2403654506992"/>
			<CallExpr type="size_t" spelling="safecat" id="2403352179760"/>
			<CallExpr type="unsigned int" spelling="bits_of" id="2400483283254"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400272534347"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401192788170"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401864130474"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401477259177"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400145230926"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403540883084"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2402800634368"/>
			<DeclRefExpr type="void *(unsigned long)" spelling="malloc" id="2403634023586"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2400593842138"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2403191131756"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403440626023"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400153543317"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402061513841"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2401491580134"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2400176150691"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403509500658"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2402754933931"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2400151522778"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2400868689574"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404168405967"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2402745274773"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402174735418"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2402759820451"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400083753656"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2400423670266"/>
			<DeclRefExpr type="unsigned int (png_uint_32)" spelling="bits_of" id="2404170850107"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403830653257"/>
			<StringLiteral type="char [28]" spelling="&quot;storefile: incomplete write&quot;" id="2403765243289"/>
			<StringLiteral type="char [15]" spelling="&quot;storefile: OOM&quot;" id="2403200827233"/>
			<MemberRefExpr type="png_uint_32" spelling="chunkpos" id="2403956011121"/>
			<MemberRefExpr type="png_uint_32" spelling="chunktype" id="2400718926894"/>
			<MemberRefExpr type="png_uint_32" spelling="chunklen" id="2401921163781"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2402147264670"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2404045215289"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2403669062136"/>
			<MemberRefExpr type="char [64]" spelling="name" id="2403495366973"/>
			<MemberRefExpr type="char [64]" spelling="name" id="2402399206154"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2402544698443"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2403453616300"/>
			<MemberRefExpr type="png_store_buffer" spelling="data" id="2402703140816"/>
			<MemberRefExpr type="png_store_buffer" spelling="new" id="2402221860385"/>
			<MemberRefExpr type="size_t" spelling="datacount" id="2402075999645"/>
			<MemberRefExpr type="size_t" spelling="writepos" id="2401787015782"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2403610187480"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2400989222682"/>
			<MemberRefExpr type="unsigned int" spelling="IDAT_bits" id="2402688448907"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2402191361123"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2404192894747"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400169233200"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2400636328386"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403630529905"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2400001977194"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403866281858"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2400122960002"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402147803372"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403034056268"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2402922116568"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2400674010272"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401047600774"/>
			<UnexposedExpr type="void *(*)(unsigned long)" spelling="malloc" id="2400808585189"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2402740855241"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2404246817352"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401409927829"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2402135733843"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2404161702367"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401965790330"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400558099352"/>
			<UnexposedExpr type="char *" spelling="name" id="2403018579701"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2402007203125"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2403680805918"/>
			<UnexposedExpr type="const char *" spelling="wname" id="2401281832208"/>
			<UnexposedExpr type="char *" spelling="wname" id="2403993482480"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403749469934"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2402980380245"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402339501830"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2400256034679"/>
			<UnexposedExpr type="png_store_buffer" spelling="new" id="2404179943810"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403345477853"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2400605443797"/>
			<UnexposedExpr type="size_t" spelling="writepos" id="2403365877686"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401925642728"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2400369277846"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2400885233305"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404235064007"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2401083418543"/>
			<UnexposedExpr type="unsigned int (*)(png_uint_32)" spelling="bits_of" id="2401396267207"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2404195248563"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402643475194"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="storage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Because the IDAT always has zlib header stuff this must be true:" comment_scope_start="987" comment_scope_end="1000">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2404234550544"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2404020121126"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402571730208"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400818671405"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404065642639"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401388454304"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400747160169"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401387341579"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402843364073"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401454493603"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2401559207963"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401399027381"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2402078527316"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401965524773"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400186053667"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401106572970"/>
			<StringLiteral type="char [24]" spelling="&quot;storefile: 0 sized IDAT&quot;" id="2402742924961"/>
			<MemberRefExpr type="unsigned int" spelling="IDAT_bits" id="2402191375896"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401608843943"/>
			<MemberRefExpr type="struct png_store_buffer *" spelling="prev" id="2404053819047"/>
			<MemberRefExpr type="png_store_buffer" spelling="new" id="2402159817936"/>
			<MemberRefExpr type="size_t" spelling="writepos" id="2403345640863"/>
			<MemberRefExpr type="png_uint_32" spelling="chunkpos" id="2400079419582"/>
			<MemberRefExpr type="png_uint_32" spelling="chunktype" id="2400782660215"/>
			<MemberRefExpr type="png_uint_32" spelling="chunklen" id="2400881602662"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2402314352306"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2401985459949"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2403533982335"/>
			<MemberRefExpr type="int" spelling="npalette" id="2402156176162"/>
			<MemberRefExpr type="int" spelling="npalette" id="2400879938437"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2400554042468"/>
			<MemberRefExpr type="int" spelling="npalette" id="2403049872766"/>
			<UnexposedExpr type="unsigned int" spelling="IDAT_bits" id="2401167722740"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2403653309800"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403647266492"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2403380013645"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2401409488909"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400246712310"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402247688773"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400162977028"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401261856173"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402078642712"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400475485350"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400761606329"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2404262325813"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2403799736065"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400692548076"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2403853465504"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404225345168"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401527254449"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404284821069"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400258010192"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And save it." comment_scope_start="1001" comment_scope_end="1004">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *, png_uint_32)" spelling="store_storefile" id="2402108019786"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2403330580153"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403932817931"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402593536169"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2401756675499"/>
			<MemberRefExpr type="struct png_store_file *" spelling="next" id="2402568461212"/>
			<MemberRefExpr type="png_store_file *" spelling="saved" id="2402860818276"/>
			<MemberRefExpr type="png_store_file *" spelling="saved" id="2404064010966"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2402180213585"/>
			<UnexposedExpr type="png_store_file *" spelling="saved" id="2400346138364"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400027919573"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401791984380"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2400993292359"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate an error message (in the given buffer)" comment_scope_start="1006" comment_scope_end="1012">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400393990981"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401873550572"/>
			<ParmDecl type="char *" spelling="buffer" id="2403148458367"/>
			<ParmDecl type="size_t" spelling="bufsize" id="2403608060789"/>
			<ParmDecl type="size_t" spelling="pos" id="2400836919575"/>
			<ParmDecl type="const char *" spelling="msg" id="2401992087444"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403639330963"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401774772057"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402900155352"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2401255408564"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403017632304"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404043635614"/>
			<UnexposedExpr type="png_const_structp" spelling="pread" id="2401665595365"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400440478610"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402731821580"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reading a file" comment_scope_start="1013" comment_scope_end="1021">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2400275978204"/>
			<CallExpr type="size_t" spelling="safecat" id="2402107474475"/>
			<CallExpr type="size_t" spelling="safecat" id="2401365549030"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401415298232"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400325598085"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2400568421239"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2401254075139"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402172143698"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401985319105"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401088329274"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401014091813"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2402566243564"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403977144310"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401987959592"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403531580712"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403802471428"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403809262071"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2400626725559"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403119076135"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402718963275"/>
			<DeclRefExpr type="const char [3]" spelling="sep" id="2403132110446"/>
			<StringLiteral type="char [7]" spelling="&quot;read: &quot;" id="2403118737963"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2402315621486"/>
			<MemberRefExpr type="char [64]" spelling="name" id="2403236137522"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2403827085086"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402549989265"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402738915718"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401746770365"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401970927014"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2402888093906"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400047244429"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403390538527"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402805196220"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401916236254"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402651390867"/>
			<UnexposedExpr type="const char *" spelling="name" id="2400129223377"/>
			<UnexposedExpr type="char *" spelling="name" id="2403075888516"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2403235353907"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402615951613"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404264063472"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403479108176"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401505213781"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401345934753"/>
			<UnexposedExpr type="const char *" spelling="sep" id="2401750168563"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Writing a file" comment_scope_start="1025" comment_scope_end="1029">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403823735788"/>
			<CallExpr type="size_t" spelling="safecat" id="2403538344087"/>
			<CallExpr type="size_t" spelling="safecat" id="2400848127947"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401530632922"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401703730852"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2400449262161"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400230197734"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401454740264"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400251785459"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403277762932"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401442005239"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2401039790881"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400139341987"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400458611645"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403048642098"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400299642137"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401073853656"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2403617762061"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402113292349"/>
			<DeclRefExpr type="const char [3]" spelling="sep" id="2402083423417"/>
			<StringLiteral type="char [8]" spelling="&quot;write: &quot;" id="2403252915045"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2400708733742"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402014090848"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403492194594"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2403767314464"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400125833926"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403270774960"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402536927460"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2400385096942"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402200690708"/>
			<UnexposedExpr type="const char *" spelling="wname" id="2402869082413"/>
			<UnexposedExpr type="char *" spelling="wname" id="2404283644816"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402428757340"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401921440015"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2404292586950"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2401909631572"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401719309206"/>
			<UnexposedExpr type="const char *" spelling="sep" id="2401224707041"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Neither reading nor writing (or a memory error in struct delete)" comment_scope_start="1033" comment_scope_end="1035">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401520121096"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401950242096"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2404153351186"/>
			<DeclRefExpr type="char *" spelling="buffer" id="2401875804055"/>
			<DeclRefExpr type="size_t" spelling="bufsize" id="2400639287051"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401848484980"/>
			<StringLiteral type="char [11]" spelling="&quot;pngvalid: &quot;" id="2400054925499"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400484260544"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402201095715"/>
			<UnexposedExpr type="size_t" spelling="bufsize" id="2402443177966"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401930457631"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Verbose output to the error stream:" comment_scope_start="1046" comment_scope_end="1060">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *, png_const_structp, png_const_charp, png_const_charp)" spelling="store_verbose" id="2400236833857"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<VarDecl type="char [512]" spelling="buffer" id="2402310346024"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400507266492"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401232602099"/>
			<ParmDecl type="png_const_charp" spelling="prefix" id="2403346867588"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2400801761279"/>
			<CallExpr type="int" spelling="fputs" id="2401804776128"/>
			<CallExpr type="size_t" spelling="store_message" id="2402537983916"/>
			<CallExpr type="int" spelling="fputs" id="2404187666043"/>
			<CallExpr type="int" spelling="fputc" id="2401330509634"/>
			<DeclRefExpr type="png_const_charp" spelling="prefix" id="2401638606797"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2400553166979"/>
			<DeclRefExpr type="png_const_charp" spelling="prefix" id="2400214841356"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400069650097"/>
			<DeclRefExpr type="size_t (png_store *, png_const_structp, char *, size_t, size_t, const char *)" spelling="store_message" id="2401235194466"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400816530306"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401451686952"/>
			<DeclRefExpr type="char [512]" spelling="buffer" id="2402945768407"/>
			<DeclRefExpr type="char [512]" spelling="buffer" id="2401966761122"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2403809303545"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2402268241936"/>
			<DeclRefExpr type="char [512]" spelling="buffer" id="2404044755154"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400443462604"/>
			<DeclRefExpr type="int (int, FILE *)" spelling="fputc" id="2401580134896"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401330940293"/>
			<UnexposedExpr type="png_const_charp" spelling="prefix" id="2402780912954"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2402281341074"/>
			<UnexposedExpr type="png_const_charp" spelling="prefix" id="2401750948660"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404056009638"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_const_structp, char *, size_t, size_t, const char *)" spelling="store_message" id="2400751132137"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400528383457"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402210139678"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402501231928"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2402528665874"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2402476398401"/>
			<UnexposedExpr type="const char *" spelling="buffer" id="2402837216129"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400808438720"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400891646390"/>
			<UnexposedExpr type="int (*)(int, FILE *)" spelling="fputc" id="2402167449410"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400056956208"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error stream" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Log an error or warning - the relevant count is always incremented." comment_scope_start="1061" comment_scope_end="1065">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402804230457"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400678621140"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2401502666925"/>
			<ParmDecl type="int" spelling="is_error" id="2402137535824"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="incremented" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The warning is copied to the error buffer if there are no errors and it is
    * the first warning.  The error is copied to the error buffer if it is the
    * first error (overwriting any prior warnings)." comment_scope_start="1066" comment_scope_end="1076">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400523170377"/>
			<CallExpr type="size_t" spelling="store_message" id="2402883208048"/>
			<CallExpr type="void" spelling="store_verbose" id="2400737555328"/>
			<DeclRefExpr type="int" spelling="is_error" id="2401707556208"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400100397619"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404285679677"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403639713281"/>
			<DeclRefExpr type="size_t (png_store *, png_const_structp, char *, size_t, size_t, const char *)" spelling="store_message" id="2402991821170"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402521033162"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403443320582"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402813144232"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400501922524"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2402070991754"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403473772906"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, png_const_charp)" spelling="store_verbose" id="2403780187999"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403690448534"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402200883895"/>
			<DeclRefExpr type="int" spelling="is_error" id="2404267108020"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2400360656621"/>
			<StringLiteral type="char [8]" spelling="&quot;error: &quot;" id="2400491991482"/>
			<StringLiteral type="char [10]" spelling="&quot;warning: &quot;" id="2404263666082"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2401183924451"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2400679978456"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2402890095090"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2403166839311"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2400870636809"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2400793676596"/>
			<UnexposedExpr type="int" spelling="is_error" id="2400168348177"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404142162068"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402841021285"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2401249981745"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403033464744"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_const_structp, char *, size_t, size_t, const char *)" spelling="store_message" id="2401318329325"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401569155078"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401077852955"/>
			<UnexposedExpr type="char *" spelling="error" id="2401688818344"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400303667390"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401722459167"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2400082951017"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2401590708883"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400906389254"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, png_const_charp)" spelling="store_verbose" id="2400538703957"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401382832960"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402756314336"/>
			<UnexposedExpr type="int" spelling="is_error" id="2402450292133"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2402206394881"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Internal error function, called with a png_store but no libpng stuff." comment_scope_start="1079" comment_scope_end="1082">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401561302694"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2402806020418"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="1083" comment_scope_end="1083">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2400725573147"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401141680509"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400974063496"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2402849321763"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2403714076341"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401868575086"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401777012073"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And finally throw an exception." comment_scope_start="1085" comment_scope_end="1089">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2401316713024"/>
			<CallExpr type="void" spelling="longjmp" id="2400062706376"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404130975183"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401463250669"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401985709394"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403529858062"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403921445354"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2402398232380"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402457914182"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2403953182082"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2400358524577"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403207362607"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2403616419513"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2401163960743"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403424630377"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2404028928397"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402798450303"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="1091" comment_scope_end="1091"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Functions to use as PNG callbacks." comment_scope_start="1093" comment_scope_end="1094"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_NORETURN" comment_scope_start="1095" comment_scope_end="1095">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<ParmDecl type="png_structp" spelling="ppIn" id="2401565719626"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2402581962901"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="1101" comment_scope_end="1101">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2401847419390"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400534182215"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400653854745"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400735615671"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2401335057445"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400033691889"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401473703243"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402107832569"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401074160866"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And finally throw an exception." comment_scope_start="1103" comment_scope_end="1107">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2403898314030"/>
			<CallExpr type="void" spelling="longjmp" id="2403307441950"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403629394984"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2403876876236"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400076980561"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402083475083"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404003064153"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403166196818"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400790294818"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2401799137921"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2400784993835"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401869532236"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2400891992908"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400538928797"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401023189464"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402675341987"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401830302686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="warning" comment_scope_start="1117" comment_scope_end="1117">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2403382826217"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401685638408"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404242707191"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401749360543"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2404111000011"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400568647242"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402478180214"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402179151691"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2402448523328"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="These somewhat odd functions are used when reading an image to ensure that
 * the buffer is big enough, the png_structp is for errors." comment_scope_start="1122" comment_scope_end="1174">
		<SYMBOLS>
			<FunctionDecl type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2402688375527"/>
			<FunctionDecl type="void (png_store *, png_const_structp)" spelling="store_image_free" id="2404093275955"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="size_t" spelling="coffset" id="2403998512883"/>
			<VarDecl type="png_bytep" spelling="image" id="2400981591094"/>
			<VarDecl type="size_t" spelling="cb" id="2402375320264"/>
			<VarDecl type="png_bytep" spelling="image" id="2404019753151"/>
			<ParmDecl type="const png_store *" spelling="ps" id="2401398514692"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403849295913"/>
			<ParmDecl type="int" spelling="nImage" id="2402949804504"/>
			<ParmDecl type="png_uint_32" spelling="y" id="2403010986495"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401826424093"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2404067862622"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401092706973"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401770006638"/>
			<ParmDecl type="int" spelling="nImages" id="2402464290756"/>
			<ParmDecl type="size_t" spelling="cbRow" id="2402987082183"/>
			<ParmDecl type="png_uint_32" spelling="cRows" id="2403869550969"/>
			<CallExpr type="void" spelling="png_error" id="2402328892661"/>
			<CallExpr type="void" spelling="png_error" id="2403420992680"/>
			<CallExpr type="void" spelling="png_error" id="2402929298462"/>
			<CallExpr type="void" spelling="store_log" id="2400634175280"/>
			<CallExpr type="void" spelling="free" id="2402807616423"/>
			<CallExpr type="void" spelling="store_image_free" id="2404265216678"/>
			<DeclRefExpr type="int" spelling="nImage" id="2401422011414"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2401015306406"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400428877771"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2401510307848"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403295282820"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400107013655"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400856981712"/>
			<DeclRefExpr type="size_t" spelling="coffset" id="2404189474351"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2400655396006"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403541463255"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401969925028"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400357585172"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2400194110097"/>
			<DeclRefExpr type="size_t" spelling="coffset" id="2402128330757"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403220672362"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400284301861"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2402491029315"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400849242666"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401537917485"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404017059099"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401204210706"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400072023417"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401973212418"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404230727999"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402658924636"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400787795253"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400065621795"/>
			<DeclRefExpr type="void (void *)" spelling="free" id="2402132431345"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400637940456"/>
			<DeclRefExpr type="int" spelling="nImages" id="2401288814450"/>
			<DeclRefExpr type="png_uint_32" spelling="cRows" id="2400390696878"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2402730848326"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402488638797"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402744550512"/>
			<DeclRefExpr type="void (png_store *, png_const_structp)" spelling="store_image_free" id="2404120448422"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403367022811"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400218956036"/>
			<StringLiteral type="char [19]" spelling="&quot;no allocated image&quot;" id="2401210309498"/>
			<StringLiteral type="char [16]" spelling="&quot;image too small&quot;" id="2403907348103"/>
			<StringLiteral type="char [30]" spelling="&quot;png_store image overwrite (1)&quot;" id="2404035666776"/>
			<StringLiteral type="char [30]" spelling="&quot;png_store image overwrite (2)&quot;" id="2400202145843"/>
			<MemberRefExpr type="const png_uint_32" spelling="image_h" id="2402547986972"/>
			<MemberRefExpr type="const size_t" spelling="cb_row" id="2400044887193"/>
			<MemberRefExpr type="png_byte *const" spelling="image" id="2401784581525"/>
			<MemberRefExpr type="const size_t" spelling="cb_row" id="2400250323056"/>
			<MemberRefExpr type="const size_t" spelling="cb_image" id="2400447361385"/>
			<MemberRefExpr type="png_byte *const" spelling="image" id="2400280148090"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2400521363539"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2403495414705"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2403199868134"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2401470854945"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2404287038429"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2400350592955"/>
			<UnexposedExpr type="unsigned int" spelling="nImage" id="2400352243827"/>
			<UnexposedExpr type="int" spelling="nImage" id="2402790624727"/>
			<UnexposedExpr type="png_uint_32" spelling="image_h" id="2403276854111"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401488845814"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403665077383"/>
			<UnexposedExpr type="size_t" spelling="cb_row" id="2402335740698"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401826949822"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2400269587620"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400051719468"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401167010488"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400463727406"/>
			<UnexposedExpr type="size_t" spelling="coffset" id="2402108068394"/>
			<UnexposedExpr type="size_t" spelling="cb_row" id="2402906407959"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400167952983"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2401951897384"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400981670123"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400974294809"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402143212191"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2403177218915"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401146697701"/>
			<UnexposedExpr type="size_t" spelling="coffset" id="2400927657123"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2402867122807"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400843940297"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2402695969671"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404067395847"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2400793256812"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402985738137"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2403573456818"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402185401668"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404246481105"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400838434121"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401485543078"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2403297714286"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400250835053"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403728159808"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400035424518"/>
			<UnexposedExpr type="void (*)(void *)" spelling="free" id="2402349280418"/>
			<UnexposedExpr type="void *" spelling="image" id="2400473819202"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402317673368"/>
			<UnexposedExpr type="unsigned int" spelling="nImages" id="2404114851145"/>
			<UnexposedExpr type="int" spelling="nImages" id="2401904230736"/>
			<UnexposedExpr type="png_uint_32" spelling="cRows" id="2402782311243"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2401541833490"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2400547013027"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402406197895"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403777780742"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp)" spelling="store_image_free" id="2400011557758"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401898358739"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402359211145"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return a single row from the correct image." comment_scope_start="1122" comment_scope_end="1174">
		<SYMBOLS>
			<FunctionDecl type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2402688375527"/>
			<FunctionDecl type="void (png_store *, png_const_structp)" spelling="store_image_free" id="2404093275955"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="size_t" spelling="coffset" id="2403998512883"/>
			<VarDecl type="png_bytep" spelling="image" id="2400981591094"/>
			<VarDecl type="size_t" spelling="cb" id="2402375320264"/>
			<VarDecl type="png_bytep" spelling="image" id="2404019753151"/>
			<ParmDecl type="const png_store *" spelling="ps" id="2401398514692"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403849295913"/>
			<ParmDecl type="int" spelling="nImage" id="2402949804504"/>
			<ParmDecl type="png_uint_32" spelling="y" id="2403010986495"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401826424093"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2404067862622"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401092706973"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401770006638"/>
			<ParmDecl type="int" spelling="nImages" id="2402464290756"/>
			<ParmDecl type="size_t" spelling="cbRow" id="2402987082183"/>
			<ParmDecl type="png_uint_32" spelling="cRows" id="2403869550969"/>
			<CallExpr type="void" spelling="png_error" id="2402328892661"/>
			<CallExpr type="void" spelling="png_error" id="2403420992680"/>
			<CallExpr type="void" spelling="png_error" id="2402929298462"/>
			<CallExpr type="void" spelling="store_log" id="2400634175280"/>
			<CallExpr type="void" spelling="free" id="2402807616423"/>
			<CallExpr type="void" spelling="store_image_free" id="2404265216678"/>
			<DeclRefExpr type="int" spelling="nImage" id="2401422011414"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2401015306406"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400428877771"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2401510307848"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403295282820"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400107013655"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400856981712"/>
			<DeclRefExpr type="size_t" spelling="coffset" id="2404189474351"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2400655396006"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403541463255"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401969925028"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400357585172"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2400194110097"/>
			<DeclRefExpr type="size_t" spelling="coffset" id="2402128330757"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403220672362"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400284301861"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2402491029315"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400849242666"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401537917485"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404017059099"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401204210706"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400072023417"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401973212418"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404230727999"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402658924636"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400787795253"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400065621795"/>
			<DeclRefExpr type="void (void *)" spelling="free" id="2402132431345"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400637940456"/>
			<DeclRefExpr type="int" spelling="nImages" id="2401288814450"/>
			<DeclRefExpr type="png_uint_32" spelling="cRows" id="2400390696878"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2402730848326"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402488638797"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402744550512"/>
			<DeclRefExpr type="void (png_store *, png_const_structp)" spelling="store_image_free" id="2404120448422"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403367022811"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400218956036"/>
			<StringLiteral type="char [19]" spelling="&quot;no allocated image&quot;" id="2401210309498"/>
			<StringLiteral type="char [16]" spelling="&quot;image too small&quot;" id="2403907348103"/>
			<StringLiteral type="char [30]" spelling="&quot;png_store image overwrite (1)&quot;" id="2404035666776"/>
			<StringLiteral type="char [30]" spelling="&quot;png_store image overwrite (2)&quot;" id="2400202145843"/>
			<MemberRefExpr type="const png_uint_32" spelling="image_h" id="2402547986972"/>
			<MemberRefExpr type="const size_t" spelling="cb_row" id="2400044887193"/>
			<MemberRefExpr type="png_byte *const" spelling="image" id="2401784581525"/>
			<MemberRefExpr type="const size_t" spelling="cb_row" id="2400250323056"/>
			<MemberRefExpr type="const size_t" spelling="cb_image" id="2400447361385"/>
			<MemberRefExpr type="png_byte *const" spelling="image" id="2400280148090"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2400521363539"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2403495414705"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2403199868134"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2401470854945"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2404287038429"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2400350592955"/>
			<UnexposedExpr type="unsigned int" spelling="nImage" id="2400352243827"/>
			<UnexposedExpr type="int" spelling="nImage" id="2402790624727"/>
			<UnexposedExpr type="png_uint_32" spelling="image_h" id="2403276854111"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401488845814"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403665077383"/>
			<UnexposedExpr type="size_t" spelling="cb_row" id="2402335740698"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401826949822"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2400269587620"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400051719468"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401167010488"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400463727406"/>
			<UnexposedExpr type="size_t" spelling="coffset" id="2402108068394"/>
			<UnexposedExpr type="size_t" spelling="cb_row" id="2402906407959"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400167952983"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2401951897384"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400981670123"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400974294809"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402143212191"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2403177218915"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401146697701"/>
			<UnexposedExpr type="size_t" spelling="coffset" id="2400927657123"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2402867122807"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400843940297"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2402695969671"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404067395847"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2400793256812"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402985738137"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2403573456818"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402185401668"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404246481105"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400838434121"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401485543078"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2403297714286"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400250835053"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403728159808"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400035424518"/>
			<UnexposedExpr type="void (*)(void *)" spelling="free" id="2402349280418"/>
			<UnexposedExpr type="void *" spelling="image" id="2400473819202"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402317673368"/>
			<UnexposedExpr type="unsigned int" spelling="nImages" id="2404114851145"/>
			<UnexposedExpr type="int" spelling="nImages" id="2401904230736"/>
			<UnexposedExpr type="png_uint_32" spelling="cRows" id="2402782311243"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2401541833490"/>
			<UnexposedExpr type="size_t" spelling="cb_image" id="2400547013027"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402406197895"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403777780742"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp)" spelling="store_image_free" id="2400011557758"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401898358739"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402359211145"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The buffer is deliberately mis-aligned." comment_scope_start="1175" comment_scope_end="1178">
		<SYMBOLS>
			<CallExpr type="void *" spelling="malloc" id="2402186917295"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2401584162123"/>
			<DeclRefExpr type="void *(unsigned long)" spelling="malloc" id="2400536748496"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401506817911"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2402647538910"/>
			<UnexposedExpr type="void *(*)(unsigned long)" spelling="malloc" id="2402040242482"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401998715685"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402566869963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Called from the startup - ignore the error for the moment." comment_scope_start="1179" comment_scope_end="1184">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2401581020942"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401545062547"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400328230384"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403416183975"/>
			<StringLiteral type="char [28]" spelling="&quot;OOM allocating image buffer&quot;" id="2400848354913"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404288685506"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400040602900"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400714018950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="These magic tags are used to detect overwrites above." comment_scope_start="1186" comment_scope_end="1193">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="image" id="2403776368547"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2401810724086"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2402032719800"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402721016103"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403965742735"/>
			<DeclRefExpr type="png_bytep" spelling="image" id="2400316500560"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400655836306"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403603582777"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2402571564140"/>
			<MemberRefExpr type="size_t" spelling="cb_image" id="2400261537579"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2401526191885"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2403348188120"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401828995260"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402330612812"/>
			<UnexposedExpr type="png_bytep" spelling="image" id="2402277788832"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403563838568"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403293252539"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="We have an adequate sized image; lay out the rows.  There are 2 bytes at
    * the start and three at the end of each (this ensures that the row
    * alignment starts out odd - 2+1 and changes for larger images on each row.)" comment_scope_start="1195" comment_scope_end="1201">
		<SYMBOLS>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400280655869"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2401786013840"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401704630721"/>
			<DeclRefExpr type="png_uint_32" spelling="cRows" id="2403706579429"/>
			<MemberRefExpr type="size_t" spelling="cb_row" id="2401952122406"/>
			<MemberRefExpr type="png_uint_32" spelling="image_h" id="2403164956722"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400522584700"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2400378206605"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400895946705"/>
			<UnexposedExpr type="png_uint_32" spelling="cRows" id="2400348562164"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="starts" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For error checking, the whole buffer is set to 10110010 (0xb2 - 178).
    * This deliberately doesn't match the bits in the size test image which are
    * outside the image; these are set to 0xff (all 1).  To make the row
    * comparison work in the 'size' test case the size rows are pre-initialized
    * to the same value prior to calling 'standard_row'." comment_scope_start="1202" comment_scope_end="1209">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400697156463"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400761915212"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401576982468"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401984226448"/>
			<MemberRefExpr type="png_byte *" spelling="image" id="2400611056463"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400203696206"/>
			<UnexposedExpr type="void *" spelling="image" id="2401091381189"/>
			<UnexposedExpr type="png_byte *" spelling="image" id="2402797457663"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403074186460"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401368919382"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then put in the marks." comment_scope_start="1210" comment_scope_end="1226">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="png_uint_32" spelling="y" id="2400846638294"/>
			<VarDecl type="png_bytep" spelling="row" id="2401113233142"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2403798924028"/>
			<DeclRefExpr type="int" spelling="nImages" id="2402480599986"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403611890119"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401819199291"/>
			<DeclRefExpr type="png_uint_32" spelling="cRows" id="2403780958585"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2404094852739"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400990408504"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400307125451"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403673715097"/>
			<DeclRefExpr type="int" spelling="nImages" id="2400802524964"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402242693950"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401812922997"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2403848449586"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401485458236"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2403000357864"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2400736786663"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2400954373837"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401276509852"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2403239536220"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2404292025972"/>
			<UnexposedExpr type="png_uint_32" spelling="cRows" id="2400318505432"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2401081711304"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401073556843"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400362507950"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402191045181"/>
			<UnexposedExpr type="int" spelling="nImages" id="2400974036226"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2401874886149"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2403874113431"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2402118907921"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2404166049530"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2400227506992"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2401074106181"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2402906844095"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2403822789252"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2403194672870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="put" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The markers:" comment_scope_start="1219" comment_scope_end="1225">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401812922997"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2403848449586"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401485458236"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2403000357864"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2400736786663"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2400954373837"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401276509852"/>
			<DeclRefExpr type="size_t" spelling="cbRow" id="2403239536220"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2403874113431"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2402118907921"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2404166049530"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2400227506992"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2401074106181"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2402906844095"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2403822789252"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2403194672870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="skip image first row markers" comment_scope_start="1244" comment_scope_end="1244">
		<SYMBOLS>
			<DeclRefExpr type="png_const_bytep" spelling="image" id="2403822105083"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="1259" comment_scope_end="1259"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Each byte in the chunk type must be in one of the ranges 65..90, 97..122
    * (both inclusive), so:" comment_scope_start="1264" comment_scope_end="1278">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2402426093649"/>
			<VarDecl type="unsigned int" spelling="c" id="2403020497598"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402125873544"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402664463642"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2401676639512"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2401504639541"/>
			<DeclRefExpr type="unsigned int" spelling="c" id="2400890486229"/>
			<DeclRefExpr type="unsigned int" spelling="c" id="2402080915536"/>
			<DeclRefExpr type="unsigned int" spelling="c" id="2401061623778"/>
			<DeclRefExpr type="unsigned int" spelling="c" id="2400859456304"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2402334827604"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2401803935511"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2401591871135"/>
			<UnexposedExpr type="unsigned int" spelling="c" id="2402748759975"/>
			<UnexposedExpr type="unsigned int" spelling="c" id="2401703303162"/>
			<UnexposedExpr type="unsigned int" spelling="c" id="2402510686747"/>
			<UnexposedExpr type="unsigned int" spelling="c" id="2400398222820"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="It's valid" comment_scope_start="1279" comment_scope_end="1279"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Technically this is legal, but in practice libpng never writes more than
    * the maximum chunk size at once so if it happens something weird has
    * changed inside libpng (probably)." comment_scope_start="1295" comment_scope_end="1301">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2403445042223"/>
			<DeclRefExpr type="size_t" spelling="st" id="2401462564776"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401962569616"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401176666328"/>
			<StringLiteral type="char [22]" spelling="&quot;unexpected write size&quot;" id="2402131103105"/>
			<UnexposedExpr type="size_t" spelling="st" id="2401857466090"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404184141129"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400424398123"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now process the bytes to be written.  Do this in units of the space in the
    * output (write) buffer or, at the start 4 bytes for the chunk type and
    * length limited in any case by the amount of data." comment_scope_start="1302" comment_scope_end="1368">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_byte" spelling="b" id="2403233758653"/>
			<VarDecl type="png_byte" spelling="b" id="2402158073676"/>
			<VarDecl type="size_t" spelling="cb" id="2404158818353"/>
			<CallExpr type="void" spelling="store_storenew" id="2401700898858"/>
			<CallExpr type="void" spelling="png_error" id="2400712435867"/>
			<CallExpr type="void" spelling="png_error" id="2404263487418"/>
			<CallExpr type="int" spelling="valid_chunktype" id="2402913088361"/>
			<CallExpr type="void" spelling="png_error" id="2401542708143"/>
			<CallExpr type="void *" spelling="memcpy" id="2401529712159"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400702812056"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2402576830514"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_storenew" id="2400592237257"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403746505541"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2402609379027"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403106421065"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2400234715286"/>
			<DeclRefExpr type="size_t" spelling="st" id="2404196307514"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402556234500"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2400189144928"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2401515258204"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402990162108"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2400490750796"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2404061746630"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402561242513"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401199625135"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2401461100003"/>
			<DeclRefExpr type="size_t" spelling="st" id="2403740481388"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2400934555495"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2404091107600"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2400215666479"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400886102356"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2400235602011"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2400916169043"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402399597538"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401380881240"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2400135322348"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402967328197"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403183940082"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2402542079046"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2403884173227"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2403167289304"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400035625313"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401902730610"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402573680524"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402215759679"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2400283649602"/>
			<DeclRefExpr type="int (png_uint_32)" spelling="valid_chunktype" id="2402893967955"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2400004832948"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400369010634"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400485001526"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2400788358211"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400935810220"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2400231852634"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2401142149291"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403837718067"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2402455925287"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403546053630"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401480063976"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402469018031"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401779889722"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402988606361"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403609873234"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2403472965336"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400351947453"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2400053010090"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2403959939935"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401102202669"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402689738366"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2400837956448"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2403413431961"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403756357395"/>
			<DeclRefExpr type="size_t" spelling="writepos" id="2403563282898"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2404243348699"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400016565013"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402642051423"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401021618468"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2403875521246"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401222440948"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2402925410743"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401622868464"/>
			<StringLiteral type="char [23]" spelling="&quot;chunk length too great&quot;" id="2404270471380"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid internal image too large&quot;" id="2403578790116"/>
			<StringLiteral type="char [19]" spelling="&quot;invalid chunk type&quot;" id="2403469399578"/>
			<MemberRefExpr type="png_byte [500]" spelling="buffer" id="2401484158559"/>
			<MemberRefExpr type="png_store_buffer" spelling="new" id="2400465000569"/>
			<MemberRefExpr type="png_byte [500]" spelling="buffer" id="2402595971183"/>
			<MemberRefExpr type="png_store_buffer" spelling="new" id="2402160808088"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2400005467824"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2401012618364"/>
			<MemberRefExpr type="png_byte [500]" spelling="buffer" id="2404180844647"/>
			<MemberRefExpr type="png_store_buffer" spelling="new" id="2404035170410"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400490194769"/>
			<UnexposedExpr type="size_t" spelling="writepos" id="2401571566569"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_storenew" id="2403219613400"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400721659229"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403815196174"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2401649313715"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2401913955569"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2401891125744"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400038837661"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401854730522"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2400885581197"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403793052287"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2403156598295"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2404095522884"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2401711287232"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400129691630"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403441202459"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2403537520745"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2402861343482"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401110650966"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401462451748"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2402245691017"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2403087691222"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2404069098171"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401041390663"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401607658973"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401982278644"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402123659939"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2403606893855"/>
			<UnexposedExpr type="int (*)(png_uint_32)" spelling="valid_chunktype" id="2403972895284"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2403444320446"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402463610224"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404106172782"/>
			<UnexposedExpr type="size_t" spelling="st" id="2401243819033"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402158027880"/>
			<UnexposedExpr type="size_t" spelling="writepos" id="2400325629168"/>
			<UnexposedExpr type="size_t" spelling="writepos" id="2403742911275"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400769883725"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2403148892185"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403440204108"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2404251855530"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2402496650198"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2401135050412"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400970581887"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403035325058"/>
			<UnexposedExpr type="size_t" spelling="writepos" id="2401483194113"/>
			<UnexposedExpr type="const void *" spelling="pb" id="2400244071149"/>
			<UnexposedExpr type="png_bytep" spelling="pb" id="2400913756641"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402041693527"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400349806037"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401883025649"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400097482057"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402179277342"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2400124485787"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2402929331153"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="for header and CRC" comment_scope_start="1345" comment_scope_end="1345">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2400788358211"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="chunkpos &gt;= 8" comment_scope_start="1349" comment_scope_end="1349"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="bytes left in chunk" comment_scope_start="1356" comment_scope_end="1356">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="cb" id="2403546053630"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401480063976"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402469018031"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400769883725"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2403148892185"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403440204108"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1357" comment_scope_end="1357">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401779889722"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402988606361"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403609873234"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2404251855530"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2402496650198"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1360" comment_scope_end="1360">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402689738366"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2400837956448"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400349806037"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="must be equal" comment_scope_start="1365" comment_scope_end="1365">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401021618468"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2403875521246"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2400124485787"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2402929331153"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="equal" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="while (st &gt; 0)" comment_scope_start="1368" comment_scope_end="1368"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="DOES NOTHING" comment_scope_start="1379" comment_scope_end="1379">
		<SYMBOLS>
			<DeclRefExpr type="png_structp" spelling="ppIn" id="2402152811272"/>
			<UnexposedExpr type="png_structp" spelling="ppIn" id="2401561675967"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the bytes available for read in the current buffer." comment_scope_start="1386" comment_scope_end="1391">
		<SYMBOLS>
			<FunctionDecl type="size_t (png_store *)" spelling="store_read_buffer_size" id="2401605836904"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402395183704"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400066586424"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402005396272"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2402829790630"/>
			<MemberRefExpr type="png_store_buffer" spelling="data" id="2401233771886"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2400320562737"/>
			<MemberRefExpr type="size_t" spelling="datacount" id="2402684630945"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2400565059867"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2401660097237"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400820266589"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2402956364069"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400723365499"/>
			<UnexposedExpr type="size_t" spelling="datacount" id="2401105128400"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2401198946892"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401382765872"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return total bytes available for read." comment_scope_start="1393" comment_scope_end="1437">
		<SYMBOLS>
			<FunctionDecl type="size_t (png_store *)" spelling="store_read_buffer_avail" id="2402159319931"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<TypeRef type="png_store_buffer" spelling="png_store_buffer" id="2401640544452"/>
			<VarDecl type="png_store_buffer *" spelling="next" id="2400606361197"/>
			<VarDecl type="size_t" spelling="cbAvail" id="2400639161771"/>
			<VarDecl type="png_store_buffer *" spelling="pbOld" id="2400783199927"/>
			<VarDecl type="png_store_buffer *" spelling="pbNew" id="2402609692426"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402266669312"/>
			<ParmDecl type="png_store *" spelling="ps" id="2403935903067"/>
			<CallExpr type="void" spelling="png_error" id="2401651699562"/>
			<CallExpr type="void" spelling="png_error" id="2402650103749"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403594444463"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401367952214"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401405904350"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403183149195"/>
			<DeclRefExpr type="png_store_buffer *" spelling="next" id="2403544679920"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404178523839"/>
			<DeclRefExpr type="png_store_buffer *" spelling="next" id="2403225178179"/>
			<DeclRefExpr type="png_store_buffer *" spelling="next" id="2402537086153"/>
			<DeclRefExpr type="png_store_buffer *" spelling="next" id="2400022858941"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401043826885"/>
			<DeclRefExpr type="png_store_buffer *" spelling="next" id="2403763745664"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401166728318"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403805951844"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402562829360"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401235590722"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402163689035"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2403509628830"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403616886987"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400360474923"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400068764178"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbOld" id="2400156014966"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2400351232876"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2401500282955"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2402194445152"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbOld" id="2402826525612"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2401412695584"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2402262781419"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2401046075195"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401693660875"/>
			<DeclRefExpr type="png_store_buffer *" spelling="pbNew" id="2400897876263"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402989583181"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400583457316"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400573084557"/>
			<StringLiteral type="char [18]" spelling="&quot;buffer read error&quot;" id="2402676316473"/>
			<StringLiteral type="char [12]" spelling="&quot;buffer lost&quot;" id="2404063857009"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2402794064119"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2403081924496"/>
			<MemberRefExpr type="png_store_buffer" spelling="data" id="2402431022708"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2401892104794"/>
			<MemberRefExpr type="size_t" spelling="datacount" id="2400335487141"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2401714782538"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2402345049329"/>
			<MemberRefExpr type="struct png_store_buffer *" spelling="prev" id="2402878323907"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2401141495372"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403798619999"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2401830010959"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2402912035606"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2403592547906"/>
			<MemberRefExpr type="png_store_buffer" spelling="data" id="2400101261908"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2402517595844"/>
			<MemberRefExpr type="struct png_store_buffer *" spelling="prev" id="2402987311542"/>
			<MemberRefExpr type="struct png_store_buffer *" spelling="prev" id="2400437350534"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2400387066225"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2402652269955"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400996124268"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2400395812019"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400410003728"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400975099058"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403019376336"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2402287528730"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400091454383"/>
			<UnexposedExpr type="size_t" spelling="datacount" id="2403273581919"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2403729927526"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402926305185"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2401842092566"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2402150916314"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402731881537"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400550606173"/>
			<UnexposedExpr type="struct png_store_buffer *" spelling="prev" id="2400882070205"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2404122684435"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2403738184324"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400879729012"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400551792464"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402768469117"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2400336790910"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400269168611"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402812448937"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2404132478535"/>
			<UnexposedExpr type="size_t" spelling="readpos" id="2402066990069"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402760910328"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2400298463679"/>
			<UnexposedExpr type="size_t" spelling="readpos" id="2400413689896"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404131711471"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400635575327"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401172104993"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2401076497525"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400247841168"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbOld" id="2401550854751"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2400187915500"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2402075484455"/>
			<UnexposedExpr type="struct png_store_buffer *" spelling="prev" id="2403915722276"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2401160591167"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbOld" id="2404262435522"/>
			<UnexposedExpr type="struct png_store_buffer *" spelling="prev" id="2400888987643"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2403973531463"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2400551022211"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403373786236"/>
			<UnexposedExpr type="png_store_buffer *" spelling="pbNew" id="2401993214863"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401817810151"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401388657985"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2403156476688"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2404188439612"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403831839194"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="EOF or error" comment_scope_start="1438" comment_scope_end="1438"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need separate implementation and callback to allow use of the same code
 * during progressive read, where the io_ptr is set internally by libpng." comment_scope_start="1441" comment_scope_end="1477">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *, png_bytep, size_t)" spelling="store_read_imp" id="2401815544198"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="cbAvail" id="2401315983188"/>
			<VarDecl type="png_uint_32" spelling="chunklen" id="2401324265200"/>
			<VarDecl type="png_uint_32" spelling="chunktype" id="2402350272151"/>
			<VarDecl type="png_uint_32" spelling="chunkpos" id="2400687952661"/>
			<VarDecl type="size_t" spelling="st" id="2402604845578"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401500244372"/>
			<ParmDecl type="png_bytep" spelling="pb" id="2402087103885"/>
			<ParmDecl type="size_t" spelling="st" id="2401408493544"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402842658925"/>
			<ParmDecl type="png_bytep" spelling="pb" id="2403593730326"/>
			<ParmDecl type="size_t" spelling="max" id="2400125328400"/>
			<ParmDecl type="size_t" spelling="min" id="2400525294707"/>
			<CallExpr type="void" spelling="png_error" id="2404152813410"/>
			<CallExpr type="size_t" spelling="store_read_buffer_size" id="2400695726948"/>
			<CallExpr type="void *" spelling="memcpy" id="2403183308166"/>
			<CallExpr type="int" spelling="store_read_buffer_next" id="2402314151277"/>
			<CallExpr type="void" spelling="png_error" id="2402073306174"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400956803897"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400316511681"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402426532083"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400525731006"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400352055804"/>
			<DeclRefExpr type="size_t (png_store *)" spelling="store_read_buffer_size" id="2403705599651"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400534298449"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404155797174"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2404204800218"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2403422950161"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400505835388"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401621481024"/>
			<DeclRefExpr type="size_t" spelling="st" id="2403224025524"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2402040075580"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2400600303623"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400163468543"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401988243627"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2404159348781"/>
			<DeclRefExpr type="size_t" spelling="st" id="2401819396099"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2402578506463"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2400891787259"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2403328482496"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403125406440"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2400871261602"/>
			<DeclRefExpr type="int (png_store *)" spelling="store_read_buffer_next" id="2401408396087"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402288451814"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402801609911"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403056166717"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403901938864"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402539243453"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403111171047"/>
			<DeclRefExpr type="size_t" spelling="max" id="2401957836016"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400304780328"/>
			<StringLiteral type="char [20]" spelling="&quot;store state damaged&quot;" id="2403819141521"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of file&quot;" id="2402120996941"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2401624417656"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2403146538208"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403643829434"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2401828845422"/>
			<MemberRefExpr type="png_byte [500]" spelling="buffer" id="2400540534040"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2401105037911"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2403197189400"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2400933468995"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2401202766072"/>
			<MemberRefExpr type="png_uint_32" spelling="chunklen" id="2401130283521"/>
			<MemberRefExpr type="png_uint_32" spelling="chunktype" id="2403167549063"/>
			<MemberRefExpr type="png_uint_32" spelling="chunkpos" id="2401677176793"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2400161813449"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400424506318"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400395795159"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404256704423"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402593522796"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2402320633573"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2401853455970"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402131300118"/>
			<UnexposedExpr type="size_t" spelling="st" id="2402215636791"/>
			<UnexposedExpr type="size_t (*)(png_store *)" spelling="store_read_buffer_size" id="2404049636876"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402817901460"/>
			<UnexposedExpr type="size_t" spelling="readpos" id="2400367435704"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401967191019"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2402583037346"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2400149980142"/>
			<UnexposedExpr type="size_t" spelling="st" id="2403932162585"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400634067559"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2402882730247"/>
			<UnexposedExpr type="void *" spelling="pb" id="2400186404484"/>
			<UnexposedExpr type="png_bytep" spelling="pb" id="2402020265793"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2404144713886"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2403429678807"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401779761765"/>
			<UnexposedExpr type="size_t" spelling="readpos" id="2400747848819"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403543262423"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2402307441408"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2403623462517"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2400508946662"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401385873755"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2400602853073"/>
			<UnexposedExpr type="int (*)(png_store *)" spelling="store_read_buffer_next" id="2400027174377"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404063532757"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404063844368"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2400258636184"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400052102354"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401159214105"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2403595466503"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401753865271"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2402576297949"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403330414346"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2400616091056"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400093467074"/>
			<UnexposedExpr type="size_t" spelling="max" id="2403304053062"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400242551235"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="end of last chunk" comment_scope_start="1478" comment_scope_end="1478">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402982070944"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402771922654"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2401013795398"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2400501737249"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the header of the next chunk:" comment_scope_start="1482" comment_scope_end="1485">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<CallExpr type="void" spelling="store_read_imp" id="2403382673818"/>
			<DeclRefExpr type="void (png_store *, png_bytep, size_t)" spelling="store_read_imp" id="2400699146647"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401687923101"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2400320450478"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2404288579087"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2401116650599"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2402387400618"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2403647771887"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2401574950244"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2401620788287"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2401173101212"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2401914013341"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2403989749814"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2400835481315"/>
			<UnexposedExpr type="void (*)(png_store *, png_bytep, size_t)" spelling="store_read_imp" id="2404219751624"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403720981218"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403474920645"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400534668981"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400246094487"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401067354575"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401716583641"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Position read so far" comment_scope_start="1486" comment_scope_end="1486">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2400731516649"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The IDAT headers are constructed here; skip the input header." comment_scope_start="1495" comment_scope_end="1502">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte" spelling="random" id="2403267762933"/>
			<CallExpr type="png_byte" spelling="random_byte" id="2401493856072"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402587822851"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403796810501"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2403142729971"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2403813431569"/>
			<DeclRefExpr type="png_byte (void)" spelling="random_byte" id="2401121255636"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2402656140503"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2401487411423"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2402599489163"/>
			<UnexposedExpr type="png_byte (*)(void)" spelling="random_byte" id="2403564126761"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make a new IDAT chunk, if IDAT_len is 0 this is the first IDAT,
             * if IDAT_size is 0 this is the end.  At present this is set up
             * using a random number so that there is a 25% chance before
             * the start of the first IDAT chunk being 0 length." comment_scope_start="1503" comment_scope_end="1519">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="random_u32" id="2401154428519"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402321966189"/>
			<DeclRefExpr type="png_byte" spelling="random" id="2402390397351"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2403191655650"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2404138294789"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2400548607956"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_u32" id="2401785920842"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2404237965481"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_size" id="2400139603534"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2401790093415"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2401016690839"/>
			<UnexposedExpr type="unsigned int" spelling="random" id="2401675877976"/>
			<UnexposedExpr type="png_byte" spelling="random" id="2402437137043"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_u32" id="2400961820168"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2400737829208"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First IDAT" comment_scope_start="1508" comment_scope_end="1508">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402321966189"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2401016690839"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0 bytes" comment_scope_start="1512" comment_scope_end="1512">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2403191655650"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1 byte" comment_scope_start="1513" comment_scope_end="1513">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2404138294789"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1..IDAT_size bytes" comment_scope_start="1516" comment_scope_end="1516">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2401790093415"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="all IDAT data read" comment_scope_start="1521" comment_scope_end="1521">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_size" id="2401277185488"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2401913536019"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The last (IDAT) chunk should be positioned at the CRC now:" comment_scope_start="1523" comment_scope_end="1526">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2403347180146"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403172633130"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402251482974"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401806845682"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403507805585"/>
			<StringLiteral type="char [29]" spelling="&quot;internal: IDAT size mismatch&quot;" id="2400936159621"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403769162991"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403155651210"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2400522508331"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403975525795"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2403114570256"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2401534612982"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400719191035"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The only option here is to add a zero length IDAT, this
                * happens 25% of the time.  Because of the check above
                * chunklen-4U-chunkpos must be zero, we just need to skip the
                * CRC now." comment_scope_start="1527" comment_scope_end="1532">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="random" id="2404264584965"/>
			<UnexposedExpr type="unsigned int" spelling="random" id="2402010148555"/>
			<UnexposedExpr type="png_byte" spelling="random" id="2401630014490"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="time"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Output another 0 length IDAT" comment_scope_start="1533" comment_scope_end="1533">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402310632409"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="End of IDATs, skip the CRC to make the code above load the
                   * next chunk header next time round." comment_scope_start="1537" comment_scope_end="1546">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [4]" spelling="buffer" id="2400257617042"/>
			<CallExpr type="void" spelling="store_read_imp" id="2403256324931"/>
			<DeclRefExpr type="void (png_store *, png_bytep, size_t)" spelling="store_read_imp" id="2400337581466"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404075711018"/>
			<DeclRefExpr type="png_byte [4]" spelling="buffer" id="2403692709778"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401993861597"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400445920760"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2400611540517"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400901670196"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402905539056"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402820058709"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_pos" id="2401970530952"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_len" id="2404214689024"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2403092852916"/>
			<UnexposedExpr type="void (*)(png_store *, png_bytep, size_t)" spelling="store_read_imp" id="2401349354737"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402630298595"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401638495908"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402349465961"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2402890169344"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400356791053"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2401117662403"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403148554941"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="load" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the next chunk" comment_scope_start="1547" comment_scope_end="1547"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Middle of IDATs, use 'random' to determine the number of bits
                * to use in the IDAT length." comment_scope_start="1553" comment_scope_end="1559">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="random_u32" id="2401450313552"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2400030068679"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_u32" id="2404039213708"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402745123011"/>
			<DeclRefExpr type="png_byte" spelling="random" id="2403469886575"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400309975580"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2400806280529"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_size" id="2400838890543"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2401006541233"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_size" id="2402536404108"/>
			<MemberRefExpr type="unsigned int" spelling="IDAT_bits" id="2400281594089"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_u32" id="2400389998858"/>
			<UnexposedExpr type="unsigned int" spelling="random" id="2400201233551"/>
			<UnexposedExpr type="png_byte" spelling="random" id="2402480343456"/>
			<UnexposedExpr type="unsigned int" spelling="IDAT_bits" id="2402465586741"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400773420051"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2401766153326"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2402389296209"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2404278592368"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="middle" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determine" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="zero bytes may occur" comment_scope_start="1560" comment_scope_end="1560">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2400843169774"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Ie: crc32(0UL, &quot;IDAT&quot;, 4)" comment_scope_start="1564" comment_scope_end="1564">
		<SYMBOLS>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401293325464"/>
			<MemberRefExpr type="uLong" spelling="IDAT_crc" id="2400065511738"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403710935530"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="IDAT_pos == IDAT_len" comment_scope_start="1565" comment_scope_end="1565"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the header" comment_scope_start="1567" comment_scope_end="1567">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2402581523798"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2400987860850"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="I.e not the CRC" comment_scope_start="1588" comment_scope_end="1588">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2400941843297"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2403718792842"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2402747505040"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2404036397064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1595" comment_scope_end="1595">
		<SYMBOLS>
			<TypeRef type="uInt" spelling="uInt" id="2401318756337"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2403637563009"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2402066518610"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2400752117176"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2403090459476"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2403851957655"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1598" comment_scope_end="1598">
		<SYMBOLS>
			<TypeRef type="uInt" spelling="uInt" id="2401318756337"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2402811588567"/>
			<DeclRefExpr type="size_t" spelling="st" id="2404089924391"/>
			<UnexposedExpr type="size_t" spelling="st" id="2403209996381"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1601" comment_scope_end="1601">
		<SYMBOLS>
			<TypeRef type="uInt" spelling="uInt" id="2401318756337"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2403858330081"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2402830558742"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403455487436"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2400101977535"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2401647065112"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1605" comment_scope_end="1605">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2402099780413"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2400550270336"/>
			<UnexposedExpr type="uInt" spelling="avail" id="2401491965012"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1606" comment_scope_end="1606">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400909547035"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2401632384301"/>
			<UnexposedExpr type="uInt" spelling="avail" id="2402209151094"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1607" comment_scope_end="1607">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2403881152292"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2403138673118"/>
			<UnexposedExpr type="uInt" spelling="avail" id="2402676890570"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1608" comment_scope_end="1608">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_size" id="2402884537166"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2401884996997"/>
			<UnexposedExpr type="uInt" spelling="avail" id="2403315176966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1609" comment_scope_end="1609">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2400111564463"/>
			<DeclRefExpr type="uInt" spelling="avail" id="2401779636297"/>
			<UnexposedExpr type="uInt" spelling="avail" id="2403489592539"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="skip the input CRC" comment_scope_start="1612" comment_scope_end="1612"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="IDAT crc" comment_scope_start="1621" comment_scope_end="1621"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="4..1" comment_scope_start="1624" comment_scope_end="1624">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="shift" id="2400381226148"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_len" id="2400312362440"/>
			<DeclRefExpr type="png_uint_32" spelling="IDAT_pos" id="2401618693587"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2400532998796"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_pos" id="2400838345852"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!IDAT" comment_scope_start="1639" comment_scope_end="1639"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If there is still some pending IDAT data after the IDAT chunks have
          * been processed there is a problem:" comment_scope_start="1641" comment_scope_end="1649">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2400604187507"/>
			<CallExpr type="void" spelling="png_error" id="2400615010114"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400963560697"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400720684974"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403200747875"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402070248292"/>
			<DeclRefExpr type="png_uint_32" spelling="chunktype" id="2402592823275"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402579184112"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403563814512"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400189078755"/>
			<StringLiteral type="char [28]" spelling="&quot;internal: missing IDAT data&quot;" id="2400001367279"/>
			<StringLiteral type="char [23]" spelling="&quot;internal: missing IDAT&quot;" id="2401284113185"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_len" id="2403884418901"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2400491433533"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403180414453"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_len" id="2403905612246"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400997282131"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2403776643975"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401688429427"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_size" id="2404174026420"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401847164064"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400509900342"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2402640728359"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2403882093886"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402294611432"/>
			<UnexposedExpr type="png_uint_32" spelling="chunktype" id="2402621728748"/>
			<UnexposedExpr type="png_uint_32" spelling="IDAT_len" id="2401141303164"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404202454414"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403857198371"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2401995401960"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400521083860"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401689482410"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="processed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return the header" comment_scope_start="1650" comment_scope_end="1650">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2402510945949"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403802697071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return chunk bytes, including the CRC" comment_scope_start="1671" comment_scope_end="1671"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1676" comment_scope_end="1676">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2401944594874"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401692137213"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2404292321727"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2401763691789"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403846045502"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="1681" comment_scope_end="1681">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2400851687212"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2403443280709"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2403826219787"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for end of chunk and end-of-file; don't try to read a new
             * chunk header at this point unless instructed to do so by 'min'." comment_scope_start="1683" comment_scope_end="1689">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_buffer_avail" id="2401098560753"/>
			<DeclRefExpr type="png_uint_32" spelling="chunkpos" id="2401564704272"/>
			<DeclRefExpr type="png_uint_32" spelling="chunklen" id="2401579391064"/>
			<DeclRefExpr type="size_t" spelling="max" id="2402526152146"/>
			<DeclRefExpr type="size_t" spelling="st" id="2404050894616"/>
			<DeclRefExpr type="size_t" spelling="min" id="2400288292690"/>
			<DeclRefExpr type="size_t (png_store *)" spelling="store_read_buffer_avail" id="2400596652501"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403118433661"/>
			<UnexposedExpr type="png_uint_32" spelling="chunkpos" id="2403859811538"/>
			<UnexposedExpr type="png_uint_32" spelling="chunklen" id="2404178554714"/>
			<UnexposedExpr type="size_t" spelling="max" id="2402592507338"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400476420572"/>
			<UnexposedExpr type="size_t" spelling="min" id="2402293658061"/>
			<UnexposedExpr type="size_t (*)(png_store *)" spelling="store_read_buffer_avail" id="2402634648285"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403419057055"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="min" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!IDAT" comment_scope_start="1690" comment_scope_end="1690"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="space left" comment_scope_start="1698" comment_scope_end="1698">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="st" id="2401503609753"/>
			<UnexposedExpr type="size_t" spelling="st" id="2402053631833"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is another Horowitz and Hill random noise generator.  In this case
    * the aim is to stress the progressive reader with truly horrible variable
    * buffer sizes in the range 1..500, so a sequence of 9 bit random numbers
    * is generated.  We could probably just count from 1 to 32767 and get as
    * good a result." comment_scope_start="1719" comment_scope_end="1736">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="noise" id="2404166947137"/>
			<VarDecl type="size_t" spelling="cb" id="2404115100936"/>
			<VarDecl type="png_byte [512]" spelling="buffer" id="2403316580935"/>
			<CallExpr type="size_t" spelling="store_read_buffer_avail" id="2403418872820"/>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402065097560"/>
			<CallExpr type="void" spelling="png_process_data" id="2404134319763"/>
			<DeclRefExpr type="size_t (png_store *)" spelling="store_read_buffer_avail" id="2401322231273"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402473817921"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2402141723131"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400560696723"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400115598418"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2402900610783"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403829028007"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400774731894"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403730831161"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2400211720028"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402171887535"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2402338623780"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402346988349"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2404134819988"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402298450837"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403482346937"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2403372019667"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401694081811"/>
			<UnexposedExpr type="size_t (*)(png_store *)" spelling="store_read_buffer_avail" id="2401073959591"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403864829428"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401936389285"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2400083433205"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403018186219"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403996746932"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2401549328406"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404053560357"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403443458339"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400927170993"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2401518794929"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401551757886"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403127446279"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401504742680"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402189223292"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate 15 more bits of stuff:" comment_scope_start="1731" comment_scope_end="1736">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402065097560"/>
			<CallExpr type="void" spelling="png_process_data" id="2404134319763"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2402141723131"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400560696723"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400115598418"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2402900610783"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403829028007"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400774731894"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403730831161"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2400211720028"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402171887535"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2402338623780"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402346988349"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2404134819988"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402298450837"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403482346937"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2403372019667"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401694081811"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401936389285"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2400083433205"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403018186219"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403996746932"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2401549328406"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404053560357"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403443458339"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400927170993"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2401518794929"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401551757886"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403127446279"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401504742680"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402189223292"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="1738" comment_scope_end="1738"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The caller must fill this in:" comment_scope_start="1740" comment_scope_end="1749">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401718239431"/>
			<ParmDecl type="int" spelling="npalette" id="2400399555043"/>
			<CallExpr type="void" spelling="store_log" id="2400588723359"/>
			<CallExpr type="void" spelling="png_error" id="2400101258712"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401721674206"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2404146361303"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403578748808"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403354116727"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404225413838"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402290363625"/>
			<StringLiteral type="char [46]" spelling="&quot;attempt to write palette without write stream&quot;" id="2400135618313"/>
			<StringLiteral type="char [35]" spelling="&quot;multiple store_write_palette calls&quot;" id="2403894007208"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2402002631278"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2403955985760"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2400083891089"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2404131893362"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400527159434"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401389389299"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402598682277"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2403743827328"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403100758025"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403196302746"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2404138322376"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2400566889232"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403405947017"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This function can only return NULL if called with '0'!" comment_scope_start="1750" comment_scope_end="1760">
		<SYMBOLS>
			<CallExpr type="void *" spelling="malloc" id="2400865280618"/>
			<CallExpr type="void" spelling="png_error" id="2403588187108"/>
			<DeclRefExpr type="int" spelling="npalette" id="2400330493355"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402931459494"/>
			<DeclRefExpr type="void *(unsigned long)" spelling="malloc" id="2401994089475"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402879061223"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401513405655"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403419338235"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403304780830"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400480878638"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400631400101"/>
			<DeclRefExpr type="int" spelling="npalette" id="2404069012686"/>
			<StringLiteral type="char [23]" spelling="&quot;store new palette: OOM&quot;" id="2402942377401"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2401955482014"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2401200454296"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2403791210225"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401457991259"/>
			<MemberRefExpr type="int" spelling="npalette" id="2401094488515"/>
			<UnexposedExpr type="int" spelling="npalette" id="2403926762156"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400385117741"/>
			<UnexposedExpr type="void *(*)(unsigned long)" spelling="malloc" id="2401389160852"/>
			<UnexposedExpr type="unsigned long" spelling="npalette" id="2401937548577"/>
			<UnexposedExpr type="int" spelling="npalette" id="2402208459692"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2400484086174"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400928017447"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2404233833748"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401932405617"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402012330808"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2400430920702"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2400571174700"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403483027283"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403037723701"/>
			<UnexposedExpr type="int" spelling="npalette" id="2402640758453"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is an internal error (the call has been made outside a read
    * operation.)" comment_scope_start="1769" comment_scope_end="1776">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2403877075155"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403740567889"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2404289816557"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401131414341"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404079954906"/>
			<StringLiteral type="char [30]" spelling="&quot;no current stream for palette&quot;" id="2401148660024"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2403683230887"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400484844857"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2400811832051"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400666288790"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401345784290"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403629991905"/>
			<UnexposedExpr type="png_const_structp" spelling="pread" id="2401566144411"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400758069005"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402557906888"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The result may be null if there is no palette." comment_scope_start="1778" comment_scope_end="1781">
		<SYMBOLS>
			<FunctionDecl type="store_palette_entry *(png_store *, int *)" spelling="store_current_palette" id="2404210138761"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2400261480809"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401778923916"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403946804217"/>
			<MemberRefExpr type="int" spelling="npalette" id="2404020378087"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2400497854200"/>
			<MemberRefExpr type="store_palette_entry *" spelling="palette" id="2402810615427"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2401831368000"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2402554105754"/>
			<UnexposedExpr type="int" spelling="npalette" id="2401512695376"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2404031561894"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400873233467"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2401873424631"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2402167347342"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402788518933"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="1782" comment_scope_end="1782"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="**************************** MEMORY MANAGEMENT*** **************************" comment_scope_start="1784" comment_scope_end="1785"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A store_memory is simply the header for an allocated block of memory.  The
 * pointer returned to libpng is just after the end of the header block, the
 * allocated memory is followed by a second copy of the 'mark'." comment_scope_start="1786" comment_scope_end="1796">
		<SYMBOLS>
			<TypedefDecl type="store_memory" spelling="store_memory" id="2400744494579"/>
			<TypeRef type="store_pool" spelling="store_pool" id="2402443735918"/>
			<TypeRef type="struct store_memory" spelling="struct store_memory" id="2402134291218"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="store_pool *" spelling="pool" id="2401304936098"/>
			<FieldDecl type="struct store_memory *" spelling="next" id="2400800763261"/>
			<FieldDecl type="png_alloc_size_t" spelling="size" id="2400324176343"/>
			<FieldDecl type="png_byte [4]" spelling="mark" id="2400772148899"/>
			<StructDecl type="struct store_memory" spelling="store_memory" id="2400644288069"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Originating pool" comment_scope_start="1792" comment_scope_end="1792">
		<SYMBOLS>
			<TypeRef type="store_pool" spelling="store_pool" id="2402443735918"/>
			<FieldDecl type="store_pool *" spelling="pool" id="2401304936098"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Singly linked list" comment_scope_start="1793" comment_scope_end="1793">
		<SYMBOLS>
			<TypeRef type="struct store_memory" spelling="struct store_memory" id="2402134291218"/>
			<FieldDecl type="struct store_memory *" spelling="next" id="2400800763261"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linked" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="singly linked" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="linked list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Size of memory allocated" comment_scope_start="1794" comment_scope_end="1794">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<FieldDecl type="png_alloc_size_t" spelling="size" id="2400324176343"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="ID marker" comment_scope_start="1795" comment_scope_end="1795">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte [4]" spelling="mark" id="2400772148899"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Handle a fatal error in memory allocation.  This calls png_error if the
 * libpng struct is non-NULL, else it outputs a message and returns.  This means
 * that a memory problem while libpng is running will abort (png_error) the
 * handling of particular file while one in cleanup (after the destroy of the
 * struct has returned) will simply keep going and free (or attempt to free)
 * all the memory." comment_scope_start="1798" comment_scope_end="1810">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402328347096"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2402853728934"/>
			<ParmDecl type="const char *" spelling="msg" id="2402281218187"/>
			<CallExpr type="void" spelling="png_error" id="2401858772783"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400928316986"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400621906415"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400540013090"/>
			<DeclRefExpr type="const char *" spelling="msg" id="2404008222889"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401030087177"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402216319679"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403652900753"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2403018392672"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="abort" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="destroy" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="free" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="free" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png_error"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png_error"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Else we have to do it ourselves.  png_error eventually calls store_log,
    * above.  store_log accepts a NULL png_structp - it just changes what gets
    * output by store_message." comment_scope_start="1811" comment_scope_end="1814"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="1815" comment_scope_end="1815">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2402720980377"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2402461348978"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400166148174"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401342433030"/>
			<DeclRefExpr type="const char *" spelling="msg" id="2401701963991"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400426197642"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401616674266"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403351194416"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2401941713785"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Note that pp may be NULL (see store_pool_delete below), the caller has
    * found 'memory' in pool-&gt;list *and* unlinked this entry, so this is a valid
    * pointer (for sure), but the contents may have been trashed." comment_scope_start="1821" comment_scope_end="1830">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_pool_error" id="2401922029821"/>
			<CallExpr type="int" spelling="memcmp" id="2401927983862"/>
			<CallExpr type="void" spelling="store_pool_error" id="2400442292475"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2402655564026"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402162008408"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2400670829887"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2404076646698"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401528959058"/>
			<DeclRefExpr type="int (const void *, const void *, unsigned long)" spelling="memcmp" id="2401727912044"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2400092418105"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403068971599"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2400084855369"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2402603680744"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400675822803"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403920883718"/>
			<StringLiteral type="char [24]" spelling="&quot;memory corrupted (pool)&quot;" id="2403232023277"/>
			<StringLiteral type="char [25]" spelling="&quot;memory corrupted (start)&quot;" id="2401256392738"/>
			<MemberRefExpr type="store_pool *" spelling="pool" id="2404075025024"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2404117934540"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2401715409207"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2402005169632"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2402002347415"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2401898151505"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2404178112351"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2402617089892"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403470159776"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2400574656932"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2403982642072"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403628509750"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403444433714"/>
			<UnexposedExpr type="int (*)(const void *, const void *, unsigned long)" spelling="memcmp" id="2401937826692"/>
			<UnexposedExpr type="const void *" spelling="mark" id="2402418477111"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2401618696292"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2400455920226"/>
			<UnexposedExpr type="const void *" spelling="mark" id="2400304010031"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2403102685042"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2404233818529"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2401188543253"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2403478458522"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2403879861686"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401521492098"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400634713365"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="It should be safe to read the size field now." comment_scope_start="1831" comment_scope_end="1849">
		<SYMBOLS>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="png_alloc_size_t" spelling="cb" id="2400001963500"/>
			<CallExpr type="void" spelling="store_pool_error" id="2402267967053"/>
			<CallExpr type="int" spelling="memcmp" id="2403287495943"/>
			<CallExpr type="void" spelling="store_pool_error" id="2403831483123"/>
			<CallExpr type="void" spelling="free" id="2401759305512"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2403419049828"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2403887120393"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402494079038"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2403667463143"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401074254344"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401158102661"/>
			<DeclRefExpr type="int (const void *, const void *, unsigned long)" spelling="memcmp" id="2403965411495"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2402188373342"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2402212815674"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403431079315"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400165098350"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2401239062373"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403610545210"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400383748868"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402433326073"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2401217128207"/>
			<DeclRefExpr type="void (void *)" spelling="free" id="2401423268363"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2403201513406"/>
			<StringLiteral type="char [24]" spelling="&quot;memory corrupted (size)&quot;" id="2401171491045"/>
			<StringLiteral type="char [23]" spelling="&quot;memory corrupted (end)&quot;" id="2404278008860"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="size" id="2402964919998"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2400464311861"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2402042441039"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2401635258774"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2403295426897"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2403356920402"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2403687915122"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="size" id="2401212628049"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2400006511118"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2404234876954"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max" id="2402228098368"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402101004899"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2400021089919"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2400020316580"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402447999763"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402628565240"/>
			<UnexposedExpr type="int (*)(const void *, const void *, unsigned long)" spelling="memcmp" id="2400152007938"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2400922206541"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2403980233409"/>
			<UnexposedExpr type="const void *" spelling="mark" id="2402313241971"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2400788614143"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401146362205"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402699487313"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2402641417121"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2403092460590"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403519895509"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400882686801"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2400953458759"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2404211188900"/>
			<UnexposedExpr type="void (*)(void *)" spelling="free" id="2401534397644"/>
			<UnexposedExpr type="void *" spelling="memory" id="2403256749904"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2402169511959"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Finally give the library a chance to find problems too:" comment_scope_start="1843" comment_scope_end="1848">
		<SYMBOLS>
			<CallExpr type="void" spelling="free" id="2401759305512"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402433326073"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2401217128207"/>
			<DeclRefExpr type="void (void *)" spelling="free" id="2401423268363"/>
			<DeclRefExpr type="store_memory *" spelling="memory" id="2403201513406"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2403687915122"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2400953458759"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2404211188900"/>
			<UnexposedExpr type="void (*)(void *)" spelling="free" id="2401534397644"/>
			<UnexposedExpr type="void *" spelling="memory" id="2403256749904"/>
			<UnexposedExpr type="store_memory *" spelling="memory" id="2402169511959"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The NULL means this will always return, even if the memory is
          * corrupted." comment_scope_start="1871" comment_scope_end="1875">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_memory_free" id="2402566907639"/>
			<DeclRefExpr type="void (png_const_structp, store_pool *, store_memory *)" spelling="store_memory_free" id="2403221657765"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400520715861"/>
			<DeclRefExpr type="store_memory *" spelling="next" id="2403688231786"/>
			<UnexposedExpr type="void (*)(png_const_structp, store_pool *, store_memory *)" spelling="store_memory_free" id="2401226934127"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401869932455"/>
			<UnexposedExpr type="store_memory *" spelling="next" id="2401811392640"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And reset the other fields too for the next time." comment_scope_start="1879" comment_scope_end="1881">
		<SYMBOLS>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402594346289"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401925964793"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401180073263"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402743398142"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400454457286"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2401188419558"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_max" id="2403276284806"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_max" id="2403805085963"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2402833474688"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2401704382166"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max" id="2400228863000"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401738945288"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_max" id="2401475453309"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403261587616"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403406422517"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max" id="2402958999998"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2400331776812"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2404015082047"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="unexpected internal error" comment_scope_start="1882" comment_scope_end="1882">
		<SYMBOLS>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403804354423"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2402823029491"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="current" id="2400642755502"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402993429930"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get a new mark too." comment_scope_start="1899" comment_scope_end="1901">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *, store_pool *)" spelling="store_pool_delete" id="2400001726597"/>
			<CallExpr type="void" spelling="store_pool_mark" id="2401394133442"/>
			<DeclRefExpr type="void (png_bytep)" spelling="store_pool_mark" id="2402864696461"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403704831863"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2401469999900"/>
			<UnexposedExpr type="void (*)(png_bytep)" spelling="store_pool_mark" id="2403200399176"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2401170377547"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401657514892"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The memory callbacks:" comment_scope_start="1903" comment_scope_end="1934">
		<SYMBOLS>
			<TypeRef type="png_voidp" spelling="png_voidp" id="2400284688317"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2403753030956"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="store_pool" spelling="store_pool" id="2402443735918"/>
			<TypeRef type="store_memory" spelling="store_memory" id="2400590578470"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_const_structp" spelling="pp" id="2401890459725"/>
			<VarDecl type="store_pool *" spelling="pool" id="2400815285485"/>
			<VarDecl type="store_memory *" spelling="new" id="2402407318971"/>
			<ParmDecl type="png_structp" spelling="ppIn" id="2401770768683"/>
			<ParmDecl type="png_alloc_size_t" spelling="cb" id="2400297944918"/>
			<CallExpr type="png_voidp" spelling="png_get_mem_ptr" id="2401843699077"/>
			<CallExpr type="void *" spelling="malloc" id="2401204237235"/>
			<CallExpr type="void *" spelling="memcpy" id="2400016482409"/>
			<CallExpr type="void *" spelling="memcpy" id="2401130635408"/>
			<DeclRefExpr type="png_structp" spelling="ppIn" id="2401844093981"/>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_mem_ptr" id="2401947362550"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402899482351"/>
			<DeclRefExpr type="void *(unsigned long)" spelling="malloc" id="2403079395613"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2400318868265"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2403006241700"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403618160049"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2401033408014"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2404280718343"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400863734846"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401555168998"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2404237988133"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400239801655"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2400403552119"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400386319229"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2403456798930"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400490119150"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401221577700"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401576528274"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2404092735848"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2403025492396"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2402073911185"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2403316979476"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2401197725726"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402021805699"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2402169724914"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2401941228294"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2400062978940"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="cb" id="2403378304271"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400119634763"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400848285363"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2403059584318"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401976651433"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2403087470888"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401648710230"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402424788511"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2400530285521"/>
			<DeclRefExpr type="store_memory *" spelling="new" id="2401137464653"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2401610965115"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2403996910869"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max" id="2403303027787"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2403884509455"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2402205804956"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="limit" id="2401427270020"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="limit" id="2403718311398"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="current" id="2401012360857"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="total" id="2400559559807"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="size" id="2403906049428"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2400920255670"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2402516300669"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2400160309840"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2400367017997"/>
			<MemberRefExpr type="png_byte [4]" spelling="mark" id="2402209903485"/>
			<MemberRefExpr type="store_pool *" spelling="pool" id="2403493185480"/>
			<MemberRefExpr type="struct store_memory *" spelling="next" id="2402871739008"/>
			<MemberRefExpr type="struct store_memory *" spelling="list" id="2400533298585"/>
			<MemberRefExpr type="struct store_memory *" spelling="list" id="2401350784521"/>
			<UnexposedExpr type="png_const_structp" spelling="ppIn" id="2400722259627"/>
			<UnexposedExpr type="png_structp" spelling="ppIn" id="2403153840232"/>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_mem_ptr" id="2403864470869"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403317676479"/>
			<UnexposedExpr type="void *(*)(unsigned long)" spelling="malloc" id="2403431566019"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2403797923468"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2402543578219"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403283552384"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400987736550"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2403496707186"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max" id="2402906018352"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401454943235"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402672555571"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2402910244596"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401645556280"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2400090249119"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="current" id="2401404129602"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402133062044"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="limit" id="2403728859240"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403978512383"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402107745983"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="current" id="2402149405629"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401179940602"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2404016033500"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2404245363247"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400730249944"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2401402080996"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2400672616985"/>
			<UnexposedExpr type="void *" spelling="mark" id="2401647934411"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2402224260468"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400806888319"/>
			<UnexposedExpr type="const void *" spelling="mark" id="2401596208212"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2402579116773"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401365896228"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2402101564757"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2402157870426"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2403555901131"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="cb" id="2402558826429"/>
			<UnexposedExpr type="const void *" spelling="mark" id="2402291760726"/>
			<UnexposedExpr type="png_byte *" spelling="mark" id="2400248129882"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403313794705"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403794287097"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400810546288"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402103066831"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400498493682"/>
			<UnexposedExpr type="struct store_memory *" spelling="list" id="2400437974761"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403040060714"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2400608176008"/>
			<UnexposedExpr type="store_memory *" spelling="new" id="2400384650198"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: the PNG user malloc function cannot use the png_ptr it is passed
       * other than to retrieve the allocation pointer!  libpng calls the
       * store_malloc callback in two basic cases:
       *
       * 1) From png_malloc; png_malloc will do a png_error itself if NULL is
       *    returned.
       * 2) From png_struct or png_info structure creation; png_malloc is
       *    to return so cleanup can be performed.
       *
       * To handle this store_malloc can log a message, but can't do anything
       * else." comment_scope_start="1935" comment_scope_end="1946"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="is_error" comment_scope_start="1947" comment_scope_end="1947">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2402369856081"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401099385980"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401221821892"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404286601950"/>
			<StringLiteral type="char [14]" spelling="&quot;out of memory&quot;" id="2402701392569"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2402307399631"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2400076729101"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2400588441030"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403225312023"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403663350115"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Because libpng calls store_free with a dummy png_struct when deleting
    * png_struct or png_info via png_destroy_struct_2 it is necessary to check
    * the passed in png_structp to ensure it is valid, and not pass it to
    * png_error if it is not." comment_scope_start="1960" comment_scope_end="1967">
		<SYMBOLS>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402794127201"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2400554420079"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403517411788"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402341289203"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404065958831"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2402701869772"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2404218503393"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401063549969"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2403452441246"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401429742070"/>
			<UnexposedExpr type="png_const_structp" spelling="pread" id="2401502186024"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2402810168975"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2403771577330"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401816004860"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403516080314"/>
			<UnexposedExpr type="png_const_structp" spelling="pwrite" id="2400373857735"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2400400861466"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2403846584405"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2401799241554"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png_error"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First check that this 'memory' really is valid memory - it must be in the
    * pool list.  If it is, use the shared memory_free function to free it." comment_scope_start="1968" comment_scope_end="1980">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_pool_error" id="2403922024540"/>
			<DeclRefExpr type="store_memory *" spelling="this" id="2402806515043"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2403910244587"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401233750191"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2402793723598"/>
			<DeclRefExpr type="store_memory *" spelling="this" id="2403458469032"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2404072925040"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2403397492165"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2401477249231"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2401735447734"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2401236394561"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403059622423"/>
			<StringLiteral type="char [20]" spelling="&quot;bad pointer to free&quot;" id="2401122880045"/>
			<MemberRefExpr type="struct store_memory *" spelling="list" id="2402833245403"/>
			<MemberRefExpr type="struct store_memory *" spelling="next" id="2402660699553"/>
			<MemberRefExpr type="struct png_store *" spelling="store" id="2403759270494"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2403226056638"/>
			<UnexposedExpr type="store_memory **" spelling="test" id="2401746423650"/>
			<UnexposedExpr type="store_memory *" spelling="this" id="2402284716863"/>
			<UnexposedExpr type="store_memory **" spelling="test" id="2401461454672"/>
			<UnexposedExpr type="store_memory **" spelling="test" id="2402908908080"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, const char *)" spelling="store_pool_error" id="2404261709750"/>
			<UnexposedExpr type="struct png_store *" spelling="store" id="2402928143515"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2402489263824"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402997735133"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="free" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Unlink this entry, *test == this." comment_scope_start="1981" comment_scope_end="1985">
		<SYMBOLS>
			<FunctionDecl type="void (png_structp, png_voidp)" spelling="store_free" id="2401882701737"/>
			<CallExpr type="void" spelling="store_memory_free" id="2401426018722"/>
			<DeclRefExpr type="store_memory **" spelling="test" id="2401597230860"/>
			<DeclRefExpr type="store_memory *" spelling="this" id="2400127017964"/>
			<DeclRefExpr type="store_memory *" spelling="this" id="2400237713387"/>
			<DeclRefExpr type="void (png_const_structp, store_pool *, store_memory *)" spelling="store_memory_free" id="2403786667051"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401024088629"/>
			<DeclRefExpr type="store_pool *" spelling="pool" id="2402362794011"/>
			<DeclRefExpr type="store_memory *" spelling="this" id="2402533620068"/>
			<MemberRefExpr type="struct store_memory *" spelling="next" id="2400833208744"/>
			<MemberRefExpr type="struct store_memory *" spelling="next" id="2401021840668"/>
			<UnexposedExpr type="store_memory **" spelling="test" id="2404164636444"/>
			<UnexposedExpr type="struct store_memory *" spelling="next" id="2400850254635"/>
			<UnexposedExpr type="store_memory *" spelling="this" id="2403086620375"/>
			<UnexposedExpr type="store_memory *" spelling="this" id="2402436822066"/>
			<UnexposedExpr type="void (*)(png_const_structp, store_pool *, store_memory *)" spelling="store_memory_free" id="2400947775877"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402705421279"/>
			<UnexposedExpr type="store_pool *" spelling="pool" id="2400082921865"/>
			<UnexposedExpr type="store_memory *" spelling="this" id="2403100244704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_USER_MEM_SUPPORTED" comment_scope_start="1986" comment_scope_end="1986"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Setup functions." comment_scope_start="1988" comment_scope_end="2001">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2402520508311"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2403587056740"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2401987793347"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400947466206"/>
			<CallExpr type="int" spelling="_setjmp" id="2404143604256"/>
			<CallExpr type="void" spelling="png_destroy_write_struct" id="2404252013193"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402713533016"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400360961059"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2403722509262"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402049783157"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403231188118"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401409271241"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2400241934597"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401559258423"/>
			<DeclRefExpr type="void (png_structpp, png_infopp)" spelling="png_destroy_write_struct" id="2403766849005"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402530722738"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404111810036"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401587172038"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403220276454"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401046267874"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403846510418"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401247387919"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401817834619"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401097948544"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403322224608"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402844890954"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401567475335"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2402805095458"/>
			<MemberRefExpr type="png_infop" spelling="piwrite" id="2402073510964"/>
			<MemberRefExpr type="int" spelling="caught" id="2401496676357"/>
			<MemberRefExpr type="int" spelling="caught" id="2401384813821"/>
			<MemberRefExpr type="int" spelling="caught" id="2403151783419"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402426255749"/>
			<MemberRefExpr type="int" spelling="caught" id="2402948397504"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2402931723165"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402825941427"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400107684023"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402661728639"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400955298194"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2401392083244"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2400663964462"/>
			<UnexposedExpr type="void (*)(png_structpp, png_infopp)" spelling="png_destroy_write_struct" id="2400065748927"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403221074926"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404259784294"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401826447378"/>
			<UnexposedExpr type="int" spelling="caught" id="2400000956547"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403139968535"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402196717905"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400539353159"/>
			<UnexposedExpr type="jmp_buf *" spelling="exception__prev" id="2402992313760"/>
			<UnexposedExpr type="int" spelling="caught" id="2404140667149"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400057036733"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Cleanup when aborting a write or after storing the new file." comment_scope_start="1988" comment_scope_end="2001">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2402520508311"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2403587056740"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2401987793347"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400947466206"/>
			<CallExpr type="int" spelling="_setjmp" id="2404143604256"/>
			<CallExpr type="void" spelling="png_destroy_write_struct" id="2404252013193"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402713533016"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400360961059"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2403722509262"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402049783157"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403231188118"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401409271241"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2400241934597"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401559258423"/>
			<DeclRefExpr type="void (png_structpp, png_infopp)" spelling="png_destroy_write_struct" id="2403766849005"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402530722738"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404111810036"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401587172038"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403220276454"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401046267874"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403846510418"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401247387919"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401817834619"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401097948544"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403322224608"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402844890954"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401567475335"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2402805095458"/>
			<MemberRefExpr type="png_infop" spelling="piwrite" id="2402073510964"/>
			<MemberRefExpr type="int" spelling="caught" id="2401496676357"/>
			<MemberRefExpr type="int" spelling="caught" id="2401384813821"/>
			<MemberRefExpr type="int" spelling="caught" id="2403151783419"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402426255749"/>
			<MemberRefExpr type="int" spelling="caught" id="2402948397504"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2402931723165"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402825941427"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400107684023"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402661728639"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400955298194"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2401392083244"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2400663964462"/>
			<UnexposedExpr type="void (*)(png_structpp, png_infopp)" spelling="png_destroy_write_struct" id="2400065748927"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403221074926"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404259784294"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401826447378"/>
			<UnexposedExpr type="int" spelling="caught" id="2400000956547"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403139968535"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402196717905"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400539353159"/>
			<UnexposedExpr type="jmp_buf *" spelling="exception__prev" id="2402992313760"/>
			<UnexposedExpr type="int" spelling="caught" id="2404140667149"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400057036733"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="memory corruption: continue." comment_scope_start="2002" comment_scope_end="2003"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And make sure that all the memory has been freed - this will output
    * spurious errors in the case of memory corruption above, but this is safe." comment_scope_start="2009" comment_scope_end="2017">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *)" spelling="store_write_reset" id="2401079477649"/>
			<CallExpr type="void" spelling="store_pool_delete" id="2400232239831"/>
			<CallExpr type="void" spelling="store_freenew" id="2400149250000"/>
			<DeclRefExpr type="void (png_store *, store_pool *)" spelling="store_pool_delete" id="2403810540892"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403599418339"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403597655727"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_freenew" id="2402189253097"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400899073307"/>
			<MemberRefExpr type="store_pool" spelling="write_memory_pool" id="2401264033006"/>
			<UnexposedExpr type="void (*)(png_store *, store_pool *)" spelling="store_pool_delete" id="2402415223934"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402620258953"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400841744639"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_freenew" id="2400429470108"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403747331227"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="freed" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following is the main write function, it returns a png_struct and,
 * optionally, a png_info suitable for writiing a new PNG file.  Use
 * store_storefile above to record this file after it has been written.  The
 * returned libpng structures as destroyed by store_write_reset above." comment_scope_start="2019" comment_scope_end="2036">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_infopp" spelling="png_infopp" id="2403723741103"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2403898978021"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2400316537065"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2404128661269"/>
			<ParmDecl type="png_store *" spelling="ps" id="2404289853124"/>
			<ParmDecl type="png_infopp" spelling="ppi" id="2401152114661"/>
			<ParmDecl type="const char *" spelling="name" id="2403046138896"/>
			<CallExpr type="int" spelling="_setjmp" id="2401758466769"/>
			<CallExpr type="void" spelling="png_error" id="2403915503611"/>
			<CallExpr type="void" spelling="store_write_reset" id="2403989810353"/>
			<CallExpr type="size_t" spelling="safecat" id="2400124101743"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403334916683"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2402569002575"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401566698181"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402849435049"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401993712377"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2402897965180"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2404215270041"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400314839284"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402978772749"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400254901996"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2403832692373"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402889703099"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401438928784"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403332111320"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400841861739"/>
			<DeclRefExpr type="const char *" spelling="name" id="2402291889139"/>
			<StringLiteral type="char [27]" spelling="&quot;write store already in use&quot;" id="2400356345931"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2401845548635"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403482319400"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403141248658"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401885989560"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2400510242886"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2403476832394"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2402179624906"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2402588250289"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401061577412"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400138844538"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2401543320174"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2402307822613"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2404108734175"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401057837528"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400232175430"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2403610820196"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2402029117826"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402354295749"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2400908555210"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401362491400"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401219959375"/>
			<UnexposedExpr type="char *" spelling="wname" id="2402220449681"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402576705239"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400514856234"/>
			<UnexposedExpr type="const char *" spelling="name" id="2400751608932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't do the slow memory checks if doing a speed test, also if user
       * memory is not supported we can't do it anyway." comment_scope_start="2037" comment_scope_end="2065">
		<SYMBOLS>
			<VarDecl type="int" spelling="opt" id="2401055066977"/>
			<CallExpr type="png_structp" spelling="png_create_write_struct_2" id="2402672042352"/>
			<CallExpr type="png_structp" spelling="png_create_write_struct" id="2404208194273"/>
			<CallExpr type="void" spelling="png_set_write_fn" id="2402919426277"/>
			<CallExpr type="int" spelling="png_set_option" id="2403384460246"/>
			<CallExpr type="void" spelling="png_error" id="2404121623949"/>
			<CallExpr type="png_infop" spelling="png_create_info_struct" id="2402711382703"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403646187199"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403928218230"/>
			<DeclRefExpr type="png_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)" spelling="png_create_write_struct_2" id="2401302645816"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401634455090"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_error" id="2404024787884"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_warning" id="2400586799227"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400226127666"/>
			<DeclRefExpr type="png_voidp (png_structp, png_alloc_size_t)" spelling="store_malloc" id="2402032014059"/>
			<DeclRefExpr type="void (png_structp, png_voidp)" spelling="store_free" id="2401121131702"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400154955723"/>
			<DeclRefExpr type="png_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_write_struct" id="2400817043498"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403631514726"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_error" id="2400138254162"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_warning" id="2402995532017"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr, png_flush_ptr)" spelling="png_set_write_fn" id="2402177183829"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400555124107"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402547340803"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="store_write" id="2401307756338"/>
			<DeclRefExpr type="void (png_structp)" spelling="store_flush" id="2404199541317"/>
			<DeclRefExpr type="int" spelling="opt" id="2400884727513"/>
			<DeclRefExpr type="int" spelling="opt" id="2400201717100"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402792144074"/>
			<DeclRefExpr type="int" spelling="opt" id="2401973283464"/>
			<DeclRefExpr type="int (png_structrp, int, int)" spelling="png_set_option" id="2400932614279"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401087973681"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404233859152"/>
			<DeclRefExpr type="int" spelling="opt" id="2402114159273"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404294473084"/>
			<DeclRefExpr type="int" spelling="opt" id="2402592783632"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400773342099"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403876654826"/>
			<DeclRefExpr type="png_infopp" spelling="ppi" id="2401700311160"/>
			<DeclRefExpr type="png_infopp" spelling="ppi" id="2403265740733"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401276723541"/>
			<DeclRefExpr type="png_infop (png_const_structrp)" spelling="png_create_info_struct" id="2403023024358"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402016223209"/>
			<StringLiteral type="char [11]" spelling="&quot;1.6.38.git&quot;" id="2403185423850"/>
			<StringLiteral type="char [11]" spelling="&quot;1.6.38.git&quot;" id="2403874415249"/>
			<StringLiteral type="char [19]" spelling="&quot;png option invalid&quot;" id="2401245756529"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2402638472979"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2400573189856"/>
			<MemberRefExpr type="store_pool" spelling="write_memory_pool" id="2403167387911"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2403952025472"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401761157642"/>
			<MemberRefExpr type="int" spelling="noptions" id="2402726435375"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2402523504242"/>
			<MemberRefExpr type="unsigned char" spelling="option" id="2403077503333"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2401917935888"/>
			<MemberRefExpr type="unsigned char" spelling="setting" id="2401819126274"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403797649426"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2400657469258"/>
			<MemberRefExpr type="png_infop" spelling="piwrite" id="2403513847191"/>
			<MemberRefExpr type="png_structp" spelling="pwrite" id="2401795496158"/>
			<UnexposedExpr type="unsigned int" spelling="speed" id="2402691858359"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402839874508"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401296022600"/>
			<UnexposedExpr type="png_structp (*)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)" spelling="png_create_write_struct_2" id="2404162936759"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2400258323304"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403820617290"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_error" id="2400942846243"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_warning" id="2400430171612"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403259582293"/>
			<UnexposedExpr type="png_voidp (*)(png_structp, png_alloc_size_t)" spelling="store_malloc" id="2403693936747"/>
			<UnexposedExpr type="void (*)(png_structp, png_voidp)" spelling="store_free" id="2402923422138"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402774811002"/>
			<UnexposedExpr type="png_structp (*)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_write_struct" id="2402103091373"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2403010454968"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401011928349"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_error" id="2400561449090"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_warning" id="2400097814159"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr, png_flush_ptr)" spelling="png_set_write_fn" id="2403553583954"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2404112360367"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400634300994"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2401517521803"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402831096938"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="store_write" id="2400572406779"/>
			<UnexposedExpr type="void (*)(png_structp)" spelling="store_flush" id="2402925472867"/>
			<UnexposedExpr type="int" spelling="opt" id="2403867104545"/>
			<UnexposedExpr type="int" spelling="noptions" id="2400208936262"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402125610964"/>
			<UnexposedExpr type="int (*)(png_structrp, int, int)" spelling="png_set_option" id="2400501229090"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2401433522422"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400183167469"/>
			<UnexposedExpr type="int" spelling="option" id="2403456660877"/>
			<UnexposedExpr type="unsigned char" spelling="option" id="2400790766008"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2400844283261"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400301256974"/>
			<UnexposedExpr type="int" spelling="opt" id="2401308849437"/>
			<UnexposedExpr type="int" spelling="setting" id="2402429321133"/>
			<UnexposedExpr type="unsigned char" spelling="setting" id="2403748163248"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403031561530"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401936927042"/>
			<UnexposedExpr type="int" spelling="opt" id="2403847036113"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402155507538"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2400920856755"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2402541023237"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400936046993"/>
			<UnexposedExpr type="png_infopp" spelling="ppi" id="2400254987466"/>
			<UnexposedExpr type="png_infopp" spelling="ppi" id="2400618501586"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403723619134"/>
			<UnexposedExpr type="png_infop (*)(png_const_structrp)" spelling="png_create_info_struct" id="2400875412261"/>
			<UnexposedExpr type="const png_struct *" spelling="pwrite" id="2404246471927"/>
			<UnexposedExpr type="png_structp" spelling="pwrite" id="2404009003522"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400227030296"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Cleanup when finished reading (either due to error or in the success case).
 * This routine exists even when there is no read support to make the code
 * tidier (avoid a mass of ifdefs) and so easier to maintain." comment_scope_start="2073" comment_scope_end="2089">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2401245718307"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2401263492293"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2403431626790"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400242443905"/>
			<CallExpr type="int" spelling="_setjmp" id="2404111148877"/>
			<CallExpr type="void" spelling="png_destroy_read_struct" id="2402939863891"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404081135489"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402960746222"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2400612684923"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402011738548"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403419988508"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401849345092"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2404162685116"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2403007832880"/>
			<DeclRefExpr type="void (png_structpp, png_infopp, png_infopp)" spelling="png_destroy_read_struct" id="2402493379334"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402973330180"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404095442588"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400439877181"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402557706229"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402589719987"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400980306950"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401909383530"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403619975008"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2401486690249"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2402266668476"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402094522174"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400434485707"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403341885659"/>
			<MemberRefExpr type="png_infop" spelling="piread" id="2402394919892"/>
			<MemberRefExpr type="int" spelling="caught" id="2401646836214"/>
			<MemberRefExpr type="int" spelling="caught" id="2403288664775"/>
			<MemberRefExpr type="int" spelling="caught" id="2404111785076"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401487686027"/>
			<MemberRefExpr type="int" spelling="caught" id="2401107730980"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400973928139"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401238379203"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2403698779727"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403643863160"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400299960772"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2400795603485"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2400043777929"/>
			<UnexposedExpr type="void (*)(png_structpp, png_infopp, png_infopp)" spelling="png_destroy_read_struct" id="2402062139001"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401997898414"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403133906805"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403489400313"/>
			<UnexposedExpr type="int" spelling="caught" id="2400392362830"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401865723481"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401257665072"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400609825823"/>
			<UnexposedExpr type="jmp_buf *" spelling="exception__prev" id="2404270314112"/>
			<UnexposedExpr type="int" spelling="caught" id="2401284753173"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403213308731"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error already output: continue" comment_scope_start="2090" comment_scope_end="2091"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Always do this to be safe." comment_scope_start="2099" comment_scope_end="2112">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *)" spelling="store_read_reset" id="2403697265797"/>
			<CallExpr type="void" spelling="store_pool_delete" id="2400627285972"/>
			<DeclRefExpr type="void (png_store *, store_pool *)" spelling="store_pool_delete" id="2401229697927"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402872578761"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403104694368"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403088368824"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403016043579"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401776870880"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401125668922"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404102918619"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401842950736"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401331078803"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403769080305"/>
			<MemberRefExpr type="store_pool" spelling="read_memory_pool" id="2400526407429"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2401354628439"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2404238738207"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2402439742271"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2400400926064"/>
			<MemberRefExpr type="png_uint_32" spelling="chunkpos" id="2402096655324"/>
			<MemberRefExpr type="png_uint_32" spelling="chunktype" id="2400768665596"/>
			<MemberRefExpr type="png_uint_32" spelling="chunklen" id="2400569823416"/>
			<MemberRefExpr type="png_uint_32" spelling="IDAT_size" id="2401182636978"/>
			<UnexposedExpr type="void (*)(png_store *, store_pool *)" spelling="store_pool_delete" id="2401959910120"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401215624873"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400198351929"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402092636676"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400912074880"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401281921931"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401336015206"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401279677494"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403637308257"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403745657724"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403347680327"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="just a cache" comment_scope_start="2127" comment_scope_end="2127">
		<SYMBOLS>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402293199736"/>
			<DeclRefExpr type="png_store_file *" spelling="pf" id="2403565210658"/>
			<MemberRefExpr type="unsigned int" spelling="IDAT_bits" id="2401396284925"/>
			<MemberRefExpr type="unsigned int" spelling="IDAT_bits" id="2400844040007"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403273329218"/>
			<UnexposedExpr type="unsigned int" spelling="IDAT_bits" id="2401746276082"/>
			<UnexposedExpr type="png_store_file *" spelling="pf" id="2400067866425"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The main interface for reading a saved file - pass the id number of the file
 * to retrieve.  Ids must be unique or the earlier file will be hidden.  The API
 * returns a png_struct and, optionally, a png_info.  Both of these will be
 * destroyed by store_read_reset above." comment_scope_start="2148" comment_scope_end="2156">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_infopp" spelling="png_infopp" id="2403723741103"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="png_store *" spelling="ps" id="2401153075780"/>
			<ParmDecl type="png_infopp" spelling="ppi" id="2401461375592"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401633612934"/>
			<ParmDecl type="const char *" spelling="name" id="2400138204206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="retrieve" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="unique" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set the name for png_error" comment_scope_start="2157" comment_scope_end="2164">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403015498103"/>
			<CallExpr type="void" spelling="png_error" id="2403923630499"/>
			<CallExpr type="void" spelling="store_read_reset" id="2402722882484"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402597575292"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400857604025"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400918944543"/>
			<DeclRefExpr type="const char *" spelling="name" id="2400967000532"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400078375607"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400737197852"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404056483667"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_read_reset" id="2403664861278"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400654461383"/>
			<StringLiteral type="char [26]" spelling="&quot;read store already in use&quot;" id="2402664169508"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2400226883116"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2400534657045"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400477200447"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2402873912884"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403068930153"/>
			<UnexposedExpr type="char *" spelling="test" id="2400713588514"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404046840190"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403534298735"/>
			<UnexposedExpr type="const char *" spelling="name" id="2401142565141"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2401641929765"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401736483385"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401916431609"/>
			<UnexposedExpr type="const png_struct *" spelling="pread" id="2401615361970"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400603430248"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401680318475"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_read_reset" id="2402645895461"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402480182320"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png_error"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Both the create APIs can return NULL if used in their default mode
    * (because there is no other way of handling an error because the jmp_buf
    * by default is stored in png_struct and that has not been allocated!)
    * However, given that store_error works correctly in these circumstances
    * we don't ever expect NULL in this program." comment_scope_start="2165" comment_scope_end="2186">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2400187734447"/>
			<CallExpr type="png_structp" spelling="png_create_read_struct_2" id="2400145035995"/>
			<CallExpr type="png_structp" spelling="png_create_read_struct" id="2400183278583"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402046602140"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401619770195"/>
			<DeclRefExpr type="png_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)" spelling="png_create_read_struct_2" id="2400510798484"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402609362068"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_error" id="2403167016802"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_warning" id="2401651718272"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400337162176"/>
			<DeclRefExpr type="png_voidp (png_structp, png_alloc_size_t)" spelling="store_malloc" id="2402543837097"/>
			<DeclRefExpr type="void (png_structp, png_voidp)" spelling="store_free" id="2401845657250"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403796250868"/>
			<DeclRefExpr type="png_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_read_struct" id="2403910703618"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403885512942"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_error" id="2402173360856"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="store_warning" id="2402514687555"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404135659947"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403515566351"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2403433316543"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403341694071"/>
			<StringLiteral type="char [11]" spelling="&quot;1.6.38.git&quot;" id="2402111619139"/>
			<StringLiteral type="char [11]" spelling="&quot;1.6.38.git&quot;" id="2402956367608"/>
			<StringLiteral type="char [50]" spelling="&quot;png_create_read_struct returned NULL (unexpected)&quot;" id="2403334451981"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2403429994723"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400849417488"/>
			<MemberRefExpr type="store_pool" spelling="read_memory_pool" id="2401234487918"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2402951579806"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2404158382325"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403491722358"/>
			<UnexposedExpr type="unsigned int" spelling="speed" id="2403013550302"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401890000510"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402882179792"/>
			<UnexposedExpr type="png_structp (*)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr, png_voidp, png_malloc_ptr, png_free_ptr)" spelling="png_create_read_struct_2" id="2401090102922"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2403895913818"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400958864679"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_error" id="2403870343252"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_warning" id="2401758779866"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403951271729"/>
			<UnexposedExpr type="png_voidp (*)(png_structp, png_alloc_size_t)" spelling="store_malloc" id="2404192211225"/>
			<UnexposedExpr type="void (*)(png_structp, png_voidp)" spelling="store_free" id="2401596284322"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403356404790"/>
			<UnexposedExpr type="png_structp (*)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_read_struct" id="2403638024751"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2401825966764"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400457070461"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_error" id="2402574966644"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="store_warning" id="2401085663428"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2400617577793"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401142715157"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401189515190"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401480342409"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403857331030"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="create" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="mode" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="2187" comment_scope_end="2187">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2400379944387"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="2209" comment_scope_end="2209"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The overall cleanup of a store simply calls the above then removes all the
 * saved files.  This does not delete the store itself." comment_scope_start="2211" comment_scope_end="2222">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *)" spelling="store_delete" id="2400102482064"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402001899957"/>
			<CallExpr type="void" spelling="store_write_reset" id="2401440181026"/>
			<CallExpr type="void" spelling="store_read_reset" id="2400381073547"/>
			<CallExpr type="void" spelling="store_freefile" id="2403359098919"/>
			<CallExpr type="void" spelling="store_image_free" id="2402057608849"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2400882920052"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401207228932"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_read_reset" id="2401109347560"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403008910375"/>
			<DeclRefExpr type="void (png_store_file **)" spelling="store_freefile" id="2403320020989"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400519392033"/>
			<DeclRefExpr type="void (png_store *, png_const_structp)" spelling="store_image_free" id="2400772122428"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402145069954"/>
			<MemberRefExpr type="png_store_file *" spelling="saved" id="2402309946576"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2402988748493"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401618558521"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_read_reset" id="2402114613781"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402356639224"/>
			<UnexposedExpr type="void (*)(png_store_file **)" spelling="store_freefile" id="2402107950919"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401692021314"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp)" spelling="store_image_free" id="2402894695591"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401948581126"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="removes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="********************** PNG FILE MODIFICATION ON READ ***********************" comment_scope_start="2223" comment_scope_end="2233"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Files may be modified on read.  The following structure contains a complete
 * png_store together with extra members to handle modification and a special
 * read callback for libpng.  To use this the 'modifications' field must be set
 * to a list of png_modification structures that actually perform the
 * modification, otherwise a png_modifier is functionally equivalent to a
 * png_store.  There is a special read function, set_modifier_for_read, which
 * replaces set_store_for_read." comment_scope_start="2223" comment_scope_end="2233"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initial value" comment_scope_start="2234" comment_scope_end="2234">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="modifier_start" id="2402223396484"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Have a signature" comment_scope_start="2235" comment_scope_end="2235">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="modifier_signature" id="2401210592418"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Have an IHDR" comment_scope_start="2236" comment_scope_end="2236">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="modifier_IHDR" id="2402130064286"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A single CIE tristimulus value, representing the unique response of a
    * standard observer to a variety of light spectra.  The observer recognizes
    * all spectra that produce this response as the same color, therefore this
    * is effectively a description of a color." comment_scope_start="2241" comment_scope_end="2247">
		<SYMBOLS>
			<TypedefDecl type="CIE_color" spelling="CIE_color" id="2400576844532"/>
			<FieldDecl type="double" spelling="X" id="2403797098555"/>
			<FieldDecl type="double" spelling="Y" id="2401170478173"/>
			<FieldDecl type="double" spelling="Z" id="2402224093927"/>
			<StructDecl type="struct CIE_color" spelling="CIE_color" id="2404136829667"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="unique" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A description of an (R,G,B) encoding of color (as defined above); this
    * includes the actual colors of the (R,G,B) triples (1,0,0), (0,1,0) and
    * (0,0,1) plus an encoding value that is used to encode the linear
    * components R, G and B to give the actual values R^gamma, G^gamma and
    * B^gamma that are stored." comment_scope_start="2251" comment_scope_end="2256"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Encoding (file) gamma of space" comment_scope_start="2257" comment_scope_end="2257">
		<SYMBOLS>
			<FieldDecl type="double" spelling="gamma" id="2402080305865"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="End points" comment_scope_start="2258" comment_scope_end="2258">
		<SYMBOLS>
			<TypeRef type="CIE_color" spelling="CIE_color" id="2403490229509"/>
			<FieldDecl type="CIE_color" spelling="red" id="2400449535832"/>
			<FieldDecl type="CIE_color" spelling="green" id="2402762059219"/>
			<FieldDecl type="CIE_color" spelling="blue" id="2402354203469"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_TRANSFORMS &amp;&amp; READ_cHRM" comment_scope_start="2286" comment_scope_end="2286"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_TRANSFORMS" comment_scope_start="2350" comment_scope_end="2350"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="2351" comment_scope_end="2351"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="I am a png_store" comment_scope_start="2355" comment_scope_end="2355">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<FieldDecl type="png_store" spelling="this" id="2400768759100"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Changes to make" comment_scope_start="2356" comment_scope_end="2356">
		<SYMBOLS>
			<TypeRef type="struct png_modification" spelling="struct png_modification" id="2403856524082"/>
			<FieldDecl type="struct png_modification *" spelling="modifications" id="2400036203911"/>
			<StructDecl type="struct png_modification" spelling="png_modification" id="2400140602042"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="My state" comment_scope_start="2358" comment_scope_end="2358">
		<SYMBOLS>
			<TypeRef type="modifier_state" spelling="modifier_state" id="2401266992341"/>
			<FieldDecl type="modifier_state" spelling="state" id="2400845176405"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Information from IHDR:" comment_scope_start="2360" comment_scope_end="2360"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="From IHDR" comment_scope_start="2361" comment_scope_end="2361">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="bit_depth" id="2401982919862"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="From IHDR" comment_scope_start="2362" comment_scope_end="2362">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="colour_type" id="2403498057538"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="While handling PLTE, IDAT and IEND these chunks may be pended to allow
    * other chunks to be inserted." comment_scope_start="2364" comment_scope_end="2369">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="pending_len" id="2401076721172"/>
			<FieldDecl type="png_uint_32" spelling="pending_chunk" id="2401139260549"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test values" comment_scope_start="2370" comment_scope_end="2372">
		<SYMBOLS>
			<FieldDecl type="double *" spelling="gammas" id="2401721888386"/>
			<FieldDecl type="unsigned int" spelling="ngammas" id="2403725019942"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of gamma tests to run" comment_scope_start="2373" comment_scope_end="2373">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="ngamma_tests" id="2400795311800"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0 if not set" comment_scope_start="2374" comment_scope_end="2374">
		<SYMBOLS>
			<FieldDecl type="double" spelling="current_gamma" id="2403823223440"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If an encoding has been set" comment_scope_start="2377" comment_scope_end="2377">
		<SYMBOLS>
			<TypeRef type="color_encoding" spelling="color_encoding" id="2401716886356"/>
			<FieldDecl type="const color_encoding *" spelling="current_encoding" id="2400428058182"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For iteration" comment_scope_start="2378" comment_scope_end="2378">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="encoding_counter" id="2403332527206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="iteration" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Something overwrote it" comment_scope_start="2379" comment_scope_end="2379">
		<SYMBOLS>
			<FieldDecl type="int" spelling="encoding_ignored" id="2403486127204"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Control variables used to iterate through possible encodings, the
    * following must be set to 0 and tested by the function that uses the
    * png_modifier because the modifier only sets it to 1 (true.)" comment_scope_start="2381" comment_scope_end="2384"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Repeat this transform test." comment_scope_start="2385" comment_scope_end="2385">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="repeat" id="2400834975569"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Lowest sbit to test (pre-1.7 libpng fails for sbit &lt; 8)" comment_scope_start="2388" comment_scope_end="2390">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="sbitlow" id="2404198454546"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error control - these are the limits on errors accepted by the gamma tests
    * below." comment_scope_start="2391" comment_scope_end="2393"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Maximum output value error" comment_scope_start="2394" comment_scope_end="2394">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxout8" id="2404133617077"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute sample error 0..1" comment_scope_start="2395" comment_scope_end="2395">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxabs8" id="2400526518551"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute sample error 0..1" comment_scope_start="2396" comment_scope_end="2396">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxcalc8" id="2401092697509"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Percentage sample error 0..100%" comment_scope_start="2397" comment_scope_end="2397">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxpc8" id="2404228896143"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Maximum output value error" comment_scope_start="2398" comment_scope_end="2398">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxout16" id="2401926954889"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute sample error 0..1" comment_scope_start="2399" comment_scope_end="2399">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxabs16" id="2401883504028"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute sample error 0..1" comment_scope_start="2400" comment_scope_end="2400">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxcalc16" id="2403797762320"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute sample error 0..1" comment_scope_start="2401" comment_scope_end="2401">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxcalcG" id="2400325549909"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Percentage sample error 0..100%" comment_scope_start="2402" comment_scope_end="2402">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxpc16" id="2401802914945"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is set by transforms that need to allow a higher limit, it is an
    * internal check on pngvalid to ensure that the calculated error limits are
    * not ridiculous; without this it is too easy to make a mistake in pngvalid
    * that allows any value through.
    *
    * NOTE: this is not checked in release builds." comment_scope_start="2404" comment_scope_end="2410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="limit on error values, normally 4E-3" comment_scope_start="2411" comment_scope_end="2411">
		<SYMBOLS>
			<FieldDecl type="double" spelling="limit" id="2403893276747"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Log limits - values above this are logged, but not necessarily
    * warned." comment_scope_start="2413" comment_scope_end="2415"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute error in 8 bits to log" comment_scope_start="2416" comment_scope_end="2416">
		<SYMBOLS>
			<FieldDecl type="double" spelling="log8" id="2401535054510"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute error in 16 bits to log" comment_scope_start="2417" comment_scope_end="2417">
		<SYMBOLS>
			<FieldDecl type="double" spelling="log16" id="2403285950844"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Logged 8 and 16 bit errors ('output' values):" comment_scope_start="2419" comment_scope_end="2427">
		<SYMBOLS>
			<FieldDecl type="double" spelling="error_gray_2" id="2402640695508"/>
			<FieldDecl type="double" spelling="error_gray_4" id="2402996334998"/>
			<FieldDecl type="double" spelling="error_gray_8" id="2400762253084"/>
			<FieldDecl type="double" spelling="error_gray_16" id="2400895735099"/>
			<FieldDecl type="double" spelling="error_color_8" id="2401580875408"/>
			<FieldDecl type="double" spelling="error_color_16" id="2403650937334"/>
			<FieldDecl type="double" spelling="error_indexed" id="2402928818589"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Flags:" comment_scope_start="2428" comment_scope_end="2433">
		<SYMBOLS>
			<FieldDecl type="int" spelling="use_update_info" id="2401919561121"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Whether to call png_read_update_info, not png_read_start_image, and how
    * many times to call it." comment_scope_start="2428" comment_scope_end="2433">
		<SYMBOLS>
			<FieldDecl type="int" spelling="use_update_info" id="2401919561121"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Whether or not to interlace." comment_scope_start="2434" comment_scope_end="2434"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="int, but must store '1'" comment_scope_start="2435" comment_scope_end="2435">
		<SYMBOLS>
			<FieldDecl type="int" spelling="interlace_type" id="2403104960805"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Run the standard tests?" comment_scope_start="2437" comment_scope_end="2439">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_standard" id="2402581376731"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Run the odd-sized image and interlace read/write tests?" comment_scope_start="2440" comment_scope_end="2442">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_size" id="2403096382071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Run tests on reading with a combination of transforms," comment_scope_start="2443" comment_scope_end="2444">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_transform" id="2403644978164"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="combination" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Includes tRNS images" comment_scope_start="2445" comment_scope_end="2445">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_tRNS" id="2402859116258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="includes" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="When to use the use_input_precision option, this controls the gamma
    * validation code checks.  If set any value that is within the transformed
    * range input-.5 to input+.5 will be accepted, otherwise the value must be
    * within the normal limits.  It should not be necessary to set this; the
    * result should always be exact within the permitted error limits." comment_scope_start="2447" comment_scope_end="2456">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="use_input_precision" id="2400762591955"/>
			<FieldDecl type="unsigned int" spelling="use_input_precision_sbit" id="2402518309687"/>
			<FieldDecl type="unsigned int" spelling="use_input_precision_16to8" id="2402987120971"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If set assume that the calculation bit depth is set by the input
    * precision, not the output precision." comment_scope_start="2457" comment_scope_end="2461">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="calculations_use_input_precision" id="2402601077515"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If set assume that the calculations are done in 16 bits even if the sample
    * depth is 8 bits." comment_scope_start="2462" comment_scope_end="2466">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="assume_16_bit_calculations" id="2400814724575"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Which gamma tests to run:" comment_scope_start="2467" comment_scope_end="2468">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_gamma_threshold" id="2404122760001"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="main tests" comment_scope_start="2469" comment_scope_end="2469">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_gamma_transform" id="2402077021494"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Whether or not to run the low-bit-depth grayscale tests.  This fails on
    * gamma images in some cases because of gross inaccuracies in the grayscale
    * gamma handling for low bit depth." comment_scope_start="2477" comment_scope_end="2486">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="test_lbg" id="2402891822613"/>
			<FieldDecl type="unsigned int" spelling="test_lbg_gamma_threshold" id="2401947104879"/>
			<FieldDecl type="unsigned int" spelling="test_lbg_gamma_transform" id="2400033531889"/>
			<FieldDecl type="unsigned int" spelling="test_lbg_gamma_sbit" id="2401627882973"/>
			<FieldDecl type="unsigned int" spelling="test_lbg_gamma_composition" id="2404033920345"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Log max error" comment_scope_start="2487" comment_scope_end="2487">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="log" id="2402523260704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Buffer information, the buffer size limits the size of the chunks that can
    * be modified - they must fit (including header and CRC) into the buffer!" comment_scope_start="2489" comment_scope_end="2491"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Count of bytes to flush" comment_scope_start="2492" comment_scope_end="2492">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="flush" id="2402110415487"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Bytes in buffer" comment_scope_start="2493" comment_scope_end="2493">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="buffer_count" id="2402350489334"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Position in buffer" comment_scope_start="2494" comment_scope_end="2494">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="buffer_position" id="2403509975932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This returns true if the test should be stopped now because it has already
 * failed and it is running silently." comment_scope_start="2498" comment_scope_end="2505">
		<SYMBOLS>
			<FunctionDecl type="int (png_modifier *)" spelling="fail" id="2404281361243"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2403974672572"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400303488439"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404189889402"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402635591097"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403736851261"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400848559176"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2401986946397"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2400231863049"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401506015530"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2403298786632"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403145308310"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2400068623520"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401874803657"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2402336032725"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401174553599"/>
			<UnexposedExpr type="unsigned int" spelling="log" id="2400735311671"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403498679968"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2401705089779"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403033203041"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2400639400342"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400775991010"/>
			<UnexposedExpr type="int" spelling="treat_warnings_as_errors" id="2403009143033"/>
			<UnexposedExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2403097160120"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401043083837"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2400952828888"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400986448389"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Means 'off'" comment_scope_start="2530" comment_scope_end="2530">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400322029589"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402253124570"/>
			<MemberRefExpr type="double" spelling="log8" id="2400715551281"/>
			<MemberRefExpr type="double" spelling="log16" id="2403708608840"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403503331865"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400725251819"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Rely on the memset for all the other fields - there are no pointers" comment_scope_start="2564" comment_scope_end="2565">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="modifier_init" id="2402110032164"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointers" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This controls use of checks that explicitly know how libpng digitizes the
 * samples in calculations; setting this circumvents simple error limit checking
 * in the rgb_to_gray check, replacing it with an exact copy of the libpng 1.5
 * algorithm." comment_scope_start="2569" comment_scope_end="2575"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If pm-&gt;calculations_use_input_precision is set then operations will happen
 * with the precision of the input, not the precision of the output depth.
 *
 * If pm-&gt;assume_16_bit_calculations is set then even 8 bit calculations use 16
 * bit precision.  This only affects those of the following limits that pertain
 * to a calculation - not a digitization operation - unless the following API is
 * called directly." comment_scope_start="2576" comment_scope_end="2587">
		<SYMBOLS>
			<ParmDecl type="double" spelling="value" id="2400892079434"/>
			<ParmDecl type="int" spelling="depth" id="2400288281525"/>
			<ParmDecl type="int" spelling="do_round" id="2400451634135"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'value' is in the range 0 to 1, the result is the same value rounded to a
    * multiple of the digitization factor - 8 or 16 bits depending on both the
    * sample depth and the 'assume' setting.  Digitization is normally by
    * rounding and 'do_round' should be 1, if it is 0 the digitized value will
    * be truncated." comment_scope_start="2588" comment_scope_end="2595">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="digitization_factor" id="2404068389628"/>
			<DeclRefExpr type="int" spelling="depth" id="2401723028756"/>
			<UnexposedExpr type="int" spelling="depth" id="2402915116905"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Limiting the range is done as a convenience to the caller - it's easier to
    * do it once here than every time at the call site." comment_scope_start="2596" comment_scope_end="2608">
		<SYMBOLS>
			<FunctionDecl type="double (double, int, int)" spelling="digitize" id="2402520455776"/>
			<CallExpr type="double" spelling="floor" id="2403631237404"/>
			<DeclRefExpr type="double" spelling="value" id="2403179898831"/>
			<DeclRefExpr type="double" spelling="value" id="2403937024321"/>
			<DeclRefExpr type="double" spelling="value" id="2400404976942"/>
			<DeclRefExpr type="double" spelling="value" id="2400265820096"/>
			<DeclRefExpr type="double" spelling="value" id="2402259058901"/>
			<DeclRefExpr type="unsigned int" spelling="digitization_factor" id="2401570777361"/>
			<DeclRefExpr type="int" spelling="do_round" id="2403471268202"/>
			<DeclRefExpr type="double" spelling="value" id="2401903222706"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2401219561615"/>
			<DeclRefExpr type="double" spelling="value" id="2401966722002"/>
			<DeclRefExpr type="unsigned int" spelling="digitization_factor" id="2402180050909"/>
			<UnexposedExpr type="double" spelling="value" id="2403994449855"/>
			<UnexposedExpr type="double" spelling="value" id="2400341381785"/>
			<UnexposedExpr type="double" spelling="digitization_factor" id="2401517461848"/>
			<UnexposedExpr type="unsigned int" spelling="digitization_factor" id="2402422057783"/>
			<UnexposedExpr type="int" spelling="do_round" id="2400609950234"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2402853376853"/>
			<UnexposedExpr type="double" spelling="value" id="2404086448772"/>
			<UnexposedExpr type="double" spelling="digitization_factor" id="2401176270060"/>
			<UnexposedExpr type="unsigned int" spelling="digitization_factor" id="2400653643098"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB_TO_GRAY" comment_scope_start="2610" comment_scope_end="2610"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Absolute error permitted in linear values - affected by the bit depth of
    * the calculations." comment_scope_start="2615" comment_scope_end="2623">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="abserr" id="2403298568097"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401212784133"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401377864647"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2403448769540"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402144012433"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402833615505"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401829768208"/>
			<MemberRefExpr type="const unsigned int" spelling="assume_16_bit_calculations" id="2401325919047"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2400076646661"/>
			<MemberRefExpr type="const double" spelling="maxabs16" id="2400943659019"/>
			<MemberRefExpr type="const double" spelling="maxabs8" id="2400592706882"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2402129746293"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2401396373554"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400720515024"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2402157640709"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401829465399"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402443569372"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2400568370492"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403123461684"/>
			<UnexposedExpr type="double" spelling="maxabs16" id="2404192185671"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402773564050"/>
			<UnexposedExpr type="double" spelling="maxabs8" id="2400183653014"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401888742734"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error in the linear composition arithmetic - only relevant when
    * composition actually happens (0 &lt; alpha &lt; 1)." comment_scope_start="2627" comment_scope_end="2636">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="calcerr" id="2403983907300"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402721818464"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401702712857"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400164026887"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403125410758"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400248466859"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402140535757"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400380191692"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2402872739663"/>
			<MemberRefExpr type="const double" spelling="maxcalc16" id="2404185642113"/>
			<MemberRefExpr type="const unsigned int" spelling="assume_16_bit_calculations" id="2404205697377"/>
			<MemberRefExpr type="const double" spelling="maxcalcG" id="2403887139349"/>
			<MemberRefExpr type="const double" spelling="maxcalc8" id="2400913400134"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2403396878923"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402742818944"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403901012729"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2402714924174"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402527661449"/>
			<UnexposedExpr type="double" spelling="maxcalc16" id="2401565758125"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400587167508"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2400301143699"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401970811136"/>
			<UnexposedExpr type="double" spelling="maxcalcG" id="2400498931983"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400530723123"/>
			<UnexposedExpr type="double" spelling="maxcalc8" id="2401138928114"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400557130376"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Percentage error permitted in the linear values.  Note that the specified
    * value is a percentage but this routine returns a simple number." comment_scope_start="2640" comment_scope_end="2648">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="pcerr" id="2403440042896"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400413990724"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402734796782"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2403618515049"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400436991389"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402908485385"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401251192534"/>
			<MemberRefExpr type="const unsigned int" spelling="assume_16_bit_calculations" id="2403829294381"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2403471796142"/>
			<MemberRefExpr type="const double" spelling="maxpc16" id="2402075991773"/>
			<MemberRefExpr type="const double" spelling="maxpc8" id="2402972414924"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2404246676160"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2403144703335"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403592367857"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2400101022094"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402315442410"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403187766603"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2401267067348"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2400966385471"/>
			<UnexposedExpr type="double" spelling="maxpc16" id="2402192115623"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401407933307"/>
			<UnexposedExpr type="double" spelling="maxpc8" id="2402281329151"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403550436773"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Output error - the error in the encoded value.  This is determined by the
 * digitization of the output so can be +/-0.5 in the actual output value.  In
 * the expand_16 case with the current code in libpng the expand happens after
 * all the calculations are done in 8 bit arithmetic, so even though the output
 * depth is 16 the output error is determined by the 8 bit calculation.
 *
 * This limit is not determined by the bit depth of internal calculations.
 *
 * The specified parameter does *not* include the base .5 digitization error but
 * it is added here." comment_scope_start="2650" comment_scope_end="2687">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="outerr" id="2403212153815"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2400951755822"/>
			<ParmDecl type="int" spelling="in_depth" id="2404164936474"/>
			<ParmDecl type="int" spelling="out_depth" id="2401123170467"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402656796635"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400722303974"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400011595291"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401262223427"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403728860396"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402160646541"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402855212126"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402822371958"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403273663235"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2402887609558"/>
			<MemberRefExpr type="const double" spelling="maxout16" id="2404007705582"/>
			<MemberRefExpr type="const double" spelling="maxout8" id="2403542623500"/>
			<MemberRefExpr type="const double" spelling="maxout8" id="2400198204020"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402643534860"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2401656816263"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2401851747153"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402802299035"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400082169379"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2404220067745"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2400679362439"/>
			<UnexposedExpr type="double" spelling="maxout16" id="2400897240687"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403919535159"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402401410666"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2403329661327"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402880812178"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2401541258964"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401007668846"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determined" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="determined" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determined" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There is a serious error in the 2 and 4 bit grayscale transform because
    * the gamma table value (8 bits) is simply shifted, not rounded, so the
    * error in 4 bit grayscale gamma is up to the value below.  This is a hack
    * to allow pngvalid to succeed:
    *
    * TODO: fix this in libpng" comment_scope_start="2663" comment_scope_end="2678">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="out_depth" id="2402656796635"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400722303974"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400011595291"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401262223427"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403728860396"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402160646541"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2402887609558"/>
			<MemberRefExpr type="const double" spelling="maxout16" id="2404007705582"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402643534860"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2401656816263"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2401851747153"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402802299035"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400082169379"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2404220067745"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2400679362439"/>
			<UnexposedExpr type="double" spelling="maxout16" id="2400897240687"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403919535159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is the case where the value was calculated at 8-bit precision then
    * scaled to 16 bits." comment_scope_start="2679" comment_scope_end="2687">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="outerr" id="2403212153815"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402855212126"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402822371958"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403273663235"/>
			<MemberRefExpr type="const double" spelling="maxout8" id="2403542623500"/>
			<MemberRefExpr type="const double" spelling="maxout8" id="2400198204020"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402401410666"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2403329661327"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402880812178"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2401541258964"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401007668846"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This does the same thing as the above however it returns the value to log,
 * rather than raising a warning.  This is useful for debugging to track down
 * exactly what set of parameters cause high error values." comment_scope_start="2689" comment_scope_end="2724">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="outlog" id="2400715150863"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2400206676946"/>
			<ParmDecl type="int" spelling="in_depth" id="2401505922238"/>
			<ParmDecl type="int" spelling="out_depth" id="2401745917993"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402406076164"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402017262351"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400992575209"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401641040241"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402438600388"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403727536175"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400799145100"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2402508547785"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2401051581986"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403021899535"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403157845666"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2404190225008"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401078047358"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402209040068"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402482654936"/>
			<MemberRefExpr type="const double" spelling="log8" id="2401242700740"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2402946762023"/>
			<MemberRefExpr type="const double" spelling="log16" id="2403621317693"/>
			<MemberRefExpr type="const double" spelling="log16" id="2402291536038"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402425248799"/>
			<MemberRefExpr type="const double" spelling="log8" id="2401256814452"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403114625093"/>
			<UnexposedExpr type="double" spelling="log8" id="2401319750538"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401949630576"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402746395568"/>
			<UnexposedExpr type="double" spelling="log8" id="2402887385892"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402723809622"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402510243210"/>
			<UnexposedExpr type="double" spelling="log8" id="2401150522104"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401879975194"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2401237349085"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2404046198368"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401400091729"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2404263460733"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2401047481805"/>
			<UnexposedExpr type="double" spelling="log16" id="2402010703223"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401327116137"/>
			<UnexposedExpr type="double" spelling="log16" id="2403963014938"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403082228470"/>
			<UnexposedExpr type="double" spelling="log8" id="2400770358696"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402858339414"/>
			<UnexposedExpr type="double" spelling="log8" id="2403983258714"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402254527674"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The command line parameters are either 8 bit (0..255) or 16 bit (0..65535)
    * and so must be adjusted for low bit depth grayscale:" comment_scope_start="2695" comment_scope_end="2707">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="out_depth" id="2402406076164"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402017262351"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2400992575209"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401641040241"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402438600388"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2403727536175"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402209040068"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402482654936"/>
			<MemberRefExpr type="const double" spelling="log8" id="2401242700740"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403114625093"/>
			<UnexposedExpr type="double" spelling="log8" id="2401319750538"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401949630576"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402746395568"/>
			<UnexposedExpr type="double" spelling="log8" id="2402887385892"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402723809622"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402510243210"/>
			<UnexposedExpr type="double" spelling="log8" id="2401150522104"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401879975194"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="switched off" comment_scope_start="2700" comment_scope_end="2700">
		<SYMBOLS>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402017262351"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402209040068"/>
			<UnexposedExpr type="double" spelling="log8" id="2401319750538"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401949630576"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is the case where the value was calculated at 8-bit precision then
    * scaled to 16 bits." comment_scope_start="2717" comment_scope_end="2724">
		<SYMBOLS>
			<FunctionDecl type="double (const png_modifier *, int, int)" spelling="outlog" id="2400715150863"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2404190225008"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401078047358"/>
			<MemberRefExpr type="const double" spelling="log8" id="2402425248799"/>
			<MemberRefExpr type="const double" spelling="log8" id="2401256814452"/>
			<UnexposedExpr type="double" spelling="log8" id="2400770358696"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402858339414"/>
			<UnexposedExpr type="double" spelling="log8" id="2403983258714"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402254527674"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This complements the above by providing the appropriate quantization for the
 * final value.  Normally this would just be quantization to an integral value,
 * but in the 8 bit calculation case it's actually quantization to a multiple of
 * 257!" comment_scope_start="2726" comment_scope_end="2739">
		<SYMBOLS>
			<FunctionDecl type="int (const png_modifier *, int, int)" spelling="output_quantization_factor" id="2401002336034"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2401441217325"/>
			<ParmDecl type="int" spelling="in_depth" id="2402221099854"/>
			<ParmDecl type="int" spelling="out_depth" id="2401594394468"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2401569806684"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2400533079058"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400758914653"/>
			<MemberRefExpr type="const unsigned int" spelling="calculations_use_input_precision" id="2402933987070"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403749837439"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2401975053407"/>
			<UnexposedExpr type="int" spelling="calculations_use_input_precision" id="2402855315290"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2400796088631"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403467013024"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="complements" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_GAMMA_SUPPORTED" comment_scope_start="2740" comment_scope_end="2740"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="One modification structure must be provided for each chunk to be modified (in
 * fact more than one can be provided if multiple separate changes are desired
 * for a single chunk.)  Modifications include adding a new chunk when a
 * suitable chunk does not exist.
 *
 * The caller of modify_fn will reset the CRC of the chunk and record 'modified'
 * or 'added' as appropriate if the modify_fn returns 1 (true).  If the
 * modify_fn is NULL the chunk is simply removed." comment_scope_start="2742" comment_scope_end="2768">
		<SYMBOLS>
			<TypedefDecl type="png_modification" spelling="png_modification" id="2403226438602"/>
			<TypeRef type="struct png_modification" spelling="struct png_modification" id="2403856524082"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="struct png_modifier" spelling="struct png_modifier" id="2401782712719"/>
			<TypeRef type="struct png_modification" spelling="struct png_modification" id="2403856524082"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="struct png_modification *" spelling="next" id="2401472926205"/>
			<FieldDecl type="png_uint_32" spelling="chunk" id="2401970134919"/>
			<FieldDecl type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2401376324841"/>
			<FieldDecl type="png_uint_32" spelling="add" id="2402046430735"/>
			<FieldDecl type="unsigned int" spelling="modified" id="2401079228804"/>
			<FieldDecl type="unsigned int" spelling="added" id="2402532858426"/>
			<FieldDecl type="unsigned int" spelling="removed" id="2402359557207"/>
			<ParmDecl type="struct png_modifier *" spelling="pm" id="2401323129538"/>
			<ParmDecl type="struct png_modification *" spelling="me" id="2401707653427"/>
			<ParmDecl type="int" spelling="add" id="2403479258309"/>
			<StructDecl type="struct png_modification" spelling="png_modification" id="2403195150955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modification" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="removed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If the following is NULL all matching chunks will be removed:" comment_scope_start="2756" comment_scope_end="2759">
		<SYMBOLS>
			<TypeRef type="struct png_modifier" spelling="struct png_modifier" id="2401782712719"/>
			<TypeRef type="struct png_modification" spelling="struct png_modification" id="2403856524082"/>
			<FieldDecl type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2401376324841"/>
			<ParmDecl type="struct png_modifier *" spelling="pm" id="2401323129538"/>
			<ParmDecl type="struct png_modification *" spelling="me" id="2401707653427"/>
			<ParmDecl type="int" spelling="add" id="2403479258309"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="removed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If the following is set to PLTE, IDAT or IEND and the chunk has not been
    * found and modified (and there is a modify_fn) the modify_fn will be called
    * to add the chunk before the relevant chunk." comment_scope_start="2760" comment_scope_end="2764">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="add" id="2402046430735"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Chunk was modified" comment_scope_start="2765" comment_scope_end="2765">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="modified" id="2401079228804"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Chunk was added" comment_scope_start="2766" comment_scope_end="2766">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="added" id="2402532858426"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Chunk was removed" comment_scope_start="2767" comment_scope_end="2767">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="removed" id="2402359557207"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Iterate through the usefully testable color encodings.  An encoding is one
 * of:
 *
 * 1) Nothing (no color space, no gamma).
 * 2) Just a gamma value from the gamma array (including 1.0)
 * 3) A color space from the encodings array with the corresponding gamma.
 * 4) The same, but with gamma 1.0 (only really useful with 16 bit calculations)
 *
 * The iterator selects these in turn, the randomizer selects one at random,
 * which is used depends on the setting of the 'test_exhaustive' flag.  Notice
 * that this function changes the colour space encoding so it must only be
 * called on completion of the previous test.  This is what 'modifier_reset'
 * does, below.
 *
 * After the function has been called the 'repeat' flag will still be set; the
 * caller of modifier_reset must reset it at the start of each run of the test!" comment_scope_start="2822" comment_scope_end="2841">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2403423781158"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="iterate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="iterator" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="(1) nothing" comment_scope_start="2842" comment_scope_end="2842"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="(2) gamma values to test" comment_scope_start="2843" comment_scope_end="2843">
		<SYMBOLS>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2404056400321"/>
			<MemberRefExpr type="const unsigned int" spelling="ngammas" id="2400042790652"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2401006186928"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402002933614"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="(3) total number of encodings" comment_scope_start="2844" comment_scope_end="2844">
		<SYMBOLS>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2404040244895"/>
			<MemberRefExpr type="const unsigned int" spelling="nencodings" id="2401328167299"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2400662118841"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400327335892"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following test only works after the first time through the
       * png_modifier code because 'bit_depth' is set when the IHDR is read.
       * modifier_reset, below, preserves the setting until after it has called
       * the iterate function (also below.)
       *
       * For this reason do not rely on this function outside a call to
       * modifier_reset." comment_scope_start="2845" comment_scope_end="2853">
		<SYMBOLS>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400238092397"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400797785616"/>
			<MemberRefExpr type="const png_byte" spelling="bit_depth" id="2400554123187"/>
			<MemberRefExpr type="const unsigned int" spelling="assume_16_bit_calculations" id="2400510615025"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403593201910"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400440137633"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401173354191"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2400385097058"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2401227360733"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400388774914"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="iterate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="(4) encodings with gamma == 1.0" comment_scope_start="2854" comment_scope_end="2854">
		<SYMBOLS>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400945303122"/>
			<MemberRefExpr type="const unsigned int" spelling="nencodings" id="2400546190819"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2401452015781"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402730916670"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Else something needs the current encoding again." comment_scope_start="2860" comment_scope_end="2860">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403716508584"/>
			<MemberRefExpr type="unsigned int" spelling="repeat" id="2404133176047"/>
			<UnexposedExpr type="unsigned int" spelling="repeat" id="2400115322500"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402038063782"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Some transform is encoding dependent" comment_scope_start="2861" comment_scope_end="2861">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402728251855"/>
			<MemberRefExpr type="unsigned int" spelling="test_uses_encoding" id="2402508481015"/>
			<UnexposedExpr type="int" spelling="test_uses_encoding" id="2402103409693"/>
			<UnexposedExpr type="unsigned int" spelling="test_uses_encoding" id="2400075760524"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402357559871"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This will stop the repeat" comment_scope_start="2866" comment_scope_end="2866">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401924896805"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400644556035"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403991519611"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Not exhaustive - choose an encoding at random; generate a number in
          * the range 1..(max-1), so the result is always non-zero:" comment_scope_start="2871" comment_scope_end="2878">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="random_mod" id="2401174319601"/>
			<CallExpr type="unsigned int" spelling="modifier_total_encodings" id="2401892571807"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400233947315"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400369104254"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2400098752432"/>
			<DeclRefExpr type="unsigned int (const png_modifier *)" spelling="modifier_total_encodings" id="2402929066774"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402689538921"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400002550366"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2402212561217"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400153913079"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2403106433907"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2400248692287"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400562929790"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400906925250"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2401834286783"/>
			<UnexposedExpr type="unsigned int (*)(const png_modifier *)" spelling="modifier_total_encodings" id="2401666968301"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401942201409"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404058628953"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402073959684"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="choose" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following must be set in the next run.  In particular
    * test_uses_encodings must be set in the _ini function of each transform
    * that looks at the encodings.  (Not the 'add' function!)" comment_scope_start="2898" comment_scope_end="2905">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401800447552"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403419356630"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400640726071"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400281918561"/>
			<MemberRefExpr type="unsigned int" spelling="test_uses_encoding" id="2402133865342"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2402583428870"/>
			<MemberRefExpr type="const color_encoding *" spelling="current_encoding" id="2402483350945"/>
			<MemberRefExpr type="int" spelling="encoding_ignored" id="2401815541178"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402389977030"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401116677018"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402280008914"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401754915191"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="These only become value after IHDR is read:" comment_scope_start="2906" comment_scope_end="2908">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="modifier_reset" id="2400930005465"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400747543426"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403375615786"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401488914844"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401380415395"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402468670267"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403685015476"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following must be called before anything else to get the encoding set up
 * on the modifier.  In particular it must be called before the transform init
 * functions are called." comment_scope_start="2910" comment_scope_end="2916">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2402762879927"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="init" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set the encoding to the one specified by the current encoding counter,
    * first clear out all the settings - this corresponds to an encoding_counter
    * of 0." comment_scope_start="2917" comment_scope_end="2922">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404078006175"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401712773954"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2401041994262"/>
			<MemberRefExpr type="const color_encoding *" spelling="current_encoding" id="2400236910329"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402877161178"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401071607055"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="clear" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="not ignored yet - happens in _ini functions." comment_scope_start="2923" comment_scope_end="2923">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401447565711"/>
			<MemberRefExpr type="int" spelling="encoding_ignored" id="2403799001696"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402284637814"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now, if required, set the gamma and encoding fields." comment_scope_start="2925" comment_scope_end="2949">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2403068587706"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404233658125"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402401588431"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401712626287"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402898477944"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404261223158"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400444062249"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401254487587"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403804713534"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2401061497779"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403961266230"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403793232617"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400019161534"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403548495212"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402900683717"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400038506860"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403664986220"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400350530765"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401457583800"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400396159168"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2403376628017"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400847601018"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401151477136"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2402410487339"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2400941263432"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400167322343"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2404156083209"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401601471703"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2402568342071"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2401942393017"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2400128146600"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2402961795039"/>
			<MemberRefExpr type="const double" spelling="gamma" id="2401231756290"/>
			<MemberRefExpr type="const color_encoding *" spelling="encodings" id="2403492019358"/>
			<MemberRefExpr type="const color_encoding *" spelling="current_encoding" id="2402219662986"/>
			<MemberRefExpr type="const color_encoding *" spelling="encodings" id="2401446216803"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2403612969309"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404128738368"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2400952602060"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402964545785"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2400207446877"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403661787492"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400207561645"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400139541031"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403838589009"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2403674368058"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403731113520"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2403927506505"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402356561174"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2400457939639"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400302966710"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400593615093"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2400333820854"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402421259470"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2400656551005"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401834557739"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402889364649"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402410051489"/>
			<UnexposedExpr type="double" spelling="gamma" id="2403851267719"/>
			<UnexposedExpr type="const color_encoding *" spelling="encodings" id="2403780616646"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403952913843"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2404127844580"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403552241442"/>
			<UnexposedExpr type="const color_encoding *" spelling="encodings" id="2401648926197"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403475344515"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400962778861"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The gammas[] array is an array of screen gammas, not encoding gammas,
       * so we need the inverse:" comment_scope_start="2928" comment_scope_end="2940">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2403068587706"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402401588431"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401712626287"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402898477944"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404261223158"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400444062249"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401254487587"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403804713534"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2401061497779"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403961266230"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403793232617"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400019161534"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400847601018"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401151477136"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2402410487339"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2400941263432"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2400167322343"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2404156083209"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401601471703"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2402568342071"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2401942393017"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2400952602060"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402964545785"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2400207446877"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403661787492"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400207561645"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400139541031"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403838589009"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2403674368058"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403731113520"/>
			<UnexposedExpr type="unsigned int" spelling="encoding_counter" id="2403927506505"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402356561174"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2400457939639"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400302966710"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400593615093"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2400333820854"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402421259470"/>
			<UnexposedExpr type="unsigned int" spelling="nencodings" id="2400656551005"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401834557739"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="inverse" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Linear, only in the 16 bit case" comment_scope_start="2941" comment_scope_end="2941">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403548495212"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2400128146600"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402889364649"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Enquiry functions to find out what is set.  Notice that there is an implicit
 * assumption below that the first encoding in the list is the one for sRGB." comment_scope_start="2952" comment_scope_end="2967">
		<SYMBOLS>
			<FunctionDecl type="int (const png_modifier *)" spelling="modifier_color_encoding_is_sRGB" id="2400556954804"/>
			<FunctionDecl type="int (const png_modifier *)" spelling="modifier_color_encoding_is_set" id="2401313435725"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2400770241902"/>
			<ParmDecl type="const png_modifier *" spelling="pm" id="2401999557036"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400611540064"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402700002076"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2400658821314"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2401044208418"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2404239745632"/>
			<DeclRefExpr type="const png_modifier *" spelling="pm" id="2402467095038"/>
			<MemberRefExpr type="const color_encoding *const" spelling="current_encoding" id="2402272422069"/>
			<MemberRefExpr type="const color_encoding *const" spelling="current_encoding" id="2403300048630"/>
			<MemberRefExpr type="const color_encoding *const" spelling="encodings" id="2403267604868"/>
			<MemberRefExpr type="const double" spelling="gamma" id="2403122390794"/>
			<MemberRefExpr type="const color_encoding *const" spelling="current_encoding" id="2402270738207"/>
			<MemberRefExpr type="const double" spelling="current_gamma" id="2402251350661"/>
			<MemberRefExpr type="const double" spelling="current_gamma" id="2400589627929"/>
			<UnexposedExpr type="const color_encoding *" spelling="current_encoding" id="2401410522788"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2404225744554"/>
			<UnexposedExpr type="const color_encoding *" spelling="current_encoding" id="2402504109911"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400338361597"/>
			<UnexposedExpr type="const color_encoding *" spelling="encodings" id="2402632901347"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400300597820"/>
			<UnexposedExpr type="double" spelling="gamma" id="2401204141563"/>
			<UnexposedExpr type="const color_encoding *" spelling="current_encoding" id="2403524409183"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400645320464"/>
			<UnexposedExpr type="double" spelling="current_gamma" id="2403990688365"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402769471092"/>
			<UnexposedExpr type="double" spelling="current_gamma" id="2403605474445"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403060438273"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="implicit" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="srgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The guts of modification are performed during a read." comment_scope_start="2968" comment_scope_end="2971">
		<SYMBOLS>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<ParmDecl type="png_bytep" spelling="buffer" id="2402658104159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modification" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Recalculate the chunk CRC - a complete chunk must be in
    * the buffer, at the start." comment_scope_start="2972" comment_scope_end="2976">
		<SYMBOLS>
			<TypeRef type="uInt" spelling="uInt" id="2401318756337"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="uLong" spelling="uLong" id="2403719415922"/>
			<VarDecl type="uInt" spelling="datalen" id="2401347673931"/>
			<VarDecl type="uLong" spelling="crc" id="2402800835842"/>
			<CallExpr type="uLong" spelling="crc32" id="2404084235601"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2400868889653"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2400808251045"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2400078410706"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2400535355789"/>
			<DeclRefExpr type="uLong (uLong, const Bytef *, uInt)" spelling="crc32" id="2402733501295"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2400324212110"/>
			<DeclRefExpr type="uInt" spelling="datalen" id="2400639574806"/>
			<UnexposedExpr type="uLong (*)(uLong, const Bytef *, uInt)" spelling="crc32" id="2402123296217"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2401846535956"/>
			<UnexposedExpr type="uInt" spelling="datalen" id="2400529230469"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="complete" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The cast to png_uint_32 is safe because a crc32 is always a 32 bit value." comment_scope_start="2977" comment_scope_end="2980">
		<SYMBOLS>
			<FunctionDecl type="void (png_bytep)" spelling="modifier_crc" id="2403717556526"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401312099367"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401330832172"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2403383673109"/>
			<DeclRefExpr type="uInt" spelling="datalen" id="2403613079271"/>
			<DeclRefExpr type="uLong" spelling="crc" id="2404248051981"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2402839143532"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2402661421546"/>
			<UnexposedExpr type="uInt" spelling="datalen" id="2404136024289"/>
			<UnexposedExpr type="uLong" spelling="crc" id="2401541477281"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="cast" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Separate the callback into the actual implementation (which is passed the
 * png_modifier explicitly) and the callback, which gets the modifier from the
 * png_struct." comment_scope_start="2990" comment_scope_end="3006">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_modification" spelling="png_modification" id="2404290606460"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="size_t" spelling="cb" id="2403931787468"/>
			<VarDecl type="png_uint_32" spelling="len" id="2401684396627"/>
			<VarDecl type="png_uint_32" spelling="chunk" id="2403981182914"/>
			<VarDecl type="png_modification *" spelling="mod" id="2402814556008"/>
			<VarDecl type="png_byte [8]" spelling="sign" id="2403628451759"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2401186486923"/>
			<ParmDecl type="png_bytep" spelling="pb" id="2403421711180"/>
			<ParmDecl type="size_t" spelling="st" id="2404228309930"/>
			<DeclRefExpr type="size_t" spelling="st" id="2402911014922"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403611996361"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403316254059"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404168878977"/>
			<DeclRefExpr type="int" spelling="modifier_start" id="2401595640783"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2400128271805"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2402666864873"/>
			<MemberRefExpr type="modifier_state" spelling="state" id="2401069623299"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400275657504"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2401697904526"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402857080015"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2403746021565"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401309161450"/>
			<UnexposedExpr type="unsigned int" spelling="state" id="2400938662067"/>
			<UnexposedExpr type="modifier_state" spelling="state" id="2400952172724"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401701591430"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="signature." comment_scope_start="3007" comment_scope_end="3007">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402367682658"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2402072913583"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402142838474"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401460918128"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400136863590"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401551823132"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2403798209725"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400963437917"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400554853373"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401302330126"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="IHDR" comment_scope_start="3017" comment_scope_end="3017">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402779492952"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2401332450007"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402996776324"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400076756006"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402872534556"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2402199654823"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2404140013081"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401412106937"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400169065360"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400083326085"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the list of modifiers for modifications to the IHDR." comment_scope_start="3025" comment_scope_end="3035">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_setbuffer" id="2402074037550"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401235276803"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400631499816"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401007848240"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402857034804"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400738712618"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400232304345"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402164659555"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402860105016"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403125470437"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_setbuffer" id="2400908232183"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400987010933"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2400865833888"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk" id="2400484170734"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2404206252685"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403224180239"/>
			<MemberRefExpr type="unsigned int" spelling="modified" id="2402850584596"/>
			<UnexposedExpr type="struct png_modification *" spelling="modifications" id="2402550780621"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404277085302"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401329244070"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2402760301120"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402790214702"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2402239169416"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400003850095"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403573280722"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400675503037"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403140593874"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402525532751"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403966512703"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_setbuffer" id="2403692150065"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400736227935"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Ignore removal or add if IHDR!" comment_scope_start="3036" comment_scope_end="3038">
		<SYMBOLS>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402862010289"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400943036960"/>
			<MemberRefExpr type="struct png_modification *" spelling="next" id="2404262147049"/>
			<UnexposedExpr type="struct png_modification *" spelling="next" id="2403851443145"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402059219625"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Cache information from the IHDR (the modified one.)" comment_scope_start="3040" comment_scope_end="3049">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401148816771"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403406129272"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401383890803"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404197988760"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404053921275"/>
			<DeclRefExpr type="int" spelling="modifier_IHDR" id="2400835398066"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403923297869"/>
			<DeclRefExpr type="int" spelling="modifier_IHDR" id="2401115492935"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400514969503"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403054208870"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400515228935"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403403020895"/>
			<MemberRefExpr type="modifier_state" spelling="state" id="2401509406386"/>
			<MemberRefExpr type="size_t" spelling="flush" id="2404134354838"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401737975384"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400533162579"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403344840015"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400627118906"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2404074965541"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402621337038"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400932159054"/>
			<UnexposedExpr type="modifier_state" spelling="modifier_IHDR" id="2401876112864"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401092058481"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read a new chunk and process it until we see PLTE, IDAT or
             * IEND.  'flush' indicates that there is still some data to
             * output from the preceding chunk." comment_scope_start="3050" comment_scope_end="3062">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402470186873"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402968489453"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404130184828"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2404242715468"/>
			<DeclRefExpr type="size_t" spelling="st" id="2403454831261"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401390605497"/>
			<DeclRefExpr type="size_t" spelling="st" id="2401037272862"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402463211872"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2400155122617"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2402482842692"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400207349779"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2402580881311"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401859015286"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401283991662"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2401447380596"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403929848589"/>
			<DeclRefExpr type="size_t" spelling="st" id="2402563427286"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402787154476"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400732948092"/>
			<MemberRefExpr type="size_t" spelling="flush" id="2402044695842"/>
			<MemberRefExpr type="size_t" spelling="flush" id="2400486970687"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403097051481"/>
			<UnexposedExpr type="size_t" spelling="flush" id="2401691307280"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402012593383"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401972107253"/>
			<UnexposedExpr type="size_t" spelling="st" id="2401497769706"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400668754315"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402924841403"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403979887434"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2400616516387"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404145191259"/>
			<UnexposedExpr type="png_bytep" spelling="pb" id="2403491285963"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403244068123"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401228532828"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402656436200"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2403840730528"/>
			<UnexposedExpr type="size_t" spelling="st" id="2403938665499"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="No more bytes to flush, read a header, or handle a pending
             * chunk." comment_scope_start="3064" comment_scope_end="3073">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401695089086"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402993992032"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403665020728"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400078112678"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403017333031"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403037802650"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401641748532"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400548474254"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400202398291"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400348163208"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401454077164"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_chunk" id="2402757246578"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400045881679"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_len" id="2401238662987"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403792263441"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_chunk" id="2404269367473"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_len" id="2404203614282"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_chunk" id="2402614241675"/>
			<UnexposedExpr type="png_uint_32" spelling="pending_chunk" id="2403556478870"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403562419060"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400653363145"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403857661984"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401407566509"/>
			<UnexposedExpr type="png_uint_32" spelling="pending_len" id="2400755310283"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401636214147"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401742525092"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401024019623"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400104277960"/>
			<UnexposedExpr type="png_uint_32" spelling="pending_chunk" id="2404217787598"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401931740693"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403633077255"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402489193836"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for something to modify or a terminator chunk." comment_scope_start="3080" comment_scope_end="3083">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2402469077813"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402002550367"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401394207562"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401596127172"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402086822133"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2401764686376"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401902818377"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402266108300"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403061251127"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401816249245"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400464041486"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2404052270452"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400882976480"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400152903462"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401345253827"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2404154392679"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401686976037"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2404263234012"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403896966310"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402761067461"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401456750588"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400500401107"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403727132231"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401515723220"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2402087840058"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402725691540"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401309321460"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402131376407"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2402698580875"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403589684168"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modify" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Terminators first, they may have to be delayed for added
             * chunks" comment_scope_start="3084" comment_scope_end="3097">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2402430429602"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2400997065424"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2401726818920"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403901781957"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403883336508"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403068861491"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403674190722"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2402320299992"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400783479066"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2400519378620"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401602164109"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403257548353"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403246671820"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2400772173573"/>
			<MemberRefExpr type="png_uint_32" spelling="add" id="2400052003182"/>
			<MemberRefExpr type="png_uint_32" spelling="add" id="2402648569172"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2400064995376"/>
			<MemberRefExpr type="unsigned int" spelling="modified" id="2402546891307"/>
			<MemberRefExpr type="unsigned int" spelling="added" id="2404155277604"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2400605153844"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2403927687932"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2403780044590"/>
			<UnexposedExpr type="struct png_modification *" spelling="modifications" id="2401057675139"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400925321641"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403843673161"/>
			<UnexposedExpr type="png_uint_32" spelling="add" id="2400379133686"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402273618218"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2403825840088"/>
			<UnexposedExpr type="png_uint_32" spelling="add" id="2403577727141"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402282184654"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2402618906813"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403485730606"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402853088269"/>
			<UnexposedExpr type="unsigned int" spelling="modified" id="2402333283758"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401313298901"/>
			<UnexposedExpr type="unsigned int" spelling="added" id="2403215619474"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402195398112"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Regardless of what the modify function does do not run
                      * this again." comment_scope_start="3098" comment_scope_end="3102">
		<SYMBOLS>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401664851929"/>
			<MemberRefExpr type="unsigned int" spelling="added" id="2401298802101"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400322084645"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modify" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="add" comment_scope_start="3103" comment_scope_end="3103">
		<SYMBOLS>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401670277288"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402953345608"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401924050567"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2401521036947"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2400958490910"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400676566108"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400050674730"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2404004885742"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reset the CRC on a new chunk" comment_scope_start="3105" comment_scope_end="3114">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_setbuffer" id="2403264428780"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400802612926"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_setbuffer" id="2402560466257"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401248285882"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403230900975"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402829916825"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2400828964781"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403973371584"/>
			<MemberRefExpr type="unsigned int" spelling="removed" id="2400616333058"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2401967156501"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400530720907"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_setbuffer" id="2401633646051"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403950652014"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403168858001"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403545271729"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The buffer has been filled with something (we assume)
                         * so output this.  Pend the current chunk." comment_scope_start="3115" comment_scope_end="3119">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402965579010"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2403246209848"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401240728055"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2402926651607"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_len" id="2402428080002"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_chunk" id="2402068256762"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401478591051"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2401350161200"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400034380333"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2400597490120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="out of while" comment_scope_start="3120" comment_scope_end="3120"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't do any further processing if the buffer was modified -
                * otherwise the code will end up modifying a chunk that was
                * just added." comment_scope_start="3127" comment_scope_end="3131">
		<SYMBOLS>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403522015580"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403959924246"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="modifying" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="out of switch" comment_scope_start="3132" comment_scope_end="3132"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If we get to here then this chunk may need to be modified.  To
             * do this it must be less than 1024 bytes in total size, otherwise
             * it just gets flushed." comment_scope_start="3135" comment_scope_end="3174">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="s" id="2401639323291"/>
			<CallExpr type="size_t" spelling="store_read_chunk" id="2402224368339"/>
			<CallExpr type="void" spelling="modifier_setbuffer" id="2403720490322"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2401020081460"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400037962758"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2400847936776"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403680606960"/>
			<DeclRefExpr type="size_t (png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2402035480144"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402508686582"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403924038768"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400879339765"/>
			<DeclRefExpr type="size_t" spelling="s" id="2401142511364"/>
			<DeclRefExpr type="size_t" spelling="s" id="2402604695314"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403532243877"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2402786004833"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403617009414"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403521136584"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400091408998"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402082817778"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2404232180597"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401710930026"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404077230410"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400121725539"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403871475126"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402976806606"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403972338469"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403622767334"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401680677896"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404131690423"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401388151752"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_setbuffer" id="2401184834716"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400755413957"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2404084397739"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401368883066"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401694734338"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2400750582607"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400017051027"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2402575079085"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2401332990751"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2400888415661"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2403241776228"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk" id="2404237373143"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403330401148"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403141270711"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403088380453"/>
			<MemberRefExpr type="unsigned int" spelling="removed" id="2403857247762"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2401417146363"/>
			<MemberRefExpr type="unsigned int" spelling="modified" id="2402338122107"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403069460269"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403671642810"/>
			<MemberRefExpr type="struct png_modification *" spelling="next" id="2400461490199"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2401183287089"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403056190339"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2402785671799"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402048807468"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402535519904"/>
			<UnexposedExpr type="size_t (*)(png_store *, png_bytep, size_t, size_t)" spelling="store_read_chunk" id="2401917170040"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402634505648"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401175512922"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401111310101"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2403681418400"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403560431555"/>
			<UnexposedExpr type="size_t" spelling="s" id="2400116372738"/>
			<UnexposedExpr type="size_t" spelling="s" id="2400669761473"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400287520997"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2403757421135"/>
			<UnexposedExpr type="struct png_modification *" spelling="modifications" id="2402511055965"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402784814702"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403609442141"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2401031030149"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400338920904"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2402552495520"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403642105138"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403414795808"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400780268381"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401003279880"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401878378481"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2402306540213"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400542742386"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404240280136"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401370290207"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2402000776913"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2403765657502"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401576103160"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401593350329"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_setbuffer" id="2400269713995"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401630069740"/>
			<UnexposedExpr type="struct png_modification *" spelling="next" id="2403813637850"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401463877367"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for a modification, else leave it be." comment_scope_start="3145" comment_scope_end="3152">
		<SYMBOLS>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403617009414"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403521136584"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2400091408998"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2402082817778"/>
			<DeclRefExpr type="png_uint_32" spelling="chunk" id="2404232180597"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2401710930026"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2403241776228"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk" id="2404237373143"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403330401148"/>
			<UnexposedExpr type="struct png_modification *" spelling="modifications" id="2402511055965"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402784814702"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403609442141"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2401031030149"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2400338920904"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk" id="2402552495520"/>
			<UnexposedExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2403642105138"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2403414795808"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modification" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Remove this chunk" comment_scope_start="3153" comment_scope_end="3155">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404077230410"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400121725539"/>
			<DeclRefExpr type="png_modification *" spelling="mod" id="2403871475126"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403141270711"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403088380453"/>
			<MemberRefExpr type="unsigned int" spelling="removed" id="2403857247762"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400780268381"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401003279880"/>
			<UnexposedExpr type="png_modification *" spelling="mod" id="2401878378481"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Terminate the while loop" comment_scope_start="3156" comment_scope_end="3156"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The chunk may have been removed:" comment_scope_start="3162" comment_scope_end="3167">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404131690423"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401388151752"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403069460269"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403671642810"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2403765657502"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401576103160"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401593350329"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="data + crc" comment_scope_start="3177" comment_scope_end="3177">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402588351861"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2401372353559"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400341792197"/>
			<MemberRefExpr type="size_t" spelling="flush" id="2402013441281"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403791186065"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400652469023"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2402989101426"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402502000391"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400001247776"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Take the data from the buffer (if there is any)." comment_scope_start="3179" comment_scope_end="3181"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Here to read from the modifier buffer (not directly from
       * the store, as in the flush case above.)" comment_scope_start="3183" comment_scope_end="3195">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memcpy" id="2400890903722"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403997454133"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400265715937"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400267839821"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403953657269"/>
			<DeclRefExpr type="size_t" spelling="st" id="2403980255271"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403484094505"/>
			<DeclRefExpr type="size_t" spelling="st" id="2400531100138"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2402418067580"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2400934411711"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401977453142"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402869812644"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403335256182"/>
			<DeclRefExpr type="size_t" spelling="st" id="2401828037484"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402025923239"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2403962859588"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402423142589"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403725113543"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402689791926"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2400398017003"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2402891408672"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2402683923095"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403693752218"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2404116228841"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2400884973747"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401995630583"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2401204410140"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400652261002"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402481305872"/>
			<UnexposedExpr type="size_t" spelling="st" id="2404140195145"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400998801888"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2400473667384"/>
			<UnexposedExpr type="void *" spelling="pb" id="2403917015124"/>
			<UnexposedExpr type="png_bytep" spelling="pb" id="2403574851189"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2404141921007"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401662324544"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2403015034544"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403262364377"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400146733408"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400281664739"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402776207779"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400058203426"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2402408989206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The callback:" comment_scope_start="3198" comment_scope_end="3210">
		<SYMBOLS>
			<FunctionDecl type="void (png_structp, png_bytep, size_t)" spelling="modifier_read" id="2402793431720"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<VarDecl type="png_const_structp" spelling="pp" id="2402310036651"/>
			<VarDecl type="png_modifier *" spelling="pm" id="2400656361668"/>
			<ParmDecl type="png_structp" spelling="ppIn" id="2402014332293"/>
			<ParmDecl type="png_bytep" spelling="pb" id="2400474376253"/>
			<ParmDecl type="size_t" spelling="st" id="2402797212365"/>
			<CallExpr type="png_voidp" spelling="png_get_io_ptr" id="2401179785608"/>
			<CallExpr type="void" spelling="png_error" id="2404117381813"/>
			<CallExpr type="void" spelling="modifier_read_imp" id="2402980455921"/>
			<DeclRefExpr type="png_structp" spelling="ppIn" id="2403888449433"/>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_io_ptr" id="2401164874066"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401821409010"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404029477354"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402175432039"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401261532069"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401862093851"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402827378180"/>
			<DeclRefExpr type="void (png_modifier *, png_bytep, size_t)" spelling="modifier_read_imp" id="2402753688839"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403897216646"/>
			<DeclRefExpr type="png_bytep" spelling="pb" id="2400515878367"/>
			<DeclRefExpr type="size_t" spelling="st" id="2401541222883"/>
			<StringLiteral type="char [23]" spelling="&quot;bad modifier_read call&quot;" id="2402233651292"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2400892910545"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403746086840"/>
			<UnexposedExpr type="png_const_structp" spelling="ppIn" id="2401311243595"/>
			<UnexposedExpr type="png_structp" spelling="ppIn" id="2402851789925"/>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_io_ptr" id="2403592136966"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400047966510"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403804036514"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2402285965110"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402404200375"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401376275885"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402506777601"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403718609101"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403495403703"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_bytep, size_t)" spelling="modifier_read_imp" id="2401232921333"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403072691321"/>
			<UnexposedExpr type="png_bytep" spelling="pb" id="2401552806066"/>
			<UnexposedExpr type="size_t" spelling="st" id="2400261933587"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Like store_progressive_read but the data is getting changed as we go so we
 * need a local buffer." comment_scope_start="3211" comment_scope_end="3220">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2402199308222"/>
			<ParmDecl type="png_structp" spelling="pp" id="2404106811712"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401233573191"/>
			<CallExpr type="void" spelling="png_error" id="2401137941301"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402085332241"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400490804891"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400058833053"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403508604132"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403870674119"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401494734267"/>
			<StringLiteral type="char [34]" spelling="&quot;store state damaged (progressive)&quot;" id="2400899942273"/>
			<MemberRefExpr type="png_structp" spelling="pread" id="2403190063818"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400339657066"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2403606586723"/>
			<MemberRefExpr type="png_store" spelling="this" id="2404148225811"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2400988175109"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401519442267"/>
			<UnexposedExpr type="png_structp" spelling="pread" id="2402027960775"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402580624412"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401650761952"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2403374722419"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401650370694"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2402440367439"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401483263602"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402153786599"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403357036437"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400898605395"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is another Horowitz and Hill random noise generator.  In this case
    * the aim is to stress the progressive reader with truly horrible variable
    * buffer sizes in the range 1..500, so a sequence of 9 bit random numbers
    * is generated.  We could probably just count from 1 to 32767 and get as
    * good a result." comment_scope_start="3221" comment_scope_end="3257">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="noise" id="2401784609322"/>
			<VarDecl type="size_t" spelling="cb" id="2402009267858"/>
			<VarDecl type="size_t" spelling="cbAvail" id="2401059384231"/>
			<VarDecl type="png_byte [512]" spelling="buffer" id="2402331839162"/>
			<CallExpr type="size_t" spelling="store_read_buffer_avail" id="2403088889530"/>
			<CallExpr type="void" spelling="modifier_read_imp" id="2401496668857"/>
			<CallExpr type="void" spelling="png_process_data" id="2403394345180"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403803440793"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403319276196"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403655230077"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400948957433"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403685309696"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403578959955"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401036191810"/>
			<DeclRefExpr type="size_t (png_store *)" spelling="store_read_buffer_avail" id="2401441793150"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402043638586"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400909667441"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401035430634"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401443212520"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404018250496"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404142028806"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403166500975"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2400304050897"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2402397518240"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401842147927"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401036914384"/>
			<DeclRefExpr type="void (png_modifier *, png_bytep, size_t)" spelling="modifier_read_imp" id="2403080598880"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403769042463"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2402821108549"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2400891859825"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2403269366305"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403271113035"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400685757512"/>
			<DeclRefExpr type="png_byte [512]" spelling="buffer" id="2403398340998"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2402544531178"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401909073149"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403177441310"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2402948859713"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2404026854368"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403907464513"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403550803811"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401907557221"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2400494052885"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401587954238"/>
			<UnexposedExpr type="size_t (*)(png_store *)" spelling="store_read_buffer_avail" id="2400458615888"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401803828100"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402377137708"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400705329534"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2401995007236"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401328659116"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402484668612"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402771832860"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2400849849810"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401985539668"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401078012507"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2403102685486"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2401066046699"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2404168236386"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_bytep, size_t)" spelling="modifier_read_imp" id="2401519097280"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401843146513"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400397263764"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2400190493458"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, png_bytep, size_t)" spelling="png_process_data" id="2403545365080"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403055679146"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402908585209"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400656708086"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401347802919"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate 15 more bits of stuff:" comment_scope_start="3233" comment_scope_end="3236">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403803440793"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403319276196"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403655230077"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2400948957433"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403685309696"/>
			<DeclRefExpr type="png_uint_32" spelling="noise" id="2403578959955"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2403550803811"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401907557221"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2400494052885"/>
			<UnexposedExpr type="png_uint_32" spelling="noise" id="2401587954238"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check that this number of bytes are available (in the current buffer.)
       * (This doesn't quite work - the modifier might delete a chunk; unlikely
       * but possible, it doesn't happen at present because the modifier only
       * adds chunks to standard images.)" comment_scope_start="3237" comment_scope_end="3247">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="store_read_buffer_avail" id="2403088889530"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401036191810"/>
			<DeclRefExpr type="size_t (png_store *)" spelling="store_read_buffer_avail" id="2401441793150"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402043638586"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400909667441"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401035430634"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401443212520"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404018250496"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404142028806"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2403166500975"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2400304050897"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401909073149"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2403177441310"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2402948859713"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2404026854368"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2403907464513"/>
			<UnexposedExpr type="size_t (*)(png_store *)" spelling="store_read_buffer_avail" id="2400458615888"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401803828100"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402377137708"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400705329534"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2401995007236"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401328659116"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2402484668612"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402771832860"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2400849849810"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401985539668"/>
			<UnexposedExpr type="size_t" spelling="cb" id="2401078012507"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2403102685486"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adds" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for EOF:" comment_scope_start="3248" comment_scope_end="3253">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2402397518240"/>
			<DeclRefExpr type="size_t" spelling="cb" id="2401842147927"/>
			<DeclRefExpr type="size_t" spelling="cbAvail" id="2401036914384"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2401066046699"/>
			<UnexposedExpr type="size_t" spelling="cbAvail" id="2404168236386"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the invariants at the end (if this fails it's a problem in this
    * file!)" comment_scope_start="3259" comment_scope_end="3266">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2400098238208"/>
			<CallExpr type="void" spelling="png_error" id="2402211243676"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404271365822"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400864748433"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402403268422"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403203661728"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403625354755"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402862912356"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400387437598"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403502503453"/>
			<StringLiteral type="char [38]" spelling="&quot;progressive read implementation error&quot;" id="2400125159378"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2401624231812"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2400224677891"/>
			<MemberRefExpr type="png_store_buffer *" spelling="next" id="2402650928466"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401299877704"/>
			<MemberRefExpr type="png_store_buffer" spelling="data" id="2402476286115"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2400758237110"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400348793876"/>
			<MemberRefExpr type="size_t" spelling="readpos" id="2401860892309"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402139300432"/>
			<MemberRefExpr type="size_t" spelling="datacount" id="2403943038016"/>
			<MemberRefExpr type="png_store_file *" spelling="current" id="2403772230304"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401994895044"/>
			<UnexposedExpr type="size_t" spelling="buffer_count" id="2401441368444"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400466983173"/>
			<UnexposedExpr type="size_t" spelling="buffer_position" id="2401768946962"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401972879415"/>
			<UnexposedExpr type="png_store_buffer *" spelling="next" id="2400696317319"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401495205613"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2401063905736"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403066996214"/>
			<UnexposedExpr type="size_t" spelling="readpos" id="2402230609515"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401232761832"/>
			<UnexposedExpr type="size_t" spelling="datacount" id="2400012292184"/>
			<UnexposedExpr type="png_store_file *" spelling="current" id="2403478435717"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401498057720"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401265592798"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400563747347"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402097861098"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set up a modifier." comment_scope_start="3268" comment_scope_end="3272">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_infopp" spelling="png_infopp" id="2403723741103"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2403754368323"/>
			<ParmDecl type="png_infopp" spelling="ppi" id="2402246440525"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2404268286868"/>
			<ParmDecl type="const char *" spelling="name" id="2400367633334"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do this first so that the modifier fields are cleared even if an error
    * happens allocating the png_struct.  No allocation is done here so no
    * cleanup is required." comment_scope_start="3273" comment_scope_end="3288">
		<SYMBOLS>
			<FunctionDecl type="png_structp (png_modifier *, png_infopp, png_uint_32, const char *)" spelling="set_modifier_for_read" id="2403997926945"/>
			<CallExpr type="png_structp" spelling="set_store_for_read" id="2403164738556"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400441831961"/>
			<DeclRefExpr type="int" spelling="modifier_start" id="2403721431915"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401663423036"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403747886582"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401561668346"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402857733823"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401187818201"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400013334182"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401915028532"/>
			<DeclRefExpr type="png_structp (png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2403838713943"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402200093224"/>
			<DeclRefExpr type="png_infopp" spelling="ppi" id="2403428503172"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402975523744"/>
			<DeclRefExpr type="const char *" spelling="name" id="2401742941252"/>
			<MemberRefExpr type="modifier_state" spelling="state" id="2400107025413"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403549493201"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400766095448"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_len" id="2400670374446"/>
			<MemberRefExpr type="png_uint_32" spelling="pending_chunk" id="2403697463722"/>
			<MemberRefExpr type="size_t" spelling="flush" id="2402842023320"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2401883958923"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2400091913355"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400250104596"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400227733593"/>
			<UnexposedExpr type="modifier_state" spelling="modifier_start" id="2401056390875"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403112823314"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403653715379"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402938514136"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401317206943"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402302089092"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400449186798"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400107698602"/>
			<UnexposedExpr type="png_structp (*)(png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2403483094988"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400551890312"/>
			<UnexposedExpr type="png_infopp" spelling="ppi" id="2402895619296"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2401974914938"/>
			<UnexposedExpr type="const char *" spelling="name" id="2403408729785"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="cleared" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocating" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="******************************* MODIFICATIONS ******************************" comment_scope_start="3291" comment_scope_end="3305">
		<SYMBOLS>
			<TypedefDecl type="gama_modification" spelling="gama_modification" id="2402831989913"/>
			<TypeRef type="png_modification" spelling="png_modification" id="2404290606460"/>
			<TypeRef type="png_fixed_point" spelling="png_fixed_point" id="2403006306883"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_modification" spelling="png_modification" id="2404290606460"/>
			<FieldDecl type="png_modification" spelling="this" id="2402052953502"/>
			<FieldDecl type="png_fixed_point" spelling="gamma" id="2401855652471"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2400749288983"/>
			<ParmDecl type="png_modification *" spelling="me" id="2403962131057"/>
			<ParmDecl type="int" spelling="add" id="2403199958431"/>
			<DeclRefExpr type="int" spelling="add" id="2403971086798"/>
			<StructDecl type="struct gama_modification" spelling="gama_modification" id="2403441335308"/>
			<UnexposedExpr type="int" spelling="add" id="2403118778561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard modifications to add chunks.  These do not require the _SUPPORTED
 * macros because the chunks can be there regardless of whether this specific
 * libpng supports them." comment_scope_start="3291" comment_scope_end="3305">
		<SYMBOLS>
			<TypedefDecl type="gama_modification" spelling="gama_modification" id="2402831989913"/>
			<TypeRef type="png_modification" spelling="png_modification" id="2404290606460"/>
			<TypeRef type="png_fixed_point" spelling="png_fixed_point" id="2403006306883"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_modification" spelling="png_modification" id="2404290606460"/>
			<FieldDecl type="png_modification" spelling="this" id="2402052953502"/>
			<FieldDecl type="png_fixed_point" spelling="gamma" id="2401855652471"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2400749288983"/>
			<ParmDecl type="png_modification *" spelling="me" id="2403962131057"/>
			<ParmDecl type="int" spelling="add" id="2403199958431"/>
			<DeclRefExpr type="int" spelling="add" id="2403971086798"/>
			<StructDecl type="struct gama_modification" spelling="gama_modification" id="2403441335308"/>
			<UnexposedExpr type="int" spelling="add" id="2403118778561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This simply dumps the given gamma value into the buffer." comment_scope_start="3306" comment_scope_end="3311">
		<SYMBOLS>
			<FunctionDecl type="int (png_modifier *, png_modification *, int)" spelling="gama_modify" id="2400207324161"/>
			<TypeRef type="gama_modification" spelling="gama_modification" id="2402580357673"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401206843522"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402217800099"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2404083698061"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400194456005"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401379341162"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400096230826"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403436492381"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403598383291"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401685102502"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2401642397652"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403726989992"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403976525547"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400399059152"/>
			<MemberRefExpr type="png_fixed_point" spelling="gamma" id="2400659864231"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2402697155313"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401010684351"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400202342793"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400513921500"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401707525442"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401734215788"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403419677601"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401864786167"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402613420512"/>
			<UnexposedExpr type="png_uint_32" spelling="gamma" id="2403069490814"/>
			<UnexposedExpr type="png_fixed_point" spelling="gamma" id="2401893071993"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2400461980423"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="As with gAMA this just adds the required cHRM chunk to the buffer." comment_scope_start="3339" comment_scope_end="3351">
		<SYMBOLS>
			<FunctionDecl type="int (png_modifier *, png_modification *, int)" spelling="chrm_modify" id="2400018991632"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2400517021303"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402308505050"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402726950532"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401445351760"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401702225228"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2403427967038"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2400281990035"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402009684141"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2403012101451"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2401586112949"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2404197393459"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401342044874"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401054521096"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400754190253"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401391204761"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403748093311"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2402372953441"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403223064292"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403049003399"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2404032830844"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403475481888"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402789444914"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2403414508567"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2404005447332"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400321658159"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2404047731094"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401699019005"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402179019727"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2400876408818"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403182571196"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402273447645"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2402120536410"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401565972835"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402989808539"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2403740505495"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2402963166697"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400478594796"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2402016641949"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2402183477017"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401747451258"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400488354121"/>
			<MemberRefExpr type="png_fixed_point" spelling="wx" id="2400005739010"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400260395462"/>
			<MemberRefExpr type="png_fixed_point" spelling="wy" id="2400271969420"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401218894621"/>
			<MemberRefExpr type="png_fixed_point" spelling="rx" id="2402063909339"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400733039575"/>
			<MemberRefExpr type="png_fixed_point" spelling="ry" id="2400115134779"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400911585317"/>
			<MemberRefExpr type="png_fixed_point" spelling="gx" id="2400424766858"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2402679444999"/>
			<MemberRefExpr type="png_fixed_point" spelling="gy" id="2404096766412"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403800776322"/>
			<MemberRefExpr type="png_fixed_point" spelling="bx" id="2402684624297"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2401999092790"/>
			<MemberRefExpr type="png_fixed_point" spelling="by" id="2402380824769"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400013136998"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401558872607"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400470462116"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401933288203"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401254971684"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401685779640"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400414784240"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2401294229523"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400237925590"/>
			<UnexposedExpr type="png_uint_32" spelling="wx" id="2403060351327"/>
			<UnexposedExpr type="png_fixed_point" spelling="wx" id="2402865745406"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2403737672537"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400732315524"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2402839324432"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401934089573"/>
			<UnexposedExpr type="png_uint_32" spelling="wy" id="2402078816789"/>
			<UnexposedExpr type="png_fixed_point" spelling="wy" id="2403955197578"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2401025283667"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400988474629"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2404061121112"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403006201546"/>
			<UnexposedExpr type="png_uint_32" spelling="rx" id="2403589517031"/>
			<UnexposedExpr type="png_fixed_point" spelling="rx" id="2401405245764"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2400573726844"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401964090933"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400740497253"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402434477743"/>
			<UnexposedExpr type="png_uint_32" spelling="ry" id="2400323336801"/>
			<UnexposedExpr type="png_fixed_point" spelling="ry" id="2402579324949"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2404190735118"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400847600641"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403793413666"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402928456563"/>
			<UnexposedExpr type="png_uint_32" spelling="gx" id="2403769625354"/>
			<UnexposedExpr type="png_fixed_point" spelling="gx" id="2403329190137"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2400700735821"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401697641231"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400232667360"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403393658995"/>
			<UnexposedExpr type="png_uint_32" spelling="gy" id="2403168248994"/>
			<UnexposedExpr type="png_fixed_point" spelling="gy" id="2402760257439"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2401059035776"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401084562672"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403618979249"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401404636647"/>
			<UnexposedExpr type="png_uint_32" spelling="bx" id="2401860093548"/>
			<UnexposedExpr type="png_fixed_point" spelling="bx" id="2402126220857"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2402293262152"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2403861487585"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403301823320"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402478007180"/>
			<UnexposedExpr type="png_uint_32" spelling="by" id="2400155199712"/>
			<UnexposedExpr type="png_fixed_point" spelling="by" id="2401178690457"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2402966737852"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="adds" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gama"/>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Original end points:" comment_scope_start="3359" comment_scope_end="3361">
		<SYMBOLS>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2402552519041"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2401794365663"/>
			<MemberRefExpr type="const color_encoding *" spelling="encoding" id="2400361882878"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2402170936132"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2402243208714"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Chromaticities (in fixed point):" comment_scope_start="3362" comment_scope_end="3379">
		<SYMBOLS>
			<FunctionDecl type="void (chrm_modification *, png_modifier *, const color_encoding *)" spelling="chrm_modification_init" id="2402666208640"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2403831333033"/>
			<CallExpr type="double" spelling="chromaticity_x" id="2402853554406"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2403124813123"/>
			<CallExpr type="double" spelling="chromaticity_y" id="2404011733954"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2401786312470"/>
			<CallExpr type="double" spelling="chromaticity_x" id="2402357272615"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2400231837820"/>
			<CallExpr type="double" spelling="chromaticity_y" id="2402975789289"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2400366252701"/>
			<CallExpr type="double" spelling="chromaticity_x" id="2403331014526"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2400873084431"/>
			<CallExpr type="double" spelling="chromaticity_y" id="2401431518665"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2400501610668"/>
			<CallExpr type="double" spelling="chromaticity_x" id="2401144443991"/>
			<CallExpr type="png_fixed_point" spelling="fix" id="2401752634409"/>
			<CallExpr type="double" spelling="chromaticity_y" id="2403113384715"/>
			<CallExpr type="void" spelling="modification_init" id="2400490666397"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2403409165832"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2403619891536"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_x" id="2404183592828"/>
			<DeclRefExpr type="CIE_color" spelling="white" id="2403013308588"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2402412638716"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2403695365201"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_y" id="2401197732253"/>
			<DeclRefExpr type="CIE_color" spelling="white" id="2404093824726"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2400654329290"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2403727537754"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_x" id="2402394151827"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2400262200179"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2403650383367"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2401286382492"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_y" id="2401774225508"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2402414458047"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2404198930580"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2403482614133"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_x" id="2402925513893"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2400507836346"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2401307136771"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2401819574615"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_y" id="2401111430854"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2403534168287"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2402692791317"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2402386911966"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_x" id="2403529050732"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2401339461516"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2401432881692"/>
			<DeclRefExpr type="png_fixed_point (double)" spelling="fix" id="2403916924882"/>
			<DeclRefExpr type="double (CIE_color)" spelling="chromaticity_y" id="2401178978970"/>
			<DeclRefExpr type="const color_encoding *" spelling="encoding" id="2403329458018"/>
			<DeclRefExpr type="void (png_modification *)" spelling="modification_init" id="2401243397143"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2400803222648"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2400034367664"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2403520131603"/>
			<DeclRefExpr type="int (png_modifier *, png_modification *, int)" spelling="chrm_modify" id="2400082840481"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2404030505263"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2400300751747"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400321448755"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400829525713"/>
			<DeclRefExpr type="chrm_modification *" spelling="me" id="2400055293415"/>
			<MemberRefExpr type="png_fixed_point" spelling="wx" id="2400238364227"/>
			<MemberRefExpr type="png_fixed_point" spelling="wy" id="2403288045189"/>
			<MemberRefExpr type="png_fixed_point" spelling="rx" id="2403076289033"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2401902261850"/>
			<MemberRefExpr type="png_fixed_point" spelling="ry" id="2404229487907"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2401323848833"/>
			<MemberRefExpr type="png_fixed_point" spelling="gx" id="2404051998121"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2403874122171"/>
			<MemberRefExpr type="png_fixed_point" spelling="gy" id="2400737493715"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2400562351998"/>
			<MemberRefExpr type="png_fixed_point" spelling="bx" id="2401777900397"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2403307882988"/>
			<MemberRefExpr type="png_fixed_point" spelling="by" id="2400379084939"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2404165737022"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2401671356159"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk" id="2401514998183"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2402043652804"/>
			<MemberRefExpr type="int (*)(struct png_modifier *, struct png_modification *, int)" spelling="modify_fn" id="2401180957801"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2402255434150"/>
			<MemberRefExpr type="png_uint_32" spelling="add" id="2400890698642"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2401323857205"/>
			<MemberRefExpr type="struct png_modification *" spelling="next" id="2403068808489"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2401393251253"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2401906401791"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2402033123419"/>
			<MemberRefExpr type="png_modification" spelling="this" id="2402337805859"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2404219146610"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2403092737841"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_x" id="2400021049626"/>
			<UnexposedExpr type="CIE_color" spelling="white" id="2400028429479"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400317844396"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2403322395572"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_y" id="2401833788409"/>
			<UnexposedExpr type="CIE_color" spelling="white" id="2401576931128"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2402792465323"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2401085838635"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_x" id="2402419909085"/>
			<UnexposedExpr type="CIE_color" spelling="red" id="2403958489331"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2402206018142"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400081957134"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2401968610912"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_y" id="2402224551155"/>
			<UnexposedExpr type="CIE_color" spelling="red" id="2403793757176"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2404257879358"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2403970153221"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2401609193458"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_x" id="2403000996469"/>
			<UnexposedExpr type="CIE_color" spelling="green" id="2403410038485"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2401625364041"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400856122884"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2402062069783"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_y" id="2403198966497"/>
			<UnexposedExpr type="CIE_color" spelling="green" id="2401645155799"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2404190124305"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2402713089877"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2403924596652"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_x" id="2403750395826"/>
			<UnexposedExpr type="CIE_color" spelling="blue" id="2400816447064"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2400911000635"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2404109888185"/>
			<UnexposedExpr type="png_fixed_point (*)(double)" spelling="fix" id="2400801955176"/>
			<UnexposedExpr type="double (*)(CIE_color)" spelling="chromaticity_y" id="2404190721072"/>
			<UnexposedExpr type="CIE_color" spelling="blue" id="2403473286014"/>
			<UnexposedExpr type="const color_encoding *" spelling="encoding" id="2400004351504"/>
			<UnexposedExpr type="void (*)(png_modification *)" spelling="modification_init" id="2403856224001"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2403349573840"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2402169234671"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400308559549"/>
			<UnexposedExpr type="int (*)(png_modifier *, png_modification *, int)" spelling="chrm_modify" id="2403914005741"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2402537004886"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400465260755"/>
			<UnexposedExpr type="struct png_modification *" spelling="modifications" id="2403640706609"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400265798724"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403016264538"/>
			<UnexposedExpr type="chrm_modification *" spelling="me" id="2400843247295"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="fixed point"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="As above, ignore add and just make a new chunk" comment_scope_start="3391" comment_scope_end="3396">
		<SYMBOLS>
			<FunctionDecl type="int (png_modifier *, png_modification *, int)" spelling="srgb_modify" id="2401748548143"/>
			<TypeRef type="srgb_modification" spelling="srgb_modification" id="2400433509633"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2402093437555"/>
			<CallExpr type="void" spelling="png_save_uint_32" id="2403219990242"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2404228285232"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401853478121"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2400872597541"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403407187146"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402366800227"/>
			<DeclRefExpr type="png_modification *" spelling="me" id="2401026765067"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2403293464667"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400837829636"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2400430103736"/>
			<MemberRefExpr type="png_byte" spelling="intent" id="2400919133842"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2401073846543"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400321865318"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400278402783"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32)" spelling="png_save_uint_32" id="2404036428947"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400901057433"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402939922837"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403345800174"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402112338702"/>
			<UnexposedExpr type="png_byte" spelling="intent" id="2403187916612"/>
			<UnexposedExpr type="png_modification *" spelling="me" id="2401716042032"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="if valid, else *delete* sRGB chunks" comment_scope_start="3404" comment_scope_end="3404">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="intent" id="2402456419508"/>
			<UnexposedExpr type="int" spelling="intent" id="2403031688765"/>
			<UnexposedExpr type="png_byte" spelling="intent" id="2402306411514"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="srgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Remove the sBIT chunk" comment_scope_start="3470" comment_scope_end="3473">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401970017390"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400823086380"/>
			<MemberRefExpr type="size_t" spelling="buffer_count" id="2404082481472"/>
			<MemberRefExpr type="size_t" spelling="buffer_position" id="2402710472866"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402966703498"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401093779855"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do nothing" comment_scope_start="3475" comment_scope_end="3475"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_GAMMA_SUPPORTED" comment_scope_start="3489" comment_scope_end="3489"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_TRANSFORMS_SUPPORTED" comment_scope_start="3490" comment_scope_end="3490"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="**************************** STANDARD PNG FILES ****************************" comment_scope_start="3492" comment_scope_end="3552">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32 [2]" spelling="palette_seed" id="2400296663556"/>
			<VarDecl type="int" spelling="i" id="2404116068210"/>
			<VarDecl type="png_byte [256][4]" spelling="values" id="2401512740230"/>
			<ParmDecl type="png_store *" spelling="ps" id="2403430977503"/>
			<ParmDecl type="int" spelling="npalette" id="2402939009361"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2400211618451"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard files - write and save standard files." comment_scope_start="3492" comment_scope_end="3552">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32 [2]" spelling="palette_seed" id="2400296663556"/>
			<VarDecl type="int" spelling="i" id="2404116068210"/>
			<VarDecl type="png_byte [256][4]" spelling="values" id="2401512740230"/>
			<ParmDecl type="png_store *" spelling="ps" id="2403430977503"/>
			<ParmDecl type="int" spelling="npalette" id="2402939009361"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2400211618451"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There are two basic forms of standard images.  Those which attempt to have
 * all the possible pixel values (not possible for 16bpp images, but a range of
 * values are produced) and those which have a range of image sizes.  The former
 * are used for testing transforms, in particular gamma correction and bit
 * reduction and increase.  The latter are reserved for testing the behavior of
 * libpng with respect to 'odd' image sizes - particularly small images where
 * rows become 1 byte and interlace passes disappear.
 *
 * The first, most useful, set are the 'transform' images, the second set of
 * small images are the 'size' images.
 *
 * The transform files are constructed with rows which fit into a 1024 byte row
 * buffer.  This makes allocation easier below.  Further regardless of the file
 * format every row has 128 pixels (giving 1024 bytes for 64bpp formats).
 *
 * Files are stored with no gAMA or sBIT chunks, with a PLTE only when needed
 * and with an ID derived from the colour type, bit depth and interlace type
 * as above (FILEID).  The width (128) and height (variable) are not stored in
 * the FILEID - instead the fields are set to 0, indicating a transform file.
 *
 * The size files ar constructed with rows a maximum of 128 bytes wide, allowing
 * a maximum width of 16 pixels (for the 64bpp case.)  They also have a maximum
 * height of 16 rows.  The width and height are stored in the FILEID and, being
 * non-zero, indicate a size file.
 *
 * Because the PNG filter code is typically the largest CPU consumer within
 * libpng itself there is a tendency to attempt to optimize it.  This results in
 * special case code which needs to be validated.  To cause this to happen the
 * 'size' images are made to use each possible filter, in so far as this is
 * possible for smaller images.
 *
 * For palette image (colour type 3) multiple transform images are stored with
 * the same bit depth to allow testing of more colour combinations -
 * particularly important for testing the gamma code because libpng uses a
 * different code path for palette images.  For size images a single palette is
 * used." comment_scope_start="3492" comment_scope_end="3552">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32 [2]" spelling="palette_seed" id="2400296663556"/>
			<VarDecl type="int" spelling="i" id="2404116068210"/>
			<VarDecl type="png_byte [256][4]" spelling="values" id="2401512740230"/>
			<ParmDecl type="png_store *" spelling="ps" id="2403430977503"/>
			<ParmDecl type="int" spelling="npalette" id="2402939009361"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2400211618451"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="reduction" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="increase" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="validated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="smaller" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="path" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="gama"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make a 'standard' palette.  Because there are only 256 entries in a palette
 * (maximum) this actually makes a random palette in the hope that enough tests
 * will catch enough errors.  (Note that the same palette isn't produced every
 * time for the same test - it depends on what previous tests have been run -
 * but a given set of arguments to pngvalid will always produce the same palette
 * at the same test!  This is why pseudo-random number generators are useful for
 * testing.)
 *
 * The store must be open for write when this is called, otherwise an internal
 * error will occur.  This routine contains its own magic number seed, so the
 * palettes generated don't change if there are intervening errors (changing the
 * calls to the store_mark seed.)" comment_scope_start="3492" comment_scope_end="3552">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32 [2]" spelling="palette_seed" id="2400296663556"/>
			<VarDecl type="int" spelling="i" id="2404116068210"/>
			<VarDecl type="png_byte [256][4]" spelling="values" id="2401512740230"/>
			<ParmDecl type="png_store *" spelling="ps" id="2403430977503"/>
			<ParmDecl type="int" spelling="npalette" id="2402939009361"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2400211618451"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="time"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palettes"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Always put in black and white plus the six primary and secondary colors." comment_scope_start="3553" comment_scope_end="3560">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="int" spelling="i" id="2404020711688"/>
			<DeclRefExpr type="int" spelling="i" id="2402224311231"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2400395691095"/>
			<DeclRefExpr type="int" spelling="i" id="2400155503784"/>
			<DeclRefExpr type="int" spelling="i" id="2402311758229"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403288243734"/>
			<DeclRefExpr type="int" spelling="i" id="2401626741593"/>
			<DeclRefExpr type="int" spelling="i" id="2401583581388"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2401033466140"/>
			<DeclRefExpr type="int" spelling="i" id="2400411076328"/>
			<DeclRefExpr type="int" spelling="i" id="2403436710886"/>
			<UnexposedExpr type="int" spelling="i" id="2400012332509"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400503479889"/>
			<UnexposedExpr type="int" spelling="i" id="2403772542780"/>
			<UnexposedExpr type="int" spelling="i" id="2402628762421"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2403358340105"/>
			<UnexposedExpr type="int" spelling="i" id="2402861729917"/>
			<UnexposedExpr type="int" spelling="i" id="2402679176009"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2401221303954"/>
			<UnexposedExpr type="int" spelling="i" id="2400436453112"/>
			<UnexposedExpr type="int" spelling="i" id="2401014754265"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="put" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="plus" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then add 62 grays (one quarter of the remaining 256 slots)." comment_scope_start="3562" comment_scope_end="3590">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="int" spelling="j" id="2402968752026"/>
			<VarDecl type="png_byte [4]" spelling="random_bytes" id="2402509457176"/>
			<VarDecl type="png_byte [256]" spelling="need" id="2403995898356"/>
			<VarDecl type="png_byte" spelling="b" id="2401382704199"/>
			<CallExpr type="void *" spelling="memset" id="2403484287336"/>
			<CallExpr type="void" spelling="make_four_random_bytes" id="2402045671489"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2403712868204"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2403006971143"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2400217613502"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2400994163565"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2401027690685"/>
			<DeclRefExpr type="int" spelling="i" id="2401184905484"/>
			<DeclRefExpr type="int" spelling="j" id="2400591314370"/>
			<DeclRefExpr type="void (png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2401533248019"/>
			<DeclRefExpr type="png_uint_32 [2]" spelling="palette_seed" id="2400610356574"/>
			<DeclRefExpr type="png_byte [4]" spelling="random_bytes" id="2400073513284"/>
			<DeclRefExpr type="int" spelling="j" id="2403333115811"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2402603358395"/>
			<DeclRefExpr type="png_byte [4]" spelling="random_bytes" id="2402921288223"/>
			<DeclRefExpr type="int" spelling="j" id="2400109666510"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2402470894283"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2403661588878"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403825600216"/>
			<DeclRefExpr type="int" spelling="i" id="2403971505472"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2401731090979"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2402318605467"/>
			<DeclRefExpr type="int" spelling="i" id="2401323578251"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2400579638689"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2400140348728"/>
			<DeclRefExpr type="int" spelling="i" id="2401516501249"/>
			<DeclRefExpr type="png_byte" spelling="b" id="2401585071253"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2402448974850"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2401161206591"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2400342845076"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2402377776574"/>
			<UnexposedExpr type="int" spelling="i" id="2402621088018"/>
			<UnexposedExpr type="int" spelling="j" id="2400756565149"/>
			<UnexposedExpr type="void (*)(png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2400444556923"/>
			<UnexposedExpr type="png_uint_32 *" spelling="palette_seed" id="2400602065478"/>
			<UnexposedExpr type="png_byte *" spelling="random_bytes" id="2400614972173"/>
			<UnexposedExpr type="png_byte *" spelling="random_bytes" id="2400963072051"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2402058854992"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2401235670133"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2401722879223"/>
			<UnexposedExpr type="int" spelling="i" id="2403111294960"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2401462589322"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2401296643530"/>
			<UnexposedExpr type="int" spelling="i" id="2400631154609"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2400471822010"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402826563778"/>
			<UnexposedExpr type="png_byte" spelling="b" id="2400596970215"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="got black" comment_scope_start="3568" comment_scope_end="3568">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2403712868204"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2402448974850"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="need these" comment_scope_start="3569" comment_scope_end="3569">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2403484287336"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2403006971143"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2400217613502"/>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2400994163565"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2401161206591"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2400342845076"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="but not white" comment_scope_start="3570" comment_scope_end="3570">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [256]" spelling="need" id="2401027690685"/>
			<UnexposedExpr type="png_byte *" spelling="need" id="2402377776574"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Finally add 192 colors at random - don't worry about matches to things we
    * already have, chance is less than 1/65536.  Don't worry about grays,
    * chance is the same, so we get a duplicate or extra gray less than 1 time
    * in 170." comment_scope_start="3592" comment_scope_end="3599">
		<SYMBOLS>
			<CallExpr type="void" spelling="make_four_random_bytes" id="2403377237815"/>
			<DeclRefExpr type="int" spelling="i" id="2401694462305"/>
			<DeclRefExpr type="int" spelling="i" id="2402715043889"/>
			<DeclRefExpr type="void (png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2403433405528"/>
			<DeclRefExpr type="png_uint_32 [2]" spelling="palette_seed" id="2401704372899"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403194102618"/>
			<DeclRefExpr type="int" spelling="i" id="2401089794504"/>
			<UnexposedExpr type="int" spelling="i" id="2404055295365"/>
			<UnexposedExpr type="void (*)(png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2400794682980"/>
			<UnexposedExpr type="png_uint_32 *" spelling="palette_seed" id="2403178764145"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400329007081"/>
			<UnexposedExpr type="int" spelling="i" id="2404160646756"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Fill in the alpha values in the first byte.  Just use all possible values
    * (0..255) in an apparently random order:" comment_scope_start="3600" comment_scope_end="3637">
		<SYMBOLS>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="store_palette_entry *" spelling="palette" id="2401422795492"/>
			<VarDecl type="png_byte [4]" spelling="selector" id="2400649749981"/>
			<CallExpr type="void" spelling="make_four_random_bytes" id="2401285180807"/>
			<CallExpr type="store_palette_entry *" spelling="store_write_palette" id="2401353233343"/>
			<DeclRefExpr type="void (png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2400644816955"/>
			<DeclRefExpr type="png_uint_32 [2]" spelling="palette_seed" id="2400718339052"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2402560129896"/>
			<DeclRefExpr type="int" spelling="do_tRNS" id="2403654758294"/>
			<DeclRefExpr type="int" spelling="i" id="2402934618315"/>
			<DeclRefExpr type="int" spelling="i" id="2402486538151"/>
			<DeclRefExpr type="int" spelling="i" id="2402260153328"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2402413941827"/>
			<DeclRefExpr type="int" spelling="i" id="2400014411635"/>
			<DeclRefExpr type="int" spelling="i" id="2400380265947"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2403176450578"/>
			<DeclRefExpr type="int" spelling="i" id="2401751944624"/>
			<DeclRefExpr type="int" spelling="i" id="2400746538322"/>
			<DeclRefExpr type="int" spelling="i" id="2401911354597"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2401223784800"/>
			<DeclRefExpr type="int" spelling="i" id="2400407551939"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403479084215"/>
			<DeclRefExpr type="store_palette_entry *(png_store *, int)" spelling="store_write_palette" id="2402183091546"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401185315235"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402582554327"/>
			<DeclRefExpr type="int" spelling="i" id="2402451365924"/>
			<DeclRefExpr type="int" spelling="i" id="2403847393757"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401382298704"/>
			<DeclRefExpr type="int" spelling="i" id="2403541509651"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403971073541"/>
			<DeclRefExpr type="int" spelling="i" id="2404165510714"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2400028366245"/>
			<DeclRefExpr type="int" spelling="i" id="2401998545003"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2402526746704"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2402280234544"/>
			<DeclRefExpr type="int" spelling="i" id="2402748271863"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403235289699"/>
			<DeclRefExpr type="int" spelling="i" id="2402296758019"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2402650363037"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403438988467"/>
			<DeclRefExpr type="int" spelling="i" id="2401559671357"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2401221184424"/>
			<DeclRefExpr type="int" spelling="i" id="2400307874151"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2403404266327"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403247136915"/>
			<DeclRefExpr type="int" spelling="i" id="2404000216215"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403157566677"/>
			<DeclRefExpr type="int" spelling="i" id="2402343898290"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2401799133557"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403927682590"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2400714940324"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2402702515769"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400539606174"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403022677025"/>
			<UnexposedExpr type="void (*)(png_uint_32 *, png_bytep)" spelling="make_four_random_bytes" id="2400846262043"/>
			<UnexposedExpr type="png_uint_32 *" spelling="palette_seed" id="2400843548165"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2402650957039"/>
			<UnexposedExpr type="int" spelling="do_tRNS" id="2403874656784"/>
			<UnexposedExpr type="int" spelling="i" id="2402682449206"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402987294766"/>
			<UnexposedExpr type="int" spelling="i" id="2401546873945"/>
			<UnexposedExpr type="int" spelling="i" id="2400047086492"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2400795921128"/>
			<UnexposedExpr type="int" spelling="i" id="2403090528820"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402913098058"/>
			<UnexposedExpr type="int" spelling="i" id="2402925703184"/>
			<UnexposedExpr type="store_palette_entry *(*)(png_store *, int)" spelling="store_write_palette" id="2400178164091"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400740375177"/>
			<UnexposedExpr type="int" spelling="npalette" id="2403326077868"/>
			<UnexposedExpr type="int" spelling="i" id="2400652320072"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400759245296"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402670415533"/>
			<UnexposedExpr type="int" spelling="i" id="2403823206467"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400402547470"/>
			<UnexposedExpr type="int" spelling="i" id="2400938488387"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2403465273971"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2403666675361"/>
			<UnexposedExpr type="int" spelling="i" id="2400752904344"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402699723342"/>
			<UnexposedExpr type="int" spelling="i" id="2402626374163"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2403170354668"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402481090840"/>
			<UnexposedExpr type="int" spelling="i" id="2400007653008"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2403519627527"/>
			<UnexposedExpr type="int" spelling="i" id="2404204566273"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2400576855140"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402595526669"/>
			<UnexposedExpr type="int" spelling="i" id="2403592777004"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400214215241"/>
			<UnexposedExpr type="int" spelling="i" id="2402129543814"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2404252569224"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2400260192116"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no transparency/tRNS chunk" comment_scope_start="3615" comment_scope_end="3615">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2401223784800"/>
			<DeclRefExpr type="int" spelling="i" id="2400407551939"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402913098058"/>
			<UnexposedExpr type="int" spelling="i" id="2402925703184"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'values' contains 256 ARGB values, but we only need 'npalette'.
       * 'npalette' will always be a power of 2: 2, 4, 16 or 256.  In the low
       * bit depth cases select colors at random, else it is difficult to have
       * a set of low bit depth palette test with any chance of a reasonable
       * range of colors.  Do this by randomly permuting values into the low
       * 'npalette' entries using an XOR mask generated here.  This also
       * permutes the npalette == 256 case in a potentially useful way (there is
       * no relationship between palette index and the color value therein!)" comment_scope_start="3617" comment_scope_end="3637">
		<SYMBOLS>
			<CallExpr type="store_palette_entry *" spelling="store_write_palette" id="2401353233343"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403479084215"/>
			<DeclRefExpr type="store_palette_entry *(png_store *, int)" spelling="store_write_palette" id="2402183091546"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401185315235"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402582554327"/>
			<DeclRefExpr type="int" spelling="i" id="2402451365924"/>
			<DeclRefExpr type="int" spelling="i" id="2403847393757"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401382298704"/>
			<DeclRefExpr type="int" spelling="i" id="2403541509651"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403971073541"/>
			<DeclRefExpr type="int" spelling="i" id="2404165510714"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2400028366245"/>
			<DeclRefExpr type="int" spelling="i" id="2401998545003"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2402526746704"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2402280234544"/>
			<DeclRefExpr type="int" spelling="i" id="2402748271863"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403235289699"/>
			<DeclRefExpr type="int" spelling="i" id="2402296758019"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2402650363037"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403438988467"/>
			<DeclRefExpr type="int" spelling="i" id="2401559671357"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2401221184424"/>
			<DeclRefExpr type="int" spelling="i" id="2400307874151"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2403404266327"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403247136915"/>
			<DeclRefExpr type="int" spelling="i" id="2404000216215"/>
			<DeclRefExpr type="png_byte [256][4]" spelling="values" id="2403157566677"/>
			<DeclRefExpr type="int" spelling="i" id="2402343898290"/>
			<DeclRefExpr type="png_byte [4]" spelling="selector" id="2401799133557"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403927682590"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2400714940324"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2402702515769"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400539606174"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403022677025"/>
			<UnexposedExpr type="store_palette_entry *(*)(png_store *, int)" spelling="store_write_palette" id="2400178164091"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400740375177"/>
			<UnexposedExpr type="int" spelling="npalette" id="2403326077868"/>
			<UnexposedExpr type="int" spelling="i" id="2400652320072"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400759245296"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402670415533"/>
			<UnexposedExpr type="int" spelling="i" id="2403823206467"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400402547470"/>
			<UnexposedExpr type="int" spelling="i" id="2400938488387"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2403465273971"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2403666675361"/>
			<UnexposedExpr type="int" spelling="i" id="2400752904344"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2402699723342"/>
			<UnexposedExpr type="int" spelling="i" id="2402626374163"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2403170354668"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402481090840"/>
			<UnexposedExpr type="int" spelling="i" id="2400007653008"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2403519627527"/>
			<UnexposedExpr type="int" spelling="i" id="2404204566273"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2400576855140"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2402595526669"/>
			<UnexposedExpr type="int" spelling="i" id="2403592777004"/>
			<UnexposedExpr type="png_byte (*)[4]" spelling="values" id="2400214215241"/>
			<UnexposedExpr type="int" spelling="i" id="2402129543814"/>
			<UnexposedExpr type="png_byte *" spelling="selector" id="2404252569224"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2400260192116"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="power" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="xor" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="argb"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initialize a standard palette on a write stream.  The 'do_tRNS' argument
 * indicates whether or not to also set the tRNS chunk." comment_scope_start="3640" comment_scope_end="3653">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_color" spelling="png_color" id="2402436740280"/>
			<VarDecl type="store_palette_entry *" spelling="ppal" id="2401970102064"/>
			<VarDecl type="int" spelling="i" id="2402910608443"/>
			<VarDecl type="png_color [256]" spelling="palette" id="2403676536722"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402234456475"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401065743613"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401237716506"/>
			<ParmDecl type="int" spelling="npalette" id="2400822200402"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2402338761072"/>
			<CallExpr type="store_palette_entry *" spelling="make_standard_palette" id="2403184438190"/>
			<DeclRefExpr type="store_palette_entry *(png_store *, int, int)" spelling="make_standard_palette" id="2401243254837"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403905182785"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401520730674"/>
			<DeclRefExpr type="int" spelling="do_tRNS" id="2404043271374"/>
			<UnexposedExpr type="store_palette_entry *(*)(png_store *, int, int)" spelling="make_standard_palette" id="2402981871865"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401820267310"/>
			<UnexposedExpr type="int" spelling="npalette" id="2401260779399"/>
			<UnexposedExpr type="int" spelling="do_tRNS" id="2400645440189"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: the png_structp here can probably be 'const' in the future" comment_scope_start="3640" comment_scope_end="3653">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<TypeRef type="png_color" spelling="png_color" id="2402436740280"/>
			<VarDecl type="store_palette_entry *" spelling="ppal" id="2401970102064"/>
			<VarDecl type="int" spelling="i" id="2402910608443"/>
			<VarDecl type="png_color [256]" spelling="palette" id="2403676536722"/>
			<ParmDecl type="png_store *" spelling="ps" id="2402234456475"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401065743613"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401237716506"/>
			<ParmDecl type="int" spelling="npalette" id="2400822200402"/>
			<ParmDecl type="int" spelling="do_tRNS" id="2402338761072"/>
			<CallExpr type="store_palette_entry *" spelling="make_standard_palette" id="2403184438190"/>
			<DeclRefExpr type="store_palette_entry *(png_store *, int, int)" spelling="make_standard_palette" id="2401243254837"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403905182785"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401520730674"/>
			<DeclRefExpr type="int" spelling="do_tRNS" id="2404043271374"/>
			<UnexposedExpr type="store_palette_entry *(*)(png_store *, int, int)" spelling="make_standard_palette" id="2402981871865"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401820267310"/>
			<UnexposedExpr type="int" spelling="npalette" id="2401260779399"/>
			<UnexposedExpr type="int" spelling="do_tRNS" id="2400645440189"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="const" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set all entries to detect overread errors." comment_scope_start="3654" comment_scope_end="3660">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="i" id="2401037041249"/>
			<DeclRefExpr type="int" spelling="i" id="2403692128632"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402884742474"/>
			<DeclRefExpr type="int" spelling="i" id="2402678691283"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2401408581510"/>
			<DeclRefExpr type="int" spelling="i" id="2401465120462"/>
			<DeclRefExpr type="store_palette_entry *" spelling="ppal" id="2400000923879"/>
			<DeclRefExpr type="int" spelling="i" id="2401953821546"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2400882803595"/>
			<DeclRefExpr type="int" spelling="i" id="2403608758982"/>
			<DeclRefExpr type="store_palette_entry *" spelling="ppal" id="2400201153900"/>
			<DeclRefExpr type="int" spelling="i" id="2400589058241"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2402045304733"/>
			<DeclRefExpr type="int" spelling="i" id="2403990672347"/>
			<DeclRefExpr type="store_palette_entry *" spelling="ppal" id="2402791505066"/>
			<DeclRefExpr type="int" spelling="i" id="2403750575095"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2402719246034"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401975513559"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2403434759228"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2402112675967"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403898748482"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2401939797058"/>
			<UnexposedExpr type="int" spelling="i" id="2403765512028"/>
			<UnexposedExpr type="int" spelling="npalette" id="2403911257412"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2401398835445"/>
			<UnexposedExpr type="int" spelling="i" id="2400695861776"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2403392143526"/>
			<UnexposedExpr type="store_palette_entry *" spelling="ppal" id="2403813918337"/>
			<UnexposedExpr type="int" spelling="i" id="2401069710322"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2403362690866"/>
			<UnexposedExpr type="int" spelling="i" id="2400850777515"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2403432729551"/>
			<UnexposedExpr type="store_palette_entry *" spelling="ppal" id="2402395561745"/>
			<UnexposedExpr type="int" spelling="i" id="2402487359870"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2400542817514"/>
			<UnexposedExpr type="int" spelling="i" id="2400265907648"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403132528219"/>
			<UnexposedExpr type="store_palette_entry *" spelling="ppal" id="2401318036803"/>
			<UnexposedExpr type="int" spelling="i" id="2401591625344"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Just in case fill in the rest with detectable values:" comment_scope_start="3662" comment_scope_end="3667">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_PLTE" id="2402099297948"/>
			<DeclRefExpr type="int" spelling="i" id="2400518740002"/>
			<DeclRefExpr type="int" spelling="i" id="2400895339993"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2403984758250"/>
			<DeclRefExpr type="int" spelling="i" id="2401831784681"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2404132414938"/>
			<DeclRefExpr type="int" spelling="i" id="2403862951786"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2402742734583"/>
			<DeclRefExpr type="int" spelling="i" id="2400812937559"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, png_const_colorp, int)" spelling="png_set_PLTE" id="2403586043953"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402217991506"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402864460223"/>
			<DeclRefExpr type="png_color [256]" spelling="palette" id="2400378814286"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402596737012"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2403180211745"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400744416952"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2401862301142"/>
			<UnexposedExpr type="int" spelling="i" id="2402059713216"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2403528755785"/>
			<UnexposedExpr type="int" spelling="i" id="2401093550530"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2403998686223"/>
			<UnexposedExpr type="int" spelling="i" id="2402682693519"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2400002152309"/>
			<UnexposedExpr type="int" spelling="i" id="2401827181920"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, png_const_colorp, int)" spelling="png_set_PLTE" id="2403998025667"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403305416157"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401934607043"/>
			<UnexposedExpr type="png_const_colorp" spelling="palette" id="2401992851796"/>
			<UnexposedExpr type="png_color *" spelling="palette" id="2402557992464"/>
			<UnexposedExpr type="int" spelling="npalette" id="2402090507695"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set all the entries, but skip trailing opaque entries" comment_scope_start="3674" comment_scope_end="3678">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="i" id="2403200946705"/>
			<DeclRefExpr type="int" spelling="j" id="2400748120698"/>
			<DeclRefExpr type="int" spelling="i" id="2401153150054"/>
			<DeclRefExpr type="int" spelling="npalette" id="2403462480950"/>
			<DeclRefExpr type="int" spelling="i" id="2400053993411"/>
			<DeclRefExpr type="png_byte [256]" spelling="tRNS" id="2400391934406"/>
			<DeclRefExpr type="int" spelling="i" id="2400392974152"/>
			<DeclRefExpr type="store_palette_entry *" spelling="ppal" id="2402674779045"/>
			<DeclRefExpr type="int" spelling="i" id="2403459756170"/>
			<DeclRefExpr type="int" spelling="j" id="2404104937758"/>
			<DeclRefExpr type="int" spelling="i" id="2401609120581"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401797852359"/>
			<UnexposedExpr type="int" spelling="i" id="2401234254186"/>
			<UnexposedExpr type="int" spelling="npalette" id="2401736177328"/>
			<UnexposedExpr type="png_byte *" spelling="tRNS" id="2400921608788"/>
			<UnexposedExpr type="int" spelling="i" id="2402076390387"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2400471931327"/>
			<UnexposedExpr type="store_palette_entry *" spelling="ppal" id="2402480512890"/>
			<UnexposedExpr type="int" spelling="i" id="2404249394427"/>
			<UnexposedExpr type="int" spelling="i" id="2401752940294"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Fill in the remainder with a detectable value:" comment_scope_start="3679" comment_scope_end="3684">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="i" id="2402981037567"/>
			<DeclRefExpr type="int" spelling="i" id="2400675304586"/>
			<DeclRefExpr type="png_byte [256]" spelling="tRNS" id="2401527267537"/>
			<DeclRefExpr type="int" spelling="i" id="2402988125177"/>
			<DeclRefExpr type="int" spelling="j" id="2402196749965"/>
			<UnexposedExpr type="int" spelling="i" id="2403226723832"/>
			<UnexposedExpr type="png_byte *" spelling="tRNS" id="2402790769758"/>
			<UnexposedExpr type="int" spelling="i" id="2401732087349"/>
			<UnexposedExpr type="int" spelling="j" id="2400238447558"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remainder" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="color" comment_scope_start="3685" comment_scope_end="3685">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_tRNS" id="2403522049227"/>
			<DeclRefExpr type="void (png_structrp, png_inforp, png_const_bytep, int, png_const_color_16p)" spelling="png_set_tRNS" id="2402708164789"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403274136999"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402322830084"/>
			<DeclRefExpr type="png_byte [256]" spelling="tRNS" id="2400318816084"/>
			<DeclRefExpr type="int" spelling="j" id="2404150067656"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, png_const_bytep, int, png_const_color_16p)" spelling="png_set_tRNS" id="2401099179285"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402703150371"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403824091196"/>
			<UnexposedExpr type="png_const_bytep" spelling="tRNS" id="2400520947685"/>
			<UnexposedExpr type="png_byte *" spelling="tRNS" id="2400963334138"/>
			<UnexposedExpr type="int" spelling="j" id="2400979938142"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="To make this useful the tRNS color needs to match at least one pixel.
    * Random values are fine for gray, including the 16-bit case where we know
    * that the test image contains all the gray values.  For RGB we need more
    * method as only 65536 different RGB values are generated." comment_scope_start="3695" comment_scope_end="3702">
		<SYMBOLS>
			<TypeRef type="png_color_16" spelling="png_color_16" id="2401023428895"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<VarDecl type="png_color_16" spelling="tRNS" id="2402219814564"/>
			<VarDecl type="png_uint_16" spelling="mask" id="2402936274330"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2401694071639"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403228557369"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="makes unset fields random" comment_scope_start="3703" comment_scope_end="3703">
		<SYMBOLS>
			<CallExpr type="void" spelling="randomize" id="2402749765227"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="randomize" id="2400692714368"/>
			<DeclRefExpr type="png_color_16" spelling="tRNS" id="2401422864424"/>
			<DeclRefExpr type="png_color_16" spelling="tRNS" id="2402478061698"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="randomize" id="2401121131085"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB" comment_scope_start="3705" comment_scope_end="3705">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403294292891"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403011605953"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402751153955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="bit_depth == 16" comment_scope_start="3717" comment_scope_end="3717"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The number of passes is related to the interlace type. There was no libpng
 * API to determine this prior to 1.5, so we need an inquiry function:" comment_scope_start="3735" comment_scope_end="3774">
		<SYMBOLS>
			<FunctionDecl type="int (png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403534020492"/>
			<FunctionDecl type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2402023736716"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400434458663"/>
			<ParmDecl type="int" spelling="interlace_type" id="2402766533385"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400330644028"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2402465455143"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400300831309"/>
			<CallExpr type="void" spelling="png_error" id="2403029716942"/>
			<CallExpr type="void" spelling="png_error" id="2401285211281"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2401522124415"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400412474468"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401781719699"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401099586026"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403221759133"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402356159805"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402537480625"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2404154313012"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400143607890"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402323481143"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400015102722"/>
			<StringLiteral type="char [23]" spelling="&quot;invalid interlace type&quot;" id="2403134470538"/>
			<StringLiteral type="char [19]" spelling="&quot;invalid color type&quot;" id="2401077706382"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2402043420145"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402248831155"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401774175411"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400272417083"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403563617311"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400086026813"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402713753219"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2400487898605"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400211179445"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402800057285"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402653016149"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2402701944348"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403008109393"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401896008119"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403518845986"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403611297131"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403800899803"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determine" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="16 pixels, max 8 bytes each - 128 bytes" comment_scope_start="3775" comment_scope_end="3775"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The larger of the two" comment_scope_start="3776" comment_scope_end="3776"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Maximum range of size images" comment_scope_start="3777" comment_scope_end="3777"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="transform_width(pp, colour_type, bit_depth) current returns the same number
 * every time, so just use a macro:" comment_scope_start="3786" comment_scope_end="3798">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401598921835"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2400270242387"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400892582988"/>
			<CallExpr type="unsigned int" spelling="bit_size" id="2401010416711"/>
			<DeclRefExpr type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2402654967793"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402934911975"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2404014120597"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403173143998"/>
			<UnexposedExpr type="unsigned int (*)(png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2403955918249"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402173920525"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402999388353"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401794820055"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="macro" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total of 128 pixels" comment_scope_start="3799" comment_scope_end="3799"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total of 256 pixels/bytes" comment_scope_start="3802" comment_scope_end="3802"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total of 65536 pixels" comment_scope_start="3805" comment_scope_end="3805"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="65536 pixels" comment_scope_start="3809" comment_scope_end="3809"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="4 x 65536 pixels." comment_scope_start="3813" comment_scope_end="3813"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error, will be caught later" comment_scope_start="3817" comment_scope_end="3817"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following can only be defined here, now we have the definitions
 * of the transform image sizes." comment_scope_start="3822" comment_scope_end="3852">
		<SYMBOLS>
			<FunctionDecl type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_width" id="2400797779684"/>
			<FunctionDecl type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_height" id="2403378250532"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="width" id="2400551420980"/>
			<VarDecl type="png_uint_32" spelling="height" id="2401907899266"/>
			<VarDecl type="png_uint_32" spelling="width" id="2404286370569"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403767270275"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401986663626"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401493473694"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401381063449"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400344750746"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401442194977"/>
			<CallExpr type="png_uint_32" spelling="transform_height" id="2401763007577"/>
			<CallExpr type="png_uint_32" spelling="standard_width" id="2401669403538"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2401486561675"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400772572006"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2402080342584"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2402776363942"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2403051413137"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403384999087"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2401280696953"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2401427988663"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_byte, png_byte)" spelling="transform_height" id="2400654417729"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400018574267"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402643831699"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402572482145"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2400735875983"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_width" id="2402632524482"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404265758690"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403186454294"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403372491539"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2404222440963"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2402318893396"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2402936901486"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_byte, png_byte)" spelling="transform_height" id="2402680131605"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404161278631"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2401380642771"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_uint_32)" spelling="standard_width" id="2404153294473"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402532805844"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402534516925"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This won't overflow:" comment_scope_start="3853" comment_scope_end="3856">
		<SYMBOLS>
			<FunctionDecl type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_rowsize" id="2404185342419"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="bit_size" id="2402813337981"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2400604921529"/>
			<DeclRefExpr type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2403716277590"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402773702411"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402740723205"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402801014023"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2400668777222"/>
			<UnexposedExpr type="unsigned int (*)(png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2400540407486"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402070174545"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2401783704908"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="3857" comment_scope_end="3857"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="256 bytes total, 128 bytes in each row set as follows:" comment_scope_start="3881" comment_scope_end="3885">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402420714885"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400258338941"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402820746595"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402444200612"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402563285329"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403382541252"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401311622262"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403083133283"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400833453037"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403208441663"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate all 65536 pixel values in order, which includes the 8 bit
          * GA case as well as the 16 bit G case." comment_scope_start="3886" comment_scope_end="3895">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403308938719"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403539992256"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401413432061"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402531489118"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401182950327"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403385392793"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403903684204"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404126844144"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400649743605"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401810616243"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401899667354"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401048034433"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401537272371"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401945704936"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401437983486"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2400628620142"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="includes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="ga"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="65535 pixels, but rotate the values." comment_scope_start="3900" comment_scope_end="3909">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400031668992"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401437354554"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403938461221"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402611082903"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401011977332"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401921651999"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402808222706"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401307592121"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400450653503"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403691767957"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403683353824"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402228871631"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402998961567"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402701165225"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2404274014587"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402518672799"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2400167151665"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2402483664356"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400960373990"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403260064232"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403031793434"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402461357853"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402329413694"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403841600104"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Three bytes per pixel, r, g, b, make b by r^g" comment_scope_start="3903" comment_scope_end="3909">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401437354554"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403938461221"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402611082903"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401011977332"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401921651999"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402808222706"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401307592121"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400450653503"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403691767957"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403683353824"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402228871631"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402998961567"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2404274014587"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402518672799"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2400167151665"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2402483664356"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400960373990"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403260064232"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403031793434"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402461357853"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402329413694"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403841600104"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="65535 pixels, r, g, b, a; just replicate" comment_scope_start="3914" comment_scope_end="3923">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403119208427"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403139594566"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402611581076"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402340072768"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403080162428"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400982031705"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402821168909"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401333284495"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2404285893759"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400977241873"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400131331113"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400758195751"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401413621464"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400773926726"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400405866514"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402691496316"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2400360876942"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400694552022"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402340611357"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403231977215"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400439024700"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403628104054"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401334570112"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401091391600"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403246786529"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2402798163996"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401289842252"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2404109557360"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="y is maximum 2047, giving 4x65536 pixels, make 'r' increase by 1 at
          * each pixel, g increase by 257 (0x101) and 'b' by 0x1111:" comment_scope_start="3928" comment_scope_end="3943">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="t" id="2402886994333"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401607116313"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403526845815"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403139715682"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402602571188"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400279404592"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400038107544"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401485801700"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2403068442449"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2403706839127"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2404191341431"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400276935608"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2401267657496"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2402409642861"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402821577060"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2404138618825"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2402435188938"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401200323335"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402421664508"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400839628114"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2402156415486"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402023679725"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2402528839343"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2403548431899"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2404009320093"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401758765822"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401191748434"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2403305786418"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403580203244"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400103433371"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2402544395620"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2400043984852"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400079392510"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2404020866769"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401494052524"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401495021364"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2402953160793"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401048235057"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2403291645433"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2402129220162"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2402403233317"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400216145533"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2400427941450"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="increase" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="increase" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="As above in the 32 bit case." comment_scope_start="3948" comment_scope_end="3962">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="t" id="2403317705576"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2404050462255"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400565766157"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2404159197267"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400195129148"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400228973904"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400028923196"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402287955633"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400205497508"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401303123366"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402300948479"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400964266383"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400647978532"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400370572993"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2401057958041"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2403037672444"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2402700321503"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402893080166"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2403490115472"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2402682587021"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2401440492759"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2404181519565"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2401347624715"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400427295974"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400953590071"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403880652744"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2400267226177"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2400214182575"/>
			<DeclRefExpr type="png_uint_32" spelling="i" id="2402676379425"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2403823798590"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401650781645"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401631887936"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2403936056177"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2404067971468"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402667755539"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2402876233360"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2400623811146"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2400433393764"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2403030713193"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2401083812405"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402296326433"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2400555481767"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403076712187"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2403541733343"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2404247577014"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2402037082933"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2401764056714"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2400879281350"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2403891401707"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2402667621864"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2403769404857"/>
			<UnexposedExpr type="png_byte [1024]" spelling="buffer" id="2400951392498"/>
			<UnexposedExpr type="png_uint_32" spelling="i" id="2403491162918"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2403421662978"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is just to do the right cast - could be changed to a function to check
 * 'bd' but there isn't much point." comment_scope_start="3972" comment_scope_end="3976"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is just a helper for compiling on minimal systems with no write
 * interlacing support.  If there is no write interlacing we can't generate test
 * cases with interlace:" comment_scope_start="3977" comment_scope_end="3990"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Prior to 1.7.0 libpng does not support the write of an interlaced image
    * unless PNG_WRITE_INTERLACING_SUPPORTED, even with do_interlace so the
    * code here does the pixel interlace itself, so:" comment_scope_start="3991" comment_scope_end="4002"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is an internal error - --interlace tests should be skipped, not
       * attempted." comment_scope_start="3997" comment_scope_end="4002"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="libpng 1.7+" comment_scope_start="4006" comment_scope_end="4006"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="WRITE_INTERLACING tests" comment_scope_start="4012" comment_scope_end="4012"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do the same thing for read interlacing; this controls whether read tests do
 * their own de-interlace or use libpng." comment_scope_start="4020" comment_scope_end="4024"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no libpng read interlace support" comment_scope_start="4025" comment_scope_end="4025"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following two routines use the PNG interlace support macros from
 * png.h to interlace or deinterlace rows." comment_scope_start="4028" comment_scope_end="4036">
		<SYMBOLS>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="xin" id="2402901972588"/>
			<VarDecl type="png_uint_32" spelling="xout" id="2403347570907"/>
			<VarDecl type="png_uint_32" spelling="xstep" id="2403897052185"/>
			<ParmDecl type="png_bytep" spelling="buffer" id="2403642479744"/>
			<ParmDecl type="png_const_bytep" spelling="imageRow" id="2402496801106"/>
			<ParmDecl type="unsigned int" spelling="pixel_size" id="2402419869077"/>
			<ParmDecl type="png_uint_32" spelling="w" id="2402440517017"/>
			<ParmDecl type="int" spelling="pass" id="2402609450260"/>
			<ParmDecl type="int" spelling="littleendian" id="2403759492736"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Note that this can, trivially, be optimized to a memcpy on pass 7, the
    * code is presented this way to make it easier to understand.  In practice
    * consult the code in the libpng source to see other ways of doing this.
    *
    * It is OK for buffer and imageRow to be identical, because 'xin' moves
    * faster than 'xout' and we copy up." comment_scope_start="4037" comment_scope_end="4052">
		<SYMBOLS>
			<FunctionDecl type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2400060418217"/>
			<CallExpr type="void" spelling="pixel_copy" id="2400505548205"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2402932186599"/>
			<DeclRefExpr type="int" spelling="pass" id="2402226884192"/>
			<DeclRefExpr type="int" spelling="pass" id="2402310441575"/>
			<DeclRefExpr type="png_uint_32" spelling="xstep" id="2402874266046"/>
			<DeclRefExpr type="int" spelling="pass" id="2400691229319"/>
			<DeclRefExpr type="int" spelling="pass" id="2402687284837"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2400676751480"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2401453851372"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2400428391022"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2403225893317"/>
			<DeclRefExpr type="png_uint_32" spelling="xstep" id="2400982373808"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32, png_const_bytep, png_uint_32, unsigned int, int)" spelling="pixel_copy" id="2401228579110"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2402576624828"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2403575538277"/>
			<DeclRefExpr type="png_const_bytep" spelling="imageRow" id="2402365493271"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2402185675049"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2401549715368"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2400926779258"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2400287188947"/>
			<UnexposedExpr type="png_uint_32" spelling="xin" id="2403970971885"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2403409328673"/>
			<UnexposedExpr type="png_uint_32" spelling="xstep" id="2402747779543"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32, png_const_bytep, png_uint_32, unsigned int, int)" spelling="pixel_copy" id="2401819743394"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2402772612699"/>
			<UnexposedExpr type="png_uint_32" spelling="xout" id="2401040604928"/>
			<UnexposedExpr type="png_const_bytep" spelling="imageRow" id="2401602473667"/>
			<UnexposedExpr type="png_uint_32" spelling="xin" id="2401915967925"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2401196316565"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2400289164849"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="optimized" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="moves" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The inverse of the above, 'row' is part of row 'y' of the output image,
    * in 'buffer'.  The image is 'w' wide and this is pass 'pass', distribute
    * the pixels of row into buffer and return the number written (to allow
    * this to be checked)." comment_scope_start="4059" comment_scope_end="4074">
		<SYMBOLS>
			<FunctionDecl type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2401513813292"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="xin" id="2403715385171"/>
			<VarDecl type="png_uint_32" spelling="xout" id="2400637006463"/>
			<VarDecl type="png_uint_32" spelling="xstep" id="2401997395584"/>
			<CallExpr type="void" spelling="pixel_copy" id="2401028393022"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2403968385347"/>
			<DeclRefExpr type="int" spelling="pass" id="2403639042889"/>
			<DeclRefExpr type="int" spelling="pass" id="2403040802409"/>
			<DeclRefExpr type="png_uint_32" spelling="xstep" id="2401112421819"/>
			<DeclRefExpr type="int" spelling="pass" id="2402104654880"/>
			<DeclRefExpr type="int" spelling="pass" id="2403318094706"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2400668511280"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2400426998076"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401238444339"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2401793182278"/>
			<DeclRefExpr type="png_uint_32" spelling="xstep" id="2401356585006"/>
			<DeclRefExpr type="void (png_bytep, png_uint_32, png_const_bytep, png_uint_32, unsigned int, int)" spelling="pixel_copy" id="2400311103197"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2402730547535"/>
			<DeclRefExpr type="png_uint_32" spelling="xout" id="2403653307508"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2400543761091"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2402834474320"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2403766670615"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2403886732828"/>
			<DeclRefExpr type="png_uint_32" spelling="xin" id="2402078495830"/>
			<UnexposedExpr type="png_uint_32" spelling="xout" id="2403718765873"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2401191780922"/>
			<UnexposedExpr type="png_uint_32" spelling="xstep" id="2402966115925"/>
			<UnexposedExpr type="void (*)(png_bytep, png_uint_32, png_const_bytep, png_uint_32, unsigned int, int)" spelling="pixel_copy" id="2403900119525"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2400302053602"/>
			<UnexposedExpr type="png_uint_32" spelling="xout" id="2402142341348"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2402516641233"/>
			<UnexposedExpr type="png_uint_32" spelling="xin" id="2400132238724"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2402597119840"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2402643692433"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="inverse" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="distribute" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="4075" comment_scope_end="4075"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make a standardized image given an image colour type, bit depth and
 * interlace type.  The standard images have a very restricted range of
 * rows and heights and are used for testing transforms rather than image
 * layout details.  See make_size_images below for a way to make images
 * that test odd sizes along with the libpng interlace handling." comment_scope_start="4077" comment_scope_end="4086">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401908557129"/>
			<ParmDecl type="int" spelling="start" id="2402176737369"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="restricted" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Choose filters randomly except that on the very first row ensure that
    * there is at least one previous row filter." comment_scope_start="4087" comment_scope_end="4091">
		<SYMBOLS>
			<VarDecl type="int" spelling="filters" id="2403389575853"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2401972861073"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2402846759960"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2403315380213"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="choose" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There may be no filters; skip the setting." comment_scope_start="4092" comment_scope_end="4099">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_filter" id="2401068840624"/>
			<DeclRefExpr type="int" spelling="filters" id="2402864661241"/>
			<DeclRefExpr type="int" spelling="start" id="2400111772759"/>
			<DeclRefExpr type="int" spelling="filters" id="2401088808698"/>
			<DeclRefExpr type="int" spelling="filters" id="2402995988891"/>
			<DeclRefExpr type="void (png_structrp, int, int)" spelling="png_set_filter" id="2402308975272"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402758757125"/>
			<DeclRefExpr type="int" spelling="filters" id="2400821520706"/>
			<UnexposedExpr type="int" spelling="filters" id="2403725277079"/>
			<UnexposedExpr type="int" spelling="start" id="2401501622452"/>
			<UnexposedExpr type="int" spelling="filters" id="2400585046320"/>
			<UnexposedExpr type="void (*)(png_structrp, int, int)" spelling="png_set_filter" id="2400057213552"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402758755198"/>
			<UnexposedExpr type="int" spelling="filters" id="2401548184548"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="method" comment_scope_start="4098" comment_scope_end="4098">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_filter" id="2401068840624"/>
			<DeclRefExpr type="void (png_structrp, int, int)" spelling="png_set_filter" id="2402308975272"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402758757125"/>
			<DeclRefExpr type="int" spelling="filters" id="2400821520706"/>
			<UnexposedExpr type="void (*)(png_structrp, int, int)" spelling="png_set_filter" id="2400057213552"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402758755198"/>
			<UnexposedExpr type="int" spelling="filters" id="2401548184548"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!WRITE_FILTER" comment_scope_start="4101" comment_scope_end="4101"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!WRITE_FILTER" comment_scope_start="4103" comment_scope_end="4103"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In the event of a problem return control to the Catch statement below
       * to do the clean up - it is not possible to 'return' directly from a Try
       * block." comment_scope_start="4120" comment_scope_end="4139">
		<SYMBOLS>
			<CallExpr type="void" spelling="longjmp" id="2403483533622"/>
			<CallExpr type="png_uint_32" spelling="transform_height" id="2403697864117"/>
			<CallExpr type="void" spelling="png_set_IHDR" id="2403943962551"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401743793381"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2402958629313"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402337599721"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400821991062"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2404131824730"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401878843130"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2400007991348"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_byte, png_byte)" spelling="transform_height" id="2403440743894"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401015826469"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400158096246"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2402837527979"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2400256469730"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400967792586"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403673481076"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403594401381"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2404121260010"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2401685686081"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402123489872"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2402594745710"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401865723358"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2402940944875"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2401435498935"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401183663858"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401125674705"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400437510631"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400237766080"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401841587025"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400441225740"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_byte, png_byte)" spelling="transform_height" id="2401601705433"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400969908943"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401393232131"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403830945172"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401985850924"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2404068905175"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402269411062"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400065668729"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403191634102"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400673345639"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400058131888"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400971513988"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400093284434"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2404013213278"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401704556820"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2400279443290"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="must be writeable" comment_scope_start="4140" comment_scope_end="4140">
		<SYMBOLS>
			<VarDecl type="char [11]" spelling="key" id="2404219277309"/>
			<StringLiteral type="char [11]" spelling="&quot;image name&quot;" id="2401912022406"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use a compressed text string to test the correct interaction of text
          * compression and IDAT compression." comment_scope_start="4145" comment_scope_end="4149">
		<SYMBOLS>
			<DeclRefExpr type="png_text" spelling="text" id="2401132809764"/>
			<DeclRefExpr type="png_text" spelling="text" id="2403713186561"/>
			<DeclRefExpr type="char [11]" spelling="key" id="2402150414162"/>
			<MemberRefExpr type="int" spelling="compression" id="2401434775803"/>
			<MemberRefExpr type="png_charp" spelling="key" id="2401726042163"/>
			<UnexposedExpr type="char *" spelling="key" id="2400912526549"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="compression"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Yuck: the text must be writable!" comment_scope_start="4150" comment_scope_end="4159">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401656956294"/>
			<CallExpr type="void" spelling="png_set_text" id="2404204823974"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403242330622"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2404058622330"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2401602655776"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2400865574295"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403571179944"/>
			<DeclRefExpr type="png_text" spelling="text" id="2403322011748"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2400589923301"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402113133873"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402309139865"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401070714547"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401771879636"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402556480374"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2403585180301"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404124177288"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403731206179"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402603710133"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2400714241862"/>
			<MemberRefExpr type="png_charp" spelling="text" id="2403174411423"/>
			<MemberRefExpr type="size_t" spelling="text_length" id="2402037331388"/>
			<MemberRefExpr type="size_t" spelling="itxt_length" id="2400623536527"/>
			<MemberRefExpr type="png_charp" spelling="lang" id="2401713027351"/>
			<MemberRefExpr type="png_charp" spelling="lang_key" id="2404077850172"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403364982094"/>
			<UnexposedExpr type="char *" spelling="copy" id="2402141966499"/>
			<UnexposedExpr type="const char *" spelling="wname" id="2404023181289"/>
			<UnexposedExpr type="char *" spelling="wname" id="2404075918326"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403559135910"/>
			<UnexposedExpr type="char *" spelling="copy" id="2404159973949"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402674978729"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2401016142907"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403075130508"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400276806024"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403775843004"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="text"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="4162" comment_scope_end="4162">
		<SYMBOLS>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400377598413"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403793996787"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400913940616"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do tRNS" comment_scope_start="4163" comment_scope_end="4163">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_standard_palette" id="2402029230044"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2403014686665"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2401319906952"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403124578270"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402310609625"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2403110071893"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2401409709387"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403094636897"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400315673210"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402858492038"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400195591622"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402213377289"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Somewhat confusingly this must be called *after* png_write_info
          * because if it is called before, the information in *pp has not been
          * updated to reflect the interlaced image." comment_scope_start="4178" comment_scope_end="4191">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="int" spelling="npasses" id="2403917577629"/>
			<VarDecl type="int" spelling="pass" id="2401361307045"/>
			<VarDecl type="png_uint_32" spelling="y" id="2404260457327"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2402329319384"/>
			<CallExpr type="int" spelling="npasses_from_interlace_type" id="2400744601955"/>
			<CallExpr type="void" spelling="png_error" id="2402992873289"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2402288036393"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400480002028"/>
			<DeclRefExpr type="int" spelling="npasses" id="2400290476440"/>
			<DeclRefExpr type="int (png_const_structp, int)" spelling="npasses_from_interlace_type" id="2401734535705"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403118813282"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2402427587824"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403716761433"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401042575930"/>
			<DeclRefExpr type="int" spelling="pass" id="2403266039285"/>
			<DeclRefExpr type="int" spelling="pass" id="2400834535437"/>
			<DeclRefExpr type="int" spelling="npasses" id="2404215031712"/>
			<DeclRefExpr type="int" spelling="pass" id="2400657369313"/>
			<StringLiteral type="char [41]" spelling="&quot;write: png_set_interlace_handling failed&quot;" id="2404140340068"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2403418687311"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404045385785"/>
			<UnexposedExpr type="int" spelling="npasses" id="2402595253218"/>
			<UnexposedExpr type="int (*)(png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403925641841"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401019676126"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401357182322"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2400850805572"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404065770147"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400287867809"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402814405124"/>
			<UnexposedExpr type="int" spelling="pass" id="2402420149072"/>
			<UnexposedExpr type="int" spelling="npasses" id="2402431081504"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_own_interlace is a pre-defined boolean (a #define) which is
             * set if we have to work out the interlaced rows here." comment_scope_start="4192" comment_scope_end="4225">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [1024]" spelling="buffer" id="2401472543006"/>
			<CallExpr type="void" spelling="transform_row" id="2401514985159"/>
			<CallExpr type="void" spelling="choose_random_filter" id="2401349257238"/>
			<CallExpr type="void" spelling="png_write_row" id="2401740734729"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402183529021"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402974516521"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2402429014787"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403690975906"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2400043138077"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400648084361"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403055299297"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402268665525"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2401719568191"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402029353840"/>
			<DeclRefExpr type="void (png_structp, int)" spelling="choose_random_filter" id="2403582333128"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401201213346"/>
			<DeclRefExpr type="int" spelling="pass" id="2403783967815"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403795395856"/>
			<DeclRefExpr type="void (png_structrp, png_const_bytep)" spelling="png_write_row" id="2401974924298"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403969419812"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2403954182465"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402962033739"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2401028375102"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2403199441436"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400541281218"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401121823925"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403509264087"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402131631937"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2404065911156"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402904757536"/>
			<UnexposedExpr type="void (*)(png_structp, int)" spelling="choose_random_filter" id="2401549213886"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403906275377"/>
			<UnexposedExpr type="int" spelling="pass" id="2402668450022"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2401601812284"/>
			<UnexposedExpr type="void (*)(png_structrp, png_const_bytep)" spelling="png_write_row" id="2401389304079"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400158223937"/>
			<UnexposedExpr type="png_const_bytep" spelling="buffer" id="2403470950207"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2403240010594"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If do_own_interlace *and* the image is interlaced we need a
                   * reduced interlace row; this may be reduced to empty." comment_scope_start="4202" comment_scope_end="4220"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The row must not be written if it doesn't exist, notice
                      * that there are two conditions here, either the row isn't
                      * ever in the pass or the row would be but isn't wide
                      * enough to contribute any pixels.  In fact the wPass test
                      * can be used to skip the whole y loop in this case." comment_scope_start="4207" comment_scope_end="4216"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="data always bigendian" comment_scope_start="4217" comment_scope_end="4217"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_own_interlace" comment_scope_start="4221" comment_scope_end="4221"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use a compressed text string to test the correct interaction of text
          * compression and IDAT compression." comment_scope_start="4235" comment_scope_end="4247">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_text" id="2402971720355"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402174256499"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402055152032"/>
			<DeclRefExpr type="char [11]" spelling="key" id="2401163464432"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402635706103"/>
			<DeclRefExpr type="char [4]" spelling="comment" id="2403301860507"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402152279940"/>
			<DeclRefExpr type="char [4]" spelling="comment" id="2403143021248"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401136065997"/>
			<DeclRefExpr type="png_text" spelling="text" id="2400347964024"/>
			<DeclRefExpr type="png_text" spelling="text" id="2400527020794"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2402106756651"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400650525240"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400051207275"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401228374767"/>
			<MemberRefExpr type="int" spelling="compression" id="2401502447529"/>
			<MemberRefExpr type="png_charp" spelling="key" id="2400679222347"/>
			<MemberRefExpr type="png_charp" spelling="text" id="2400220441591"/>
			<MemberRefExpr type="size_t" spelling="text_length" id="2403037531727"/>
			<MemberRefExpr type="size_t" spelling="itxt_length" id="2403449043600"/>
			<MemberRefExpr type="png_charp" spelling="lang" id="2403612887513"/>
			<MemberRefExpr type="png_charp" spelling="lang_key" id="2403771914523"/>
			<UnexposedExpr type="char *" spelling="key" id="2403796078740"/>
			<UnexposedExpr type="char *" spelling="comment" id="2402719648758"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2401906537788"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400291079253"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403191532876"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401461475019"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="compression"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And store this under the appropriate id, then clean up." comment_scope_start="4252" comment_scope_end="4257">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<CallExpr type="void" spelling="store_storefile" id="2404128852110"/>
			<CallExpr type="void" spelling="store_write_reset" id="2403081782389"/>
			<DeclRefExpr type="void (png_store *, png_uint_32)" spelling="store_storefile" id="2400628735414"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2401108627214"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402867387084"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2402261939260"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2401991936138"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2401847489513"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2402406781888"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2401956105010"/>
			<UnexposedExpr type="void (*)(png_store *, png_uint_32)" spelling="store_storefile" id="2403374290255"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401796183497"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2400471842935"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403103730494"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use the png_store returned by the exception. This may help the compiler
       * because 'ps' is not used in this branch of the setjmp.  Note that fault
       * and ps will always be the same value." comment_scope_start="4261" comment_scope_end="4266">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_write_reset" id="2404117418072"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2400543072268"/>
			<DeclRefExpr type="png_store *" spelling="fault" id="2402866273488"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2401399575458"/>
			<UnexposedExpr type="png_store *" spelling="fault" id="2402561403401"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="branch" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is in case of errors." comment_scope_start="4276" comment_scope_end="4278">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403859284918"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400136392852"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401806383896"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402717908880"/>
			<StringLiteral type="char [21]" spelling="&quot;make standard images&quot;" id="2402162657206"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2402942600908"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401597862903"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2403310942750"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403624031151"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402617032070"/>
			<UnexposedExpr type="char *" spelling="test" id="2401750107785"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401667757578"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400598206819"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use next_format to enumerate all the combinations we test, including
    * generating multiple low bit depth palette images. Non-A images (palette
    * and direct) are created with and without tRNS chunks." comment_scope_start="4279" comment_scope_end="4297">
		<SYMBOLS>
			<VarDecl type="int" spelling="interlace_type" id="2402338307800"/>
			<VarDecl type="char [64]" spelling="name" id="2401621535161"/>
			<CallExpr type="int" spelling="next_format" id="2400099459984"/>
			<CallExpr type="size_t" spelling="standard_name" id="2402847908725"/>
			<CallExpr type="void" spelling="make_transform_image" id="2403970152656"/>
			<DeclRefExpr type="int (png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2400257332223"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403027418877"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401098064615"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2402009643275"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2402460574761"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2403384778647"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2403169737592"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, png_byte, int, unsigned int, int, png_uint_32, png_uint_32, int)" spelling="standard_name" id="2401850249864"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2400026546602"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2403435173338"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401995646291"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401566877457"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2402912594083"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2403748379239"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, const png_byte, unsigned int, int, png_const_charp)" spelling="make_transform_image" id="2402360625604"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400720088068"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402311706811"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400613654072"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2403644363737"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2402904590223"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2401523212014"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403904663427"/>
			<UnexposedExpr type="int (*)(png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2403967768433"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401443405504"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, png_byte, int, unsigned int, int, png_uint_32, png_uint_32, int)" spelling="standard_name" id="2403115575822"/>
			<UnexposedExpr type="char *" spelling="name" id="2403492958553"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402737876073"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400497456126"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2404130827328"/>
			<UnexposedExpr type="unsigned int" spelling="palette_number" id="2403163188082"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401924582664"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, const png_byte, unsigned int, int, png_const_charp)" spelling="make_transform_image" id="2402067609905"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403590638286"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400193035297"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403973916701"/>
			<UnexposedExpr type="unsigned int" spelling="palette_number" id="2401230935915"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401538737095"/>
			<UnexposedExpr type="png_const_charp" spelling="name" id="2404247049479"/>
			<UnexposedExpr type="char *" spelling="name" id="2402903768379"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="enumerate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="generating" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="direct" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Build a single row for the 'size' test images; this fills in only the
 * first bit_width bits of the sample row." comment_scope_start="4300" comment_scope_end="4305">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<ParmDecl type="png_byte [128]" spelling="buffer" id="2401026147725"/>
			<ParmDecl type="png_uint_32" spelling="bit_width" id="2400146745563"/>
			<ParmDecl type="png_uint_32" spelling="y" id="2402238319329"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="height is in the range 1 to 16, so:" comment_scope_start="4306" comment_scope_end="4307">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403791253955"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401712019520"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401754626460"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400284618495"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400835210744"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2401949882811"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400921959822"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403463959694"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403694089289"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="the following ensures bits are set in small images:" comment_scope_start="4308" comment_scope_end="4313">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400204469933"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_width" id="2403582447711"/>
			<DeclRefExpr type="png_byte [128]" spelling="buffer" id="2400493919113"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402239280951"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_width" id="2403134199725"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2401087833933"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There may be up to 7 remaining bits, these go in the most significant
    * bits of the byte." comment_scope_start="4314" comment_scope_end="4321">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="mask" id="2401615254904"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_width" id="2400374364861"/>
			<DeclRefExpr type="png_uint_32" spelling="bit_width" id="2402956052247"/>
			<DeclRefExpr type="png_byte [128]" spelling="buffer" id="2403836415182"/>
			<DeclRefExpr type="png_byte [128]" spelling="buffer" id="2400255484641"/>
			<DeclRefExpr type="png_uint_32" spelling="mask" id="2403628068410"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401520578450"/>
			<DeclRefExpr type="png_uint_32" spelling="mask" id="2400074091714"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2401106288190"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2401573555951"/>
			<UnexposedExpr type="png_byte [128]" spelling="buffer" id="2400054255792"/>
			<UnexposedExpr type="png_byte [128]" spelling="buffer" id="2402601027214"/>
			<UnexposedExpr type="png_uint_32" spelling="mask" id="2403143767779"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402791294543"/>
			<UnexposedExpr type="png_uint_32" spelling="mask" id="2401291826163"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make a name and get an appropriate id for the store:" comment_scope_start="4340" comment_scope_end="4341">
		<SYMBOLS>
			<VarDecl type="char [64]" spelling="name" id="2402845837521"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="4342" comment_scope_end="4342">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403235886581"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2402603755204"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In the event of a problem return control to the Catch statement below
       * to do the clean up - it is not possible to 'return' directly from a Try
       * block." comment_scope_start="4348" comment_scope_end="4359">
		<SYMBOLS>
			<CallExpr type="void" spelling="longjmp" id="2401410599119"/>
			<CallExpr type="void" spelling="png_set_IHDR" id="2403954807792"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400103857897"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401455753124"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402351908168"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402124247538"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2401293298276"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2403645841860"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401995822096"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400473294832"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2403584434209"/>
			<DeclRefExpr type="const png_uint_32" spelling="h" id="2403484916855"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2402271566174"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401518652537"/>
			<DeclRefExpr type="const int" spelling="interlace_type" id="2400819660482"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400896856462"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2400497799471"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2402581714528"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402122478136"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401619569104"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2401009462890"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401715087293"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2404048855248"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402872595811"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2402764932030"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401884915260"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400652709768"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400583529122"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402607451225"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2403568270709"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401464975264"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401265938296"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400646785878"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400355541059"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2403731374889"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="must be writeable" comment_scope_start="4360" comment_scope_end="4360">
		<SYMBOLS>
			<VarDecl type="char [11]" spelling="key" id="2403029141738"/>
			<StringLiteral type="char [11]" spelling="&quot;image name&quot;" id="2401985089987"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use a compressed text string to test the correct interaction of text
          * compression and IDAT compression." comment_scope_start="4365" comment_scope_end="4369">
		<SYMBOLS>
			<DeclRefExpr type="png_text" spelling="text" id="2400683619968"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402572050014"/>
			<DeclRefExpr type="char [11]" spelling="key" id="2400165240737"/>
			<MemberRefExpr type="int" spelling="compression" id="2401927051223"/>
			<MemberRefExpr type="png_charp" spelling="key" id="2401751695885"/>
			<UnexposedExpr type="char *" spelling="key" id="2400631525106"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="compression"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Yuck: the text must be writable!" comment_scope_start="4370" comment_scope_end="4379">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403314234980"/>
			<CallExpr type="void" spelling="png_set_text" id="2403776686370"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400244788003"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401625518091"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2400863402942"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2400945052685"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2400601697698"/>
			<DeclRefExpr type="png_text" spelling="text" id="2400736121747"/>
			<DeclRefExpr type="char [64]" spelling="copy" id="2401359383579"/>
			<DeclRefExpr type="png_text" spelling="text" id="2403656278459"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404082095999"/>
			<DeclRefExpr type="png_text" spelling="text" id="2400084948112"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401798862983"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402938077599"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2403374199987"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400140740075"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400162895699"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402805960534"/>
			<MemberRefExpr type="char [64]" spelling="wname" id="2402460992983"/>
			<MemberRefExpr type="png_charp" spelling="text" id="2403797157246"/>
			<MemberRefExpr type="size_t" spelling="text_length" id="2400279610315"/>
			<MemberRefExpr type="size_t" spelling="itxt_length" id="2402606681778"/>
			<MemberRefExpr type="png_charp" spelling="lang" id="2403052455946"/>
			<MemberRefExpr type="png_charp" spelling="lang_key" id="2403536692616"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403130935187"/>
			<UnexposedExpr type="char *" spelling="copy" id="2403913324419"/>
			<UnexposedExpr type="const char *" spelling="wname" id="2400702228327"/>
			<UnexposedExpr type="char *" spelling="wname" id="2402852954665"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403599849165"/>
			<UnexposedExpr type="char *" spelling="copy" id="2400353014605"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402536827657"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2404273485005"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401956149955"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400179373002"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402022153258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="text"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="4382" comment_scope_end="4382">
		<SYMBOLS>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403252226923"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401046179110"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402855759559"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do tRNS" comment_scope_start="4383" comment_scope_end="4383">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_standard_palette" id="2400168489194"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2403725076350"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402440396822"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401812370183"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401880565390"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2400907576179"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2401220815611"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404230329270"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402194784573"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401173387493"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403265855625"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403662229110"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Calculate the bit size, divide by 8 to get the byte size - this won't
       * overflow because we know the w values are all small enough even for
       * a system where 'unsigned int' is only 16 bits." comment_scope_start="4387" comment_scope_end="4401">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="int" spelling="npasses" id="2403425506642"/>
			<VarDecl type="png_uint_32" spelling="y" id="2403903132800"/>
			<VarDecl type="int" spelling="pass" id="2403875501830"/>
			<VarDecl type="png_byte [16][128]" spelling="image" id="2403470044361"/>
			<CallExpr type="unsigned int" spelling="bit_size" id="2401729570818"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2403574637026"/>
			<CallExpr type="void" spelling="png_error" id="2401895194972"/>
			<CallExpr type="int" spelling="npasses_from_interlace_type" id="2402184005186"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2402551532322"/>
			<DeclRefExpr type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2401142363358"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403336745503"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402834001994"/>
			<DeclRefExpr type="const png_byte" spelling="bit_depth" id="2402998758901"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2400998903005"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403875628731"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401876241738"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2402906759604"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2402151700030"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401299877844"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401524323780"/>
			<DeclRefExpr type="int (png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403974912593"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403988467252"/>
			<DeclRefExpr type="const int" spelling="interlace_type" id="2401727364831"/>
			<StringLiteral type="char [24]" spelling="&quot;size row size incorrect&quot;" id="2402514239839"/>
			<UnexposedExpr type="unsigned int (*)(png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2404079504135"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403526586916"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403687271500"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402328114697"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403160646497"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2403313560826"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402540879136"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402998729874"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2400860047380"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403306440018"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402727995033"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2404180528566"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403543394332"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2404018363201"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403224500156"/>
			<UnexposedExpr type="int (*)(png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403908470017"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400695164293"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400635530695"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2404216954904"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="divide" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="To help consistent error detection make the parts of this buffer
          * that aren't set below all '1':" comment_scope_start="4402" comment_scope_end="4410">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2401475543685"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2403252459459"/>
			<CallExpr type="void" spelling="png_error" id="2400018717524"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400761686082"/>
			<DeclRefExpr type="png_byte [16][128]" spelling="image" id="2403098047460"/>
			<DeclRefExpr type="png_byte [16][128]" spelling="image" id="2403154716738"/>
			<DeclRefExpr type="const int" spelling="do_interlace" id="2401140904004"/>
			<DeclRefExpr type="int" spelling="npasses" id="2400634434387"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2402038555030"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400803246891"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402460798134"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402586280898"/>
			<StringLiteral type="char [41]" spelling="&quot;write: png_set_interlace_handling failed&quot;" id="2400161562362"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402297820049"/>
			<UnexposedExpr type="void *" spelling="image" id="2403295977340"/>
			<UnexposedExpr type="png_byte (*)[128]" spelling="image" id="2403884577733"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2400213085267"/>
			<UnexposedExpr type="int" spelling="npasses" id="2402010023822"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2402677288384"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400147072554"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402281192785"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401364113508"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404287099648"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Prepare the whole image first to avoid making it 7 times:" comment_scope_start="4411" comment_scope_end="4416">
		<SYMBOLS>
			<CallExpr type="void" spelling="size_row" id="2401933502790"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402407982853"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401202971205"/>
			<DeclRefExpr type="const png_uint_32" spelling="h" id="2400075942415"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402912094545"/>
			<DeclRefExpr type="void (png_byte *, png_uint_32, png_uint_32)" spelling="size_row" id="2400752078985"/>
			<DeclRefExpr type="png_byte [16][128]" spelling="image" id="2403158472040"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401783500527"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2401068696930"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2404078521620"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401465581379"/>
			<DeclRefExpr type="int" spelling="pass" id="2400312974380"/>
			<DeclRefExpr type="int" spelling="pass" id="2402498040403"/>
			<DeclRefExpr type="int" spelling="npasses" id="2401894589789"/>
			<DeclRefExpr type="int" spelling="pass" id="2402559094857"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400166442538"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2402150141287"/>
			<UnexposedExpr type="void (*)(png_byte *, png_uint_32, png_uint_32)" spelling="size_row" id="2400206647050"/>
			<UnexposedExpr type="png_byte (*)[128]" spelling="image" id="2401400356824"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402670182652"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2401009815503"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2400636752622"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402180758827"/>
			<UnexposedExpr type="int" spelling="pass" id="2404229280696"/>
			<UnexposedExpr type="int" spelling="npasses" id="2402067085203"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following two are for checking the macros:" comment_scope_start="4417" comment_scope_end="4419">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="wPass" id="2403705987633"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2401440697321"/>
			<DeclRefExpr type="int" spelling="pass" id="2401772423406"/>
			<DeclRefExpr type="int" spelling="pass" id="2403860302191"/>
			<DeclRefExpr type="int" spelling="pass" id="2401176567239"/>
			<DeclRefExpr type="int" spelling="pass" id="2404044877849"/>
			<DeclRefExpr type="int" spelling="pass" id="2403776161036"/>
			<DeclRefExpr type="int" spelling="pass" id="2403085734284"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If do_interlace is set we don't call png_write_row for every
             * row because some of them are empty.  In fact, for a 1x1 image,
             * most of them are empty!" comment_scope_start="4420" comment_scope_end="4478">
		<SYMBOLS>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_const_bytep" spelling="row" id="2401509948615"/>
			<VarDecl type="png_byte [128]" spelling="tempRow" id="2400787294323"/>
			<VarDecl type="int" spelling="filters" id="2401342561767"/>
			<CallExpr type="void *" spelling="memset" id="2400748950900"/>
			<CallExpr type="void" spelling="interlace_row" id="2400409621068"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2404148979733"/>
			<CallExpr type="void" spelling="png_set_filter" id="2400297760697"/>
			<CallExpr type="void" spelling="png_write_row" id="2401717827839"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403511784301"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401131719314"/>
			<DeclRefExpr type="const png_uint_32" spelling="h" id="2402791579812"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403688294931"/>
			<DeclRefExpr type="png_byte [16][128]" spelling="image" id="2402773833443"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400675138465"/>
			<DeclRefExpr type="const int" spelling="do_interlace" id="2400027677978"/>
			<DeclRefExpr type="const int" spelling="interlace_type" id="2403331376616"/>
			<DeclRefExpr type="int" spelling="pass" id="2403904072860"/>
			<DeclRefExpr type="int" spelling="pass" id="2400126415055"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400465633022"/>
			<DeclRefExpr type="png_uint_32" spelling="wPass" id="2402257700140"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400572523031"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400392961123"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2404122618894"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2400530685089"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400182888155"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402105995627"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2401622416586"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400724564485"/>
			<DeclRefExpr type="int" spelling="pass" id="2402894952865"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2404103056162"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2402643338414"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2402125076548"/>
			<DeclRefExpr type="int" spelling="pass" id="2401685553079"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403854986383"/>
			<DeclRefExpr type="int" spelling="filters" id="2401708581900"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400890912883"/>
			<DeclRefExpr type="int" spelling="filters" id="2402042748037"/>
			<DeclRefExpr type="void (png_structrp, int, int)" spelling="png_set_filter" id="2401410608388"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403021550953"/>
			<DeclRefExpr type="int" spelling="filters" id="2401765979944"/>
			<DeclRefExpr type="void (png_structrp, png_const_bytep)" spelling="png_write_row" id="2403625320864"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401793109469"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402221635039"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402120023669"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400356087619"/>
			<UnexposedExpr type="png_byte (*)[128]" spelling="image" id="2402637392285"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402447437526"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2402159085066"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2403055706801"/>
			<UnexposedExpr type="png_uint_32" spelling="wPass" id="2401186436264"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400631164958"/>
			<UnexposedExpr type="void *" spelling="tempRow" id="2400722257728"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2403546788080"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2401342287984"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2400695877046"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2400877928793"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2400344511819"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400185993390"/>
			<UnexposedExpr type="int" spelling="pass" id="2402068030218"/>
			<UnexposedExpr type="png_const_bytep" spelling="tempRow" id="2402611274157"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2404225857393"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2400157501262"/>
			<UnexposedExpr type="int" spelling="pass" id="2403633002692"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403500415719"/>
			<UnexposedExpr type="int" spelling="filters" id="2403766486384"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2403374581428"/>
			<UnexposedExpr type="void (*)(png_structrp, int, int)" spelling="png_set_filter" id="2401133189154"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402153617660"/>
			<UnexposedExpr type="int" spelling="filters" id="2402167154071"/>
			<UnexposedExpr type="void (*)(png_structrp, png_const_bytep)" spelling="png_write_row" id="2402885811088"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404013012205"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2402277627243"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If do_interlace *and* the image is interlaced we
                * need a reduced interlace row; this may be reduced
                * to empty." comment_scope_start="4429" comment_scope_end="4453">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400748950900"/>
			<CallExpr type="void" spelling="interlace_row" id="2400409621068"/>
			<DeclRefExpr type="const int" spelling="do_interlace" id="2400027677978"/>
			<DeclRefExpr type="const int" spelling="interlace_type" id="2403331376616"/>
			<DeclRefExpr type="int" spelling="pass" id="2403904072860"/>
			<DeclRefExpr type="int" spelling="pass" id="2400126415055"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400465633022"/>
			<DeclRefExpr type="png_uint_32" spelling="wPass" id="2402257700140"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400572523031"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400392961123"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2404122618894"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2400530685089"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400182888155"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402105995627"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2401622416586"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400724564485"/>
			<DeclRefExpr type="int" spelling="pass" id="2402894952865"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2404103056162"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2402643338414"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2402159085066"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2403055706801"/>
			<UnexposedExpr type="png_uint_32" spelling="wPass" id="2401186436264"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400631164958"/>
			<UnexposedExpr type="void *" spelling="tempRow" id="2400722257728"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2403546788080"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2401342287984"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2400695877046"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2400877928793"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2400344511819"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400185993390"/>
			<UnexposedExpr type="int" spelling="pass" id="2402068030218"/>
			<UnexposedExpr type="png_const_bytep" spelling="tempRow" id="2402611274157"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2404225857393"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="reduced" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="reduced" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="interlaced"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The row must not be written if it doesn't exist, notice
                   * that there are two conditions here, either the row isn't
                   * ever in the pass or the row would be but isn't wide
                   * enough to contribute any pixels.  In fact the wPass test
                   * can be used to skip the whole y loop in this case." comment_scope_start="4435" comment_scope_end="4450">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400748950900"/>
			<CallExpr type="void" spelling="interlace_row" id="2400409621068"/>
			<DeclRefExpr type="int" spelling="pass" id="2403904072860"/>
			<DeclRefExpr type="int" spelling="pass" id="2400126415055"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400465633022"/>
			<DeclRefExpr type="png_uint_32" spelling="wPass" id="2402257700140"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400572523031"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400392961123"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2404122618894"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2400530685089"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400182888155"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402105995627"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2401622416586"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400724564485"/>
			<DeclRefExpr type="int" spelling="pass" id="2402894952865"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2404103056162"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2402643338414"/>
			<UnexposedExpr type="png_uint_32" spelling="wPass" id="2401186436264"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400631164958"/>
			<UnexposedExpr type="void *" spelling="tempRow" id="2400722257728"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2403546788080"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2401342287984"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2400695877046"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2400877928793"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2400344511819"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400185993390"/>
			<UnexposedExpr type="int" spelling="pass" id="2402068030218"/>
			<UnexposedExpr type="png_const_bytep" spelling="tempRow" id="2402611274157"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2404225857393"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set to all 1's for error detection (libpng tends to
                      * set unset things to 0)." comment_scope_start="4443" comment_scope_end="4447">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400748950900"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400572523031"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400392961123"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2404122618894"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2400530685089"/>
			<DeclRefExpr type="png_byte [128]" spelling="tempRow" id="2400182888155"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402105995627"/>
			<DeclRefExpr type="unsigned int" spelling="pixel_size" id="2401622416586"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400724564485"/>
			<DeclRefExpr type="int" spelling="pass" id="2402894952865"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400631164958"/>
			<UnexposedExpr type="void *" spelling="tempRow" id="2400722257728"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2403546788080"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="interlace_row" id="2401342287984"/>
			<UnexposedExpr type="png_byte *" spelling="tempRow" id="2400695877046"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2400877928793"/>
			<UnexposedExpr type="unsigned int" spelling="pixel_size" id="2400344511819"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400185993390"/>
			<UnexposedExpr type="int" spelling="pass" id="2402068030218"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="data always bigendian" comment_scope_start="4448" comment_scope_end="4448">
		<SYMBOLS>
			<CallExpr type="void" spelling="interlace_row" id="2400409621068"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Only get to here if the row has some pixels in it, set the
                * filters to 'all' for the very first row and thereafter to a
                * single filter.  It isn't well documented, but png_set_filter
                * does accept a filter number (per the spec) as well as a bit
                * mask.
                *
                * The code now uses filters at random, except that on the first
                * row of an image it ensures that a previous row filter is in
                * the set so that libpng allocates the row buffer." comment_scope_start="4456" comment_scope_end="4474">
		<SYMBOLS>
			<VarDecl type="int" spelling="filters" id="2401342561767"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2404148979733"/>
			<CallExpr type="void" spelling="png_set_filter" id="2400297760697"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2402125076548"/>
			<DeclRefExpr type="int" spelling="pass" id="2401685553079"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403854986383"/>
			<DeclRefExpr type="int" spelling="filters" id="2401708581900"/>
			<DeclRefExpr type="const png_uint_32" spelling="w" id="2400890912883"/>
			<DeclRefExpr type="int" spelling="filters" id="2402042748037"/>
			<DeclRefExpr type="void (png_structrp, int, int)" spelling="png_set_filter" id="2401410608388"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403021550953"/>
			<DeclRefExpr type="int" spelling="filters" id="2401765979944"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2400157501262"/>
			<UnexposedExpr type="int" spelling="pass" id="2403633002692"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403500415719"/>
			<UnexposedExpr type="int" spelling="filters" id="2403766486384"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2403374581428"/>
			<UnexposedExpr type="void (*)(png_structrp, int, int)" spelling="png_set_filter" id="2401133189154"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402153617660"/>
			<UnexposedExpr type="int" spelling="filters" id="2402167154071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="allocates" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="method" comment_scope_start="4473" comment_scope_end="4473">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_filter" id="2400297760697"/>
			<DeclRefExpr type="void (png_structrp, int, int)" spelling="png_set_filter" id="2401410608388"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403021550953"/>
			<DeclRefExpr type="int" spelling="filters" id="2401765979944"/>
			<UnexposedExpr type="void (*)(png_structrp, int, int)" spelling="png_set_filter" id="2401133189154"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402153617660"/>
			<UnexposedExpr type="int" spelling="filters" id="2402167154071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use a compressed text string to test the correct interaction of text
          * compression and IDAT compression." comment_scope_start="4488" comment_scope_end="4500">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_text" id="2401091169426"/>
			<DeclRefExpr type="png_text" spelling="text" id="2403925374782"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402799813982"/>
			<DeclRefExpr type="char [11]" spelling="key" id="2400559576879"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401973021235"/>
			<DeclRefExpr type="char [4]" spelling="comment" id="2401288941429"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401730587786"/>
			<DeclRefExpr type="char [4]" spelling="comment" id="2400044626140"/>
			<DeclRefExpr type="png_text" spelling="text" id="2403740222897"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401508815041"/>
			<DeclRefExpr type="png_text" spelling="text" id="2401218635153"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2400399540541"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400205330679"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403064703279"/>
			<DeclRefExpr type="png_text" spelling="text" id="2402790090991"/>
			<MemberRefExpr type="int" spelling="compression" id="2402696297335"/>
			<MemberRefExpr type="png_charp" spelling="key" id="2402179885913"/>
			<MemberRefExpr type="png_charp" spelling="text" id="2401760502315"/>
			<MemberRefExpr type="size_t" spelling="text_length" id="2403527920278"/>
			<MemberRefExpr type="size_t" spelling="itxt_length" id="2400127900757"/>
			<MemberRefExpr type="png_charp" spelling="lang" id="2402116796184"/>
			<MemberRefExpr type="png_charp" spelling="lang_key" id="2401033550718"/>
			<UnexposedExpr type="char *" spelling="key" id="2400241715884"/>
			<UnexposedExpr type="char *" spelling="comment" id="2403619540295"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_textp, int)" spelling="png_set_text" id="2400253459500"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402780749948"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403233533423"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400011318080"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="text"/>
			<PROBLEM_DOMAIN word="compression"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And store this under the appropriate id, then clean up." comment_scope_start="4505" comment_scope_end="4509">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_storefile" id="2402033530942"/>
			<CallExpr type="void" spelling="store_write_reset" id="2401891346159"/>
			<DeclRefExpr type="void (png_store *, png_uint_32)" spelling="store_storefile" id="2400058314052"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2400403508869"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403677617207"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2403100011415"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2400703604429"/>
			<UnexposedExpr type="void (*)(png_store *, png_uint_32)" spelling="store_storefile" id="2401895482310"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400501670442"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2400992145447"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2400076257964"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403261753974"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use the png_store returned by the exception. This may help the compiler
       * because 'ps' is not used in this branch of the setjmp.  Note that fault
       * and ps will always be the same value." comment_scope_start="4513" comment_scope_end="4518">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_write_reset" id="2400527693296"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2402628143210"/>
			<DeclRefExpr type="png_store *" spelling="fault" id="2402590154495"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2400850242953"/>
			<UnexposedExpr type="png_store *" spelling="fault" id="2401059960798"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="branch" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The four combinations of DIY interlace and interlace or not -
             * no interlace + DIY should be identical to no interlace with
             * libpng doing it." comment_scope_start="4535" comment_scope_end="4547">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="void" spelling="make_size_image" id="2403621696622"/>
			<CallExpr type="void" spelling="make_size_image" id="2401968438187"/>
			<CallExpr type="void" spelling="make_size_image" id="2402963757363"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2403296789199"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402170568459"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403626769786"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402469583960"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2402640115348"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2402689021649"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2401419841041"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403242155906"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401275436216"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400674053381"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2401506317652"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2400202706241"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2404223594493"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2404176361262"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401712646685"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402839315897"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2402499315480"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2404004421892"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2403023330028"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402283929512"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401499240741"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2402287411850"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2400088808101"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2401645125300"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402988262707"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403967855652"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2404225835489"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2403100331170"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2400801345680"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401307250579"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403039461407"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2402747893468"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2401703940492"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1.7.0 removes the hack that prevented app write of an interlaced
             * image if WRITE_INTERLACE was not supported" comment_scope_start="4548" comment_scope_end="4554">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="void" spelling="make_size_image" id="2401325686163"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2403115787805"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2400883415107"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401454466453"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2403198931991"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2400303980544"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2402308738833"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, const png_byte, const int, const png_uint_32, const png_uint_32, const int)" spelling="make_size_image" id="2401643239484"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401332818476"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401969910431"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2400469025492"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2403875595166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="app"/>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is in case of errors." comment_scope_start="4562" comment_scope_end="4564">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402836026662"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401751707995"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2403701527500"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402673333781"/>
			<StringLiteral type="char [17]" spelling="&quot;make size images&quot;" id="2400295725201"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2400247580680"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2401702754465"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403442910277"/>
			<UnexposedExpr type="char *" spelling="test" id="2404264090147"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403982753658"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400150266679"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Arguments are colour_type, low bit depth, high bit depth" comment_scope_start="4565" comment_scope_end="4568">
		<SYMBOLS>
			<CallExpr type="void" spelling="make_size" id="2402914368793"/>
			<CallExpr type="void" spelling="make_size" id="2402148554712"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, int, const int)" spelling="make_size" id="2402600909436"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402615347226"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, int, const int)" spelling="make_size" id="2403656452696"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401697116386"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, int, const int)" spelling="make_size" id="2402388416413"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401303416305"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, int, const int)" spelling="make_size" id="2400357244835"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401420008393"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette: max 8 bits" comment_scope_start="4569" comment_scope_end="4569">
		<SYMBOLS>
			<CallExpr type="void" spelling="make_size" id="2400223225008"/>
			<DeclRefExpr type="void (png_store *const, const png_byte, int, const int)" spelling="make_size" id="2402263850724"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2402868293866"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_byte, int, const int)" spelling="make_size" id="2403019889464"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403866116658"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return a row based on image id and 'y' for checking:" comment_scope_start="4575" comment_scope_end="4585">
		<SYMBOLS>
			<FunctionDecl type="void (png_const_structp, png_byte *, png_uint_32, png_uint_32)" spelling="standard_row" id="2403310667137"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401472368866"/>
			<ParmDecl type="png_byte [1024]" spelling="std" id="2404080876418"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2400120536606"/>
			<ParmDecl type="png_uint_32" spelling="y" id="2401556430676"/>
			<CallExpr type="void" spelling="transform_row" id="2400977595072"/>
			<CallExpr type="void" spelling="size_row" id="2401448139678"/>
			<CallExpr type="unsigned int" spelling="bit_size" id="2401154043062"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403048134480"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2402348423620"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402847528389"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2402063453312"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403008668046"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402723363595"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402769035447"/>
			<DeclRefExpr type="void (png_byte *, png_uint_32, png_uint_32)" spelling="size_row" id="2403699741485"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2401481850976"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2402428549365"/>
			<DeclRefExpr type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2404227987601"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403462057496"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2404125679434"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403844237052"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402087086656"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2402273885122"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402152637364"/>
			<UnexposedExpr type="png_byte [1024]" spelling="std" id="2402023413439"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403107596455"/>
			<UnexposedExpr type="void (*)(png_byte *, png_uint_32, png_uint_32)" spelling="size_row" id="2403722810589"/>
			<UnexposedExpr type="png_byte [1024]" spelling="std" id="2403187471552"/>
			<UnexposedExpr type="unsigned int (*)(png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2403039438337"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400218959027"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400556042646"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="4586" comment_scope_end="4586"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Tests - individual test cases" comment_scope_start="4588" comment_scope_end="4599">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400350085368"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402415098558"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Like 'make_standard' but errors are deliberately introduced into the calls
 * to ensure that they get detected - it should not be possible to write an
 * invalid image with libpng!" comment_scope_start="4588" comment_scope_end="4599">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400350085368"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402415098558"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="introduced" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: the 'set' functions can probably all be made to take a
 * png_const_structp rather than a modifiable one." comment_scope_start="4588" comment_scope_end="4599">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400350085368"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402415098558"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0 is invalid..." comment_scope_start="4600" comment_scope_end="4604">
		<SYMBOLS>
			<FunctionDecl type="void (png_structp, png_infop)" spelling="sBIT0_error_fn" id="2403098962370"/>
			<TypeRef type="png_color_8" spelling="png_color_8" id="2403459474608"/>
			<VarDecl type="png_color_8" spelling="bad" id="2401661847336"/>
			<CallExpr type="void" spelling="png_set_sBIT" id="2401692265534"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2400956698518"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2401288476721"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2402757606235"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2403603836454"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2400047037508"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_color_8p)" spelling="png_set_sBIT" id="2403495752410"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400743623959"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402096377137"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2400287061095"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2403436071533"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2404016444320"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403536197286"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2403813553820"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401441279320"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_color_8p)" spelling="png_set_sBIT" id="2401745172189"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400868883092"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401842012723"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403041992765"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now we know the bit depth we can easily generate an invalid sBIT entry" comment_scope_start="4618" comment_scope_end="4622">
		<SYMBOLS>
			<FunctionDecl type="void (png_structp, png_infop)" spelling="sBIT_error_fn" id="2402443959473"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="void" spelling="png_set_sBIT" id="2403882262538"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2402705793316"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2400041328786"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2401851646144"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2402531028662"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2403689984619"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2404169675953"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_const_color_8p)" spelling="png_set_sBIT" id="2403540654598"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401288488259"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402249007807"/>
			<DeclRefExpr type="png_color_8" spelling="bad" id="2400244252341"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2402939009734"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400297014944"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2404057086271"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2401503765623"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401882697744"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403572253902"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401944238224"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_const_color_8p)" spelling="png_set_sBIT" id="2403430532889"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403813594175"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400243607448"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400518880773"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="the error is a warning..." comment_scope_start="4628" comment_scope_end="4628">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="warning" id="2401896348992"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no warnings makes these errors undetectable prior to 1.7.0" comment_scope_start="4631" comment_scope_end="4637">
		<SYMBOLS>
			<VarDecl type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2402589833592"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="sBIT0_error_fn" id="2403911335734"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="sBIT_error_fn" id="2403413662657"/>
			<StringLiteral type="char [32]" spelling="&quot;sBIT(0): failed to detect error&quot;" id="2403874415433"/>
			<StringLiteral type="char [38]" spelling="&quot;sBIT(too big): failed to detect error&quot;" id="2401336937049"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="sBIT0_error_fn" id="2401638138787"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="sBIT_error_fn" id="2402823805883"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="4664" comment_scope_end="4664">
		<SYMBOLS>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400170734119"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403738041098"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401815332249"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do tRNS" comment_scope_start="4665" comment_scope_end="4665">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_standard_palette" id="2403741106710"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2402159897996"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402053477973"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403604674803"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403522537240"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403552963256"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop, int, int)" spelling="init_standard_palette" id="2401327284888"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402718703670"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401818137852"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403386285547"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403701057350"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402545465031"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Time for a few errors; these are in various optional chunks, the
       * standard tests test the standard chunks pretty well." comment_scope_start="4667" comment_scope_end="4675">
		<SYMBOLS>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<VarDecl type="jmp_buf *" spelling="exception_prev_1" id="2403079495772"/>
			<VarDecl type="jmp_buf" spelling="exception_env_1" id="2400471405637"/>
			<CallExpr type="int" spelling="_setjmp" id="2402384453195"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception_prev_1" id="2401806794717"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400402084748"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402541519299"/>
			<DeclRefExpr type="jmp_buf" spelling="exception_env_1" id="2404059767918"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2400774843328"/>
			<DeclRefExpr type="jmp_buf" spelling="exception_env_1" id="2400761609860"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2402592175672"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception_prev_1" id="2401536368016"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403054943463"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400594042890"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400706328423"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400591886804"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402132581226"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2400798533224"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception_env_1" id="2401882900445"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Expect this to throw:" comment_scope_start="4676" comment_scope_end="4681">
		<SYMBOLS>
			<CallExpr type="void" spelling="fn" id="2403402757328"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402121980563"/>
			<DeclRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2402233142967"/>
			<DeclRefExpr type="int" spelling="test" id="2401027458500"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2404178500921"/>
			<DeclRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2402620326715"/>
			<DeclRefExpr type="int" spelling="test" id="2403028102479"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2401715394353"/>
			<DeclRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2400047214578"/>
			<DeclRefExpr type="int" spelling="test" id="2403543751713"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402637067993"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400193020973"/>
			<MemberRefExpr type="unsigned int" spelling="expect_error" id="2403040853129"/>
			<MemberRefExpr type="const unsigned int" spelling="warning" id="2402824043073"/>
			<MemberRefExpr type="unsigned int" spelling="expect_warning" id="2402477977285"/>
			<MemberRefExpr type="const unsigned int" spelling="warning" id="2402223154933"/>
			<MemberRefExpr type="unsigned int" spelling="saw_warning" id="2401728036453"/>
			<MemberRefExpr type="void (*const)(png_structp, png_infop)" spelling="fn" id="2403304045466"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401495538776"/>
			<UnexposedExpr type="unsigned int" spelling="warning" id="2400297697927"/>
			<UnexposedExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2402707474570"/>
			<UnexposedExpr type="int" spelling="test" id="2400462644759"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403586179252"/>
			<UnexposedExpr type="unsigned int" spelling="warning" id="2400923893250"/>
			<UnexposedExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2403761294324"/>
			<UnexposedExpr type="int" spelling="test" id="2400499201282"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403146717835"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="fn" id="2403150996619"/>
			<UnexposedExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2401367144799"/>
			<UnexposedExpr type="int" spelling="test" id="2403594251468"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404084816775"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403338936624"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Normally the error is only detected here:" comment_scope_start="4682" comment_scope_end="4684">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_write_info" id="2403618903935"/>
			<DeclRefExpr type="void (png_structrp, png_const_inforp)" spelling="png_write_info" id="2400468624770"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400478908621"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401128500232"/>
			<UnexposedExpr type="void (*)(png_structrp, png_const_inforp)" spelling="png_write_info" id="2400436312474"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401408996841"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403422555030"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401605339914"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And handle the case where it was only a warning:" comment_scope_start="4685" comment_scope_end="4688">
		<SYMBOLS>
			<CallExpr type="void" spelling="longjmp" id="2401415502085"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403900238751"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402957357060"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401835192372"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402384810493"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403563640059"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2402529575086"/>
			<MemberRefExpr type="unsigned int" spelling="expect_warning" id="2401442077715"/>
			<MemberRefExpr type="unsigned int" spelling="saw_warning" id="2403443775166"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400018532067"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2403416723100"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2401203205864"/>
			<UnexposedExpr type="int" spelling="expect_warning" id="2400651645319"/>
			<UnexposedExpr type="unsigned int" spelling="expect_warning" id="2400603212243"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400817951745"/>
			<UnexposedExpr type="int" spelling="saw_warning" id="2403083792853"/>
			<UnexposedExpr type="unsigned int" spelling="saw_warning" id="2403215186951"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400653141781"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2404280261659"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2403647426349"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402569406516"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401343867499"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400145413193"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If we get here there is a problem, we have success - no error or
          * no warning - when we shouldn't have success.  Log an error." comment_scope_start="4689" comment_scope_end="4691"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="4692" comment_scope_end="4692">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2401918462823"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2402169018338"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2400582149350"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402040113908"/>
			<DeclRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2401846284862"/>
			<DeclRefExpr type="int" spelling="test" id="2402183242374"/>
			<MemberRefExpr type="const char *const" spelling="msg" id="2401193038922"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2401762478599"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401117453920"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400653792020"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404235618779"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2401947320567"/>
			<UnexposedExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="error_test" id="2400892791267"/>
			<UnexposedExpr type="int" spelling="test" id="2404203674544"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="expected exit" comment_scope_start="4696" comment_scope_end="4697"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And clear these flags" comment_scope_start="4701" comment_scope_end="4708">
		<SYMBOLS>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403901649891"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403280223330"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403882550678"/>
			<MemberRefExpr type="unsigned int" spelling="expect_warning" id="2402688880847"/>
			<MemberRefExpr type="unsigned int" spelling="expect_error" id="2401108962804"/>
			<MemberRefExpr type="unsigned int" spelling="expect_error" id="2400596186607"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400986978697"/>
			<UnexposedExpr type="unsigned int" spelling="expect_error" id="2401975075850"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403113741777"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404069245820"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="clear" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now write the whole image, just to make sure that the detected, or
          * undetected, error has not created problems inside libpng.  This
          * doesn't work if there was a png_error in png_write_info because that
          * can abort before PLTE was written." comment_scope_start="4709" comment_scope_end="4736">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="int" spelling="npasses" id="2402793062284"/>
			<VarDecl type="int" spelling="pass" id="2401467977590"/>
			<VarDecl type="png_uint_32" spelling="y" id="2400083133867"/>
			<VarDecl type="png_byte [1024]" spelling="buffer" id="2400253356729"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2402334564082"/>
			<CallExpr type="size_t" spelling="transform_rowsize" id="2401950024703"/>
			<CallExpr type="void" spelling="png_error" id="2403910891923"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2401884582792"/>
			<CallExpr type="int" spelling="npasses_from_interlace_type" id="2400872317348"/>
			<CallExpr type="void" spelling="png_error" id="2401932718143"/>
			<CallExpr type="void" spelling="transform_row" id="2400106459341"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2403030040806"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400209680320"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402875387646"/>
			<DeclRefExpr type="size_t (png_const_structp, png_byte, png_byte)" spelling="transform_rowsize" id="2401269232246"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400214104166"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2404005620434"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401558779206"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401029476916"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404194631592"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2400276457172"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400310697559"/>
			<DeclRefExpr type="int" spelling="npasses" id="2400421120225"/>
			<DeclRefExpr type="int (png_const_structp, int)" spelling="npasses_from_interlace_type" id="2402821018147"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400213338464"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2404288463133"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400078590016"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401551444022"/>
			<DeclRefExpr type="int" spelling="pass" id="2400075511774"/>
			<DeclRefExpr type="int" spelling="pass" id="2403702470647"/>
			<DeclRefExpr type="int" spelling="npasses" id="2403857236832"/>
			<DeclRefExpr type="int" spelling="pass" id="2400017213333"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401783994578"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402409174791"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2402919098237"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400755289173"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2402936487855"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401772836475"/>
			<DeclRefExpr type="png_byte [1024]" spelling="buffer" id="2400580797355"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402476509019"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402206053539"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402263169535"/>
			<StringLiteral type="char [19]" spelling="&quot;row size incorrect&quot;" id="2400138045328"/>
			<StringLiteral type="char [41]" spelling="&quot;write: png_set_interlace_handling failed&quot;" id="2401132889805"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2400215254153"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402756321653"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403837008949"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403291835553"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403147955165"/>
			<UnexposedExpr type="size_t (*)(png_const_structp, png_byte, png_byte)" spelling="transform_rowsize" id="2403346779213"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401581494130"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402837853156"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401254352827"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400035889515"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403007455492"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401422874739"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401526921627"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2404017273918"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403995224785"/>
			<UnexposedExpr type="int" spelling="npasses" id="2404029755880"/>
			<UnexposedExpr type="int (*)(png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403461989303"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401774778351"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402786902171"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2403813743210"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401025047584"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401430996434"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401697196457"/>
			<UnexposedExpr type="int" spelling="pass" id="2400105866057"/>
			<UnexposedExpr type="int" spelling="npasses" id="2400119129914"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2401019923993"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2403195110414"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2403179580891"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402436897311"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402307217781"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2400748507113"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402505292437"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400902270848"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402289693312"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="abort" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png_error"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If do_own_interlace *and* the image is interlaced we
                      * need a reduced interlace row; this may be reduced to
                      * empty." comment_scope_start="4737" comment_scope_end="4757"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The row must not be written if it doesn't exist,
                         * notice that there are two conditions here, either the
                         * row isn't ever in the pass or the row would be but
                         * isn't wide enough to contribute any pixels.  In fact
                         * the wPass test can be used to skip the whole y loop
                         * in this case." comment_scope_start="4743" comment_scope_end="4753"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="data always bigendian" comment_scope_start="4754" comment_scope_end="4754"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_own_interlace" comment_scope_start="4758" comment_scope_end="4758"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="image writing" comment_scope_start="4763" comment_scope_end="4763"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following deletes the file that was just written." comment_scope_start="4768" comment_scope_end="4770">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_write_reset" id="2402372245765"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_write_reset" id="2401447441467"/>
			<DeclRefExpr type="png_store *const" spelling="ps" id="2403718774300"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_write_reset" id="2402050507465"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402180577223"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="keep going" comment_scope_start="4806" comment_scope_end="4806"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_WARNINGS_SUPPORTED" comment_scope_start="4808" comment_scope_end="4808"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="else there are no cases that work!" comment_scope_start="4813" comment_scope_end="4813"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need to do this here because we just write in this test." comment_scope_start="4814" comment_scope_end="4834">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="perform_error_test" id="2401013530791"/>
			<CallExpr type="size_t" spelling="safecat" id="2402185035209"/>
			<CallExpr type="int" spelling="make_errors" id="2402336278895"/>
			<CallExpr type="int" spelling="make_errors" id="2403111801320"/>
			<CallExpr type="int" spelling="make_errors" id="2400035140697"/>
			<CallExpr type="int" spelling="make_errors" id="2404243502041"/>
			<CallExpr type="int" spelling="make_errors" id="2400500070005"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403866634334"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402051339164"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402352758333"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2402355419126"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401340585783"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2400912029195"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403797425132"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2400767982469"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403671644171"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2401104682496"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403420018379"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2402447251820"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400271468364"/>
			<StringLiteral type="char [11]" spelling="&quot;error test&quot;" id="2403695709685"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2403766530488"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403824479685"/>
			<MemberRefExpr type="char [128]" spelling="test" id="2401498919354"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403536279365"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401853106918"/>
			<UnexposedExpr type="char *" spelling="test" id="2403076186999"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401170407225"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401538781740"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2403674634579"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403386879765"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2402367216885"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401978301759"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2400782299052"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400940673473"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2402380758741"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404122509553"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="make_errors" id="2403481917175"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402395760518"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is just to validate the internal PNG formatting code - if this fails
 * then the warning messages the library outputs will probably be garbage." comment_scope_start="4836" comment_scope_end="4842">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<ParmDecl type="png_store *" spelling="ps" id="2400734761074"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="garbage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The handle into the formatting code is the RFC1123 support; this test does
    * nothing if that is compiled out." comment_scope_start="4843" comment_scope_end="4863">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_time" spelling="png_time" id="2400712047262"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2400374150730"/>
			<VarDecl type="png_store *" spelling="fault" id="2401074614483"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2401731618633"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2401992247110"/>
			<VarDecl type="png_const_charp" spelling="correct" id="2401312571312"/>
			<VarDecl type="png_const_charp" spelling="result" id="2402798685245"/>
			<VarDecl type="char [29]" spelling="timestring" id="2400265713908"/>
			<VarDecl type="png_structp" spelling="pp" id="2400720904381"/>
			<VarDecl type="png_time" spelling="pt" id="2403122689891"/>
			<CallExpr type="int" spelling="_setjmp" id="2402356296227"/>
			<CallExpr type="png_structp" spelling="set_store_for_write" id="2402683091857"/>
			<CallExpr type="void" spelling="longjmp" id="2404105539986"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400235990324"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2400232970265"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400781541894"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2404186863303"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2400229033332"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2400386705431"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2400043408859"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402757227584"/>
			<DeclRefExpr type="png_structp (png_store *, png_infopp, const char *)" spelling="set_store_for_write" id="2402038124352"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2400111762186"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402407297988"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2403441908996"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403465817776"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401898547316"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2401285804547"/>
			<StringLiteral type="char [27]" spelling="&quot;29 Aug 2079 13:53:60 +0000&quot;" id="2401542466955"/>
			<StringLiteral type="char [23]" spelling="&quot;libpng formatting test&quot;" id="2401396700821"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403281102145"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402629354542"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403396238108"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401949377079"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2400769833977"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2401858144877"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2401405388665"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400879662625"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401944429815"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2400337630936"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2402736855367"/>
			<UnexposedExpr type="png_structp (*)(png_store *, png_infopp, const char *)" spelling="set_store_for_write" id="2402711978092"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401371404546"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401530889100"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2401257380483"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2401746314746"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400408033204"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402502361897"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400550269309"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Arbitrary settings:" comment_scope_start="4864" comment_scope_end="4869">
		<SYMBOLS>
			<DeclRefExpr type="png_time" spelling="pt" id="2402982813210"/>
			<DeclRefExpr type="png_time" spelling="pt" id="2401943789367"/>
			<DeclRefExpr type="png_time" spelling="pt" id="2402185490229"/>
			<DeclRefExpr type="png_time" spelling="pt" id="2401402950308"/>
			<DeclRefExpr type="png_time" spelling="pt" id="2404074699863"/>
			<MemberRefExpr type="png_uint_16" spelling="year" id="2400211266520"/>
			<MemberRefExpr type="png_byte" spelling="month" id="2401559298856"/>
			<MemberRefExpr type="png_byte" spelling="day" id="2400470807460"/>
			<MemberRefExpr type="png_byte" spelling="hour" id="2404001152735"/>
			<MemberRefExpr type="png_byte" spelling="minute" id="2402811990586"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="a leap second" comment_scope_start="4870" comment_scope_end="4870">
		<SYMBOLS>
			<DeclRefExpr type="png_time" spelling="pt" id="2402499833848"/>
			<MemberRefExpr type="png_byte" spelling="second" id="2402739800048"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Because we want to use the same code in both the progressive reader and the
 * sequential reader it is necessary to deal with the fact that the progressive
 * reader callbacks only have one parameter (png_get_progressive_ptr()), so this
 * must contain all the test parameters and all the local variables directly
 * accessible to the sequential reader implementation.
 *
 * The technique adopted is to reinvent part of what Dijkstra termed a
 * 'display'; an array of pointers to the stack frames of enclosing functions so
 * that a nested function definition can access the local (C auto) variables of
 * the functions that contain its definition.  In fact C provides the first
 * pointer (the local variables - the stack frame pointer) and the last (the
 * global variables - the BCPL global vector typically implemented as global
 * addresses), this code requires one more pointer to make the display - the
 * local variables (and function call parameters) of the function that actually
 * invokes either the progressive or sequential reader.
 *
 * Perhaps confusingly this technique is confounded with classes - the
 * 'standard_display' defined here is sub-classed as the 'gamma_display' below.
 * A gamma_display is a standard_display, taking advantage of the ANSI-C
 * requirement that the pointer to the first member of a structure must be the
 * same as the pointer to the structure.  This allows us to reuse standard_
 * functions in the gamma test code; something that could not be done with
 * nested functions!" comment_scope_start="4912" comment_scope_end="4969">
		<SYMBOLS>
			<TypedefDecl type="standard_display" spelling="standard_display" id="2402374144020"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<FieldDecl type="png_store *" spelling="ps" id="2401620492864"/>
			<FieldDecl type="png_byte" spelling="colour_type" id="2403314650192"/>
			<FieldDecl type="png_byte" spelling="bit_depth" id="2403496372007"/>
			<FieldDecl type="png_byte" spelling="red_sBIT" id="2402391306886"/>
			<FieldDecl type="png_byte" spelling="green_sBIT" id="2400785001368"/>
			<FieldDecl type="png_byte" spelling="blue_sBIT" id="2403851936239"/>
			<FieldDecl type="png_byte" spelling="alpha_sBIT" id="2403231014050"/>
			<FieldDecl type="png_byte" spelling="interlace_type" id="2402559403423"/>
			<FieldDecl type="png_byte" spelling="filler" id="2403299479424"/>
			<FieldDecl type="png_uint_32" spelling="id" id="2402705554551"/>
			<FieldDecl type="png_uint_32" spelling="w" id="2401116154719"/>
			<FieldDecl type="png_uint_32" spelling="h" id="2401769786569"/>
			<FieldDecl type="int" spelling="npasses" id="2401716856756"/>
			<FieldDecl type="png_uint_32" spelling="pixel_size" id="2401938149330"/>
			<FieldDecl type="png_uint_32" spelling="bit_width" id="2402596962651"/>
			<FieldDecl type="size_t" spelling="cbRow" id="2404067275398"/>
			<FieldDecl type="int" spelling="do_interlace" id="2401414451655"/>
			<FieldDecl type="int" spelling="littleendian" id="2402226003741"/>
			<FieldDecl type="int" spelling="is_transparent" id="2401794077903"/>
			<FieldDecl type="int" spelling="has_tRNS" id="2403762633091"/>
			<FieldDecl type="int" spelling="speed" id="2404126352723"/>
			<FieldDecl type="int" spelling="use_update_info" id="2400900102063"/>
			<FieldDecl type="png_uint_16" spelling="red" id="2402761892384"/>
			<FieldDecl type="png_uint_16" spelling="green" id="2403203942037"/>
			<FieldDecl type="png_uint_16" spelling="blue" id="2403152348375"/>
			<FieldDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2402060939154"/>
			<FieldDecl type="int" spelling="npalette" id="2401871377706"/>
			<FieldDecl type="store_palette" spelling="palette" id="2401258377953"/>
			<StructDecl type="struct standard_display" spelling="standard_display" id="2402090658489"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="contain" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="dijkstra" type=" 'Divide and Conquer/ Greedy Algorithms"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="pointers" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="stack" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="contain" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="stack" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="vector" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="ansi-c"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test parameters (passed to the function)" comment_scope_start="4938" comment_scope_end="4938">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<FieldDecl type="png_store *" spelling="ps" id="2401620492864"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Input data sBIT values." comment_scope_start="4941" comment_scope_end="4941">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="red_sBIT" id="2402391306886"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Output has a filler" comment_scope_start="4946" comment_scope_end="4946">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="filler" id="2403299479424"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Calculated file ID" comment_scope_start="4947" comment_scope_end="4947">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="id" id="2402705554551"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Width of image" comment_scope_start="4948" comment_scope_end="4948">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="w" id="2401116154719"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Height of image" comment_scope_start="4949" comment_scope_end="4949">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="h" id="2401769786569"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of interlaced passes" comment_scope_start="4950" comment_scope_end="4950">
		<SYMBOLS>
			<FieldDecl type="int" spelling="npasses" id="2401716856756"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Width of one pixel in bits" comment_scope_start="4951" comment_scope_end="4951">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="pixel_size" id="2401938149330"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Width of output row in bits" comment_scope_start="4952" comment_scope_end="4952">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<FieldDecl type="png_uint_32" spelling="bit_width" id="2402596962651"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Bytes in a row of the output image" comment_scope_start="4953" comment_scope_end="4953">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<FieldDecl type="size_t" spelling="cbRow" id="2404067275398"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do interlacing internally" comment_scope_start="4954" comment_scope_end="4954">
		<SYMBOLS>
			<FieldDecl type="int" spelling="do_interlace" id="2401414451655"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlacing"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="App (row) data is little endian" comment_scope_start="4955" comment_scope_end="4955">
		<SYMBOLS>
			<FieldDecl type="int" spelling="littleendian" id="2402226003741"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="little endian" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="app"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Transparency information was present." comment_scope_start="4956" comment_scope_end="4956">
		<SYMBOLS>
			<FieldDecl type="int" spelling="is_transparent" id="2401794077903"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="color type GRAY or RGB with a tRNS chunk." comment_scope_start="4957" comment_scope_end="4957">
		<SYMBOLS>
			<FieldDecl type="int" spelling="has_tRNS" id="2403762633091"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Doing a speed test" comment_scope_start="4958" comment_scope_end="4958">
		<SYMBOLS>
			<FieldDecl type="int" spelling="speed" id="2404126352723"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Call update_info, not start_image" comment_scope_start="4959" comment_scope_end="4959">
		<SYMBOLS>
			<FieldDecl type="int" spelling="use_update_info" id="2400900102063"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The transparent color, if set." comment_scope_start="4965" comment_scope_end="4965">
		<SYMBOLS>
			<FieldDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2402060939154"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="transparent"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Number of entries in the palette." comment_scope_start="4966" comment_scope_end="4966">
		<SYMBOLS>
			<FieldDecl type="int" spelling="npalette" id="2401871377706"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="All the rest are filled in after the read_info:" comment_scope_start="4990" comment_scope_end="5002">
		<SYMBOLS>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403092543417"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402712902154"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403510865289"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401563832946"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402149625207"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401946426625"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402681996112"/>
			<DeclRefExpr type="int" spelling="do_interlace" id="2400913267254"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402075380992"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402826566862"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400832495323"/>
			<DeclRefExpr type="png_store *" spelling="ps" id="2404117450653"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403500853662"/>
			<DeclRefExpr type="int" spelling="use_update_info" id="2401186810518"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402334572717"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2402709986563"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2400020839871"/>
			<MemberRefExpr type="int" spelling="npasses" id="2403104125919"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2403183448939"/>
			<MemberRefExpr type="png_uint_32" spelling="bit_width" id="2404101511114"/>
			<MemberRefExpr type="size_t" spelling="cbRow" id="2400928093253"/>
			<MemberRefExpr type="int" spelling="do_interlace" id="2403261932493"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2404035583437"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2403998076106"/>
			<MemberRefExpr type="int" spelling="speed" id="2401160580222"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2402338934073"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401053933327"/>
			<MemberRefExpr type="int" spelling="npalette" id="2400060533452"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400216769275"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400378656594"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400491627870"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400182881949"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402191941800"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400130040329"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400423852907"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2402432789683"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400525779523"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403324672109"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402881890805"/>
			<UnexposedExpr type="int" spelling="speed" id="2401262998579"/>
			<UnexposedExpr type="unsigned int" spelling="speed" id="2400178648255"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400538336256"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401071856469"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2401031234188"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401885785541"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Preset the transparent color to black:" comment_scope_start="5003" comment_scope_end="5004">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400389010705"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2402288342150"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400669385148"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402725088607"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2400404616543"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2402709565724"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402256197624"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401135741742"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402486191289"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="transparent"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Preset the palette to full intensity/opaque throughout:" comment_scope_start="5005" comment_scope_end="5007">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2404262393792"/>
			<CallExpr type="void *" spelling="memset" id="2401144891153"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400538107365"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402187484342"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402996048408"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2403701801159"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2402125672478"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402781633418"/>
			<UnexposedExpr type="void *" spelling="palette" id="2402092139228"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2401039320089"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401148469298"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401877277643"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="full" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initialize the palette fields - this must be done later because the palette
 * comes from the particular png_store_file that is selected." comment_scope_start="5009" comment_scope_end="5016">
		<SYMBOLS>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<VarDecl type="store_palette_entry *" spelling="palette" id="2403435167570"/>
			<ParmDecl type="standard_display *" spelling="dp" id="2402602238225"/>
			<CallExpr type="store_palette_entry *" spelling="store_current_palette" id="2403973716110"/>
			<DeclRefExpr type="store_palette_entry *(png_store *, int *)" spelling="store_current_palette" id="2403671012070"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401948683419"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401379560364"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402641850707"/>
			<MemberRefExpr type="int" spelling="npalette" id="2403523062471"/>
			<UnexposedExpr type="store_palette_entry *(*)(png_store *, int *)" spelling="store_current_palette" id="2400287024037"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403462105219"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401064352291"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2404119673444"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The remaining entries remain white/opaque." comment_scope_start="5017" comment_scope_end="5037">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2401870518807"/>
			<CallExpr type="void *" spelling="memcpy" id="2402758074114"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403113961322"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404086474905"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2401226434484"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402901755010"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2403932408007"/>
			<DeclRefExpr type="int" spelling="i" id="2401158294673"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2402465436773"/>
			<DeclRefExpr type="int" spelling="i" id="2402355527537"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2400338057282"/>
			<DeclRefExpr type="int" spelling="i" id="2403506383965"/>
			<DeclRefExpr type="int" spelling="i" id="2403374573824"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401958395301"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401294716336"/>
			<MemberRefExpr type="int" spelling="npalette" id="2404183267573"/>
			<MemberRefExpr type="int" spelling="npalette" id="2402925405404"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2400018014230"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401127959201"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2402780634436"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400141162786"/>
			<UnexposedExpr type="int" spelling="npalette" id="2402954072071"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402826258247"/>
			<UnexposedExpr type="int" spelling="npalette" id="2402888762914"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403298412827"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2401486419997"/>
			<UnexposedExpr type="void *" spelling="palette" id="2400462750566"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2401800970495"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401261300145"/>
			<UnexposedExpr type="const void *" spelling="palette" id="2400976664086"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2400211041459"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2403644657033"/>
			<UnexposedExpr type="int" spelling="i" id="2402796205008"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2403700233602"/>
			<UnexposedExpr type="int" spelling="alpha" id="2400357027444"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2401226372400"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2401478291147"/>
			<UnexposedExpr type="int" spelling="i" id="2402206560155"/>
			<UnexposedExpr type="int" spelling="i" id="2400870704199"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401796809135"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403209582686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for a non-opaque palette entry:" comment_scope_start="5023" comment_scope_end="5028">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="i" id="2402355527537"/>
			<DeclRefExpr type="store_palette_entry *" spelling="palette" id="2400338057282"/>
			<DeclRefExpr type="int" spelling="i" id="2403506383965"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401127959201"/>
			<UnexposedExpr type="int" spelling="alpha" id="2400357027444"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2401226372400"/>
			<UnexposedExpr type="store_palette_entry *" spelling="palette" id="2401478291147"/>
			<UnexposedExpr type="int" spelling="i" id="2402206560155"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="GCC can't handle the more obviously optimizable version." comment_scope_start="5029" comment_scope_end="5037">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="i" id="2403374573824"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401958395301"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401294716336"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2402780634436"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400141162786"/>
			<UnexposedExpr type="int" spelling="i" id="2400870704199"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401796809135"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403209582686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gcc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Utility to read the palette from the PNG file and convert it into
 * store_palette format.  This returns 1 if there is any transparency in the
 * palette (it does not check for a transparent colour in the non-palette case.)" comment_scope_start="5040" comment_scope_end="5068">
		<SYMBOLS>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="png_colorp" spelling="png_colorp" id="2401537065769"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="png_colorp" spelling="pal" id="2401050074549"/>
			<VarDecl type="png_bytep" spelling="trans_alpha" id="2400599419385"/>
			<VarDecl type="int" spelling="num" id="2400293596608"/>
			<VarDecl type="int" spelling="i" id="2402557884888"/>
			<ParmDecl type="store_palette" spelling="palette" id="2403146445004"/>
			<ParmDecl type="int *" spelling="npalette" id="2400370788387"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403652259654"/>
			<ParmDecl type="png_infop" spelling="pi" id="2403947801094"/>
			<CallExpr type="png_uint_32" spelling="png_get_PLTE" id="2404257138991"/>
			<CallExpr type="void" spelling="png_error" id="2403457280122"/>
			<DeclRefExpr type="png_colorp" spelling="pal" id="2401937759738"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2401049869999"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_colorp *, int *)" spelling="png_get_PLTE" id="2401052689799"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401992177769"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403872478187"/>
			<DeclRefExpr type="png_colorp" spelling="pal" id="2400955147008"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2400201711416"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2402186979460"/>
			<DeclRefExpr type="int" spelling="i" id="2404143317490"/>
			<DeclRefExpr type="int" spelling="i" id="2401147468735"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400532188114"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400331697445"/>
			<DeclRefExpr type="int" spelling="i" id="2404217145370"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400308492052"/>
			<DeclRefExpr type="int" spelling="i" id="2404277172357"/>
			<DeclRefExpr type="png_colorp" spelling="pal" id="2402439508553"/>
			<DeclRefExpr type="int" spelling="i" id="2402468482796"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2403941036917"/>
			<DeclRefExpr type="int" spelling="i" id="2402212040041"/>
			<DeclRefExpr type="png_colorp" spelling="pal" id="2403512363888"/>
			<DeclRefExpr type="int" spelling="i" id="2403361974849"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2403450555828"/>
			<DeclRefExpr type="int" spelling="i" id="2402297648790"/>
			<DeclRefExpr type="png_colorp" spelling="pal" id="2400418261017"/>
			<DeclRefExpr type="int" spelling="i" id="2403346088695"/>
			<StringLiteral type="char [29]" spelling="&quot;validate: invalid PLTE count&quot;" id="2402116321170"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401374540959"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2403088818528"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2402059456847"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2403520750624"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2401202230586"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2401551633587"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2402642463202"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_colorp *, int *)" spelling="png_get_PLTE" id="2401213134047"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402413011773"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400512326738"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2400691389668"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2402181572564"/>
			<UnexposedExpr type="int" spelling="i" id="2401209858523"/>
			<UnexposedExpr type="int" spelling="i" id="2400958452159"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401728436534"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400558190005"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400208505447"/>
			<UnexposedExpr type="int" spelling="i" id="2401716332340"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2401493358564"/>
			<UnexposedExpr type="png_colorp" spelling="pal" id="2402864947005"/>
			<UnexposedExpr type="int" spelling="i" id="2401104278096"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401598410882"/>
			<UnexposedExpr type="int" spelling="i" id="2400024307740"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2402576767154"/>
			<UnexposedExpr type="png_colorp" spelling="pal" id="2401794471153"/>
			<UnexposedExpr type="int" spelling="i" id="2400890421308"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2404192845973"/>
			<UnexposedExpr type="int" spelling="i" id="2400635506426"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403760667614"/>
			<UnexposedExpr type="png_colorp" spelling="pal" id="2400412913247"/>
			<UnexposedExpr type="int" spelling="i" id="2403727838374"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="utility" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="transparent"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Mark the remainder of the entries with a flag value (other than
       * white/opaque which is the flag value stored above.)" comment_scope_start="5069" comment_scope_end="5073">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2400182474726"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2403405090140"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2401807767093"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2403360684512"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2400309897221"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2402250682024"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2401030069559"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401714160599"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2403146653766"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2401047816091"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2403345070222"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remainder" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!png_get_PLTE" comment_scope_start="5075" comment_scope_end="5075"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="But there is no palette, so record this:" comment_scope_start="5079" comment_scope_end="5082">
		<SYMBOLS>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<CallExpr type="void *" spelling="memset" id="2403858856041"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2402765126831"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2403092085753"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2403835561900"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2400970714282"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2401392731603"/>
			<UnexposedExpr type="void *" spelling="palette" id="2400836926615"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402916313457"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="force error below" comment_scope_start="5085" comment_scope_end="5085">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="num" id="2400606936186"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="returns 1 for a transparent color" comment_scope_start="5087" comment_scope_end="5087">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2401792238564"/>
			<DeclRefExpr type="int" spelling="num" id="2402676279244"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2400905170917"/>
			<UnexposedExpr type="int" spelling="num" id="2401482903160"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="transparent"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Oops, if a palette tRNS gets expanded png_read_update_info (at least so
       * far as 1.5.4) does not remove the trans_alpha pointer, only num_trans,
       * so in the above call we get a success, we get a pointer (who knows what
       * to) and we get num_trans == 0:" comment_scope_start="5088" comment_scope_end="5116">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2402106884064"/>
			<CallExpr type="void" spelling="png_error" id="2403104263417"/>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2402706951414"/>
			<DeclRefExpr type="int" spelling="num" id="2401631103004"/>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2404153597753"/>
			<DeclRefExpr type="int" spelling="num" id="2400398452644"/>
			<DeclRefExpr type="int" spelling="num" id="2402674598674"/>
			<DeclRefExpr type="int" spelling="num" id="2401856179891"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2401850730146"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403138246850"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400788922368"/>
			<DeclRefExpr type="int" spelling="i" id="2403260100718"/>
			<DeclRefExpr type="int" spelling="i" id="2402774415503"/>
			<DeclRefExpr type="int" spelling="num" id="2401864971251"/>
			<DeclRefExpr type="int" spelling="i" id="2401778064913"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400143061851"/>
			<DeclRefExpr type="int" spelling="i" id="2402031447908"/>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2403871653592"/>
			<DeclRefExpr type="int" spelling="i" id="2403095047749"/>
			<DeclRefExpr type="int" spelling="num" id="2402359431398"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2403796841896"/>
			<DeclRefExpr type="int" spelling="i" id="2401686018931"/>
			<DeclRefExpr type="int" spelling="num" id="2400653590469"/>
			<DeclRefExpr type="int" spelling="i" id="2403547657830"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400631353186"/>
			<DeclRefExpr type="int" spelling="i" id="2404153998171"/>
			<DeclRefExpr type="int" spelling="i" id="2401754986423"/>
			<DeclRefExpr type="int" spelling="i" id="2401926708219"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400895013673"/>
			<DeclRefExpr type="int" spelling="i" id="2401548062821"/>
			<StringLiteral type="char [51]" spelling="&quot;validate: unexpected png_get_tRNS (palette) result&quot;" id="2401918654988"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401353267345"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2402880985522"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401938574475"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2402096395367"/>
			<UnexposedExpr type="int" spelling="num" id="2403520620693"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2403728539806"/>
			<UnexposedExpr type="int" spelling="num" id="2401306409977"/>
			<UnexposedExpr type="int" spelling="num" id="2401803678763"/>
			<UnexposedExpr type="int" spelling="num" id="2402439384635"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2404273042842"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401691421243"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401820756993"/>
			<UnexposedExpr type="int" spelling="i" id="2401199786745"/>
			<UnexposedExpr type="int" spelling="num" id="2402399279530"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400710274556"/>
			<UnexposedExpr type="int" spelling="i" id="2401412869072"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2403368923401"/>
			<UnexposedExpr type="int" spelling="i" id="2401535664260"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2400867584611"/>
			<UnexposedExpr type="int" spelling="i" id="2400620646753"/>
			<UnexposedExpr type="int" spelling="num" id="2400311727321"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2403966266656"/>
			<UnexposedExpr type="int" spelling="i" id="2403052607805"/>
			<UnexposedExpr type="int" spelling="i" id="2401369290876"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402157845146"/>
			<UnexposedExpr type="int" spelling="i" id="2403203925890"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: fix this in libpng." comment_scope_start="5093" comment_scope_end="5093">
		<SYMBOLS>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2402706951414"/>
			<DeclRefExpr type="int" spelling="num" id="2401631103004"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2402096395367"/>
			<UnexposedExpr type="int" spelling="num" id="2403520620693"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Any of these are crash-worthy - given the implementation of
       * png_get_tRNS up to 1.5 an app won't crash if it just checks the
       * result above and fails to check that the variables it passed have
       * actually been filled in!  Note that if the app were to pass the
       * last, png_color_16p, variable too it couldn't rely on this." comment_scope_start="5097" comment_scope_end="5112">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2403104263417"/>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2404153597753"/>
			<DeclRefExpr type="int" spelling="num" id="2400398452644"/>
			<DeclRefExpr type="int" spelling="num" id="2402674598674"/>
			<DeclRefExpr type="int" spelling="num" id="2401856179891"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2401850730146"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403138246850"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400788922368"/>
			<DeclRefExpr type="int" spelling="i" id="2403260100718"/>
			<DeclRefExpr type="int" spelling="i" id="2402774415503"/>
			<DeclRefExpr type="int" spelling="num" id="2401864971251"/>
			<DeclRefExpr type="int" spelling="i" id="2401778064913"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400143061851"/>
			<DeclRefExpr type="int" spelling="i" id="2402031447908"/>
			<DeclRefExpr type="png_bytep" spelling="trans_alpha" id="2403871653592"/>
			<DeclRefExpr type="int" spelling="i" id="2403095047749"/>
			<DeclRefExpr type="int" spelling="num" id="2402359431398"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2403796841896"/>
			<DeclRefExpr type="int" spelling="i" id="2401686018931"/>
			<DeclRefExpr type="int" spelling="num" id="2400653590469"/>
			<DeclRefExpr type="int" spelling="i" id="2403547657830"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400631353186"/>
			<DeclRefExpr type="int" spelling="i" id="2404153998171"/>
			<DeclRefExpr type="int" spelling="i" id="2401754986423"/>
			<DeclRefExpr type="int" spelling="i" id="2401926708219"/>
			<StringLiteral type="char [51]" spelling="&quot;validate: unexpected png_get_tRNS (palette) result&quot;" id="2401918654988"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401353267345"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2402880985522"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2403728539806"/>
			<UnexposedExpr type="int" spelling="num" id="2401306409977"/>
			<UnexposedExpr type="int" spelling="num" id="2401803678763"/>
			<UnexposedExpr type="int" spelling="num" id="2402439384635"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2404273042842"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401691421243"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401820756993"/>
			<UnexposedExpr type="int" spelling="i" id="2401199786745"/>
			<UnexposedExpr type="int" spelling="num" id="2402399279530"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400710274556"/>
			<UnexposedExpr type="int" spelling="i" id="2401412869072"/>
			<UnexposedExpr type="png_bytep" spelling="trans_alpha" id="2403368923401"/>
			<UnexposedExpr type="int" spelling="i" id="2401535664260"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2400867584611"/>
			<UnexposedExpr type="int" spelling="i" id="2400620646753"/>
			<UnexposedExpr type="int" spelling="num" id="2400311727321"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2403966266656"/>
			<UnexposedExpr type="int" spelling="i" id="2403052607805"/>
			<UnexposedExpr type="int" spelling="i" id="2401369290876"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="app"/>
			<PROBLEM_DOMAIN word="app"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="flag value" comment_scope_start="5113" comment_scope_end="5113">
		<SYMBOLS>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400895013673"/>
			<DeclRefExpr type="int" spelling="i" id="2401548062821"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401938574475"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402157845146"/>
			<UnexposedExpr type="int" spelling="i" id="2403203925890"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="transparency" comment_scope_start="5115" comment_scope_end="5115"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="No palette transparency - just set the alpha channel to opaque." comment_scope_start="5120" comment_scope_end="5126">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2403531478564"/>
			<DeclRefExpr type="int" spelling="i" id="2403755772152"/>
			<DeclRefExpr type="int" spelling="num" id="2401625446585"/>
			<DeclRefExpr type="int *" spelling="npalette" id="2400412125708"/>
			<DeclRefExpr type="int" spelling="i" id="2401882593872"/>
			<DeclRefExpr type="int" spelling="num" id="2402348559825"/>
			<DeclRefExpr type="int" spelling="i" id="2402387920595"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2401166204249"/>
			<DeclRefExpr type="int" spelling="i" id="2401993502790"/>
			<DeclRefExpr type="int" spelling="i" id="2403432300925"/>
			<DeclRefExpr type="int" spelling="i" id="2402154700006"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2400739988735"/>
			<UnexposedExpr type="int *" spelling="npalette" id="2402742578362"/>
			<UnexposedExpr type="int" spelling="i" id="2403318119526"/>
			<UnexposedExpr type="int" spelling="num" id="2403690371818"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402572495263"/>
			<UnexposedExpr type="int" spelling="i" id="2403630157977"/>
			<UnexposedExpr type="int" spelling="i" id="2402771692269"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="flag value" comment_scope_start="5127" comment_scope_end="5127">
		<SYMBOLS>
			<DeclRefExpr type="store_palette" spelling="palette" id="2402183179456"/>
			<DeclRefExpr type="int" spelling="i" id="2403250983929"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2403103361789"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402265935296"/>
			<UnexposedExpr type="int" spelling="i" id="2404202231594"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no transparency" comment_scope_start="5129" comment_scope_end="5129"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Utility to validate the palette if it should not have changed (the
 * non-transform case)." comment_scope_start="5133" comment_scope_end="5158">
		<SYMBOLS>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="int" spelling="npalette" id="2402935661808"/>
			<VarDecl type="store_palette" spelling="palette" id="2402400371474"/>
			<VarDecl type="size_t" spelling="pos" id="2402081090330"/>
			<VarDecl type="char [64]" spelling="msg" id="2402610084069"/>
			<ParmDecl type="standard_display *" spelling="dp" id="2400862816758"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403904886707"/>
			<ParmDecl type="png_infop" spelling="pi" id="2403396691373"/>
			<CallExpr type="int" spelling="read_palette" id="2400751851592"/>
			<CallExpr type="void" spelling="png_error" id="2400757662731"/>
			<CallExpr type="size_t" spelling="safecat" id="2401245851307"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402058880095"/>
			<CallExpr type="size_t" spelling="safecat" id="2401199410174"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401452245386"/>
			<CallExpr type="void" spelling="png_error" id="2400051693702"/>
			<DeclRefExpr type="int (struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2404284281199"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2402229049707"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402206716600"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403707430546"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404138008207"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402378999604"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401086995383"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400288924155"/>
			<DeclRefExpr type="int" spelling="npalette" id="2402809588884"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401553465478"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402356610182"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400708933250"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400144945925"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2403794479807"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402406200918"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400975452812"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403194205676"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401468690537"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402919120027"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400023564766"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402159700609"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402735958429"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401192159487"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2403635625194"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400507518991"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402860323085"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402856864411"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2404157062939"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2403612423850"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402337245387"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400474873178"/>
			<DeclRefExpr type="int" spelling="npalette" id="2403825319212"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404022178282"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403731841961"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400831220937"/>
			<StringLiteral type="char [39]" spelling="&quot;validate: palette transparency changed&quot;" id="2400610360790"/>
			<StringLiteral type="char [33]" spelling="&quot;validate: palette size changed: &quot;" id="2400468362116"/>
			<StringLiteral type="char [5]" spelling="&quot; -&gt; &quot;" id="2401691469166"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400898466877"/>
			<MemberRefExpr type="int" spelling="npalette" id="2401057697787"/>
			<MemberRefExpr type="int" spelling="npalette" id="2402047499472"/>
			<UnexposedExpr type="int (*)(struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2401580670758"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2403734386197"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404081925206"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402638845149"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2403617472548"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401318601134"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402152216457"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402997847499"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404075288323"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404210842616"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402664581997"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403424134180"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404149568826"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400079789861"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2401092022206"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402555572684"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403676938266"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400155838784"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401805747490"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402267383736"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403993432241"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401735635620"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400275609738"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402838282664"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403788219294"/>
			<UnexposedExpr type="int" spelling="npalette" id="2403830230902"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402261347655"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402403265114"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2403697539654"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403022021598"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="utility" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="npalette is aliased" comment_scope_start="5159" comment_scope_end="5159">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2400947692811"/>
			<DeclRefExpr type="int" spelling="npalette" id="2400962313616"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404163680629"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="By passing a 'standard_display' the progressive callbacks can be used
 * directly by the sequential code, the functions suffixed &quot;_imp&quot; are the
 * implementations, the functions without the suffix are the callbacks.
 *
 * The code for the info callback is split into two because this callback calls
 * png_read_update_info or png_start_read_image and what gets called depends on
 * whether the info needs updating (we want to test both calls in pngvalid.)" comment_scope_start="5170" comment_scope_end="5205">
		<SYMBOLS>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="standard_display *" spelling="dp" id="2400182875390"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400050385744"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401183335249"/>
			<CallExpr type="png_byte" spelling="png_get_bit_depth" id="2401460247561"/>
			<CallExpr type="void" spelling="png_error" id="2400825146064"/>
			<CallExpr type="png_byte" spelling="png_get_color_type" id="2400364590143"/>
			<CallExpr type="void" spelling="png_error" id="2403738755465"/>
			<CallExpr type="png_byte" spelling="png_get_filter_type" id="2402641895294"/>
			<CallExpr type="void" spelling="png_error" id="2402426639496"/>
			<CallExpr type="png_byte" spelling="png_get_interlace_type" id="2401275231766"/>
			<CallExpr type="void" spelling="png_error" id="2404163890574"/>
			<CallExpr type="png_byte" spelling="png_get_compression_type" id="2400058879019"/>
			<CallExpr type="void" spelling="png_error" id="2402704129524"/>
			<CallExpr type="png_uint_32" spelling="png_get_image_width" id="2400077791438"/>
			<CallExpr type="png_uint_32" spelling="standard_width" id="2400036961653"/>
			<CallExpr type="void" spelling="png_error" id="2400153416937"/>
			<CallExpr type="png_uint_32" spelling="png_get_image_height" id="2403034427592"/>
			<CallExpr type="png_uint_32" spelling="standard_height" id="2403702305196"/>
			<CallExpr type="void" spelling="png_error" id="2401249728931"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2401078134982"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402501571278"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403161564125"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404130432663"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402740649307"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401156452672"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2401405972435"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403555063656"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400925338542"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403493742366"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400140620484"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402810524524"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_filter_type" id="2402568955135"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402851247227"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401907130847"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402068513078"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400845353425"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_interlace_type" id="2403893926545"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403996536683"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400527609714"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403115677245"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403817143045"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403472129654"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_compression_type" id="2401477400693"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402670136787"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403216793299"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401298095702"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403783258421"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400625326741"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp)" spelling="png_get_image_width" id="2403071037196"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401928963512"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401875983862"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400171279596"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_width" id="2404026716117"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401887434334"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404022404851"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400888575055"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402032212876"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403089676000"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2403282958110"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400043788217"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401750544600"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400904275003"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_height" id="2403371211994"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401985948099"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401844363811"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404102794199"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400341023652"/>
			<StringLiteral type="char [28]" spelling="&quot;validate: bit depth changed&quot;" id="2401484330854"/>
			<StringLiteral type="char [29]" spelling="&quot;validate: color type changed&quot;" id="2403210668001"/>
			<StringLiteral type="char [30]" spelling="&quot;validate: filter type changed&quot;" id="2400523800099"/>
			<StringLiteral type="char [30]" spelling="&quot;validate: interlacing changed&quot;" id="2402399311198"/>
			<StringLiteral type="char [35]" spelling="&quot;validate: compression type changed&quot;" id="2403806032505"/>
			<StringLiteral type="char [30]" spelling="&quot;validate: image width changed&quot;" id="2401115854622"/>
			<StringLiteral type="char [31]" spelling="&quot;validate: image height changed&quot;" id="2403306911952"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2404210047671"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404198144378"/>
			<MemberRefExpr type="png_byte" spelling="interlace_type" id="2403617935458"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2401309429737"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2401570621610"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2401218191763"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2401835305322"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2400557568972"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2402311811752"/>
			<UnexposedExpr type="int" spelling="png_get_bit_depth" id="2401667079749"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2400048549442"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402704215516"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400388524854"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2402036810310"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403716354386"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402583099965"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400291656653"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402940285976"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403072637906"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401327352355"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400310732197"/>
			<UnexposedExpr type="int" spelling="png_get_color_type" id="2403005674232"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2401209657150"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403618103348"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403407506364"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2401429891832"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400603704394"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400926210123"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403550638528"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400535166854"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402686413010"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403749992934"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402881380545"/>
			<UnexposedExpr type="int" spelling="png_get_filter_type" id="2403926017118"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_filter_type" id="2401206360932"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401606677356"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401507104887"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2402428424970"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401704080930"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401538153331"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401166417969"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400107503740"/>
			<UnexposedExpr type="int" spelling="png_get_interlace_type" id="2402029089896"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_interlace_type" id="2402115559900"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403041628471"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403935941849"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403182833640"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402154662890"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2400154063062"/>
			<UnexposedExpr type="png_byte" spelling="interlace_type" id="2403342978919"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403264840808"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402100150401"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403851737237"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402796017296"/>
			<UnexposedExpr type="int" spelling="png_get_compression_type" id="2402162930646"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_compression_type" id="2402693612174"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401848672560"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403538655752"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403175236483"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403957270024"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403224364800"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401656502878"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404190854468"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402762028829"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp)" spelling="png_get_image_width" id="2402023881235"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400657303927"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402416202714"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2401477613646"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400769895854"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2401477096788"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402866875705"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_uint_32)" spelling="standard_width" id="2402354402821"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403007078911"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403650486857"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402379787266"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402478995210"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400016541296"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400792348372"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404194548714"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2404142618582"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2403518830077"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401771558430"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401359553908"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2402151695275"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402232214661"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2401444054977"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2404258573855"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_uint_32)" spelling="standard_height" id="2400030583883"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402477487491"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400327530291"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402133269432"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401522762043"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402119259130"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401565800180"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403704308991"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="split" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="updating" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Record (but don't check at present) the input sBIT according to the colour
    * type information." comment_scope_start="5206" comment_scope_end="5259">
		<SYMBOLS>
			<TypeRef type="png_color_8p" spelling="png_color_8p" id="2400137258656"/>
			<VarDecl type="png_color_8p" spelling="sBIT" id="2401441396624"/>
			<VarDecl type="int" spelling="sBIT_invalid" id="2400374414916"/>
			<CallExpr type="png_uint_32" spelling="png_get_sBIT" id="2401912309969"/>
			<CallExpr type="void" spelling="png_error" id="2400295409691"/>
			<CallExpr type="void" spelling="png_error" id="2403090819508"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2401057579928"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402623955547"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400201908459"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2404235333675"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2400158589946"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400479578638"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403295027514"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403379974851"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2401966803198"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2401460362519"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400596828639"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2403817740496"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400498716905"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2401065294505"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2400535232966"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2400892701443"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404150269773"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2401626612667"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403182377281"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2402485422535"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2400897544415"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2400550723364"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400018456946"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2402882094182"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400950208259"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2403024481314"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2403752496086"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2403421861117"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403853236994"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2401704040378"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401719217184"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401866597209"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401715532012"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2403783535559"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403217115128"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2402513168200"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2402640507518"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403391230774"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2400850425725"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400467052958"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2401366944909"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2403977012602"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404138147908"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401555560783"/>
			<StringLiteral type="char [41]" spelling="&quot;validate: unexpected png_get_sBIT result&quot;" id="2402918787503"/>
			<StringLiteral type="char [34]" spelling="&quot;validate: sBIT value out of range&quot;" id="2400246634555"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403167011092"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2403286921949"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2402772670169"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401745270810"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402430697817"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401241415117"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2402208924309"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2401376731781"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403971256054"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403848228845"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400824834126"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2402793108865"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403703248506"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401123674097"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400660833768"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2403686797314"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2402023773743"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2402590643570"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400728463139"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2404090589854"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400506698321"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401912898151"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2402284571730"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403591001307"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2403029459571"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2403213156291"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402959718633"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402311892826"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401205682618"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2402636682165"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400228725373"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401559680846"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401060709346"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403001574547"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404117099796"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401646415174"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400771873808"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403654068152"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400562469315"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400744070945"/>
			<UnexposedExpr type="int" spelling="red" id="2403234159025"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2401420316048"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2401366770297"/>
			<UnexposedExpr type="int" spelling="red" id="2403443858206"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2400110457672"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2401894120240"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401130455373"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401180143555"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403223659942"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401374008277"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2403180077689"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403546429957"/>
			<UnexposedExpr type="int" spelling="green" id="2404251535908"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2400456681793"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403906690184"/>
			<UnexposedExpr type="int" spelling="green" id="2403154244186"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2402417073475"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2401172145296"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403488428981"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400918566797"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402817616244"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400242925078"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2402370566649"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2401021852043"/>
			<UnexposedExpr type="int" spelling="blue" id="2402126493090"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2401026407476"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2401444663596"/>
			<UnexposedExpr type="int" spelling="blue" id="2402319646780"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2400090969998"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2400814512047"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400194440649"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401813470975"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400485911092"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403591745769"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2400078595487"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403748059700"/>
			<UnexposedExpr type="int" spelling="gray" id="2403948931877"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2400369687178"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2402885114629"/>
			<UnexposedExpr type="int" spelling="gray" id="2400281146233"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2400841869179"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2400377640331"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400909407678"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402383262736"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403934217998"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402498951547"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402402480361"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402795797155"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2401711632426"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2400753613102"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403337084470"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402108885544"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401458861897"/>
			<UnexposedExpr type="int" spelling="alpha" id="2402173577098"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2403541106202"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403706138730"/>
			<UnexposedExpr type="int" spelling="alpha" id="2402635878744"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2401139216573"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403096327773"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400383315983"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400481070697"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402542131632"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401907099479"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2404001661058"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2402288814490"/>
			<UnexposedExpr type="int" spelling="sBIT_invalid" id="2403972842410"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402088053187"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401824534287"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401273802697"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!COLOR" comment_scope_start="5237" comment_scope_end="5237"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="All 8 bits in tRNS for a palette image are significant - see the
          * spec." comment_scope_start="5245" comment_scope_end="5254">
		<SYMBOLS>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403217115128"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2402513168200"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2402640507518"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403391230774"/>
			<DeclRefExpr type="int" spelling="sBIT_invalid" id="2400850425725"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400467052958"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2401366944909"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403591001307"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2403029459571"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2403213156291"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402959718633"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402311892826"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2401205682618"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403337084470"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402108885544"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401458861897"/>
			<UnexposedExpr type="int" spelling="alpha" id="2402173577098"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2403541106202"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403706138730"/>
			<UnexposedExpr type="int" spelling="alpha" id="2402635878744"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2401139216573"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2403096327773"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400383315983"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400481070697"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402542131632"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401907099479"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2404001661058"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2402288814490"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Important: this is validating the value *before* any transforms have been
    * put in place.  It doesn't matter for the standard tests, where there are
    * no transforms, but it does for other tests where rowbytes may change after
    * png_read_update_info." comment_scope_start="5261" comment_scope_end="5268">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2403816621945"/>
			<CallExpr type="png_uint_32" spelling="standard_rowsize" id="2402444292363"/>
			<CallExpr type="void" spelling="png_error" id="2401536885277"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2400005865552"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401066991176"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402708278537"/>
			<DeclRefExpr type="png_uint_32 (png_const_structp, png_uint_32)" spelling="standard_rowsize" id="2404108081775"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401017114597"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403239440644"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400133529488"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400814023193"/>
			<StringLiteral type="char [27]" spelling="&quot;validate: row size changed&quot;" id="2401308542122"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2404179174328"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2404036397491"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2404078427446"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400487356151"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2401755081760"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402481350793"/>
			<UnexposedExpr type="unsigned long" spelling="standard_rowsize" id="2401354940067"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structp, png_uint_32)" spelling="standard_rowsize" id="2401796089254"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403507120095"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403964152552"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2403829665566"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400424089341"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403053345126"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400412815498"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402288706357"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validating" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="put" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the colour type 3 palette (this can be present on other color
    * types.)" comment_scope_start="5269" comment_scope_end="5273">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_palette_validate" id="2404292099933"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop)" spelling="standard_palette_validate" id="2400932281206"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402716196125"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401589070327"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402693928456"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop)" spelling="standard_palette_validate" id="2404181905452"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403938988930"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400539788075"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403803670924"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401691550110"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In any case always check for a transparent color (notice that the
    * colour type 3 case must not give a successful return on the get_tRNS call
    * with these arguments!)" comment_scope_start="5274" comment_scope_end="5312">
		<SYMBOLS>
			<TypeRef type="png_color_16p" spelling="png_color_16p" id="2401866808572"/>
			<VarDecl type="png_color_16p" spelling="trans_color" id="2401871129507"/>
			<CallExpr type="png_uint_32" spelling="png_get_tRNS" id="2400879640581"/>
			<CallExpr type="void" spelling="png_error" id="2403412346372"/>
			<CallExpr type="void" spelling="png_error" id="2403343393384"/>
			<CallExpr type="void" spelling="png_error" id="2400502688684"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_bytep *, int *, png_color_16p *)" spelling="png_get_tRNS" id="2402737106859"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401542312120"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403264969710"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2403905847689"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2400743567455"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402624204604"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400723932147"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404155684894"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402197961959"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400734779808"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400156221740"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2404097871924"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402661132556"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401259412775"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2400922316539"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403065007133"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2401174310728"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403118185107"/>
			<DeclRefExpr type="png_color_16p" spelling="trans_color" id="2400886209074"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400018810442"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400117242351"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400267269152"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403816073333"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404171350601"/>
			<StringLiteral type="char [49]" spelling="&quot;validate: unexpected png_get_tRNS (color) result&quot;" id="2402321598541"/>
			<StringLiteral type="char [41]" spelling="&quot;validate: unexpected png_get_tRNS result&quot;" id="2400177914595"/>
			<StringLiteral type="char [46]" spelling="&quot;validate: invalid tRNS chunk with alpha image&quot;" id="2403697500932"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402544077866"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2401943345757"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2400970110265"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2403066544095"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2403333409379"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2403425490632"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2403423331250"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2402196053452"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2401450516709"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2404186152041"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2402381599057"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2404124653332"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2401636402901"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2401709086403"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2401735428590"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2401590331022"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2401763892485"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2401025080562"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2402970940946"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_bytep *, int *, png_color_16p *)" spelling="png_get_tRNS" id="2402825757313"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401856373070"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402283890082"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402178507470"/>
			<UnexposedExpr type="png_color_16p" spelling="trans_color" id="2401241173141"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400899529032"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402575105851"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400885888476"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403072387767"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401385311520"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401201899346"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402191841226"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402993649448"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400551294304"/>
			<UnexposedExpr type="png_uint_16" spelling="gray" id="2403152873079"/>
			<UnexposedExpr type="png_color_16p" spelling="trans_color" id="2400050870224"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401935228673"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402161973799"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2400335811816"/>
			<UnexposedExpr type="png_color_16p" spelling="trans_color" id="2404204062374"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403406439720"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2403428506034"/>
			<UnexposedExpr type="png_color_16p" spelling="trans_color" id="2400259412770"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403755253750"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2402776283724"/>
			<UnexposedExpr type="png_color_16p" spelling="trans_color" id="2402340426130"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401681673144"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401953862538"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402692595767"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402656489628"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401650179927"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401102056539"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400789335412"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="transparent"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Not expected because it should result in the array case
             * above." comment_scope_start="5302" comment_scope_end="5310">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2403343393384"/>
			<CallExpr type="void" spelling="png_error" id="2400502688684"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400117242351"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400267269152"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403816073333"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404171350601"/>
			<StringLiteral type="char [41]" spelling="&quot;validate: unexpected png_get_tRNS result&quot;" id="2400177914595"/>
			<StringLiteral type="char [46]" spelling="&quot;validate: invalid tRNS chunk with alpha image&quot;" id="2403697500932"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401953862538"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402692595767"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402656489628"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401650179927"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401102056539"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400789335412"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the number of passes - expected to match the value used when
    * creating the image (interlaced or not).  This has the side effect of
    * turning on interlace handling (if do_interlace is not set.)" comment_scope_start="5314" comment_scope_end="5323">
		<SYMBOLS>
			<CallExpr type="int" spelling="npasses_from_interlace_type" id="2403590983404"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2403160775985"/>
			<CallExpr type="void" spelling="png_error" id="2402024208036"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400473778436"/>
			<DeclRefExpr type="int (png_const_structp, int)" spelling="npasses_from_interlace_type" id="2403316594612"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403192053413"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402545241801"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402823871888"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402769345311"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2402398303880"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402851152290"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401336388394"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403057967544"/>
			<StringLiteral type="char [38]" spelling="&quot;validate: file changed interlace type&quot;" id="2401020607369"/>
			<MemberRefExpr type="int" spelling="npasses" id="2403512122179"/>
			<MemberRefExpr type="png_byte" spelling="interlace_type" id="2401598418836"/>
			<MemberRefExpr type="int" spelling="do_interlace" id="2400175546602"/>
			<MemberRefExpr type="int" spelling="npasses" id="2400031356248"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400793489028"/>
			<UnexposedExpr type="int (*)(png_const_structp, int)" spelling="npasses_from_interlace_type" id="2404125707289"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403928076750"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403901050482"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401857885856"/>
			<UnexposedExpr type="png_byte" spelling="interlace_type" id="2403417968613"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401227356859"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2401431954167"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401690034007"/>
			<UnexposedExpr type="int" spelling="npasses" id="2400740025784"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400339444555"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2403473524952"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401629414983"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403436925499"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402546455182"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402663045199"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="creating" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="interlaced"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!READ_INTERLACING" comment_scope_start="5324" comment_scope_end="5324"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This should never happen: the relevant tests (!do_interlace) should
          * not be run." comment_scope_start="5325" comment_scope_end="5329"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!READ_INTERLACING" comment_scope_start="5330" comment_scope_end="5330"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Caller calls png_read_update_info or png_start_read_image now, then calls
    * part2." comment_scope_start="5333" comment_scope_end="5336">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2403698812665"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This must be called *after* the png_read_update_info call to get the correct
 * 'rowbytes' value, otherwise png_get_rowbytes will refer to the untransformed
 * image." comment_scope_start="5338" comment_scope_end="5345">
		<SYMBOLS>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="png_const_infop" spelling="png_const_infop" id="2402694506064"/>
			<ParmDecl type="standard_display *" spelling="dp" id="2402848439403"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403613544267"/>
			<ParmDecl type="png_const_infop" spelling="pi" id="2403817441682"/>
			<ParmDecl type="int" spelling="nImages" id="2400296899653"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="refer" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Record cbRow now that it can be found." comment_scope_start="5346" comment_scope_end="5356">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte" spelling="ct" id="2401151073757"/>
			<VarDecl type="png_byte" spelling="bd" id="2403841966403"/>
			<CallExpr type="png_byte" spelling="png_get_color_type" id="2403857691055"/>
			<CallExpr type="png_byte" spelling="png_get_bit_depth" id="2401773495405"/>
			<CallExpr type="unsigned int" spelling="bit_size" id="2401354325230"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2401654689451"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403483461699"/>
			<DeclRefExpr type="png_const_infop" spelling="pi" id="2401721499408"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2401350999547"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402826633702"/>
			<DeclRefExpr type="png_const_infop" spelling="pi" id="2403779141905"/>
			<DeclRefExpr type="png_byte" spelling="bd" id="2402503827468"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2402723001333"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2401401366594"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403099829704"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2400242916192"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403511951262"/>
			<DeclRefExpr type="unsigned int (png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2401676572591"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404124056382"/>
			<DeclRefExpr type="png_byte" spelling="ct" id="2403120402736"/>
			<DeclRefExpr type="png_byte" spelling="bd" id="2401046744695"/>
			<MemberRefExpr type="png_byte" spelling="filler" id="2402408181704"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2402648802253"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2400456039458"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403303543845"/>
			<UnexposedExpr type="png_const_infop" spelling="pi" id="2403842982443"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2403027018254"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403327186481"/>
			<UnexposedExpr type="png_const_infop" spelling="pi" id="2401934080785"/>
			<UnexposedExpr type="int" spelling="bd" id="2403570389619"/>
			<UnexposedExpr type="png_byte" spelling="bd" id="2403947776871"/>
			<UnexposedExpr type="int" spelling="ct" id="2402084719956"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2400047741678"/>
			<UnexposedExpr type="int" spelling="ct" id="2403581242319"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2402822013430"/>
			<UnexposedExpr type="int" spelling="filler" id="2403710526797"/>
			<UnexposedExpr type="png_byte" spelling="filler" id="2400944632226"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400444962590"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401883447355"/>
			<UnexposedExpr type="unsigned int (*)(png_const_structp, png_byte, png_byte)" spelling="bit_size" id="2400315169307"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402586354302"/>
			<UnexposedExpr type="png_byte" spelling="ct" id="2403688784432"/>
			<UnexposedExpr type="png_byte" spelling="bd" id="2402179779369"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="handle filler as faked alpha channel" comment_scope_start="5353" comment_scope_end="5353">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="ct" id="2400242916192"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the rowbytes here again." comment_scope_start="5360" comment_scope_end="5363">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2401993855582"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400750812322"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402378080917"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402454891214"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401754975866"/>
			<StringLiteral type="char [33]" spelling="&quot;bad png_get_rowbytes calculation&quot;" id="2400080696796"/>
			<MemberRefExpr type="size_t" spelling="cbRow" id="2403659690447"/>
			<MemberRefExpr type="png_uint_32" spelling="bit_width" id="2400338750134"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2401720928219"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400055022358"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2401238350674"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402671297651"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403327808798"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403088908966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then ensure there is enough space for the output image(s)." comment_scope_start="5364" comment_scope_end="5366">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2401373494472"/>
			<CallExpr type="void" spelling="store_ensure_image" id="2403124014579"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2400622347915"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402551424544"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404269347507"/>
			<DeclRefExpr type="int" spelling="nImages" id="2403493339851"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401465773284"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401179016552"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2400624525952"/>
			<MemberRefExpr type="size_t" spelling="cbRow" id="2402822202071"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2401381783501"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2400277169816"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401610436038"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403531966515"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400454740703"/>
			<UnexposedExpr type="int" spelling="nImages" id="2401341365735"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2402566246062"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403220261329"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400889530619"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401754009213"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Note that the validation routine has the side effect of turning on
    * interlace handling in the subsequent code." comment_scope_start="5372" comment_scope_end="5376">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_part1" id="2404023762631"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2402630602151"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403686139610"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403394129530"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400857792082"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2404074858667"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400193752832"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400221969769"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402704199851"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And the info callback has to call this (or png_read_update_info - see
    * below in the png_modifier code for that variant." comment_scope_start="5377" comment_scope_end="5386">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2403390761800"/>
			<CallExpr type="void" spelling="png_read_update_info" id="2400222663037"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403220178930"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401460169614"/>
			<DeclRefExpr type="int" spelling="i" id="2403045411254"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_update_info" id="2403748981524"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403935789175"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403121981094"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2400076714073"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2402303399692"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2401026974647"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402924126118"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2402808160833"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402224281055"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_update_info" id="2404222580548"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402007391562"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402619327065"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="variant" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For debugging the effect of multiple calls:" comment_scope_start="5382" comment_scope_end="5386">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2403390761800"/>
			<CallExpr type="void" spelling="png_read_update_info" id="2400222663037"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401460169614"/>
			<DeclRefExpr type="int" spelling="i" id="2403045411254"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_update_info" id="2403748981524"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403935789175"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403121981094"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2402303399692"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2402808160833"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402224281055"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_update_info" id="2404222580548"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402007391562"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402619327065"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the height, width and rowbytes plus ensure that sufficient buffer
    * exists for decoding the image." comment_scope_start="5391" comment_scope_end="5395">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2402108871336"/>
			<CallExpr type="void" spelling="standard_info_part2" id="2402746745129"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2403853760718"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404113609176"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403573010599"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401817432629"/>
			<DeclRefExpr type="int" spelling="nImages" id="2401369567939"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2403058080395"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400080614100"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403802348813"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400133768003"/>
			<UnexposedExpr type="png_const_infop" spelling="pi" id="2401026587017"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400899660879"/>
			<UnexposedExpr type="int" spelling="nImages" id="2400178444949"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="plus" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Call with nImages==1 because the progressive reader can only produce one
    * image." comment_scope_start="5403" comment_scope_end="5405"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="only one image" comment_scope_start="5406" comment_scope_end="5406">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_imp" id="2403407154890"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2403105547005"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401046209489"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401543665268"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401077471016"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2401998451937"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400329226334"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400345701138"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403006121127"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="When handling interlacing some rows will be absent in each pass, the
    * callback still gets called, but with a NULL pointer.  This is checked
    * in the 'else' clause below.  We need our own 'cbRow', but we can't call
    * png_get_rowbytes because we got no info structure." comment_scope_start="5416" comment_scope_end="5463">
		<SYMBOLS>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2403804252359"/>
			<VarDecl type="png_bytep" spelling="row" id="2403580775122"/>
			<CallExpr type="png_uint_32" spelling="png_get_current_row_number" id="2401900252905"/>
			<CallExpr type="void" spelling="png_error" id="2400053101724"/>
			<CallExpr type="png_byte" spelling="png_get_current_pass_number" id="2404146427279"/>
			<CallExpr type="void" spelling="png_error" id="2400201881724"/>
			<CallExpr type="void" spelling="png_error" id="2400379984515"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2401805143094"/>
			<CallExpr type="void" spelling="deinterlace_row" id="2402653674623"/>
			<CallExpr type="void" spelling="row_copy" id="2403519844238"/>
			<CallExpr type="void" spelling="png_progressive_combine_row" id="2400695720996"/>
			<DeclRefExpr type="png_bytep" spelling="new_row" id="2401368518623"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402883197890"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402575458891"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402343492237"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp)" spelling="png_get_current_row_number" id="2400519898475"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402883976660"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402164249929"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402708304436"/>
			<DeclRefExpr type="int" spelling="pass" id="2401558078574"/>
			<DeclRefExpr type="png_byte (png_const_structrp)" spelling="png_get_current_pass_number" id="2401095240904"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400600124000"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400501885472"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403418119785"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403038741537"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403625389251"/>
			<DeclRefExpr type="int" spelling="pass" id="2400714338817"/>
			<DeclRefExpr type="int" spelling="pass" id="2404068812522"/>
			<DeclRefExpr type="int" spelling="pass" id="2400544808744"/>
			<DeclRefExpr type="int" spelling="pass" id="2403975113254"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403366584746"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402370379033"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400671825508"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401747029276"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2402891137244"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2401249133555"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2401442521123"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404281668628"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401801585623"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2404243157793"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402023590207"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2401303883320"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2401632130911"/>
			<DeclRefExpr type="png_bytep" spelling="new_row" id="2401631615493"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2403173199090"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2400691852125"/>
			<DeclRefExpr type="int" spelling="pass" id="2402687851668"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2403643378536"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, int)" spelling="row_copy" id="2403432222038"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2402876536049"/>
			<DeclRefExpr type="png_bytep" spelling="new_row" id="2402003042344"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2401381489483"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2403264928600"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402105308677"/>
			<DeclRefExpr type="void (png_const_structrp, png_bytep, png_const_bytep)" spelling="png_progressive_combine_row" id="2401690195653"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402733718026"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2402908078549"/>
			<DeclRefExpr type="png_bytep" spelling="new_row" id="2400785622184"/>
			<StringLiteral type="char [37]" spelling="&quot;png_get_current_row_number is broken&quot;" id="2400317521242"/>
			<StringLiteral type="char [38]" spelling="&quot;png_get_current_pass_number is broken&quot;" id="2401295589664"/>
			<StringLiteral type="char [38]" spelling="&quot;invalid y to progressive row callback&quot;" id="2400805058434"/>
			<MemberRefExpr type="const int" spelling="do_interlace" id="2403990127267"/>
			<MemberRefExpr type="const png_byte" spelling="interlace_type" id="2401432799812"/>
			<MemberRefExpr type="const png_uint_32" spelling="h" id="2403759535687"/>
			<MemberRefExpr type="png_store *const" spelling="ps" id="2402377328360"/>
			<MemberRefExpr type="const int" spelling="do_interlace" id="2402256803393"/>
			<MemberRefExpr type="const png_byte" spelling="interlace_type" id="2400719699691"/>
			<MemberRefExpr type="const png_uint_32" spelling="pixel_size" id="2402496279349"/>
			<MemberRefExpr type="const png_uint_32" spelling="w" id="2401026814181"/>
			<MemberRefExpr type="const int" spelling="littleendian" id="2402674696831"/>
			<MemberRefExpr type="const png_uint_32" spelling="pixel_size" id="2403780479742"/>
			<MemberRefExpr type="const png_uint_32" spelling="w" id="2402085784371"/>
			<MemberRefExpr type="const int" spelling="littleendian" id="2402062552539"/>
			<UnexposedExpr type="png_bytep" spelling="new_row" id="2401344973788"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2402058561556"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2403623303165"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2402211801125"/>
			<UnexposedExpr type="png_byte" spelling="interlace_type" id="2400837845208"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2401910068167"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400511046573"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp)" spelling="png_get_current_row_number" id="2401591123643"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402043426454"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400951971811"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403553453386"/>
			<UnexposedExpr type="int" spelling="pass" id="2403725619600"/>
			<UnexposedExpr type="int" spelling="png_get_current_pass_number" id="2403118353756"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp)" spelling="png_get_current_pass_number" id="2401383822386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400699105473"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400142507272"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400000708823"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402798861882"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400328033153"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402158149759"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401845248508"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400968504095"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400588297370"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2404089206133"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402372179490"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402166461881"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404265694844"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402433371664"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2400006997875"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2400135147217"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2402454562899"/>
			<UnexposedExpr type="png_byte" spelling="interlace_type" id="2400351156264"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2400120066053"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400918908364"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2402222087571"/>
			<UnexposedExpr type="png_const_bytep" spelling="new_row" id="2401100110860"/>
			<UnexposedExpr type="png_bytep" spelling="new_row" id="2402034866168"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2400454836989"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2404181476561"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400100621581"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2401695406026"/>
			<UnexposedExpr type="int" spelling="pass" id="2400812282540"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2402845233982"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2403678016849"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, int)" spelling="row_copy" id="2402885961529"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2403650965733"/>
			<UnexposedExpr type="png_const_bytep" spelling="new_row" id="2400195897470"/>
			<UnexposedExpr type="png_bytep" spelling="new_row" id="2400976516994"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2400961904912"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402164028566"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2403626743271"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402896707364"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2403852205136"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402447471360"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_bytep, png_const_bytep)" spelling="png_progressive_combine_row" id="2403605458751"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400763186607"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2402812544143"/>
			<UnexposedExpr type="png_const_bytep" spelling="new_row" id="2404172929726"/>
			<UnexposedExpr type="png_bytep" spelling="new_row" id="2404096625603"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlacing"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In the case where the reader doesn't do the interlace it gives
       * us the y in the sub-image:" comment_scope_start="5425" comment_scope_end="5440">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="png_get_current_row_number" id="2401900252905"/>
			<CallExpr type="void" spelling="png_error" id="2400053101724"/>
			<CallExpr type="png_byte" spelling="png_get_current_pass_number" id="2404146427279"/>
			<CallExpr type="void" spelling="png_error" id="2400201881724"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402883197890"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402575458891"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402343492237"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp)" spelling="png_get_current_row_number" id="2400519898475"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402883976660"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402164249929"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402708304436"/>
			<DeclRefExpr type="int" spelling="pass" id="2401558078574"/>
			<DeclRefExpr type="png_byte (png_const_structrp)" spelling="png_get_current_pass_number" id="2401095240904"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400600124000"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400501885472"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403418119785"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403038741537"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403625389251"/>
			<DeclRefExpr type="int" spelling="pass" id="2400714338817"/>
			<DeclRefExpr type="int" spelling="pass" id="2404068812522"/>
			<DeclRefExpr type="int" spelling="pass" id="2400544808744"/>
			<DeclRefExpr type="int" spelling="pass" id="2403975113254"/>
			<StringLiteral type="char [37]" spelling="&quot;png_get_current_row_number is broken&quot;" id="2400317521242"/>
			<StringLiteral type="char [38]" spelling="&quot;png_get_current_pass_number is broken&quot;" id="2401295589664"/>
			<MemberRefExpr type="const int" spelling="do_interlace" id="2403990127267"/>
			<MemberRefExpr type="const png_byte" spelling="interlace_type" id="2401432799812"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2402058561556"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2403623303165"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2402211801125"/>
			<UnexposedExpr type="png_byte" spelling="interlace_type" id="2400837845208"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2401910068167"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400511046573"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp)" spelling="png_get_current_row_number" id="2401591123643"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402043426454"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400951971811"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403553453386"/>
			<UnexposedExpr type="int" spelling="pass" id="2403725619600"/>
			<UnexposedExpr type="int" spelling="png_get_current_pass_number" id="2403118353756"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp)" spelling="png_get_current_pass_number" id="2401383822386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400699105473"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400142507272"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400000708823"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sub-image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use this opportunity to validate the png 'current' APIs:" comment_scope_start="5431" comment_scope_end="5436">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="png_get_current_row_number" id="2401900252905"/>
			<CallExpr type="void" spelling="png_error" id="2400053101724"/>
			<CallExpr type="png_byte" spelling="png_get_current_pass_number" id="2404146427279"/>
			<CallExpr type="void" spelling="png_error" id="2400201881724"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402343492237"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp)" spelling="png_get_current_row_number" id="2400519898475"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402883976660"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402164249929"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402708304436"/>
			<DeclRefExpr type="int" spelling="pass" id="2401558078574"/>
			<DeclRefExpr type="png_byte (png_const_structrp)" spelling="png_get_current_pass_number" id="2401095240904"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400600124000"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400501885472"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403418119785"/>
			<StringLiteral type="char [37]" spelling="&quot;png_get_current_row_number is broken&quot;" id="2400317521242"/>
			<StringLiteral type="char [38]" spelling="&quot;png_get_current_pass_number is broken&quot;" id="2401295589664"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400511046573"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp)" spelling="png_get_current_row_number" id="2401591123643"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402043426454"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400951971811"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403553453386"/>
			<UnexposedExpr type="int" spelling="pass" id="2403725619600"/>
			<UnexposedExpr type="int" spelling="png_get_current_pass_number" id="2403118353756"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp)" spelling="png_get_current_pass_number" id="2401383822386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400699105473"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400142507272"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400000708823"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="USER_TRANSFORM_INFO" comment_scope_start="5437" comment_scope_end="5437"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate this just in case." comment_scope_start="5442" comment_scope_end="5447">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2400379984515"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2401805143094"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403366584746"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2402370379033"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400671825508"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401747029276"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2402891137244"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2401249133555"/>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2401442521123"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404281668628"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401801585623"/>
			<StringLiteral type="char [38]" spelling="&quot;invalid y to progressive row callback&quot;" id="2400805058434"/>
			<MemberRefExpr type="const png_uint_32" spelling="h" id="2403759535687"/>
			<MemberRefExpr type="png_store *const" spelling="ps" id="2402377328360"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402798861882"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400328033153"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402158149759"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401845248508"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400968504095"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400588297370"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2404089206133"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402372179490"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2402166461881"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404265694844"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402433371664"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Combine the new row into the old:" comment_scope_start="5448" comment_scope_end="5450">
		<SYMBOLS>
			<DeclRefExpr type="const standard_display *" spelling="dp" id="2404243157793"/>
			<MemberRefExpr type="const int" spelling="do_interlace" id="2402256803393"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2400006997875"/>
			<UnexposedExpr type="const standard_display *" spelling="dp" id="2400135147217"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_INTERLACING" comment_scope_start="5451" comment_scope_end="5451"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_INTERLACING_SUPPORTED" comment_scope_start="5462" comment_scope_end="5462"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="wPass may be zero or this row may not be in this pass.
             * png_read_row must not be called in either case." comment_scope_start="5492" comment_scope_end="5520">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [1024]" spelling="row" id="2400761560541"/>
			<VarDecl type="png_byte [1024]" spelling="display" id="2401952450828"/>
			<CallExpr type="void *" spelling="memset" id="2402457597927"/>
			<CallExpr type="void *" spelling="memset" id="2403743565622"/>
			<CallExpr type="void" spelling="png_read_row" id="2403150805008"/>
			<CallExpr type="void" spelling="deinterlace_row" id="2403044977113"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2400948298789"/>
			<CallExpr type="void" spelling="deinterlace_row" id="2403237128214"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2402767299210"/>
			<DeclRefExpr type="png_uint_32" spelling="wPass" id="2403556380513"/>
			<DeclRefExpr type="int" spelling="pass" id="2400186471464"/>
			<DeclRefExpr type="int" spelling="pass" id="2402663952039"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401654953507"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401685084778"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2403264729994"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2401809878689"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401931029012"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402447911580"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2400288391637"/>
			<DeclRefExpr type="void (png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2403476155808"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401057733708"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2402733642073"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402050555053"/>
			<DeclRefExpr type="int" spelling="iImage" id="2403094058499"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2402420417956"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400773820609"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403799044652"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402660977372"/>
			<DeclRefExpr type="int" spelling="iImage" id="2400982271578"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402874912472"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2403397970012"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402764530480"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400488227484"/>
			<DeclRefExpr type="int" spelling="pass" id="2402972464844"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401091817170"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2400700688864"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400622728911"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403524098746"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2402385936427"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400294455985"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2402353817275"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402822991605"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402389075791"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402962991396"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404012221599"/>
			<DeclRefExpr type="int" spelling="pass" id="2401190632379"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402453214629"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2403125576029"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2402788474467"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2400136781086"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2400504798623"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2400421790267"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2402216213440"/>
			<UnexposedExpr type="png_uint_32" spelling="wPass" id="2400269863004"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402306628133"/>
			<UnexposedExpr type="void *" spelling="row" id="2402152081379"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2400879277300"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400449896339"/>
			<UnexposedExpr type="void *" spelling="display" id="2401804948254"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2403171009742"/>
			<UnexposedExpr type="void (*)(png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2403539091320"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401306573621"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2401182890606"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2404012070979"/>
			<UnexposedExpr type="int" spelling="iImage" id="2400010422771"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400497175880"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403778552931"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2403773546354"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401399440051"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402720049514"/>
			<UnexposedExpr type="int" spelling="iImage" id="2403157474595"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400615115666"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2402392845531"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2400845313650"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2401556221256"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402153161536"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402985280103"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403637394157"/>
			<UnexposedExpr type="int" spelling="pass" id="2402099208168"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2404089224285"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401882561195"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2403466451145"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400990741211"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400980577414"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400435836393"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403217986740"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400667065590"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2400713060491"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403916333240"/>
			<UnexposedExpr type="png_const_bytep" spelling="display" id="2402095835044"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2403091238741"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2400397928450"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402576068380"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402370313646"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403364761955"/>
			<UnexposedExpr type="int" spelling="pass" id="2402509404168"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2403090097773"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401623111827"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the row into a pair of temporary buffers, then do the
                * merge here into the output rows." comment_scope_start="5497" comment_scope_end="5501">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [1024]" spelling="row" id="2400761560541"/>
			<VarDecl type="png_byte [1024]" spelling="display" id="2401952450828"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="pair" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="temporary" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="merge" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following aids (to some extent) error detection - we can
                * see where png_read_row wrote.  Use opposite values in row and
                * display to make this easier.  Don't use 0xff (which is used in
                * the image write code to fill unused bits) or 0 (which is a
                * likely value to overwrite unused bits with)." comment_scope_start="5502" comment_scope_end="5520">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2402457597927"/>
			<CallExpr type="void *" spelling="memset" id="2403743565622"/>
			<CallExpr type="void" spelling="png_read_row" id="2403150805008"/>
			<CallExpr type="void" spelling="deinterlace_row" id="2403044977113"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2400948298789"/>
			<CallExpr type="void" spelling="deinterlace_row" id="2403237128214"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2402767299210"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401685084778"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2403264729994"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2401809878689"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401931029012"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402447911580"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2400288391637"/>
			<DeclRefExpr type="void (png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2403476155808"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401057733708"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2402733642073"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402050555053"/>
			<DeclRefExpr type="int" spelling="iImage" id="2403094058499"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2402420417956"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400773820609"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2403799044652"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402660977372"/>
			<DeclRefExpr type="int" spelling="iImage" id="2400982271578"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402874912472"/>
			<DeclRefExpr type="png_byte [1024]" spelling="row" id="2403397970012"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402764530480"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400488227484"/>
			<DeclRefExpr type="int" spelling="pass" id="2402972464844"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401091817170"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2400700688864"/>
			<DeclRefExpr type="void (png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400622728911"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403524098746"/>
			<DeclRefExpr type="const png_store *" spelling="ps" id="2402385936427"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400294455985"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2402353817275"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402822991605"/>
			<DeclRefExpr type="png_byte [1024]" spelling="display" id="2402389075791"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402962991396"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2404012221599"/>
			<DeclRefExpr type="int" spelling="pass" id="2401190632379"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402453214629"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2403125576029"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2402788474467"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2400136781086"/>
			<MemberRefExpr type="png_uint_32" spelling="pixel_size" id="2400504798623"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2400421790267"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2402216213440"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402306628133"/>
			<UnexposedExpr type="void *" spelling="row" id="2402152081379"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2400879277300"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2400449896339"/>
			<UnexposedExpr type="void *" spelling="display" id="2401804948254"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2403171009742"/>
			<UnexposedExpr type="void (*)(png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2403539091320"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401306573621"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2401182890606"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2404012070979"/>
			<UnexposedExpr type="int" spelling="iImage" id="2400010422771"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400497175880"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403778552931"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2403773546354"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401399440051"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402720049514"/>
			<UnexposedExpr type="int" spelling="iImage" id="2403157474595"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400615115666"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2402392845531"/>
			<UnexposedExpr type="png_byte *" spelling="row" id="2400845313650"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2401556221256"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402153161536"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402985280103"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403637394157"/>
			<UnexposedExpr type="int" spelling="pass" id="2402099208168"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2404089224285"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401882561195"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2403466451145"/>
			<UnexposedExpr type="void (*)(png_bytep, png_const_bytep, unsigned int, png_uint_32, int, int)" spelling="deinterlace_row" id="2400990741211"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400980577414"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400435836393"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403217986740"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400667065590"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2400713060491"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403916333240"/>
			<UnexposedExpr type="png_const_bytep" spelling="display" id="2402095835044"/>
			<UnexposedExpr type="png_byte *" spelling="display" id="2403091238741"/>
			<UnexposedExpr type="png_uint_32" spelling="pixel_size" id="2400397928450"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402576068380"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402370313646"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403364761955"/>
			<UnexposedExpr type="int" spelling="pass" id="2402509404168"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2403090097773"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401623111827"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And finish the read operation (only really necessary if the caller wants
    * to find additional data in png_info from chunks after the last IDAT.)" comment_scope_start="5529" comment_scope_end="5533">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2400405405423"/>
			<CallExpr type="void" spelling="png_read_end" id="2402541315436"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_end" id="2401452686451"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402065187134"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403923782408"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_end" id="2400044468027"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402161035446"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400213801761"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Remove the &quot;, &quot; at the end" comment_scope_start="5612" comment_scope_end="5612">
		<SYMBOLS>
			<DeclRefExpr type="char [1024]" spelling="msg" id="2400681807534"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402134563729"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400661275516"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402623561976"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This exists because prior to 1.5.18 the progressive reader left the
       * png_struct z_stream unreset at the end of the image, so subsequent
       * attempts to use it simply returns Z_STREAM_END." comment_scope_start="5628" comment_scope_end="5634">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_check_text" id="2403096625932"/>
			<DeclRefExpr type="int" spelling="check_end" id="2402062238501"/>
			<DeclRefExpr type="void (png_const_structp, png_const_textp, png_const_charp, png_const_charp)" spelling="standard_check_text" id="2403331509427"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402104858766"/>
			<DeclRefExpr type="png_textp" spelling="tp" id="2400666154899"/>
			<StringLiteral type="char [11]" spelling="&quot;end marker&quot;" id="2400428344034"/>
			<StringLiteral type="char [4]" spelling="&quot;end&quot;" id="2402188716429"/>
			<UnexposedExpr type="int" spelling="check_end" id="2402482055754"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_const_textp, png_const_charp, png_const_charp)" spelling="standard_check_text" id="2400846326835"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402495045023"/>
			<UnexposedExpr type="png_textp" spelling="tp" id="2400885493776"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The row must be pre-initialized to the magic number here for the size
    * tests to pass:" comment_scope_start="5656" comment_scope_end="5661">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2403247996556"/>
			<CallExpr type="void" spelling="standard_row" id="2400518807117"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2402621172986"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2403539786185"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2403029222163"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_uint_32, png_uint_32)" spelling="standard_row" id="2400646778854"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401763297783"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400701151765"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403612233945"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401021937071"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2401829664900"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2402514803830"/>
			<UnexposedExpr type="void *" spelling="std" id="2403509850879"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2403997778052"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_uint_32, png_uint_32)" spelling="standard_row" id="2403434843724"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402788665082"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2404005755217"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402407244180"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403071989010"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2404109055340"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="At the end both the 'row' and 'display' arrays should end up identical.
    * In earlier passes 'row' will be partially filled in, with only the pixels
    * that have been read so far, but 'display' will have those pixels
    * replicated to fill the unread pixels while reading an interlaced image." comment_scope_start="5662" comment_scope_end="5688">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_const_structp, int, int, png_uint_32)" spelling="standard_row_validate" id="2402345815271"/>
			<VarDecl type="char [64]" spelling="msg" id="2403261618225"/>
			<VarDecl type="char [64]" spelling="msg" id="2402450914847"/>
			<CallExpr type="int" spelling="pixel_cmp" id="2401325521221"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2402423947534"/>
			<CallExpr type="int" spelling="sprintf" id="2402094051547"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2400273095064"/>
			<CallExpr type="void" spelling="png_error" id="2400834912087"/>
			<CallExpr type="int" spelling="pixel_cmp" id="2404113615028"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2403186122750"/>
			<CallExpr type="int" spelling="sprintf" id="2403046916769"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2402006241431"/>
			<CallExpr type="void" spelling="png_error" id="2402293539978"/>
			<DeclRefExpr type="int" spelling="iImage" id="2402437656935"/>
			<DeclRefExpr type="int" spelling="where" id="2400098109002"/>
			<DeclRefExpr type="int (png_const_bytep, png_const_bytep, png_uint_32)" spelling="pixel_cmp" id="2403618059284"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400321356820"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403682712077"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401301176186"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402752326767"/>
			<DeclRefExpr type="int" spelling="iImage" id="2403268043013"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403359244538"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402925070838"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2403297265919"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2403341122195"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400168593786"/>
			<DeclRefExpr type="int" spelling="where" id="2403026501840"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2402040241450"/>
			<DeclRefExpr type="int" spelling="where" id="2402781477250"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403279475715"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401813946665"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402356888847"/>
			<DeclRefExpr type="int" spelling="iImage" id="2402164578317"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403155330580"/>
			<DeclRefExpr type="int" spelling="where" id="2403557804505"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400802092628"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403868252048"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401100198994"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2402501737150"/>
			<DeclRefExpr type="int" spelling="where" id="2400548569719"/>
			<DeclRefExpr type="int (png_const_bytep, png_const_bytep, png_uint_32)" spelling="pixel_cmp" id="2403183335315"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2401287185929"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400676905620"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400867033418"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403092372584"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2403748338184"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401077145828"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2403898160196"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2400348515247"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400380301216"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403151570617"/>
			<DeclRefExpr type="int" spelling="where" id="2400581383378"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400351684215"/>
			<DeclRefExpr type="int" spelling="where" id="2403925567201"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403193668271"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2400034601483"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400991450078"/>
			<DeclRefExpr type="int" spelling="iDisplay" id="2401314275368"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400184216713"/>
			<DeclRefExpr type="int" spelling="where" id="2400644761324"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401657949729"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400755002237"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400574318592"/>
			<StringLiteral type="char [49]" spelling="&quot;PNG image row[%lu][%d] changed from %.2x to %.2x&quot;" id="2403569265289"/>
			<StringLiteral type="char [47]" spelling="&quot;display row[%lu][%d] changed from %.2x to %.2x&quot;" id="2400678219727"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401654776506"/>
			<MemberRefExpr type="png_uint_32" spelling="bit_width" id="2404024570532"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401435436296"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2403555051782"/>
			<MemberRefExpr type="png_uint_32" spelling="bit_width" id="2402792296362"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402703366588"/>
			<UnexposedExpr type="int" spelling="iImage" id="2400049402082"/>
			<UnexposedExpr type="int (*)(png_const_bytep, png_const_bytep, png_uint_32)" spelling="pixel_cmp" id="2401943402010"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2403039705978"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2402031017148"/>
			<UnexposedExpr type="png_const_bytep" spelling="store_image_row" id="2403854948658"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403672841127"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400199845367"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403107254585"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2401068819905"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403681731194"/>
			<UnexposedExpr type="int" spelling="iImage" id="2403198480263"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402534450104"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2402305272401"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400637106017"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2402113114423"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400430483093"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402630559081"/>
			<UnexposedExpr type="int" spelling="where" id="2400384437424"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400341346207"/>
			<UnexposedExpr type="int" spelling="where" id="2404271599546"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2402775580198"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2402556763247"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404015362350"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2402398481363"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402427860743"/>
			<UnexposedExpr type="int" spelling="iImage" id="2403152598705"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403785181452"/>
			<UnexposedExpr type="int" spelling="where" id="2403566714293"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400603073860"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403653730443"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2401426150334"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403356457062"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2403708079421"/>
			<UnexposedExpr type="int (*)(png_const_bytep, png_const_bytep, png_uint_32)" spelling="pixel_cmp" id="2403390681608"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2402666343210"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2403099498518"/>
			<UnexposedExpr type="png_const_bytep" spelling="store_image_row" id="2402348678051"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2401679865074"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2403795702143"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403015581519"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403657205313"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403485673885"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2402924816112"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403612892945"/>
			<UnexposedExpr type="png_uint_32" spelling="bit_width" id="2403298467989"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403277975180"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2403650674843"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401332680628"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400549726807"/>
			<UnexposedExpr type="int" spelling="where" id="2403432802753"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2403282716811"/>
			<UnexposedExpr type="int" spelling="where" id="2400604181098"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2402376095614"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2400331517577"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401238867475"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2403993547596"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401062667165"/>
			<UnexposedExpr type="int" spelling="iDisplay" id="2400967932798"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2403798752145"/>
			<UnexposedExpr type="int" spelling="where" id="2400984767828"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403142691439"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401684608410"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2401149564180"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400165610223"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This avoids false positives if the validation code is never called!" comment_scope_start="5705" comment_scope_end="5707">
		<SYMBOLS>
			<FunctionDecl type="void (standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2403589925230"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2401309642751"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2404214458009"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401092213918"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404054706831"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400801960636"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the image - progressive reading only produces one variant for
    * interlaced images." comment_scope_start="5718" comment_scope_end="5721">
		<SYMBOLS>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2403018399070"/>
			<DeclRefExpr type="standard_display *" spelling="dp" id="2402999318566"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401874910780"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400238373650"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2404170413991"/>
			<UnexposedExpr type="standard_display *" spelling="dp" id="2400451732496"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400059516506"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402558824143"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="variant" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="progressive"/>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="check_end: see comments above" comment_scope_start="5722" comment_scope_end="5722">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_text_validate" id="2400754414791"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A single test run checking the standard image to ensure it is not damaged." comment_scope_start="5726" comment_scope_end="5733">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<VarDecl type="standard_display" spelling="d" id="2401804201082"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2401566816816"/>
			<VarDecl type="png_store *" spelling="fault" id="2401290448785"/>
			<ParmDecl type="png_store *const" spelling="psIn" id="2403667877001"/>
			<ParmDecl type="const png_uint_32" spelling="id" id="2401476083757"/>
			<ParmDecl type="int" spelling="do_interlace" id="2400892147789"/>
			<ParmDecl type="int" spelling="use_update_info" id="2402965843089"/>
			<DeclRefExpr type="png_store *const" spelling="psIn" id="2401331182371"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2401460481432"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set up the display (stack frame) variables from the arguments to the
    * function and initialize the locals that are filled in later." comment_scope_start="5734" comment_scope_end="5738">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_display_init" id="2400104727349"/>
			<DeclRefExpr type="void (standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2400151195657"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400940551446"/>
			<DeclRefExpr type="png_store *const" spelling="psIn" id="2404177318316"/>
			<DeclRefExpr type="const png_uint_32" spelling="id" id="2400133310699"/>
			<DeclRefExpr type="int" spelling="do_interlace" id="2400267612820"/>
			<DeclRefExpr type="int" spelling="use_update_info" id="2403457960998"/>
			<UnexposedExpr type="void (*)(standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2402856932277"/>
			<UnexposedExpr type="png_store *" spelling="psIn" id="2400782529935"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2403317474166"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2403679742515"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2400352536871"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="stack" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Everything is protected by a Try/Catch.  The functions called also
    * typically have local Try/Catch blocks." comment_scope_start="5739" comment_scope_end="5806">
		<SYMBOLS>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2402591596823"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2404129503773"/>
			<VarDecl type="png_structp" spelling="pp" id="2401514227099"/>
			<VarDecl type="png_infop" spelling="pi" id="2401241954982"/>
			<CallExpr type="int" spelling="_setjmp" id="2403969471338"/>
			<CallExpr type="png_structp" spelling="set_store_for_read" id="2400007998436"/>
			<CallExpr type="void" spelling="standard_palette_init" id="2401233514397"/>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2402762742563"/>
			<CallExpr type="void" spelling="store_progressive_read" id="2401171909508"/>
			<CallExpr type="void" spelling="png_set_read_fn" id="2400220090064"/>
			<CallExpr type="void" spelling="png_read_info" id="2400423287053"/>
			<CallExpr type="void" spelling="standard_info_imp" id="2400606480230"/>
			<CallExpr type="void" spelling="sequential_row" id="2404076073545"/>
			<CallExpr type="void" spelling="standard_text_validate" id="2403285293689"/>
			<CallExpr type="void" spelling="standard_image_validate" id="2402820854322"/>
			<CallExpr type="void" spelling="png_error" id="2401635639687"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2402021866624"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402427507525"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402664447056"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401497267387"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2402023626677"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2403389462342"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403093102305"/>
			<DeclRefExpr type="png_structp (png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2403337168205"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403709661231"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403955477475"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402552186965"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401434720235"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402335037939"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403782164010"/>
			<DeclRefExpr type="void (standard_display *)" spelling="standard_palette_init" id="2401010923851"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2404063601949"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401006754003"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2402163431941"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404247305951"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400154133435"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="standard_info" id="2401460522314"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2403040462149"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="standard_end" id="2404150213637"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400499917447"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400827483063"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401326305629"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400088577096"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2403764575305"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404204194526"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400657334217"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="store_read" id="2402153705878"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2403399895354"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400906425391"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400603251091"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2400689109603"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400042028814"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402064665736"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402976982453"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2403384671758"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400436473468"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404198443078"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401478761536"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403467143589"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2400242700032"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401777559853"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403586225658"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403458791544"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2402652354523"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402014601678"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401816958099"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402964719837"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400417160082"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401950551326"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400474880353"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid progressive deinterlacer&quot;" id="2400096939615"/>
			<StringLiteral type="char [33]" spelling="&quot;pngvalid sequential deinterlacer&quot;" id="2400197400177"/>
			<StringLiteral type="char [19]" spelling="&quot;progressive reader&quot;" id="2400622074406"/>
			<StringLiteral type="char [18]" spelling="&quot;sequential reader&quot;" id="2402648345346"/>
			<StringLiteral type="char [27]" spelling="&quot;image read failed silently&quot;" id="2401349248771"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403336169763"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403728326331"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402564457919"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2400343188731"/>
			<MemberRefExpr type="int" spelling="do_interlace" id="2402209381562"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2402282553681"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2404021507057"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2401887910974"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402974922911"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2403980373832"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401881490391"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402983816043"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402830968844"/>
			<MemberRefExpr type="int" spelling="speed" id="2401160871425"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2400952875261"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2400953286997"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2403711966950"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402619490520"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2403783126413"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402270297420"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400792185649"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2402144420182"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2401036100902"/>
			<UnexposedExpr type="png_structp (*)(png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2401129678233"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404027475521"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2400317803753"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2403169551289"/>
			<UnexposedExpr type="int" spelling="progressive" id="2402424576071"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2404222353041"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400218713143"/>
			<UnexposedExpr type="int" spelling="progressive" id="2400743541506"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2404143518649"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402937029965"/>
			<UnexposedExpr type="void (*)(standard_display *)" spelling="standard_palette_init" id="2404235852814"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2400667186818"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401227510412"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400085116882"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402008527473"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="standard_info" id="2400825969329"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2401506723305"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="standard_end" id="2404185959856"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400256945970"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402173143003"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402108008099"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402901224144"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2400507460033"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403203685278"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2402569127833"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402554920446"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="store_read" id="2402038926182"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2403034874481"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403763245225"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400782616448"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2404054297415"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402260815569"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400447376543"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2402628441447"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404198336620"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400715301333"/>
			<UnexposedExpr type="int" spelling="speed" id="2402714050450"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2401890551133"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403135950667"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401256910344"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402774493868"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2404049018386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403297490881"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400644907321"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403810530807"/>
			<UnexposedExpr type="unsigned int" spelling="validated" id="2404203060899"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400121208650"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402277930258"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402066041611"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402537202802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="protected" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get a png_struct for reading the image. This will throw an error if it
       * fails, so we don't need to check the result." comment_scope_start="5747" comment_scope_end="5755">
		<SYMBOLS>
			<CallExpr type="png_structp" spelling="set_store_for_read" id="2400007998436"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403093102305"/>
			<DeclRefExpr type="png_structp (png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2403337168205"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403709661231"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403955477475"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402552186965"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401434720235"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402335037939"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403782164010"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid progressive deinterlacer&quot;" id="2400096939615"/>
			<StringLiteral type="char [33]" spelling="&quot;pngvalid sequential deinterlacer&quot;" id="2400197400177"/>
			<StringLiteral type="char [19]" spelling="&quot;progressive reader&quot;" id="2400622074406"/>
			<StringLiteral type="char [18]" spelling="&quot;sequential reader&quot;" id="2402648345346"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402564457919"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2400343188731"/>
			<MemberRefExpr type="int" spelling="do_interlace" id="2402209381562"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2402282553681"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2404021507057"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2401887910974"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402974922911"/>
			<UnexposedExpr type="png_structp (*)(png_store *, png_infopp, png_uint_32, const char *)" spelling="set_store_for_read" id="2401129678233"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2404027475521"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2400317803753"/>
			<UnexposedExpr type="int" spelling="do_interlace" id="2403169551289"/>
			<UnexposedExpr type="int" spelling="progressive" id="2402424576071"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2404222353041"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400218713143"/>
			<UnexposedExpr type="int" spelling="progressive" id="2400743541506"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2404143518649"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402937029965"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initialize the palette correctly from the png_store_file." comment_scope_start="5756" comment_scope_end="5758">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_palette_init" id="2401233514397"/>
			<DeclRefExpr type="void (standard_display *)" spelling="standard_palette_init" id="2401010923851"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2404063601949"/>
			<UnexposedExpr type="void (*)(standard_display *)" spelling="standard_palette_init" id="2404235852814"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Introduce the correct read function." comment_scope_start="5759" comment_scope_end="5767">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2402762742563"/>
			<CallExpr type="void" spelling="store_progressive_read" id="2401171909508"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401006754003"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2402163431941"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404247305951"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400154133435"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="standard_info" id="2401460522314"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2403040462149"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="standard_end" id="2404150213637"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400499917447"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400827483063"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401326305629"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400088577096"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2403980373832"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401881490391"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402983816043"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2400667186818"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401227510412"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400085116882"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402008527473"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="standard_info" id="2400825969329"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2401506723305"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="standard_end" id="2404185959856"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400256945970"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402173143003"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402108008099"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402901224144"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="introduce" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now feed data into the reader until we reach the end:" comment_scope_start="5765" comment_scope_end="5767">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_progressive_read" id="2401171909508"/>
			<DeclRefExpr type="void (png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400499917447"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400827483063"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401326305629"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400088577096"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402983816043"/>
			<UnexposedExpr type="void (*)(png_store *, png_structp, png_infop)" spelling="store_progressive_read" id="2400256945970"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402173143003"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402108008099"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402901224144"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Note that this takes the store, not the display." comment_scope_start="5770" comment_scope_end="5772">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_read_fn" id="2400220090064"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2403764575305"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404204194526"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400657334217"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="store_read" id="2402153705878"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402830968844"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2400507460033"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403203685278"/>
			<UnexposedExpr type="png_voidp" spelling="ps" id="2402569127833"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402554920446"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="store_read" id="2402038926182"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the header values:" comment_scope_start="5773" comment_scope_end="5775">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_read_info" id="2400423287053"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2403399895354"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400906425391"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400603251091"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2403034874481"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403763245225"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400782616448"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The code tests both versions of the images that the sequential
          * reader can produce." comment_scope_start="5776" comment_scope_end="5778"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="images" comment_scope_start="5779" comment_scope_end="5779">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_imp" id="2400606480230"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2400689109603"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400042028814"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402064665736"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402976982453"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int)" spelling="standard_info_imp" id="2404054297415"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402260815569"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400447376543"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need the total bytes in the image below; we can't get to this point
          * unless the PNG file values have been checked against the expected
          * values." comment_scope_start="5781" comment_scope_end="5798">
		<SYMBOLS>
			<CallExpr type="void" spelling="sequential_row" id="2404076073545"/>
			<CallExpr type="void" spelling="standard_text_validate" id="2403285293689"/>
			<CallExpr type="void" spelling="standard_image_validate" id="2402820854322"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2403384671758"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400436473468"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404198443078"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401478761536"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403467143589"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2400242700032"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401777559853"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403586225658"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403458791544"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2402652354523"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402014601678"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401816958099"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402964719837"/>
			<MemberRefExpr type="int" spelling="speed" id="2401160871425"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2400952875261"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2400953286997"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2402628441447"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404198336620"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400715301333"/>
			<UnexposedExpr type="int" spelling="speed" id="2402714050450"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2401890551133"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403135950667"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401256910344"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402774493868"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2404049018386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403297490881"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400644907321"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403810530807"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="After the last pass loop over the rows again to check that the
             * image is correct." comment_scope_start="5788" comment_scope_end="5795">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_text_validate" id="2403285293689"/>
			<CallExpr type="void" spelling="standard_image_validate" id="2402820854322"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403467143589"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2400242700032"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401777559853"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403586225658"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403458791544"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2402652354523"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2402014601678"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401816958099"/>
			<MemberRefExpr type="int" spelling="speed" id="2401160871425"/>
			<UnexposedExpr type="int" spelling="speed" id="2402714050450"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2401890551133"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403135950667"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401256910344"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402774493868"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, int, int)" spelling="standard_image_validate" id="2404049018386"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403297490881"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400644907321"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="check_end" comment_scope_start="5793" comment_scope_end="5793">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_text_validate" id="2403285293689"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2400242700032"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2401777559853"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403586225658"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403458791544"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_infop, int)" spelling="standard_text_validate" id="2401890551133"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403135950667"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401256910344"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402774493868"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for validation." comment_scope_start="5801" comment_scope_end="5804">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2401635639687"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2400417160082"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401950551326"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400474880353"/>
			<StringLiteral type="char [27]" spelling="&quot;image read failed silently&quot;" id="2401349248771"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2403711966950"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402619490520"/>
			<UnexposedExpr type="unsigned int" spelling="validated" id="2404203060899"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400121208650"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402277930258"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402066041611"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402537202802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Successful completion." comment_scope_start="5805" comment_scope_end="5806"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="make sure this hasn't been clobbered." comment_scope_start="5809" comment_scope_end="5809">
		<SYMBOLS>
			<DeclRefExpr type="standard_display" spelling="d" id="2400631491045"/>
			<DeclRefExpr type="png_store *" spelling="fault" id="2401052024553"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2400097679443"/>
			<UnexposedExpr type="png_store *" spelling="fault" id="2401882420361"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In either case clean up the store." comment_scope_start="5811" comment_scope_end="5813">
		<SYMBOLS>
			<FunctionDecl type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2400597001201"/>
			<CallExpr type="void" spelling="store_read_reset" id="2400570764576"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_read_reset" id="2401055889099"/>
			<DeclRefExpr type="standard_display" spelling="d" id="2403483729180"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2404000237661"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_read_reset" id="2401440461964"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403545219493"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5827" comment_scope_end="5827">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2401233147050"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="keep going" comment_scope_start="5835" comment_scope_end="5835"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test each colour type over the valid range of bit depths (expressed as
    * log2(bit_depth) in turn, stop as soon as any error is detected." comment_scope_start="5841" comment_scope_end="5858">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="perform_standard_test" id="2403345966238"/>
			<CallExpr type="int" spelling="test_standard" id="2400414194530"/>
			<CallExpr type="int" spelling="test_standard" id="2400385915454"/>
			<CallExpr type="int" spelling="test_standard" id="2403079720565"/>
			<CallExpr type="int" spelling="test_standard" id="2402212765122"/>
			<CallExpr type="int" spelling="test_standard" id="2403610554089"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2403542771806"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400041934361"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2403667342504"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404190251226"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2401919367630"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403310940770"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2403679827052"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402035320164"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2400870751203"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402833866657"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2403317047235"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401083201063"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2401349394976"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400410530539"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2402572762717"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401561477700"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2402987228022"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403336654406"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_standard" id="2403131242213"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403062116060"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="********************************* SIZE TESTS *******************************" comment_scope_start="5861" comment_scope_end="5865">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<ParmDecl type="png_modifier *const" spelling="pm" id="2401115020157"/>
			<ParmDecl type="const png_byte" spelling="colour_type" id="2402937664408"/>
			<ParmDecl type="int" spelling="bdlo" id="2404102935180"/>
			<ParmDecl type="const int" spelling="bdhi" id="2402716598680"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Run the tests on each combination.
    *
    * NOTE: on my 32 bit x86 each of the following blocks takes
    * a total of 3.5 seconds if done across every combo of bit depth
    * width and height.  This is a waste of time in practice, hence the
    * hinc and winc stuff:" comment_scope_start="5866" comment_scope_end="5884">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="const png_byte [5]" spelling="hinc" id="2402913109735"/>
			<VarDecl type="const png_byte [5]" spelling="winc" id="2403440967168"/>
			<VarDecl type="int" spelling="save_bdlo" id="2401983251521"/>
			<VarDecl type="png_uint_32" spelling="h" id="2402335201461"/>
			<VarDecl type="png_uint_32" spelling="w" id="2400437243897"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400072670692"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402529858154"/>
			<DeclRefExpr type="const int" spelling="bdhi" id="2402604304208"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2401204607380"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2404027109134"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401492941785"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401194167549"/>
			<DeclRefExpr type="const png_byte [5]" spelling="hinc" id="2403397121018"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2401055921421"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2400196640096"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2404203040608"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402117913611"/>
			<DeclRefExpr type="const png_byte [5]" spelling="winc" id="2400448913621"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2404124558761"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2400762148213"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2403827304869"/>
			<UnexposedExpr type="int" spelling="bdhi" id="2402746376138"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2402403758777"/>
			<UnexposedExpr type="const png_byte *" spelling="hinc" id="2403958156989"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2400009661552"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400089678250"/>
			<UnexposedExpr type="const png_byte *" spelling="winc" id="2402125020125"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2400543173191"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="combination" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First test all the 'size' images against the sequential
            * reader using libpng to deinterlace (where required.)  This
            * validates the write side of libpng.  There are four possibilities
            * to validate." comment_scope_start="5885" comment_scope_end="5890">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2403104850893"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400689770644"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2402537283983"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2403633222296"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401338812706"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2403020150975"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400008618818"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="validates" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5891" comment_scope_end="5891">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402036090457"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403572030422"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5891" comment_scope_end="5891">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402036090457"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403572030422"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5898" comment_scope_end="5898">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401228862431"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2404000507839"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5898" comment_scope_end="5898">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401228862431"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2404000507839"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now validate the interlaced read side - do_interlace true,
            * in the progressive case this does actually make a difference
            * to the code used in the non-interlaced case too." comment_scope_start="5904" comment_scope_end="5908">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401851743149"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2403753767089"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400561908784"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400956748086"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401388914234"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2403096463562"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400650912516"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5909" comment_scope_end="5909">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403616067230"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2402866552188"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5909" comment_scope_end="5909">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403616067230"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2402866552188"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the pngvalid code itself:" comment_scope_start="5916" comment_scope_end="5917">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2403666301969"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2403149524065"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403518094745"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400248125502"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401097483230"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2404051154800"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401595841321"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5918" comment_scope_end="5918">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401487179562"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401809251514"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5918" comment_scope_end="5918">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401487179562"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401809251514"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now do the tests of libpng interlace handling, after we have made sure
    * that the pngvalid version works:" comment_scope_start="5928" comment_scope_end="5978">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_uint_32" spelling="h" id="2401734007488"/>
			<VarDecl type="png_uint_32" spelling="w" id="2401350546072"/>
			<CallExpr type="void" spelling="standard_test" id="2404036051964"/>
			<CallExpr type="int" spelling="fail" id="2404189134912"/>
			<CallExpr type="void" spelling="standard_test" id="2403499269615"/>
			<CallExpr type="int" spelling="fail" id="2401656507191"/>
			<CallExpr type="void" spelling="standard_test" id="2402687500378"/>
			<CallExpr type="int" spelling="fail" id="2400554550756"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2401308684616"/>
			<DeclRefExpr type="int" spelling="save_bdlo" id="2403817908126"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402056558863"/>
			<DeclRefExpr type="const int" spelling="bdhi" id="2402761699540"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2401111611400"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403321868067"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2400064037549"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401290241551"/>
			<DeclRefExpr type="const png_byte [5]" spelling="hinc" id="2402261493154"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2401319755633"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401535021160"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2404260409982"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402323120353"/>
			<DeclRefExpr type="const png_byte [5]" spelling="winc" id="2401267006024"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402632061883"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2400398432204"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2403756081451"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403024837500"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402945685303"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402957806345"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403506735963"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2403182965321"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2400741353394"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400215935373"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2402147820917"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400955259880"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400071413815"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400335055217"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403974378735"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403261403729"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400588442965"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2402904678519"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2401725986482"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401194465623"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400560127585"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401735544447"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2403950490247"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402160706291"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401179242956"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2402401766413"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401845805724"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2401611600407"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402045588080"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2402218526861"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401622875704"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2403672016976"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401918157643"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401677275275"/>
			<UnexposedExpr type="int" spelling="save_bdlo" id="2401482674768"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2403732778368"/>
			<UnexposedExpr type="int" spelling="bdhi" id="2401428324424"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2403929277597"/>
			<UnexposedExpr type="const png_byte *" spelling="hinc" id="2403792669731"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2401892454732"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2400422898418"/>
			<UnexposedExpr type="const png_byte *" spelling="winc" id="2403510292950"/>
			<UnexposedExpr type="int" spelling="bdlo" id="2401625593448"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401488346715"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400207975735"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2401959944931"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402751701097"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2401798195764"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401871554684"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401216782859"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401958623975"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2403806686888"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400408007562"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2402525194484"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400230364014"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2400826662306"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401809467356"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2402279165706"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404263772230"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2402419819903"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401436403980"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test with pngvalid generated interlaced images first; we have
            * already verify these are ok (unless pngvalid has self-consistent
            * read/write errors, which is unlikely), so this detects errors in
            * the read side first:" comment_scope_start="5940" comment_scope_end="5946">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2400398432204"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2403756081451"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2403024837500"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2402945685303"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402045588080"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401488346715"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400207975735"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5947" comment_scope_end="5947">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402957806345"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403506735963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5947" comment_scope_end="5947">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402957806345"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403506735963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_INTERLACING" comment_scope_start="5953" comment_scope_end="5953"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test the libpng write side against the pngvalid read side:" comment_scope_start="5956" comment_scope_end="5957">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2402147820917"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400955259880"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2400071413815"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2400335055217"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401622875704"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401216782859"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401958623975"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5958" comment_scope_end="5958">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403974378735"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403261403729"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5958" comment_scope_end="5958">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2403974378735"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2403261403729"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test both together:" comment_scope_start="5967" comment_scope_end="5968">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<DeclRefExpr type="void (png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2401194465623"/>
			<DeclRefExpr type="png_modifier *const" spelling="pm" id="2400560127585"/>
			<DeclRefExpr type="const png_byte" spelling="colour_type" id="2401735544447"/>
			<DeclRefExpr type="int" spelling="bdlo" id="2403950490247"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401918157643"/>
			<UnexposedExpr type="void (*)(png_store *const, const png_uint_32, int, int)" spelling="standard_test" id="2400826662306"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401809467356"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="5969" comment_scope_end="5969">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402160706291"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401179242956"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do_interlace" comment_scope_start="5969" comment_scope_end="5969">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2402160706291"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2401179242956"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_INTERLACING" comment_scope_start="5975" comment_scope_end="5975"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="keep going" comment_scope_start="5980" comment_scope_end="5980"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test each colour type over the valid range of bit depths (expressed as
    * log2(bit_depth) in turn, stop as soon as any error is detected." comment_scope_start="5986" comment_scope_end="5994">
		<SYMBOLS>
			<CallExpr type="int" spelling="test_size" id="2401633925338"/>
			<CallExpr type="int" spelling="test_size" id="2403596998001"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2402263617680"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402115937104"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2403757625445"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402275545006"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2401153434084"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402095031754"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2402982601068"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401220818301"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the moment don't do the palette test - it's a waste of time when
    * compared to the grayscale test." comment_scope_start="5995" comment_scope_end="6008">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="perform_size_test" id="2403606342075"/>
			<CallExpr type="int" spelling="test_size" id="2402235895603"/>
			<CallExpr type="int" spelling="test_size" id="2400778555196"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2402758662038"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400455881495"/>
			<DeclRefExpr type="int (png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2401121159107"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402373249682"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2403478457765"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403455326931"/>
			<UnexposedExpr type="int (*)(png_modifier *const, const png_byte, int, const int)" spelling="test_size" id="2400273988280"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401493743208"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="time"/>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="****************************** TRANSFORM TESTS *****************************" comment_scope_start="6011" comment_scope_end="6012"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A set of tests to validate libpng image transforms.  The possibilities here
 * are legion because the transforms can be combined in a combinatorial
 * fashion.  To deal with this some measure of restraint is required, otherwise
 * the tests would take forever." comment_scope_start="6013" comment_scope_end="6050">
		<SYMBOLS>
			<TypedefDecl type="image_pixel" spelling="image_pixel" id="2402024777238"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="unsigned int" spelling="red" id="2402891660964"/>
			<FieldDecl type="unsigned int" spelling="green" id="2401702211739"/>
			<FieldDecl type="unsigned int" spelling="blue" id="2402704936188"/>
			<FieldDecl type="unsigned int" spelling="alpha" id="2402315673399"/>
			<FieldDecl type="unsigned int" spelling="palette_index" id="2404218911314"/>
			<FieldDecl type="png_byte" spelling="colour_type" id="2401177653023"/>
			<FieldDecl type="png_byte" spelling="bit_depth" id="2403992164060"/>
			<FieldDecl type="png_byte" spelling="sample_depth" id="2404232699370"/>
			<FieldDecl type="unsigned int" spelling="have_tRNS" id="2402201294804"/>
			<FieldDecl type="unsigned int" spelling="swap_rgb" id="2403468753999"/>
			<FieldDecl type="unsigned int" spelling="alpha_first" id="2400982350917"/>
			<FieldDecl type="unsigned int" spelling="alpha_inverted" id="2400891155941"/>
			<FieldDecl type="unsigned int" spelling="mono_inverted" id="2401433570452"/>
			<FieldDecl type="unsigned int" spelling="swap16" id="2403071849458"/>
			<FieldDecl type="unsigned int" spelling="littleendian" id="2403998286644"/>
			<FieldDecl type="unsigned int" spelling="sig_bits" id="2400884930372"/>
			<FieldDecl type="double" spelling="redf" id="2404112003288"/>
			<FieldDecl type="double" spelling="greenf" id="2401481955489"/>
			<FieldDecl type="double" spelling="bluef" id="2400935029337"/>
			<FieldDecl type="double" spelling="alphaf" id="2402604179973"/>
			<FieldDecl type="double" spelling="rede" id="2402273855854"/>
			<FieldDecl type="double" spelling="greene" id="2403098688049"/>
			<FieldDecl type="double" spelling="bluee" id="2400773856653"/>
			<FieldDecl type="double" spelling="alphae" id="2401249864316"/>
			<FieldDecl type="png_byte" spelling="red_sBIT" id="2403055485214"/>
			<FieldDecl type="png_byte" spelling="green_sBIT" id="2403022031854"/>
			<FieldDecl type="png_byte" spelling="blue_sBIT" id="2401735756553"/>
			<FieldDecl type="png_byte" spelling="alpha_sBIT" id="2403213455456"/>
			<StructDecl type="struct image_pixel" spelling="image_pixel" id="2400525001383"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A local (pngvalid) representation of a PNG pixel, in all its
    * various forms." comment_scope_start="6020" comment_scope_end="6022"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For non-palette images." comment_scope_start="6023" comment_scope_end="6023">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="red" id="2402891660964"/>
			<FieldDecl type="unsigned int" spelling="green" id="2401702211739"/>
			<FieldDecl type="unsigned int" spelling="blue" id="2402704936188"/>
			<FieldDecl type="unsigned int" spelling="alpha" id="2402315673399"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For a palette image." comment_scope_start="6024" comment_scope_end="6024">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="palette_index" id="2404218911314"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="As in the spec." comment_scope_start="6025" comment_scope_end="6025">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="colour_type" id="2401177653023"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Defines bit size in row" comment_scope_start="6026" comment_scope_end="6026">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="bit_depth" id="2403992164060"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Scale of samples" comment_scope_start="6027" comment_scope_end="6027">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="sample_depth" id="2404232699370"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="samples" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="tRNS chunk may need processing" comment_scope_start="6028" comment_scope_end="6028">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="have_tRNS" id="2402201294804"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB swapped to BGR" comment_scope_start="6029" comment_scope_end="6029">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="swap_rgb" id="2403468753999"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="bgr"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Alpha at start, not end" comment_scope_start="6030" comment_scope_end="6030">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="alpha_first" id="2400982350917"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Alpha channel inverted" comment_scope_start="6031" comment_scope_end="6031">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="alpha_inverted" id="2400891155941"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="inverted"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Gray channel inverted" comment_scope_start="6032" comment_scope_end="6032">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="mono_inverted" id="2401433570452"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="inverted"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Byte swap 16-bit components" comment_scope_start="6033" comment_scope_end="6033">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="swap16" id="2403071849458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="swap" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="High bits on right" comment_scope_start="6034" comment_scope_end="6034">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="littleendian" id="2403998286644"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Pixel shifted (sig bits only)" comment_scope_start="6035" comment_scope_end="6035">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="sig_bits" id="2400884930372"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For checking the code calculates double precision floating point values
    * along with an error value, accumulated from the transforms.  Because an
    * sBIT setting allows larger error bounds (indeed, by the spec, apparently
    * up to just less than +/-1 in the scaled value) the *lowest* sBIT for each
    * channel is stored.  This sBIT value is folded in to the stored error value
    * at the end of the application of the transforms to the pixel.
    *
    * If sig_bits is set above the red, green, blue and alpha values have been
    * scaled so they only contain the significant bits of the component values." comment_scope_start="6037" comment_scope_end="6050">
		<SYMBOLS>
			<TypedefDecl type="image_pixel" spelling="image_pixel" id="2402024777238"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="double" spelling="redf" id="2404112003288"/>
			<FieldDecl type="double" spelling="greenf" id="2401481955489"/>
			<FieldDecl type="double" spelling="bluef" id="2400935029337"/>
			<FieldDecl type="double" spelling="alphaf" id="2402604179973"/>
			<FieldDecl type="double" spelling="rede" id="2402273855854"/>
			<FieldDecl type="double" spelling="greene" id="2403098688049"/>
			<FieldDecl type="double" spelling="bluee" id="2400773856653"/>
			<FieldDecl type="double" spelling="alphae" id="2401249864316"/>
			<FieldDecl type="png_byte" spelling="red_sBIT" id="2403055485214"/>
			<FieldDecl type="png_byte" spelling="green_sBIT" id="2403022031854"/>
			<FieldDecl type="png_byte" spelling="blue_sBIT" id="2401735756553"/>
			<FieldDecl type="png_byte" spelling="alpha_sBIT" id="2403213455456"/>
			<StructDecl type="struct image_pixel" spelling="image_pixel" id="2400525001383"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="contain" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="application"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="red"/>
			<PROBLEM_DOMAIN word="green"/>
			<PROBLEM_DOMAIN word="blue"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Shared utility function, see below." comment_scope_start="6052" comment_scope_end="6079">
		<SYMBOLS>
			<FunctionDecl type="void (image_pixel *, unsigned int, unsigned int, unsigned int, unsigned int)" spelling="image_pixel_setf" id="2401398272983"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<ParmDecl type="image_pixel *" spelling="this" id="2401312910162"/>
			<ParmDecl type="unsigned int" spelling="rMax" id="2401807480167"/>
			<ParmDecl type="unsigned int" spelling="gMax" id="2403141659823"/>
			<ParmDecl type="unsigned int" spelling="bMax" id="2403982974915"/>
			<ParmDecl type="unsigned int" spelling="aMax" id="2402188074087"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402238051577"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402940122560"/>
			<DeclRefExpr type="unsigned int" spelling="rMax" id="2402246170711"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403558125961"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402807678307"/>
			<DeclRefExpr type="unsigned int" spelling="gMax" id="2403325279886"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400733715866"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400150416224"/>
			<DeclRefExpr type="unsigned int" spelling="bMax" id="2401632930066"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402969641752"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401217405231"/>
			<DeclRefExpr type="unsigned int" spelling="aMax" id="2402621194088"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401459296357"/>
			<DeclRefExpr type="unsigned int" spelling="rMax" id="2401888378270"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403970950791"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401427987289"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400312626439"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403143898267"/>
			<DeclRefExpr type="unsigned int" spelling="gMax" id="2404239274243"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400078773254"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401543706430"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403903970123"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402450474813"/>
			<DeclRefExpr type="unsigned int" spelling="bMax" id="2401576305045"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402467198393"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402954812015"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402487214781"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401956008716"/>
			<DeclRefExpr type="unsigned int" spelling="aMax" id="2401766021918"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403156760137"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402300363753"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400162740392"/>
			<MemberRefExpr type="double" spelling="redf" id="2402696286949"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402601422660"/>
			<MemberRefExpr type="double" spelling="greenf" id="2401479080159"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400412391252"/>
			<MemberRefExpr type="double" spelling="bluef" id="2401317729455"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2403536201650"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2400058377241"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2400510140021"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403117723692"/>
			<MemberRefExpr type="double" spelling="rede" id="2403562745069"/>
			<MemberRefExpr type="double" spelling="redf" id="2404217822824"/>
			<MemberRefExpr type="double" spelling="rede" id="2404103221320"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2402386516791"/>
			<MemberRefExpr type="double" spelling="greene" id="2401535459449"/>
			<MemberRefExpr type="double" spelling="greenf" id="2400896799993"/>
			<MemberRefExpr type="double" spelling="greene" id="2400260025040"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401068159232"/>
			<MemberRefExpr type="double" spelling="bluee" id="2402699419441"/>
			<MemberRefExpr type="double" spelling="bluef" id="2400854972608"/>
			<MemberRefExpr type="double" spelling="bluee" id="2402847659930"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2404256657710"/>
			<MemberRefExpr type="double" spelling="alphae" id="2403079800006"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2402299199938"/>
			<MemberRefExpr type="double" spelling="alphae" id="2402367492367"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401384999631"/>
			<UnexposedExpr type="double" spelling="red" id="2401291508281"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401183953599"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401610062354"/>
			<UnexposedExpr type="unsigned int" spelling="rMax" id="2403165910171"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402420908473"/>
			<UnexposedExpr type="double" spelling="green" id="2403039118008"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2403125462599"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2404107095550"/>
			<UnexposedExpr type="unsigned int" spelling="gMax" id="2401295090794"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401031501615"/>
			<UnexposedExpr type="double" spelling="blue" id="2403330671996"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2400276563975"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401479862724"/>
			<UnexposedExpr type="unsigned int" spelling="bMax" id="2402102392700"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400220663034"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401166812445"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2402065251514"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401178242023"/>
			<UnexposedExpr type="unsigned int" spelling="aMax" id="2402672436153"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400259370667"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403039611554"/>
			<UnexposedExpr type="unsigned int" spelling="rMax" id="2403365743491"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402869266131"/>
			<UnexposedExpr type="double" spelling="redf" id="2402685134492"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401479208882"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403548244827"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400163661233"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400313363307"/>
			<UnexposedExpr type="unsigned int" spelling="gMax" id="2402139508977"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401127968246"/>
			<UnexposedExpr type="double" spelling="greenf" id="2403339354493"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400125427690"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401635343066"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2402406273621"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402561655152"/>
			<UnexposedExpr type="unsigned int" spelling="bMax" id="2404009128246"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403575743584"/>
			<UnexposedExpr type="double" spelling="bluef" id="2402706183758"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402198696636"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403482670052"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2401151437623"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403334735698"/>
			<UnexposedExpr type="unsigned int" spelling="aMax" id="2403152067745"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402227131762"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2401085043903"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403914885966"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402652866139"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="utility" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initialize the structure for the next pixel - call this before doing any
 * transforms and call it for each pixel since all the fields may need to be
 * reset." comment_scope_start="6080" comment_scope_end="6086">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<ParmDecl type="image_pixel *" spelling="this" id="2402645249998"/>
			<ParmDecl type="png_const_bytep" spelling="row" id="2403344373816"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2404194281303"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2403918265324"/>
			<ParmDecl type="png_uint_32" spelling="x" id="2402897472506"/>
			<ParmDecl type="store_palette" spelling="palette" id="2403271583535"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="from pngvalid transform of input" comment_scope_start="6087" comment_scope_end="6087">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<ParmDecl type="const image_pixel *" spelling="format" id="2402347229565"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Initially just set everything to the same number and the alpha to opaque.
    * Note that this currently assumes a simple palette where entry x has colour
    * rgb(x,x,x)!" comment_scope_start="6096" comment_scope_end="6105">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample" id="2403368407080"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400901602259"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402201426816"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400221927019"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402110947007"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2400322001770"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2401004233795"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401443163741"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403203482554"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2404084042771"/>
			<DeclRefExpr type="int" spelling="swap16" id="2400136452560"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2402858614172"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403666141321"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401616337338"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401964999477"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401767094871"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403332044777"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400674398685"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402791815814"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2400958247482"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400915242355"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2404283192655"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401177624043"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401778602972"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401381689393"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400302512608"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400675991105"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402508296028"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400183241500"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403336335979"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403147034239"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403224334191"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2400679161365"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2401498104072"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2404165490285"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402953441640"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2400839471107"/>
			<UnexposedExpr type="int" spelling="swap16" id="2401130499832"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2400359953475"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402401085203"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2401046145239"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402341864766"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400728753120"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401328304464"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401242044341"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403955349450"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then override as appropriate:" comment_scope_start="6106" comment_scope_end="6119">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2401856010398"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401703497513"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2404074639544"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401451510765"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403754609915"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400031473134"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402358433229"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400447604776"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2403656458587"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400283079612"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403672578381"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400753235021"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2404196820749"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402384519324"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2402233562630"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400327908402"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2400014732584"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403405996667"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2400593476619"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2402345643098"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2402556182496"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400361371993"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2402695382443"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402967070069"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2400800502504"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400671895757"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403917528119"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400166973995"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400693330696"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401328530845"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400498519209"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2402547992098"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2403405107709"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400251522596"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400360683437"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400153477228"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2403495588873"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2403519244478"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401319455399"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400843220914"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400774641661"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2403324126400"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403008127872"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402283668703"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2401481864114"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403146314896"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2401059379093"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2400317595047"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401842914089"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2403950297261"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="6107" comment_scope_end="6107">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401703497513"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400671895757"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403917528119"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This permits the caller to default to the sample value." comment_scope_start="6109" comment_scope_end="6118">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2401856010398"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2404074639544"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401451510765"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403754609915"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400031473134"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402358433229"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400447604776"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2403656458587"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400283079612"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403672578381"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2400753235021"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2404196820749"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402384519324"/>
			<DeclRefExpr type="store_palette" spelling="palette" id="2402233562630"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400327908402"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2400014732584"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403405996667"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2400593476619"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2402345643098"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2402556182496"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400361371993"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2402695382443"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402967070069"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2400800502504"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400166973995"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400693330696"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401328530845"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400498519209"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2402547992098"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2403405107709"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2400251522596"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400360683437"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400153477228"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2403495588873"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2403519244478"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401319455399"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400843220914"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400774641661"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2403324126400"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403008127872"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2402283668703"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2401481864114"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403146314896"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2401059379093"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2400317595047"/>
			<UnexposedExpr type="store_palette" spelling="palette" id="2401842914089"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2403950297261"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="not palette" comment_scope_start="6121" comment_scope_end="6121"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This handles the gray case for 'AG' pixels" comment_scope_start="6128" comment_scope_end="6132">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample" id="2400850791335"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400734444136"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400490674470"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402658611662"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400872749517"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2404161373419"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2402541869532"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402276409244"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402823008828"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2403453268653"/>
			<DeclRefExpr type="int" spelling="swap16" id="2401106962161"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2400256940468"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403767748284"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2401710419844"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403235567168"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2402010321423"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2402059794466"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401129107113"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401270103781"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403569800905"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401225053189"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403818096146"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2403336363745"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401899658723"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400677740115"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2402984926661"/>
			<UnexposedExpr type="int" spelling="swap16" id="2402700803511"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2401878486314"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="ag"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Green is second for both BGR and RGB:" comment_scope_start="6136" comment_scope_end="6139">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample" id="2402593899479"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402932332359"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403221704232"/>
			<DeclRefExpr type="png_const_bytep" spelling="row" id="2400493947300"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401175870697"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400953532683"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2401445347852"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2404107305414"/>
			<DeclRefExpr type="int" spelling="swap16" id="2403969878850"/>
			<DeclRefExpr type="int" spelling="littleendian" id="2403227315101"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403659027967"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401302208616"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2402867765425"/>
			<UnexposedExpr type="png_const_bytep" spelling="row" id="2400731209268"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403205995146"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403153677197"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2400721578601"/>
			<UnexposedExpr type="int" spelling="swap16" id="2400920538047"/>
			<UnexposedExpr type="int" spelling="littleendian" id="2400021167448"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="green"/>
			<PROBLEM_DOMAIN word="bgr"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="BGR" comment_scope_start="6140" comment_scope_end="6140">
		<SYMBOLS>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2400906643848"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2402020807961"/>
			<MemberRefExpr type="const unsigned int" spelling="swap_rgb" id="2403607198722"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2404122013207"/>
			<UnexposedExpr type="int" spelling="swap_rgb" id="2403677495871"/>
			<UnexposedExpr type="unsigned int" spelling="swap_rgb" id="2401930850735"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2400114074056"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="bgr"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="grayscale" comment_scope_start="6148" comment_scope_end="6148">
		<SYMBOLS>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2401058819006"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2402046666966"/>
			<MemberRefExpr type="const unsigned int" spelling="mono_inverted" id="2401288969523"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2403822062503"/>
			<UnexposedExpr type="int" spelling="mono_inverted" id="2400697313582"/>
			<UnexposedExpr type="unsigned int" spelling="mono_inverted" id="2400697383464"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2403062877006"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha" comment_scope_start="6151" comment_scope_end="6151">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401280818299"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403580681528"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403440753672"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Calculate the scaled values, these are simply the values divided by
    * 'max' and the error is initialized to the double precision epsilon value
    * from the header file." comment_scope_start="6162" comment_scope_end="6171">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_setf" id="2403270305589"/>
			<DeclRefExpr type="void (image_pixel *, unsigned int, unsigned int, unsigned int, unsigned int)" spelling="image_pixel_setf" id="2401446600188"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401191518055"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2401699659109"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2400119090008"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2403057894342"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2401193160158"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2402212104391"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2403988349115"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2402156269592"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2403671520913"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400227125926"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2400337423064"/>
			<DeclRefExpr type="const image_pixel *" spelling="format" id="2403671311019"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2403409735473"/>
			<MemberRefExpr type="const png_byte" spelling="red_sBIT" id="2400106353463"/>
			<MemberRefExpr type="const png_byte" spelling="green_sBIT" id="2403928116295"/>
			<MemberRefExpr type="const png_byte" spelling="blue_sBIT" id="2402501263970"/>
			<MemberRefExpr type="const png_byte" spelling="alpha_sBIT" id="2400985440493"/>
			<UnexposedExpr type="void (*)(image_pixel *, unsigned int, unsigned int, unsigned int, unsigned int)" spelling="image_pixel_setf" id="2403250344300"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403774142663"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2403747020776"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2400362235851"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402070812282"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2402281102405"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2402949842715"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2401436373964"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2400719453806"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2402617865011"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2400071108099"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403579896074"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2403674989945"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2404031980522"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2404144283437"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2402892796747"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403134310395"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2402111093284"/>
			<UnexposedExpr type="int" spelling="alpha_sBIT" id="2401735143960"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2403250991700"/>
			<UnexposedExpr type="const image_pixel *" spelling="format" id="2401553996672"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403027736092"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="divided" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Store the input information for use in the transforms - these will
    * modify the information." comment_scope_start="6172" comment_scope_end="6186">
		<SYMBOLS>
			<FunctionDecl type="void (image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2401728057311"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2404069139274"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403373706890"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2404043108842"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401963224546"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402252787767"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2401916726255"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403191463341"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400219005243"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400224341093"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400616493321"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402185109246"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403439033937"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401341356106"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403619776359"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403672579281"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401217753963"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401199733621"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2400542877278"/>
			<MemberRefExpr type="unsigned int" spelling="swap_rgb" id="2403907129303"/>
			<MemberRefExpr type="unsigned int" spelling="alpha_first" id="2400276646750"/>
			<MemberRefExpr type="unsigned int" spelling="alpha_inverted" id="2400179915469"/>
			<MemberRefExpr type="unsigned int" spelling="mono_inverted" id="2400839892627"/>
			<MemberRefExpr type="unsigned int" spelling="swap16" id="2403672755880"/>
			<MemberRefExpr type="unsigned int" spelling="littleendian" id="2402982954094"/>
			<MemberRefExpr type="unsigned int" spelling="sig_bits" id="2400960023152"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402010308804"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402728891411"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2404134045356"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400845785324"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402166968386"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400385071765"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401567035735"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402491850899"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401066273899"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400172889051"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401234555407"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403304556162"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403285306049"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401817178782"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modify" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Convert a palette image to an rgb image.  This necessarily converts the tRNS
 * chunk at the same time, because the tRNS will be in palette form.  The way
 * palette validation works means that the original palette is never updated,
 * instead the image_pixel value from the row contains the RGB of the
 * corresponding palette entry and *this* is updated.  Consequently this routine
 * only needs to change the colour type information." comment_scope_start="6191" comment_scope_end="6210">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<ParmDecl type="image_pixel *" spelling="this" id="2403466501958"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401027337171"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402808884911"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400759057030"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401189520350"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401645258487"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402580515436"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2403098245636"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402795265151"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2403830592872"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403179674096"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402458701753"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402143750403"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403851217461"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2403166496343"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400586138905"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403115039778"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401125155639"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400601919251"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="converts" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="time"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The bit depth of the row changes at this point too (notice that this is
       * the row format, not the sample depth, which is separate.)" comment_scope_start="6211" comment_scope_end="6215">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403198200327"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400923437552"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403481729253"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add an alpha channel; this will import the tRNS information because tRNS is
 * not valid in an alpha image.  The bit depth will invariably be set to at
 * least 8 prior to 1.7.0.  Palette images will be converted to alpha (using
 * the above API).  With png_set_background the alpha channel is never expanded
 * but this routine is used by pngvalid to simplify code; 'for_background'
 * records this." comment_scope_start="6218" comment_scope_end="6242">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<ParmDecl type="image_pixel *" spelling="this" id="2402846922654"/>
			<ParmDecl type="const standard_display *" spelling="display" id="2401063913551"/>
			<ParmDecl type="int" spelling="for_background" id="2400309437647"/>
			<CallExpr type="void" spelling="image_pixel_convert_PLTE" id="2404121970005"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402542176201"/>
			<DeclRefExpr type="void (image_pixel *)" spelling="image_pixel_convert_PLTE" id="2401270452908"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400747939666"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403643509094"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402751538669"/>
			<DeclRefExpr type="int" spelling="for_background" id="2402097932048"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2404118790739"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403029028915"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401556411993"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401851925876"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403778984434"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401777127711"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401641484608"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401423517558"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400246820761"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402268967301"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2402725462750"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400324751319"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403385059931"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402800131536"/>
			<UnexposedExpr type="void (*)(image_pixel *)" spelling="image_pixel_convert_PLTE" id="2401963010844"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402932500870"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403004899649"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402035579097"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403134334507"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402576935884"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401914473567"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402726574187"/>
			<UnexposedExpr type="int" spelling="for_background" id="2400182545453"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403052291255"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400563902422"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402702771131"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403448560570"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401887965731"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2404065688067"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400423446080"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="converted" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="After 1.7 the expansion of bit depth only happens if there is a
             * tRNS chunk to expand at this point." comment_scope_start="6243" comment_scope_end="6252">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401901583421"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2403071834590"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2402448609618"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expansion" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the input, original, channel value here against the
             * original tRNS gray chunk valie." comment_scope_start="6253" comment_scope_end="6260">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402061928940"/>
			<DeclRefExpr type="const standard_display *" spelling="display" id="2403738640181"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403101450870"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402857493286"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402206690635"/>
			<MemberRefExpr type="const png_uint_16" spelling="red" id="2403042130811"/>
			<MemberRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2400944911129"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403396326849"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401149760498"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400320288567"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403262865909"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401748088376"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2400017585464"/>
			<UnexposedExpr type="const standard_display *" spelling="display" id="2400759247682"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400441390440"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401988226623"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Again, check the exact input values, not the current transformed
             * value!" comment_scope_start="6273" comment_scope_end="6282">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2400454073057"/>
			<DeclRefExpr type="const standard_display *" spelling="display" id="2403231063516"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2404144944096"/>
			<DeclRefExpr type="const standard_display *" spelling="display" id="2400207367936"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401685104514"/>
			<DeclRefExpr type="const standard_display *" spelling="display" id="2404146390816"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2404074819183"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2401962763766"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402888999301"/>
			<MemberRefExpr type="const png_uint_16" spelling="red" id="2400766503389"/>
			<MemberRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2400717937620"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400594601683"/>
			<MemberRefExpr type="const png_uint_16" spelling="green" id="2403226749326"/>
			<MemberRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2401561141955"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401452980229"/>
			<MemberRefExpr type="const png_uint_16" spelling="blue" id="2401459304759"/>
			<MemberRefExpr type="const struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2403737492792"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401842145824"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403627603736"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2404020294611"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400327186284"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2402781200162"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2400826169994"/>
			<UnexposedExpr type="const standard_display *" spelling="display" id="2401614291722"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402540985829"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2400755273459"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400058665503"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2400606067895"/>
			<UnexposedExpr type="const standard_display *" spelling="display" id="2402614719476"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2404169344184"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2403284668553"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2400346847333"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2403443597183"/>
			<UnexposedExpr type="const standard_display *" spelling="display" id="2400764874204"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401917181448"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401402826981"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The error in the alpha is zero and the sBIT value comes from the
       * original sBIT data (actually it will always be the original bit depth)." comment_scope_start="6289" comment_scope_end="6294">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2403063824932"/>
			<DeclRefExpr type="image_pixel *" spelling="this" id="2402087655694"/>
			<DeclRefExpr type="const standard_display *" spelling="display" id="2401481941446"/>
			<MemberRefExpr type="double" spelling="alphae" id="2404108671991"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2400518301420"/>
			<MemberRefExpr type="const png_byte" spelling="alpha_sBIT" id="2401905675595"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401824752164"/>
			<UnexposedExpr type="image_pixel *" spelling="this" id="2401617584699"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2401233925665"/>
			<UnexposedExpr type="const standard_display *" spelling="display" id="2401574033095"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="transforms that need image_pixel_add_alpha" comment_scope_start="6296" comment_scope_end="6296"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The name of this transform: a string." comment_scope_start="6301" comment_scope_end="6303">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="name" id="2402289835225"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Each transform can be disabled from the command line:" comment_scope_start="6304" comment_scope_end="6306">
		<SYMBOLS>
			<FieldDecl type="int" spelling="enable" id="2400326781514"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The global list of transforms; read only." comment_scope_start="6307" comment_scope_end="6309">
		<SYMBOLS>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<FieldDecl type="struct image_transform *const" spelling="list" id="2402988563681"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The global count of the number of times this transform has been set on an
    * image." comment_scope_start="6310" comment_scope_end="6314">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="global_use" id="2402660020238"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The local count of the number of times this transform has been set." comment_scope_start="6315" comment_scope_end="6317">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="local_use" id="2401632176659"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The next transform in the list, each transform must call its own next
    * transform after it has processed the pixel successfully." comment_scope_start="6318" comment_scope_end="6322">
		<SYMBOLS>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<FieldDecl type="const struct image_transform *" spelling="next" id="2400393650464"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="processed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A single transform for the image, expressed as a series of function
    * callbacks and some space for values.
    *
    * First a callback to add any required modifications to the png_modifier;
    * this gets called just before the modifier is set up for read." comment_scope_start="6323" comment_scope_end="6331">
		<SYMBOLS>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<TypeRef type="struct transform_display" spelling="struct transform_display" id="2400073429845"/>
			<FieldDecl type="void (*)(const struct image_transform *, struct transform_display *)" spelling="ini" id="2400574066907"/>
			<ParmDecl type="const struct image_transform *" spelling="this" id="2403643097170"/>
			<ParmDecl type="struct transform_display *" spelling="that" id="2400414308802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And a callback to set the transform on the current png_read_struct:" comment_scope_start="6332" comment_scope_end="6336">
		<SYMBOLS>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<TypeRef type="struct transform_display" spelling="struct transform_display" id="2400073429845"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<FieldDecl type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400173473318"/>
			<ParmDecl type="const struct image_transform *" spelling="this" id="2401904644973"/>
			<ParmDecl type="struct transform_display *" spelling="that" id="2403972300555"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401989220251"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402273560588"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then a transform that takes an input pixel in one PNG format or another
    * and modifies it by a pngvalid implementation of the transform (thus
    * duplicating the libpng intent without, we hope, duplicating the bugs
    * in the libpng implementation!)  The png_structp is solely to allow error
    * reporting via png_error and png_warning." comment_scope_start="6337" comment_scope_end="6345">
		<SYMBOLS>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="struct transform_display" spelling="struct transform_display" id="2400073429845"/>
			<FieldDecl type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402721151609"/>
			<ParmDecl type="const struct image_transform *" spelling="this" id="2402287343994"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2400247331730"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2402201248191"/>
			<ParmDecl type="const struct transform_display *" spelling="display" id="2402760150430"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modifies" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bugs" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png_error"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add this transform to the list and return true if the transform is
    * meaningful for this colour type and bit depth - if false then the
    * transform should have no effect on the image so there's not a lot of
    * point running it." comment_scope_start="6346" comment_scope_end="6354">
		<SYMBOLS>
			<TypedefDecl type="image_transform" spelling="image_transform" id="2402777633797"/>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<TypeRef type="struct image_transform" spelling="struct image_transform" id="2401681212857"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="int (*)(struct image_transform *, const struct image_transform **, png_byte, png_byte)" spelling="add" id="2403321312328"/>
			<ParmDecl type="struct image_transform *" spelling="this" id="2403648272820"/>
			<ParmDecl type="const struct image_transform **" spelling="that" id="2402665938920"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2401658441351"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2402739733450"/>
			<StructDecl type="struct image_transform" spelling="image_transform" id="2402174138577"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Parameters" comment_scope_start="6360" comment_scope_end="6364">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<FieldDecl type="png_modifier *" spelling="pm" id="2402549898886"/>
			<FieldDecl type="const image_transform *" spelling="transform_list" id="2401573978966"/>
			<FieldDecl type="unsigned int" spelling="max_gamma_8" id="2401130642118"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Local variables" comment_scope_start="6365" comment_scope_end="6369">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_byte" spelling="output_colour_type" id="2404134307463"/>
			<FieldDecl type="png_byte" spelling="output_bit_depth" id="2401762896527"/>
			<FieldDecl type="png_byte" spelling="unpacked" id="2403891864367"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Modifications (not necessarily used.)" comment_scope_start="6370" comment_scope_end="6374">
		<SYMBOLS>
			<TypedefDecl type="transform_display" spelling="transform_display" id="2400528317167"/>
			<TypeRef type="gama_modification" spelling="gama_modification" id="2402580357673"/>
			<TypeRef type="chrm_modification" spelling="chrm_modification" id="2404070676491"/>
			<TypeRef type="srgb_modification" spelling="srgb_modification" id="2400433509633"/>
			<FieldDecl type="gama_modification" spelling="gama_mod" id="2400934719588"/>
			<FieldDecl type="chrm_modification" spelling="chrm_mod" id="2401827757447"/>
			<FieldDecl type="srgb_modification" spelling="srgb_mod" id="2400501996824"/>
			<StructDecl type="struct transform_display" spelling="transform_display" id="2401754132899"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set sRGB, cHRM and gAMA transforms as required by the current encoding." comment_scope_start="6376" comment_scope_end="6379">
		<SYMBOLS>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<ParmDecl type="transform_display *" spelling="this" id="2400221765703"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="srgb"/>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="gama"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set up the png_modifier '_current' fields then use these to determine how
    * to add appropriate chunks." comment_scope_start="6380" comment_scope_end="6393">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<VarDecl type="png_modifier *" spelling="pm" id="2400914021484"/>
			<CallExpr type="void" spelling="modifier_set_encoding" id="2401676556695"/>
			<CallExpr type="int" spelling="modifier_color_encoding_is_set" id="2404181186463"/>
			<CallExpr type="int" spelling="modifier_color_encoding_is_sRGB" id="2401129330936"/>
			<CallExpr type="void" spelling="srgb_modification_init" id="2400628295329"/>
			<DeclRefExpr type="transform_display *" spelling="this" id="2403128685058"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_set_encoding" id="2403170300401"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403915542561"/>
			<DeclRefExpr type="int (const png_modifier *)" spelling="modifier_color_encoding_is_set" id="2402815972091"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401168275749"/>
			<DeclRefExpr type="int (const png_modifier *)" spelling="modifier_color_encoding_is_sRGB" id="2402693480852"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402833485284"/>
			<DeclRefExpr type="void (srgb_modification *, png_modifier *, png_byte)" spelling="srgb_modification_init" id="2400467514800"/>
			<DeclRefExpr type="transform_display *" spelling="this" id="2400351662862"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402401978568"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400229485885"/>
			<MemberRefExpr type="srgb_modification" spelling="srgb_mod" id="2400495238142"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400112857972"/>
			<UnexposedExpr type="transform_display *" spelling="this" id="2403290813336"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_set_encoding" id="2402513683047"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404251462550"/>
			<UnexposedExpr type="int (*)(const png_modifier *)" spelling="modifier_color_encoding_is_set" id="2400013955294"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400421517803"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402621673091"/>
			<UnexposedExpr type="int (*)(const png_modifier *)" spelling="modifier_color_encoding_is_sRGB" id="2402153415499"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400830668117"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401069426153"/>
			<UnexposedExpr type="void (*)(srgb_modification *, png_modifier *, png_byte)" spelling="srgb_modification_init" id="2403304164365"/>
			<UnexposedExpr type="transform_display *" spelling="this" id="2404086126877"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403463132796"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determine" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set gAMA and cHRM separately." comment_scope_start="6394" comment_scope_end="6399">
		<SYMBOLS>
			<CallExpr type="void" spelling="gama_modification_init" id="2401207808498"/>
			<CallExpr type="void" spelling="chrm_modification_init" id="2403822989090"/>
			<DeclRefExpr type="void (gama_modification *, png_modifier *, double)" spelling="gama_modification_init" id="2401150443945"/>
			<DeclRefExpr type="transform_display *" spelling="this" id="2400134389203"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400658571559"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402379148250"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401712319860"/>
			<DeclRefExpr type="void (chrm_modification *, png_modifier *, const color_encoding *)" spelling="chrm_modification_init" id="2404176920402"/>
			<DeclRefExpr type="transform_display *" spelling="this" id="2400326109876"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400654630945"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401540764518"/>
			<MemberRefExpr type="gama_modification" spelling="gama_mod" id="2400796769312"/>
			<MemberRefExpr type="double" spelling="current_gamma" id="2400071910162"/>
			<MemberRefExpr type="const color_encoding *" spelling="current_encoding" id="2402574780950"/>
			<MemberRefExpr type="chrm_modification" spelling="chrm_mod" id="2403622315580"/>
			<MemberRefExpr type="const color_encoding *" spelling="current_encoding" id="2401271459500"/>
			<UnexposedExpr type="void (*)(gama_modification *, png_modifier *, double)" spelling="gama_modification_init" id="2403581702932"/>
			<UnexposedExpr type="transform_display *" spelling="this" id="2400981596930"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403868110562"/>
			<UnexposedExpr type="double" spelling="current_gamma" id="2401317712816"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404279674643"/>
			<UnexposedExpr type="const color_encoding *" spelling="current_encoding" id="2401190336834"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401673047649"/>
			<UnexposedExpr type="void (*)(chrm_modification *, png_modifier *, const color_encoding *)" spelling="chrm_modification_init" id="2400567934358"/>
			<UnexposedExpr type="transform_display *" spelling="this" id="2402220812610"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401022681600"/>
			<UnexposedExpr type="const color_encoding *" spelling="current_encoding" id="2403463307340"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403468009125"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gama"/>
			<PROBLEM_DOMAIN word="chrm"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Three functions to end the list:" comment_scope_start="6403" comment_scope_end="6421">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *)" spelling="image_transform_ini_end" id="2403363853392"/>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_set_end" id="2403611565903"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2404100523209"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400363997591"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402834016114"/>
			<ParmDecl type="transform_display *" spelling="that" id="2403521485676"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400821157641"/>
			<ParmDecl type="png_infop" spelling="pi" id="2400696727460"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403030022754"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400158334019"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401440201150"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400155476513"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403907820658"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404077615666"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403118605762"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403529279826"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401927524732"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2404101112244"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402857336050"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401295730532"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="At the end of the list recalculate the output image pixel value from the
 * double precision values set up by the preceding 'mod' calls:" comment_scope_start="6422" comment_scope_end="6429">
		<SYMBOLS>
			<ParmDecl type="double" spelling="sample_value" id="2402514182289"/>
			<ParmDecl type="unsigned int" spelling="scale" id="2400778076764"/>
			<CallExpr type="double" spelling="floor" id="2403673171379"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2400746616775"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2401549064821"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2402880625169"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2403765486067"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2402320182734"/>
			<UnexposedExpr type="double" spelling="sample_value" id="2401856000162"/>
			<UnexposedExpr type="double" spelling="scale" id="2402633750185"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2403369877955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Return NaN as 0:" comment_scope_start="6430" comment_scope_end="6437">
		<SYMBOLS>
			<FunctionDecl type="unsigned int (double, unsigned int)" spelling="sample_scale" id="2400636276545"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2401297784266"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2400845005604"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2402625945110"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2404025377525"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2401969507384"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2402980671253"/>
			<DeclRefExpr type="double" spelling="sample_value" id="2400610135097"/>
			<UnexposedExpr type="double" spelling="sample_value" id="2401540480642"/>
			<UnexposedExpr type="double" spelling="sample_value" id="2403123452008"/>
			<UnexposedExpr type="double" spelling="scale" id="2401631290565"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2402629948759"/>
			<UnexposedExpr type="double" spelling="scale" id="2403780573244"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2400987042872"/>
			<UnexposedExpr type="double" spelling="sample_value" id="2400455440882"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="At the end recalculate the digitized red green and blue values according
    * to the current sample_depth of the pixel.
    *
    * The sample value is simply scaled to the maximum, checking for over
    * and underflow (which can both happen for some image transforms,
    * including simple size scaling, though libpng doesn't do that at present." comment_scope_start="6450" comment_scope_end="6458">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample_scale" id="2404013737677"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403236805638"/>
			<DeclRefExpr type="unsigned int (double, unsigned int)" spelling="sample_scale" id="2403866276345"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402741896918"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2401266959463"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400183467645"/>
			<MemberRefExpr type="double" spelling="redf" id="2400349715109"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402359129887"/>
			<UnexposedExpr type="unsigned int (*)(double, unsigned int)" spelling="sample_scale" id="2400208575707"/>
			<UnexposedExpr type="double" spelling="redf" id="2400894047836"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400040344339"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2403109442712"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="red"/>
			<PROBLEM_DOMAIN word="green"/>
			<PROBLEM_DOMAIN word="blue"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is a bit bogus; really the above calculation should use the red_sBIT
    * value, not sample_depth, but because libpng does png_set_shift by just
    * shifting the bits we get errors if we don't do it the same way." comment_scope_start="6459" comment_scope_end="6465">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="sig_bits" id="2403719987498"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402776208825"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401397102108"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404273776443"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400602649701"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400360788983"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402620002021"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402104607212"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400854421901"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402102540829"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2400229266125"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2401396908590"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2402092839787"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402616439118"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403350224675"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2402817427156"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403952528136"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402808918306"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402679560614"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2403035504721"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403775715340"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400836300153"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2404112765190"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2401722238375"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400179355877"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The error value is increased, at the end, according to the lowest sBIT
    * value seen.  Common sense tells us that the intermediate integer
    * representations are no more accurate than +/- 0.5 in the integral values,
    * the sBIT allows the implementation to be worse than this.  In addition the
    * PNG specification actually permits any error within the range (-1..+1),
    * but that is ignored here.  Instead the final digitized value is compared,
    * below to the digitized value of the error limits - this has the net effect
    * of allowing (almost) +/-1 in the output value.  It's difficult to see how
    * any algorithm that digitizes intermediate results can be more accurate." comment_scope_start="6466" comment_scope_end="6505">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample_scale" id="2403612760398"/>
			<CallExpr type="unsigned int" spelling="sample_scale" id="2400676793437"/>
			<CallExpr type="unsigned int" spelling="sample_scale" id="2403632432899"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400772474700"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401575461913"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403039558516"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400332989914"/>
			<DeclRefExpr type="unsigned int (double, unsigned int)" spelling="sample_scale" id="2402103558515"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400355412869"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2402524006027"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2401367882019"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403568952557"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401278923998"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401385703307"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401611811388"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400019584371"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400607491524"/>
			<DeclRefExpr type="unsigned int (double, unsigned int)" spelling="sample_scale" id="2401780741613"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401645881800"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2401565599448"/>
			<DeclRefExpr type="int" spelling="sig_bits" id="2400772030700"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403046087765"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400362747899"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402351910198"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400885358408"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400138404994"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402664547464"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404046954342"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401597924127"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401696955051"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403672681040"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402217471576"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400032577958"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402446899814"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402414765817"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400579808055"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404164336110"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403705500318"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400444168055"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402850885153"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400811014636"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400369319536"/>
			<DeclRefExpr type="unsigned int (double, unsigned int)" spelling="sample_scale" id="2400756395968"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404222641404"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2401730715043"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403185840270"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403509144868"/>
			<MemberRefExpr type="double" spelling="rede" id="2401438687876"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2404037728775"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404100334007"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400422565916"/>
			<MemberRefExpr type="double" spelling="greenf" id="2401249646830"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400058172032"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401820958790"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400277032099"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402962514870"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400562508669"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401738146116"/>
			<MemberRefExpr type="double" spelling="bluef" id="2403287769683"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401083427253"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400682198262"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2403974842885"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401156952530"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400866080231"/>
			<MemberRefExpr type="double" spelling="greene" id="2400721037618"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401390654849"/>
			<MemberRefExpr type="double" spelling="bluee" id="2400278117063"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403391319460"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401383697524"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403224056019"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400740125127"/>
			<MemberRefExpr type="double" spelling="bluef" id="2403031195717"/>
			<MemberRefExpr type="double" spelling="greenf" id="2402881792170"/>
			<MemberRefExpr type="double" spelling="redf" id="2403070510516"/>
			<MemberRefExpr type="double" spelling="bluee" id="2404060520989"/>
			<MemberRefExpr type="double" spelling="greene" id="2402179815847"/>
			<MemberRefExpr type="double" spelling="rede" id="2403727278166"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401503385799"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400649780169"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402397392810"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403323336524"/>
			<MemberRefExpr type="double" spelling="alphae" id="2401927409114"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2400912802484"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402705293978"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2400849672530"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402517687721"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403733628272"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2404132503455"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403917579718"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400035432738"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401275801452"/>
			<UnexposedExpr type="unsigned int (*)(double, unsigned int)" spelling="sample_scale" id="2400984173958"/>
			<UnexposedExpr type="double" spelling="greenf" id="2404000414917"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403139750686"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2402484046399"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2400722940017"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2400897035790"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2403570035324"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403584667827"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401283761415"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400454813796"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400700359327"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404209342692"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401035774922"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401655067816"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403815062995"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2403990490179"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2400832281179"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403668292432"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403181090843"/>
			<UnexposedExpr type="unsigned int (*)(double, unsigned int)" spelling="sample_scale" id="2401345881226"/>
			<UnexposedExpr type="double" spelling="bluef" id="2400363642856"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402390127987"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2400988352358"/>
			<UnexposedExpr type="int" spelling="sig_bits" id="2400316421675"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2401432322224"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402808834178"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400627145291"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401188542990"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403966903786"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402702926928"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403234409868"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2400872802885"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2404012102228"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400572595850"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2402697665368"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2400342536477"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402009419852"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403342395984"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2402309409456"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2400027972383"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403400306535"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400845249801"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2401698870604"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2401951336005"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403204568524"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401137964763"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402278412026"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401308896001"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400765353628"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403125298862"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401711318217"/>
			<UnexposedExpr type="double" spelling="redf" id="2402719912941"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400016736104"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402806542668"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402529217031"/>
			<UnexposedExpr type="double" spelling="rede" id="2402086731252"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401937439223"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401011293364"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402117359668"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400591473490"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401280319388"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400712472021"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403272157653"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402020898228"/>
			<UnexposedExpr type="unsigned int (*)(double, unsigned int)" spelling="sample_scale" id="2403268121734"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2401591903487"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401597199049"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2403018136794"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401286714270"/>
			<UnexposedExpr type="int" spelling="alpha_sBIT" id="2403912276083"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2402993684531"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403051200528"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="increased" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="intermediate" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="integer" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="addition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="intermediate" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="opaque" comment_scope_start="6506" comment_scope_end="6506">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402583671749"/>
			<DeclRefExpr type="unsigned int" spelling="scale" id="2400174619714"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401411169162"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401965345801"/>
			<UnexposedExpr type="unsigned int" spelling="scale" id="2400476631014"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Override this." comment_scope_start="6507" comment_scope_end="6507">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403428664197"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401278026280"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404267028911"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="It's exact ;-)" comment_scope_start="6508" comment_scope_end="6508">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401834194317"/>
			<MemberRefExpr type="double" spelling="alphae" id="2403871729480"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404008603716"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Static 'end' structure:" comment_scope_start="6515" comment_scope_end="6528">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_end" id="2401186510439"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_ini_end" id="2402401140851"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_set_end" id="2403890469700"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_mod_end" id="2400603312479"/>
			<StringLiteral type="char [6]" spelling="&quot;(end)&quot;" id="2403425309598"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_ini_end" id="2401570405273"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_set_end" id="2403800244942"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_mod_end" id="2401540411024"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="static" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="name" comment_scope_start="6518" comment_scope_end="6518">
		<SYMBOLS>
			<StringLiteral type="char [6]" spelling="&quot;(end)&quot;" id="2403425309598"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="enable" comment_scope_start="6519" comment_scope_end="6519"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="list" comment_scope_start="6520" comment_scope_end="6520"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="global_use" comment_scope_start="6521" comment_scope_end="6521"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="local_use" comment_scope_start="6522" comment_scope_end="6522"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="next" comment_scope_start="6523" comment_scope_end="6523"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="never called, I want it to crash if it is!" comment_scope_start="6527" comment_scope_end="6527"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reader callbacks and implementations, where they differ from the standard
 * ones." comment_scope_start="6530" comment_scope_end="6538">
		<SYMBOLS>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<ParmDecl type="transform_display *" spelling="dp" id="2402843029106"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2404189350008"/>
			<ParmDecl type="png_uint_32" spelling="id" id="2401226803872"/>
			<ParmDecl type="const image_transform *" spelling="transform_list" id="2400117888084"/>
			<CallExpr type="void *" spelling="memset" id="2400999172673"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401076468155"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401956131047"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403770900556"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2403352823532"/>
			<UnexposedExpr type="void *" spelling="dp" id="2403730425225"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403128833865"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401776806928"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard fields" comment_scope_start="6539" comment_scope_end="6542">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_display_init" id="2402172639776"/>
			<DeclRefExpr type="void (standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2402567358652"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401296915270"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402603535366"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2401962972427"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402199902295"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401743312438"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400570975861"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2400010121618"/>
			<UnexposedExpr type="void (*)(standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2403483457162"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402535918893"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402014073182"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2402328450401"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2403282741986"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404009708590"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Parameter fields" comment_scope_start="6543" comment_scope_end="6547">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402003034699"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402642050342"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400622446415"/>
			<DeclRefExpr type="const image_transform *" spelling="transform_list" id="2400597638708"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403116861338"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402592201127"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2404192131683"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2402702954346"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401249192290"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401940048390"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403699199532"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2400897452231"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403408993016"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Local variable fields" comment_scope_start="6548" comment_scope_end="6548"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="invalid" comment_scope_start="6549" comment_scope_end="6549">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403857430652"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2401290734241"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403059988714"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="invalid" comment_scope_start="6550" comment_scope_end="6550">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401222202678"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2402731466857"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400370783116"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="not unpacked" comment_scope_start="6551" comment_scope_end="6551">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401242667569"/>
			<MemberRefExpr type="png_byte" spelling="unpacked" id="2401534618194"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403207710561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reuse the standard stuff as appropriate." comment_scope_start="6557" comment_scope_end="6559">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_part1" id="2400948156469"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2402420549948"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402008099542"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403885239013"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401405382064"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400151134290"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2401532012905"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403272883982"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401345231521"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400903343298"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now set the list of transforms." comment_scope_start="6560" comment_scope_end="6562">
		<SYMBOLS>
			<CallExpr type="void" spelling="set" id="2402560861913"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2404153278506"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402991366570"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400489075744"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400168022525"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400053741073"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403102789974"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2402672556785"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2401907547883"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400918308154"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402697333747"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402498420739"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402728962587"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400359472787"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401374071411"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403367638393"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400270653866"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Update the info structure for these transforms:" comment_scope_start="6563" comment_scope_end="6570">
		<SYMBOLS>
			<VarDecl type="int" spelling="i" id="2403191851160"/>
			<CallExpr type="void" spelling="png_read_update_info" id="2401373857289"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402485379039"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_update_info" id="2400520719230"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402492369735"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400867985200"/>
			<DeclRefExpr type="int" spelling="i" id="2401684311047"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401955183784"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402018301115"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2402839534525"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402169260755"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_update_info" id="2400913588777"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401439993135"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403578245177"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Always do one call, even if use_update_info is 0." comment_scope_start="6566" comment_scope_end="6570">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_read_update_info" id="2401373857289"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_update_info" id="2400520719230"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402492369735"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400867985200"/>
			<DeclRefExpr type="int" spelling="i" id="2401684311047"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_update_info" id="2400913588777"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401439993135"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403578245177"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And get the output information into the standard_display" comment_scope_start="6572" comment_scope_end="6572"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="images" comment_scope_start="6573" comment_scope_end="6573">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_part2" id="2400942009128"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2400330474012"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401416206393"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400430996548"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404052024429"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402514533835"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2402519116726"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401797923695"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400487080102"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403321136968"/>
			<UnexposedExpr type="png_const_infop" spelling="pi" id="2403864956086"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401744625596"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Plus the extra stuff we need for the transform tests:" comment_scope_start="6575" comment_scope_end="6578">
		<SYMBOLS>
			<CallExpr type="png_byte" spelling="png_get_color_type" id="2403359769281"/>
			<CallExpr type="png_byte" spelling="png_get_bit_depth" id="2402518872131"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401832799834"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2400687874317"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400233587214"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401487149868"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401368373565"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2403588977356"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402202882420"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401585865618"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2403969890670"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400385379592"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402465554948"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2401783163495"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402349107065"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404107099312"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2400895692877"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400953993444"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401488308967"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2404179784584"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402635563112"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402294932361"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403256338148"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401139635742"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="plus" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If png_set_filler is in action then fake the output color type to include
    * an alpha channel where appropriate." comment_scope_start="6579" comment_scope_end="6586">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400738473967"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403773520484"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403726129245"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400868307156"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403106004699"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2401280467632"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2400562451629"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2403767047651"/>
			<MemberRefExpr type="png_byte" spelling="filler" id="2400128686433"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403346559783"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2400988074104"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2403288969758"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403955579523"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403347477333"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2400830861102"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2403042197792"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402110161953"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2404254624174"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2403973159721"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401797550533"/>
			<UnexposedExpr type="int" spelling="filler" id="2402218511945"/>
			<UnexposedExpr type="png_byte" spelling="filler" id="2403634619840"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403058007332"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402451681526"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate the combination of colour type and bit depth that we are getting
    * out of libpng; the semantics of something not in the PNG spec are, at
    * best, unclear." comment_scope_start="6587" comment_scope_end="6618">
		<SYMBOLS>
			<LabelStmt type="" spelling="error" id="2402907234502"/>
			<LabelStmt type="" spelling="error" id="2402907234502"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [128]" spelling="message" id="2400922942035"/>
			<VarDecl type="size_t" spelling="pos" id="2403609581937"/>
			<LabelRef type="" spelling="error" id="2401573670040"/>
			<CallExpr type="size_t" spelling="safecat" id="2403876653435"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401137717198"/>
			<CallExpr type="size_t" spelling="safecat" id="2400168773309"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402679731981"/>
			<CallExpr type="void" spelling="png_error" id="2401615986826"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400164247221"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403635050909"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402302670879"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403494320667"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2404184644848"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403013108449"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400004670834"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400413098615"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401220014719"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401324348657"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401186484202"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403345806634"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2404289588938"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400780613013"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402505629016"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403394103513"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402075736427"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402258148475"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400106802305"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403970152251"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401700379869"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401967182568"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400628531217"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402486716008"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404012393561"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400773095220"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403183284254"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401580817451"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401650510073"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403341537441"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404137717239"/>
			<StringLiteral type="char [38]" spelling="&quot;invalid final bit depth: colour type(&quot;" id="2404107642521"/>
			<StringLiteral type="char [19]" spelling="&quot;) with bit depth: &quot;" id="2401369469613"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2402675788247"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400838823721"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403452811560"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400180147624"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2401079510126"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403890543013"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400244549778"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2400156387312"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403351754914"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2402491713935"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2401658722317"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401758172599"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401271237310"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2402430892822"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400818802491"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401332892471"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400033075147"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403281769874"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2403382807104"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400020338136"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402263121881"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2404078714930"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400804864949"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402044781656"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401133946185"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2404182701123"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402966058555"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401690985196"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403545181005"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403039700509"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404082944557"/>
			<UnexposedExpr type="char *" spelling="message" id="2403670712495"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2404067354223"/>
			<UnexposedExpr type="char *" spelling="message" id="2403246836965"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403022832504"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2402260332371"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2400773519513"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402386228064"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404238369219"/>
			<UnexposedExpr type="char *" spelling="message" id="2404089181338"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403584394923"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400173709505"/>
			<UnexposedExpr type="char *" spelling="message" id="2401783411368"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401824150998"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2400620290116"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2402978652230"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400884067081"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402398365675"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402386449231"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403507303153"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2403022409946"/>
			<UnexposedExpr type="char *" spelling="message" id="2404149434686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="combination" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="FALLTHROUGH" comment_scope_start="6595" comment_scope_end="6599">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402302670879"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403494320667"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2404184644848"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403452811560"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400180147624"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2401079510126"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401332892471"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400033075147"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403281769874"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2403382807104"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400020338136"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402263121881"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2404078714930"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2400804864949"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402044781656"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="FALLTHROUGH" comment_scope_start="6600" comment_scope_end="6603">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403013108449"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400004670834"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403890543013"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400244549778"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401133946185"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2404182701123"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402966058555"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401690985196"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403545181005"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403039700509"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="FALLTHROUGH" comment_scope_start="6604" comment_scope_end="6617">
		<SYMBOLS>
			<LabelStmt type="" spelling="error" id="2402907234502"/>
			<LabelStmt type="" spelling="error" id="2402907234502"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [128]" spelling="message" id="2400922942035"/>
			<VarDecl type="size_t" spelling="pos" id="2403609581937"/>
			<CallExpr type="size_t" spelling="safecat" id="2403876653435"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401137717198"/>
			<CallExpr type="size_t" spelling="safecat" id="2400168773309"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402679731981"/>
			<CallExpr type="void" spelling="png_error" id="2401615986826"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400413098615"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401220014719"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401324348657"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401186484202"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403345806634"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2404289588938"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400780613013"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402505629016"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403394103513"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402075736427"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402258148475"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400106802305"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403970152251"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401700379869"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401967182568"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400628531217"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402486716008"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404012393561"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400773095220"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403183284254"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401580817451"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401650510073"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403341537441"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404137717239"/>
			<StringLiteral type="char [38]" spelling="&quot;invalid final bit depth: colour type(&quot;" id="2404107642521"/>
			<StringLiteral type="char [19]" spelling="&quot;) with bit depth: &quot;" id="2401369469613"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2400156387312"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403351754914"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404082944557"/>
			<UnexposedExpr type="char *" spelling="message" id="2403670712495"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2404067354223"/>
			<UnexposedExpr type="char *" spelling="message" id="2403246836965"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403022832504"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2402260332371"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2400773519513"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402386228064"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404238369219"/>
			<UnexposedExpr type="char *" spelling="message" id="2404089181338"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403584394923"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400173709505"/>
			<UnexposedExpr type="char *" spelling="message" id="2401783411368"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401824150998"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2400620290116"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2402978652230"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400884067081"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402398365675"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402386449231"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403507303153"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2403022409946"/>
			<UnexposedExpr type="char *" spelling="message" id="2404149434686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use a test pixel to check that the output agrees with what we expect -
    * this avoids running the whole test if the output is unexpected.  This also
    * checks for internal errors." comment_scope_start="6620" comment_scope_end="6706">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="image_pixel" spelling="test_pixel" id="2403281790781"/>
			<VarDecl type="char [128]" spelling="message" id="2401873287285"/>
			<VarDecl type="size_t" spelling="pos" id="2403643033922"/>
			<VarDecl type="char [128]" spelling="message" id="2403540221632"/>
			<VarDecl type="size_t" spelling="pos" id="2400934861374"/>
			<VarDecl type="char [128]" spelling="message" id="2402385637129"/>
			<VarDecl type="size_t" spelling="pos" id="2401668480650"/>
			<VarDecl type="char [128]" spelling="message" id="2403139899051"/>
			<VarDecl type="size_t" spelling="pos" id="2401693438511"/>
			<CallExpr type="void *" spelling="memset" id="2401760528981"/>
			<CallExpr type="void" spelling="mod" id="2400402576364"/>
			<CallExpr type="size_t" spelling="safecat" id="2401278276825"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400027357800"/>
			<CallExpr type="size_t" spelling="safecat" id="2400715434692"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402873426617"/>
			<CallExpr type="void" spelling="png_error" id="2403684256323"/>
			<CallExpr type="size_t" spelling="safecat" id="2401155951179"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400906631807"/>
			<CallExpr type="size_t" spelling="safecat" id="2402214350106"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400763251283"/>
			<CallExpr type="void" spelling="png_error" id="2400861470295"/>
			<CallExpr type="void" spelling="png_error" id="2401422744427"/>
			<CallExpr type="void" spelling="png_error" id="2401678013761"/>
			<CallExpr type="size_t" spelling="safecat" id="2402793560816"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400139412415"/>
			<CallExpr type="size_t" spelling="safecat" id="2403402970687"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402035828832"/>
			<CallExpr type="void" spelling="png_error" id="2403160039114"/>
			<CallExpr type="size_t" spelling="safecat" id="2402540207059"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401649240534"/>
			<CallExpr type="size_t" spelling="safecat" id="2402978503452"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401025542729"/>
			<CallExpr type="void" spelling="png_error" id="2403068564726"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2401604410525"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401722223863"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400225999320"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400289518541"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403259586437"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402507594536"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400245462267"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401638793239"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401882579075"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402269258009"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400167759797"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401134359206"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403858413100"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400134572920"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400295976398"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2404208707513"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401853764021"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403894701914"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400854441393"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400304112352"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401325159818"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403849098679"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403720983424"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403753041143"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403031478871"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401625514902"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402446168987"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402367007473"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401816984965"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402469579663"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402117096175"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401278904189"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400926151235"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401780186966"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403275150346"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403904796680"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402505816586"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403329730098"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400373921567"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403242472663"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403885988632"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404137259151"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404061172693"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400728532541"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403265010836"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404070659747"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400617544298"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401032254767"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402327731324"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401106544839"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402573652901"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402201950126"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401965902401"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401398058168"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402195894785"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402537214881"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401032106798"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403841133009"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402045910677"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400588249453"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400434279028"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400203662122"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402415676456"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401477234022"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402078592006"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402821624269"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403379226185"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402627210082"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403061198762"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401528610993"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401280048236"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400532501394"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401167058862"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402127131190"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402789476818"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402142576874"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403708729302"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402623713906"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401141093180"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403890204806"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403178928055"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401551550055"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401930028601"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402520462346"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401976932322"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402116257416"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404269711977"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403475519940"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404087622000"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402420242991"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402283161450"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404075869300"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401116672921"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403672048204"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402368394877"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400873323123"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400982854505"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400949449170"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401149205663"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403247415547"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403832668280"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404035553366"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401813667366"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401715641772"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403789058276"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400772488586"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402230667949"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402147766488"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403813191556"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400275406172"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402115107883"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401357659598"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402434073925"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400437289011"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402975313869"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400640689620"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402634939704"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402705398535"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401979885086"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402877512459"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403565196118"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403489541486"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402799596583"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403177116116"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400039538896"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402844120358"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400075700145"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401803944432"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402191457891"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403013087812"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402887376669"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403772713508"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400080121386"/>
			<StringLiteral type="char [13]" spelling="&quot;colour type &quot;" id="2402498089885"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2404189285381"/>
			<StringLiteral type="char [11]" spelling="&quot;bit depth &quot;" id="2402093740296"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2401495529817"/>
			<StringLiteral type="char [47]" spelling="&quot;pngvalid: internal: palette sample depth not 8&quot;" id="2402545624432"/>
			<StringLiteral type="char [45]" spelling="&quot;pngvalid: internal: bad unpacked pixel depth&quot;" id="2402575275698"/>
			<StringLiteral type="char [24]" spelling="&quot;internal: sample depth &quot;" id="2402840816964"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2403202425730"/>
			<StringLiteral type="char [21]" spelling="&quot;internal: bit depth &quot;" id="2403831705705"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2402089195288"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402949259669"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402190145471"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401366378350"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401721347329"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400693715638"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403650407046"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402089619251"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400733870792"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402656261928"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402763645023"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2404179896211"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400240142854"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403521358609"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402359311601"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400069812206"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401897088688"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2401499900017"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2403644495392"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403478587399"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2400601563429"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2401008223555"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402271038686"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2403603352051"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2402710209359"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403485729792"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401313675718"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2404242012309"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403987756083"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401560556031"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400797330138"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400658080516"/>
			<MemberRefExpr type="png_byte" spelling="unpacked" id="2402199833751"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400965708773"/>
			<MemberRefExpr type="png_byte" spelling="unpacked" id="2400904540237"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400242146401"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403751707674"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400163052528"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402777388331"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2404228574512"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402570305105"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403837392742"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400742836527"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402712332706"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2401437385760"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400081637786"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402505356203"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401968864940"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403254066134"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2404130148481"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403376737565"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401550885867"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2402723174488"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403986623582"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400047598028"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403456864281"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2401409320931"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401076343909"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402404424041"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400577100389"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402228785234"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401411040930"/>
			<UnexposedExpr type="const struct transform_display *" spelling="dp" id="2401855409992"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400464876967"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401285417889"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400530119252"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2403111957364"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2402842998139"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401546476538"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401082381866"/>
			<UnexposedExpr type="char *" spelling="message" id="2401018388201"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402149558047"/>
			<UnexposedExpr type="char *" spelling="message" id="2401922121112"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400700083407"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2401362732029"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2403797154135"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400957827709"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403102763947"/>
			<UnexposedExpr type="char *" spelling="message" id="2400125937183"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402195747812"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403197207472"/>
			<UnexposedExpr type="char *" spelling="message" id="2402866246118"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400125095946"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400584436599"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402949048440"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404203610408"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403506780101"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403236974428"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401922833078"/>
			<UnexposedExpr type="char *" spelling="message" id="2403289419254"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401263376816"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402041170098"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2400921344853"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403367314226"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401599308458"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402155236677"/>
			<UnexposedExpr type="char *" spelling="message" id="2400079697639"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402488459820"/>
			<UnexposedExpr type="char *" spelling="message" id="2402350799198"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404229411854"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401361660748"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403276524408"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401664186213"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402084262367"/>
			<UnexposedExpr type="char *" spelling="message" id="2403846275746"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400619123051"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403331944890"/>
			<UnexposedExpr type="char *" spelling="message" id="2401528374995"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401284388197"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401947883988"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403174644666"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401513614632"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402474280924"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403895213162"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401448281538"/>
			<UnexposedExpr type="char *" spelling="message" id="2400541796317"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402123002776"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401755080969"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401039324959"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400931619143"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401579897748"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400204925489"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402402456271"/>
			<UnexposedExpr type="int" spelling="unpacked" id="2400509972919"/>
			<UnexposedExpr type="png_byte" spelling="unpacked" id="2401333729922"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400219279476"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403819712614"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403742869616"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401612430465"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403780528198"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400029854999"/>
			<UnexposedExpr type="png_byte" spelling="unpacked" id="2400625240939"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400289803436"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400447448726"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400013890376"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400920035622"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2404182348688"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401242913123"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400983757551"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402266380875"/>
			<UnexposedExpr type="char *" spelling="message" id="2401425949271"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400743845735"/>
			<UnexposedExpr type="char *" spelling="message" id="2400161171860"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401901089040"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401549873226"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401733305524"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401102845745"/>
			<UnexposedExpr type="char *" spelling="message" id="2401945604128"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403369185631"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402875593204"/>
			<UnexposedExpr type="char *" spelling="message" id="2403619839778"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404225099287"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404049041037"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403370234399"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400170127189"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401507708286"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402079699985"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2400650057074"/>
			<UnexposedExpr type="char *" spelling="message" id="2400468023582"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403951455094"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403789277954"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2402503458035"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403620424646"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403080169125"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401509250117"/>
			<UnexposedExpr type="char *" spelling="message" id="2400595958605"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400543062126"/>
			<UnexposedExpr type="char *" spelling="message" id="2400587037600"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403345368368"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2403138470083"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2401848971496"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400830737107"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403859737080"/>
			<UnexposedExpr type="char *" spelling="message" id="2401756193923"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403577326805"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403298963834"/>
			<UnexposedExpr type="char *" spelling="message" id="2401996323477"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403834278463"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404130346511"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402797767937"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401474618020"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401127985603"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402155844370"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2402942610194"/>
			<UnexposedExpr type="char *" spelling="message" id="2402602826710"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="input" comment_scope_start="6628" comment_scope_end="6628">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400289518541"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403259586437"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402949259669"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402190145471"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401366378350"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400081637786"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402505356203"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't need sBIT here, but it must be set to non-zero to avoid
       * arithmetic overflows." comment_scope_start="6634" comment_scope_end="6666">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [128]" spelling="message" id="2401873287285"/>
			<VarDecl type="size_t" spelling="pos" id="2403643033922"/>
			<VarDecl type="char [128]" spelling="message" id="2403540221632"/>
			<VarDecl type="size_t" spelling="pos" id="2400934861374"/>
			<CallExpr type="void" spelling="mod" id="2400402576364"/>
			<CallExpr type="size_t" spelling="safecat" id="2401278276825"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400027357800"/>
			<CallExpr type="size_t" spelling="safecat" id="2400715434692"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402873426617"/>
			<CallExpr type="void" spelling="png_error" id="2403684256323"/>
			<CallExpr type="size_t" spelling="safecat" id="2401155951179"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400906631807"/>
			<CallExpr type="size_t" spelling="safecat" id="2402214350106"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400763251283"/>
			<CallExpr type="void" spelling="png_error" id="2400861470295"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401134359206"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403858413100"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400134572920"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2400295976398"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2404208707513"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401853764021"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403894701914"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400854441393"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400304112352"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401325159818"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403849098679"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403720983424"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403753041143"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403031478871"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401625514902"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402446168987"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402367007473"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401816984965"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402469579663"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402117096175"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401278904189"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400926151235"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401780186966"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403275150346"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403904796680"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402505816586"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403329730098"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400373921567"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403242472663"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403885988632"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404137259151"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404061172693"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400728532541"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403265010836"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404070659747"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400617544298"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401032254767"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402327731324"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401106544839"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402573652901"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402201950126"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401965902401"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401398058168"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402195894785"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402537214881"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401032106798"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403841133009"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402045910677"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400588249453"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400434279028"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400203662122"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402415676456"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401477234022"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402078592006"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402821624269"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403379226185"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402627210082"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403061198762"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2401528610993"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401280048236"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400532501394"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401167058862"/>
			<StringLiteral type="char [13]" spelling="&quot;colour type &quot;" id="2402498089885"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2404189285381"/>
			<StringLiteral type="char [11]" spelling="&quot;bit depth &quot;" id="2402093740296"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2401495529817"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2404179896211"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400240142854"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403521358609"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402359311601"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400069812206"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401897088688"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2401499900017"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2403644495392"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403478587399"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2400601563429"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2401008223555"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402271038686"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2403603352051"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2402710209359"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403485729792"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401313675718"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2404242012309"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403987756083"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401560556031"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2402723174488"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403986623582"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400047598028"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403456864281"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2401409320931"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401076343909"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402404424041"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400577100389"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402228785234"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401411040930"/>
			<UnexposedExpr type="const struct transform_display *" spelling="dp" id="2401855409992"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400464876967"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401285417889"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400530119252"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2403111957364"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2402842998139"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401546476538"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401082381866"/>
			<UnexposedExpr type="char *" spelling="message" id="2401018388201"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402149558047"/>
			<UnexposedExpr type="char *" spelling="message" id="2401922121112"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400700083407"/>
			<UnexposedExpr type="int" spelling="output_colour_type" id="2401362732029"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2403797154135"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400957827709"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403102763947"/>
			<UnexposedExpr type="char *" spelling="message" id="2400125937183"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402195747812"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403197207472"/>
			<UnexposedExpr type="char *" spelling="message" id="2402866246118"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400125095946"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400584436599"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402949048440"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404203610408"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2403506780101"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403236974428"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401922833078"/>
			<UnexposedExpr type="char *" spelling="message" id="2403289419254"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401263376816"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402041170098"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2400921344853"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403367314226"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401599308458"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402155236677"/>
			<UnexposedExpr type="char *" spelling="message" id="2400079697639"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402488459820"/>
			<UnexposedExpr type="char *" spelling="message" id="2402350799198"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404229411854"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2401361660748"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2403276524408"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401664186213"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402084262367"/>
			<UnexposedExpr type="char *" spelling="message" id="2403846275746"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400619123051"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403331944890"/>
			<UnexposedExpr type="char *" spelling="message" id="2401528374995"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401284388197"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401947883988"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403174644666"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401513614632"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402474280924"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403895213162"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2401448281538"/>
			<UnexposedExpr type="char *" spelling="message" id="2400541796317"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If both bit depth and colour type are correct check the sample depth." comment_scope_start="6667" comment_scope_end="6669">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402127131190"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400797330138"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402123002776"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401755080969"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="oops - internal error!" comment_scope_start="6670" comment_scope_end="6670">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2402789476818"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400658080516"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401039324959"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400931619143"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Because unless something has set 'unpacked' or the image is palette
          * mapped we expect the transform to keep sample depth and bit depth
          * the same." comment_scope_start="6681" comment_scope_end="6690">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecatn" id="2400139412415"/>
			<CallExpr type="size_t" spelling="safecat" id="2403402970687"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402035828832"/>
			<CallExpr type="void" spelling="png_error" id="2403160039114"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404087622000"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402420242991"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402283161450"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404075869300"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401116672921"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403672048204"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402368394877"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400873323123"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400982854505"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400949449170"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401149205663"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403247415547"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403832668280"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2404035553366"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401813667366"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401715641772"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403789058276"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400772488586"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402230667949"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402147766488"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2403202425730"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402777388331"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2404228574512"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400743845735"/>
			<UnexposedExpr type="char *" spelling="message" id="2400161171860"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401901089040"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401549873226"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401733305524"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401102845745"/>
			<UnexposedExpr type="char *" spelling="message" id="2401945604128"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403369185631"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402875593204"/>
			<UnexposedExpr type="char *" spelling="message" id="2403619839778"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404225099287"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404049041037"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403370234399"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400170127189"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401507708286"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402079699985"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2400650057074"/>
			<UnexposedExpr type="char *" spelling="message" id="2400468023582"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This could be a libpng error too; libpng has not produced what we
          * expect for the output bit depth." comment_scope_start="6693" comment_scope_end="6705">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="char [128]" spelling="message" id="2403139899051"/>
			<VarDecl type="size_t" spelling="pos" id="2401693438511"/>
			<CallExpr type="size_t" spelling="safecat" id="2402540207059"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401649240534"/>
			<CallExpr type="size_t" spelling="safecat" id="2402978503452"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401025542729"/>
			<CallExpr type="void" spelling="png_error" id="2403068564726"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402115107883"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401357659598"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402434073925"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400437289011"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402975313869"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400640689620"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402634939704"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402705398535"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401979885086"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402877512459"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403565196118"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2403489541486"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2402799596583"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403177116116"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400039538896"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402844120358"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400075700145"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2401803944432"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402191457891"/>
			<DeclRefExpr type="image_pixel" spelling="test_pixel" id="2403013087812"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402887376669"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403772713508"/>
			<DeclRefExpr type="char [128]" spelling="message" id="2400080121386"/>
			<StringLiteral type="char [21]" spelling="&quot;internal: bit depth &quot;" id="2403831705705"/>
			<StringLiteral type="char [11]" spelling="&quot; expected &quot;" id="2402089195288"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2400742836527"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402712332706"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401509250117"/>
			<UnexposedExpr type="char *" spelling="message" id="2400595958605"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400543062126"/>
			<UnexposedExpr type="char *" spelling="message" id="2400587037600"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403345368368"/>
			<UnexposedExpr type="int" spelling="output_bit_depth" id="2403138470083"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2401848971496"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400830737107"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403859737080"/>
			<UnexposedExpr type="char *" spelling="message" id="2401756193923"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403577326805"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403298963834"/>
			<UnexposedExpr type="char *" spelling="message" id="2401996323477"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403834278463"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404130346511"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402797767937"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401474618020"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2401127985603"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402155844370"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2402942610194"/>
			<UnexposedExpr type="char *" spelling="message" id="2402602826710"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Compare the scaled, digitzed, values of our local calculation (in+-err)
    * with the digitized values libpng produced;  'sample_depth' is the actual
    * digitization depth of the libpng output colors (the bit depth except for
    * palette images where it is always 8.)  The check on 'err' is to detect
    * internal errors in pngvalid itself." comment_scope_start="6722" comment_scope_end="6759">
		<SYMBOLS>
			<FunctionDecl type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2402927826417"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="unsigned int" spelling="max" id="2403404287270"/>
			<VarDecl type="double" spelling="in_min" id="2404227780116"/>
			<VarDecl type="double" spelling="in_max" id="2401714701534"/>
			<VarDecl type="char [256]" spelling="message" id="2401529397571"/>
			<VarDecl type="size_t" spelling="pos" id="2401140617371"/>
			<CallExpr type="double" spelling="ceil" id="2401744006847"/>
			<CallExpr type="double" spelling="floor" id="2401308174521"/>
			<CallExpr type="size_t" spelling="safecat" id="2401642335339"/>
			<CallExpr type="size_t" spelling="safecat" id="2403339722376"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401895411320"/>
			<CallExpr type="size_t" spelling="safecat" id="2403117045371"/>
			<CallExpr type="size_t" spelling="safecatn" id="2403487242421"/>
			<CallExpr type="size_t" spelling="safecat" id="2400963579283"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400392227548"/>
			<CallExpr type="size_t" spelling="safecat" id="2401819260491"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401027691188"/>
			<CallExpr type="size_t" spelling="safecat" id="2401060967045"/>
			<CallExpr type="size_t" spelling="safecatn" id="2403234852806"/>
			<CallExpr type="size_t" spelling="safecat" id="2402761861769"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400000293877"/>
			<CallExpr type="size_t" spelling="safecat" id="2400865959190"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400427125057"/>
			<CallExpr type="size_t" spelling="safecat" id="2401646722551"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404045794225"/>
			<CallExpr type="size_t" spelling="safecat" id="2400236465090"/>
			<CallExpr type="void" spelling="png_error" id="2403248783250"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2401867897679"/>
			<DeclRefExpr type="double (double)" spelling="ceil" id="2403581646279"/>
			<DeclRefExpr type="double" spelling="in" id="2403860124453"/>
			<DeclRefExpr type="double" spelling="err" id="2401916656539"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400181973493"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2403908962100"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2400330104791"/>
			<DeclRefExpr type="double" spelling="in" id="2402933410629"/>
			<DeclRefExpr type="double" spelling="err" id="2400806869966"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2402364913008"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2401220962837"/>
			<DeclRefExpr type="double" spelling="err" id="2402244958989"/>
			<DeclRefExpr type="double" spelling="limit" id="2400939926768"/>
			<DeclRefExpr type="unsigned int" spelling="out" id="2402671873129"/>
			<DeclRefExpr type="double" spelling="in_min" id="2403858115513"/>
			<DeclRefExpr type="unsigned int" spelling="out" id="2403188142127"/>
			<DeclRefExpr type="double" spelling="in_max" id="2401244447221"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403589827376"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400490916038"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2403257140340"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400797216280"/>
			<DeclRefExpr type="const char *" spelling="name" id="2403526454346"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400605284020"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401493809867"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402137378858"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401469791176"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402861834584"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402045960140"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402481219931"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400303158688"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2403509191649"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401164871134"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2400671970579"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400736161928"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403457959043"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401367416638"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402434685212"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400837216109"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400725369510"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2400522725929"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400285190608"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400851214666"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403434920921"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2401106164861"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402158754959"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403420576904"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2404157728532"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2404127359359"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402232417111"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401289237445"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403214062877"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2403465892692"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2403710727250"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401643872466"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2403503185436"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401076995877"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402589377485"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400728778111"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401836289191"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401448173301"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400066756509"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403922121863"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400954216150"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402725585090"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401809889127"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2403183186498"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403383042391"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401910796859"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400511853964"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400126131058"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400582762247"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404037044394"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2401262573928"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401165399463"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400681824099"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402347612393"/>
			<DeclRefExpr type="unsigned int" spelling="out" id="2401395972263"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404153567975"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403806037925"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400763211040"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400262869486"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401973725069"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403565017971"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403263829010"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402625718683"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401560922807"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404209355155"/>
			<DeclRefExpr type="unsigned int" spelling="in_digitized" id="2401031708760"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400991303009"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401278844471"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401192094280"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400420009480"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400264033298"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403605125735"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400353264589"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400529101634"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400012902000"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403447500780"/>
			<DeclRefExpr type="double" spelling="in" id="2401101637717"/>
			<DeclRefExpr type="double" spelling="err" id="2403430704879"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400391068550"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404081967592"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403322877134"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400916991866"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401763723128"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402722712893"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402256302423"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2404142753888"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2401595293711"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2400550027861"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404077030746"/>
			<DeclRefExpr type="double" spelling="in" id="2401070964475"/>
			<DeclRefExpr type="double" spelling="err" id="2403149619804"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2403513939470"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401227040035"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400590818028"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402798744318"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2402986081669"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401501840838"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401513193269"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400232496412"/>
			<DeclRefExpr type="char [256]" spelling="message" id="2403340477594"/>
			<DeclRefExpr type="double" spelling="limit" id="2402847021315"/>
			<StringLiteral type="char [27]" spelling="&quot; output value error: rgba(&quot;" id="2403473904457"/>
			<StringLiteral type="char [2]" spelling="&quot;,&quot;" id="2400343328724"/>
			<StringLiteral type="char [2]" spelling="&quot;,&quot;" id="2400955820719"/>
			<StringLiteral type="char [2]" spelling="&quot;,&quot;" id="2401774158214"/>
			<StringLiteral type="char [4]" spelling="&quot;): &quot;" id="2403662996602"/>
			<StringLiteral type="char [12]" spelling="&quot; expected: &quot;" id="2400103749492"/>
			<StringLiteral type="char [3]" spelling="&quot; (&quot;" id="2400501567226"/>
			<StringLiteral type="char [3]" spelling="&quot;..&quot;" id="2404072080052"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2403519281016"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401345304539"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2402406293815"/>
			<UnexposedExpr type="double (*)(double)" spelling="ceil" id="2401614245812"/>
			<UnexposedExpr type="double" spelling="in" id="2403391962876"/>
			<UnexposedExpr type="double" spelling="err" id="2403942679385"/>
			<UnexposedExpr type="double" spelling="max" id="2400813281840"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400881269976"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2401799199802"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2403797670259"/>
			<UnexposedExpr type="double" spelling="in" id="2403391536753"/>
			<UnexposedExpr type="double" spelling="err" id="2402107334110"/>
			<UnexposedExpr type="double" spelling="max" id="2404266440912"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2402130568534"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2403620068283"/>
			<UnexposedExpr type="double" spelling="err" id="2403164540978"/>
			<UnexposedExpr type="double" spelling="limit" id="2402171298781"/>
			<UnexposedExpr type="double" spelling="out" id="2402636924055"/>
			<UnexposedExpr type="unsigned int" spelling="out" id="2402052023670"/>
			<UnexposedExpr type="double" spelling="in_min" id="2401073840988"/>
			<UnexposedExpr type="double" spelling="out" id="2401082768770"/>
			<UnexposedExpr type="unsigned int" spelling="out" id="2402136610706"/>
			<UnexposedExpr type="double" spelling="in_max" id="2401813043260"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403427877037"/>
			<UnexposedExpr type="char *" spelling="message" id="2400139920241"/>
			<UnexposedExpr type="const char *" spelling="name" id="2402769220839"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403292851752"/>
			<UnexposedExpr type="char *" spelling="message" id="2403246572899"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400882520195"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403278100537"/>
			<UnexposedExpr type="char *" spelling="message" id="2402202322792"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401372122697"/>
			<UnexposedExpr type="int" spelling="r" id="2402963685365"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2403899932161"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401097372416"/>
			<UnexposedExpr type="char *" spelling="message" id="2401300545160"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401132977342"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403185803912"/>
			<UnexposedExpr type="char *" spelling="message" id="2400130556991"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404196248071"/>
			<UnexposedExpr type="int" spelling="g" id="2400785942083"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2402267881735"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402329835258"/>
			<UnexposedExpr type="char *" spelling="message" id="2400660997748"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401008653859"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403958850866"/>
			<UnexposedExpr type="char *" spelling="message" id="2401996113482"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400005712114"/>
			<UnexposedExpr type="int" spelling="b" id="2402392480133"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2401597653841"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403350259909"/>
			<UnexposedExpr type="char *" spelling="message" id="2403226407828"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401680932929"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2401087808670"/>
			<UnexposedExpr type="char *" spelling="message" id="2402543862757"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402834106483"/>
			<UnexposedExpr type="int" spelling="a" id="2400762237097"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2400242740965"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400607490619"/>
			<UnexposedExpr type="char *" spelling="message" id="2403729822299"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401157550434"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400318822015"/>
			<UnexposedExpr type="char *" spelling="message" id="2400551836688"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400263386770"/>
			<UnexposedExpr type="int" spelling="out" id="2403910928237"/>
			<UnexposedExpr type="unsigned int" spelling="out" id="2402557057975"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402125986507"/>
			<UnexposedExpr type="char *" spelling="message" id="2402398047849"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400332748431"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403249540434"/>
			<UnexposedExpr type="char *" spelling="message" id="2400721950496"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401686728876"/>
			<UnexposedExpr type="int" spelling="in_digitized" id="2401480168199"/>
			<UnexposedExpr type="unsigned int" spelling="in_digitized" id="2403133701438"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401333252181"/>
			<UnexposedExpr type="char *" spelling="message" id="2400778220608"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402769527589"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401169459953"/>
			<UnexposedExpr type="char *" spelling="message" id="2400288995976"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403677784911"/>
			<UnexposedExpr type="double" spelling="in" id="2402332306067"/>
			<UnexposedExpr type="double" spelling="err" id="2401857963329"/>
			<UnexposedExpr type="double" spelling="max" id="2400524962707"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403350967685"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404240242738"/>
			<UnexposedExpr type="char *" spelling="message" id="2404059510866"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400310896731"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401332212758"/>
			<UnexposedExpr type="char *" spelling="message" id="2400889555022"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402546798471"/>
			<UnexposedExpr type="double" spelling="in" id="2400812080233"/>
			<UnexposedExpr type="double" spelling="err" id="2404031646831"/>
			<UnexposedExpr type="double" spelling="max" id="2402334228651"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2402492331745"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400972716928"/>
			<UnexposedExpr type="char *" spelling="message" id="2401058923349"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400248167670"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2402594914968"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400113640989"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2400756771811"/>
			<UnexposedExpr type="char *" spelling="message" id="2401428560622"/>
			<UnexposedExpr type="double" spelling="limit" id="2403062844970"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Constants for the loop below:" comment_scope_start="6765" comment_scope_end="6786">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="store_palette" spelling="store_palette" id="2403618229372"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="const png_store *const" spelling="ps" id="2403630532211"/>
			<VarDecl type="png_byte" spelling="in_ct" id="2403907674772"/>
			<VarDecl type="png_byte" spelling="in_bd" id="2401657020659"/>
			<VarDecl type="png_uint_32" spelling="w" id="2402781060367"/>
			<VarDecl type="png_uint_32" spelling="h" id="2403661667905"/>
			<VarDecl type="png_byte" spelling="out_ct" id="2401020791468"/>
			<VarDecl type="png_byte" spelling="out_bd" id="2401510039116"/>
			<VarDecl type="png_byte" spelling="sample_depth" id="2403248159141"/>
			<VarDecl type="png_byte" spelling="red_sBIT" id="2401140920852"/>
			<VarDecl type="png_byte" spelling="green_sBIT" id="2403540649883"/>
			<VarDecl type="png_byte" spelling="blue_sBIT" id="2401939570226"/>
			<VarDecl type="png_byte" spelling="alpha_sBIT" id="2402418511995"/>
			<VarDecl type="int" spelling="have_tRNS" id="2402259557866"/>
			<VarDecl type="double" spelling="digitization_error" id="2403973448493"/>
			<VarDecl type="store_palette" spelling="out_palette" id="2403492824140"/>
			<VarDecl type="png_uint_32" spelling="y" id="2402313249338"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403322686550"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400562749495"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401204591097"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2404266164244"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401214478127"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400946470724"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402019547934"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2401608241693"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2401804739342"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402460626688"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403489139201"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403574610864"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402753822783"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2402098794928"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404183485992"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2400975725451"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402337576600"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400467662896"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403999748271"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403132819527"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401809511357"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2403798012937"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401885629448"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2401834620927"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401960187573"/>
			<MemberRefExpr type="png_byte" spelling="output_colour_type" id="2400776914810"/>
			<MemberRefExpr type="png_byte" spelling="output_bit_depth" id="2403326460989"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2404002532868"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403052851007"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401343285390"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400050767603"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400483462768"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403012489643"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402035752851"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402554175261"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400774251432"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402000478340"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2402542677971"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2400971357413"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403667389960"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400633633808"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403853714164"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400625587700"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401981471069"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2402376854775"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402626540410"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2400209149820"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400703554005"/>
			<UnexposedExpr type="png_byte" spelling="output_colour_type" id="2401954076596"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402304107831"/>
			<UnexposedExpr type="png_byte" spelling="output_bit_depth" id="2401211417218"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2404265021605"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2403609927882"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401121397935"/>
			<UnexposedExpr type="int" spelling="out_bd" id="2403491526048"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2401400348072"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2403851614275"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401163892000"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2403165304487"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401071361644"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2401325730462"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2401735654605"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2403103044176"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400334304090"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2400508114134"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400284599088"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402008912590"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for row overwrite errors" comment_scope_start="6787" comment_scope_end="6789">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_image_check" id="2400512566649"/>
			<DeclRefExpr type="void (const png_store *, png_const_structp, int)" spelling="store_image_check" id="2402063110240"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400175936645"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400888419528"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2403503355549"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400888528223"/>
			<UnexposedExpr type="void (*)(const png_store *, png_const_structp, int)" spelling="store_image_check" id="2400936116128"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2403630434659"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402006250394"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403568106206"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404247978094"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the palette corresponding to the output if the output colour type
    * indicates a palette, otherwise set out_palette to garbage." comment_scope_start="6790" comment_scope_end="6805">
		<SYMBOLS>
			<VarDecl type="int" spelling="npalette" id="2402881093352"/>
			<CallExpr type="int" spelling="read_palette" id="2401009244623"/>
			<CallExpr type="void" spelling="png_error" id="2401574615606"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2402706323990"/>
			<DeclRefExpr type="int (struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2401290241876"/>
			<DeclRefExpr type="store_palette" spelling="out_palette" id="2402696626597"/>
			<DeclRefExpr type="int" spelling="npalette" id="2403214034730"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404053617957"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401245375689"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401194611607"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403484168739"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401442795717"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403775263180"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400012747544"/>
			<StringLiteral type="char [34]" spelling="&quot;unexpected change in palette size&quot;" id="2403426098516"/>
			<MemberRefExpr type="int" spelling="npalette" id="2400558189426"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402535111702"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402389883915"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402132208990"/>
			<UnexposedExpr type="int (*)(struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2402733322146"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="out_palette" id="2402215746581"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401564138521"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403930812968"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400757218851"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404143489803"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400930979333"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401766776168"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400813922015"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="garbage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate that the palette count itself has not changed - this is not
       * expected." comment_scope_start="6795" comment_scope_end="6805">
		<SYMBOLS>
			<VarDecl type="int" spelling="npalette" id="2402881093352"/>
			<CallExpr type="int" spelling="read_palette" id="2401009244623"/>
			<CallExpr type="void" spelling="png_error" id="2401574615606"/>
			<DeclRefExpr type="int (struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2401290241876"/>
			<DeclRefExpr type="store_palette" spelling="out_palette" id="2402696626597"/>
			<DeclRefExpr type="int" spelling="npalette" id="2403214034730"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404053617957"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401245375689"/>
			<DeclRefExpr type="int" spelling="npalette" id="2401194611607"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403484168739"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401442795717"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403775263180"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400012747544"/>
			<StringLiteral type="char [34]" spelling="&quot;unexpected change in palette size&quot;" id="2403426098516"/>
			<MemberRefExpr type="int" spelling="npalette" id="2400558189426"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402535111702"/>
			<UnexposedExpr type="int (*)(struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2402733322146"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="out_palette" id="2402215746581"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401564138521"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403930812968"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400757218851"/>
			<UnexposedExpr type="int" spelling="npalette" id="2404143489803"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400930979333"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401766776168"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400813922015"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="use-input-precision means assume that if the input has 8 bit (or less)
       * samples and the output has 16 bit samples the calculations will be done
       * with 8 bit precision, not 16." comment_scope_start="6812" comment_scope_end="6824">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2401592544754"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2401187146707"/>
			<DeclRefExpr type="png_byte" spelling="in_sample_depth" id="2403061769555"/>
			<DeclRefExpr type="png_byte" spelling="in_sample_depth" id="2402270368849"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2403954601221"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402271920793"/>
			<DeclRefExpr type="png_byte" spelling="in_sample_depth" id="2402034254355"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2404174620763"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2402639735553"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401875584585"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401879922461"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2401510628798"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403009971445"/>
			<UnexposedExpr type="int" spelling="in_bd" id="2403799508155"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2404133818907"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2403448139616"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2403954767071"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401615159416"/>
			<UnexposedExpr type="int" spelling="in_sample_depth" id="2401017531885"/>
			<UnexposedExpr type="png_byte" spelling="in_sample_depth" id="2402828043614"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403525467634"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400749644500"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403671363931"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="samples" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="samples" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Else calculations are at 8 bit precision, and the output actually
       * consists of scaled 8-bit values, so scale .5 in 8 bits to the 16 bits:" comment_scope_start="6825" comment_scope_end="6830">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="digitization_error" id="2403958335924"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The original, standard, row pre-transforms." comment_scope_start="6837" comment_scope_end="6841">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [1024]" spelling="std" id="2402107815561"/>
			<CallExpr type="void" spelling="transform_row" id="2401117974882"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2404231650662"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401254708744"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400247876937"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402479944023"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2401112104470"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2404166179083"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2402014668278"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401765417316"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400595369522"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402252858537"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2401849833838"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2404135774707"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Go through each original pixel transforming it and comparing with what
       * libpng did to the same pixel." comment_scope_start="6842" comment_scope_end="6918">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<VarDecl type="image_pixel" spelling="in_pixel" id="2401526725650"/>
			<VarDecl type="image_pixel" spelling="out_pixel" id="2402985301834"/>
			<VarDecl type="unsigned int" spelling="r" id="2402608451728"/>
			<VarDecl type="unsigned int" spelling="g" id="2402177423305"/>
			<VarDecl type="unsigned int" spelling="b" id="2401080999772"/>
			<VarDecl type="unsigned int" spelling="a" id="2404254615318"/>
			<CallExpr type="void" spelling="image_pixel_init" id="2400987113150"/>
			<CallExpr type="void" spelling="mod" id="2401548629709"/>
			<CallExpr type="void" spelling="image_pixel_init" id="2400173632163"/>
			<CallExpr type="void" spelling="png_error" id="2401493144253"/>
			<CallExpr type="void" spelling="transform_range_check" id="2404037001535"/>
			<CallExpr type="void" spelling="transform_range_check" id="2403318323542"/>
			<CallExpr type="void" spelling="transform_range_check" id="2403581698259"/>
			<CallExpr type="void" spelling="transform_range_check" id="2400293464365"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2402494078728"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2401720542408"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2401195101314"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2401424353146"/>
			<DeclRefExpr type="void (image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2404015392754"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401366303827"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400303253869"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2401881295161"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2403857956425"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2402946454091"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400187774767"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400689345218"/>
			<DeclRefExpr type="png_byte" spelling="red_sBIT" id="2402864470702"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2404191473190"/>
			<DeclRefExpr type="png_byte" spelling="green_sBIT" id="2402229602139"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401036096256"/>
			<DeclRefExpr type="png_byte" spelling="blue_sBIT" id="2403421532809"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400265926869"/>
			<DeclRefExpr type="png_byte" spelling="alpha_sBIT" id="2400618853153"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400291947686"/>
			<DeclRefExpr type="int" spelling="have_tRNS" id="2403895827851"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2403420925282"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401032184431"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2402934750397"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403069334325"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401445875640"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401684947799"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2401386042560"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402274069809"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401710751659"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400689756051"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401619360934"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400741187441"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403422257875"/>
			<DeclRefExpr type="void (image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2402009393432"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2401371747860"/>
			<DeclRefExpr type="const png_const_bytep" spelling="pRow" id="2400562705879"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2403873086790"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2402458935270"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2404171088078"/>
			<DeclRefExpr type="store_palette" spelling="out_palette" id="2401128370433"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400038979086"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2403540094877"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2403411868942"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2404266907365"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403723038235"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401547112958"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404150785776"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401872025912"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403703285489"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2402019714465"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401806653032"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2403469923509"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2404035880048"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402950673761"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2400401396977"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401553653056"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401669403045"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403475881341"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402532687384"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402615108747"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403688365505"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403248400322"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400839348766"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2401871313241"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401640787288"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2400239978752"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401994441211"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403639429298"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2402523705369"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2404193271873"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402288351792"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2401738639258"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403257131500"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400330240350"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2400104908068"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402244670691"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402307801021"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403768218724"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403883065890"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400540388497"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2400570719923"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402659830846"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2402114695754"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401694076471"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403058843433"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2400334923723"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2400977482181"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402675000037"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2402344489940"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403157476961"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401247930735"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2401413181415"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2401166196864"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402402649197"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403541689563"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403616336181"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2403879638756"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2402205887050"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403202031162"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403585284972"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401542739184"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402954876813"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2400174906955"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2403009939629"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401520948458"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2402003072065"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400128752291"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403525048259"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2404252748300"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2403738734622"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402983149479"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401273371332"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401708596103"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400354605112"/>
			<StringLiteral type="char [37]" spelling="&quot;unexpected transformed palette index&quot;" id="2403687232470"/>
			<StringLiteral type="char [9]" spelling="&quot;red/gray&quot;" id="2401853208183"/>
			<StringLiteral type="char [6]" spelling="&quot;green&quot;" id="2403106874819"/>
			<StringLiteral type="char [5]" spelling="&quot;blue&quot;" id="2403891057487"/>
			<StringLiteral type="char [6]" spelling="&quot;alpha&quot;" id="2403606536340"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2402773668955"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402416801757"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401361768463"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403733623379"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403505820420"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402412521462"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2404188323038"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402899911080"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400904826792"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400538750551"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401302819413"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403213089899"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2403691340432"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2400847409009"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2402182479024"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2404112096136"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400753036730"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400819997388"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403736443435"/>
			<MemberRefExpr type="double" spelling="redf" id="2400860905393"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400905700001"/>
			<MemberRefExpr type="double" spelling="rede" id="2401386474382"/>
			<MemberRefExpr type="double" spelling="limit" id="2402147119451"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403101280802"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402277765793"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2401492755997"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403275062482"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400748762802"/>
			<MemberRefExpr type="double" spelling="greenf" id="2402994843847"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403961386908"/>
			<MemberRefExpr type="double" spelling="greene" id="2403860562883"/>
			<MemberRefExpr type="double" spelling="limit" id="2401051212571"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400596763266"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400625529027"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401037148470"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2402149135861"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400246716072"/>
			<MemberRefExpr type="double" spelling="bluef" id="2403439842817"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400581121729"/>
			<MemberRefExpr type="double" spelling="bluee" id="2404077744967"/>
			<MemberRefExpr type="double" spelling="limit" id="2401370665135"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403978363920"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403158511998"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2400893703865"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402067573898"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401582464125"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401241671994"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402703740454"/>
			<MemberRefExpr type="double" spelling="alphae" id="2403677646206"/>
			<MemberRefExpr type="double" spelling="limit" id="2401695970114"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403958712447"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2403826661916"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2400304284996"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2401102499736"/>
			<UnexposedExpr type="void (*)(image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2404213171195"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2401044540781"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2404045262865"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403977586318"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2403099424486"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2404233557577"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2403518691315"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403383290601"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2400242565954"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2403137849437"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2401509769534"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2403565183848"/>
			<UnexposedExpr type="int" spelling="have_tRNS" id="2401198628531"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400935072183"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2401476841426"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2404081355621"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2402556078809"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402773779990"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2403710854774"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2404199417938"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402077556520"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402401867064"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400613226590"/>
			<UnexposedExpr type="const struct transform_display *" spelling="dp" id="2400393682367"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400974456091"/>
			<UnexposedExpr type="void (*)(image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2401020309990"/>
			<UnexposedExpr type="png_const_bytep" spelling="pRow" id="2404230158320"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401039915688"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2400776153648"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2403213458298"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="out_palette" id="2400839083480"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2404079010574"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403248199805"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2403803363032"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2400923533752"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400041787258"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400505714021"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404165733758"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401893962000"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400808033598"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401299642659"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401746323911"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401334595746"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2403949822283"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401482624981"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400074399051"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2400294912709"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401827894943"/>
			<UnexposedExpr type="double" spelling="redf" id="2401027474419"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400443874195"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400159538245"/>
			<UnexposedExpr type="double" spelling="rede" id="2403409003958"/>
			<UnexposedExpr type="double" spelling="limit" id="2402206100241"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403675411159"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403434404595"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2402590357594"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402382454937"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2404259332021"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402663301509"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401071054037"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402321525598"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400124797121"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401242871352"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402811604901"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2402126036585"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2400886787765"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400140387147"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2400772722807"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400149277998"/>
			<UnexposedExpr type="double" spelling="greenf" id="2404030506511"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402526998676"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400743357267"/>
			<UnexposedExpr type="double" spelling="greene" id="2403337994761"/>
			<UnexposedExpr type="double" spelling="limit" id="2401710799741"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400054114942"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400835442602"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2400439751885"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2402830338555"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2400854685939"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2404014579936"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401664249408"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2400071498118"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2402680975390"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2400634628114"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403329129651"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2402906508936"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401950156817"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2402897499689"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2401307931366"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2404207050853"/>
			<UnexposedExpr type="double" spelling="bluef" id="2402575252815"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2401385214713"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400458667869"/>
			<UnexposedExpr type="double" spelling="bluee" id="2402465398140"/>
			<UnexposedExpr type="double" spelling="limit" id="2401077545876"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402619050745"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400364973078"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2403787625740"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402743803410"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2403752006182"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402768970063"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402443021337"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2403292094205"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2404181675003"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2402935730030"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404015302558"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2401086797844"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401921242110"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400178264345"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2402410852515"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2400037430742"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400415556654"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2402989616065"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403787084554"/>
			<UnexposedExpr type="double" spelling="alphae" id="2401294087352"/>
			<UnexposedExpr type="double" spelling="limit" id="2400078249808"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403859212757"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402818671523"/>
			<UnexposedExpr type="int" spelling="alpha_sBIT" id="2401565359833"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2401664967587"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2402824338994"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="comparing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Find out what we think the pixel should be:" comment_scope_start="6850" comment_scope_end="6859">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_init" id="2400987113150"/>
			<DeclRefExpr type="void (image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2404015392754"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401366303827"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400303253869"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2401881295161"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2403857956425"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2402946454091"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400187774767"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400689345218"/>
			<DeclRefExpr type="png_byte" spelling="red_sBIT" id="2402864470702"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2404191473190"/>
			<DeclRefExpr type="png_byte" spelling="green_sBIT" id="2402229602139"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401036096256"/>
			<DeclRefExpr type="png_byte" spelling="blue_sBIT" id="2403421532809"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400265926869"/>
			<DeclRefExpr type="png_byte" spelling="alpha_sBIT" id="2400618853153"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400291947686"/>
			<DeclRefExpr type="int" spelling="have_tRNS" id="2403895827851"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2402773668955"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402416801757"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401361768463"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403733623379"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403505820420"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2402412521462"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2404188323038"/>
			<UnexposedExpr type="void (*)(image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2404213171195"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2401044540781"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2404045262865"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403977586318"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2403099424486"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2404233557577"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2403518691315"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403383290601"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2400242565954"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2403137849437"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2401509769534"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2403565183848"/>
			<UnexposedExpr type="int" spelling="have_tRNS" id="2401198628531"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For error detection, below." comment_scope_start="6860" comment_scope_end="6865">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="r" id="2403420925282"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401032184431"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2402934750397"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403069334325"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401445875640"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401684947799"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2401386042560"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402274069809"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402899911080"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400904826792"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400538750551"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401302819413"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400935072183"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2401476841426"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2404081355621"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2402556078809"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This applies the transforms to the input data, including output
          * format operations which must be used when reading the output
          * pixel that libpng produces." comment_scope_start="6866" comment_scope_end="6871">
		<SYMBOLS>
			<CallExpr type="void" spelling="mod" id="2401548629709"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401710751659"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400689756051"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401619360934"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400741187441"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403422257875"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403213089899"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2403691340432"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2400847409009"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402773779990"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2403710854774"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2404199417938"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402077556520"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402401867064"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400613226590"/>
			<UnexposedExpr type="const struct transform_display *" spelling="dp" id="2400393682367"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400974456091"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the output pixel and compare it to what we got, we don't
          * use the error field here, so no need to update sBIT.  in_pixel
          * says whether we expect libpng to change the output format." comment_scope_start="6872" comment_scope_end="6878">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_init" id="2400173632163"/>
			<DeclRefExpr type="void (image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2402009393432"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2401371747860"/>
			<DeclRefExpr type="const png_const_bytep" spelling="pRow" id="2400562705879"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2403873086790"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2402458935270"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2404171088078"/>
			<DeclRefExpr type="store_palette" spelling="out_palette" id="2401128370433"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400038979086"/>
			<UnexposedExpr type="void (*)(image_pixel *, png_const_bytep, png_byte, png_byte, png_uint_32, struct store_palette_entry *, const image_pixel *)" spelling="image_pixel_init" id="2401020309990"/>
			<UnexposedExpr type="png_const_bytep" spelling="pRow" id="2404230158320"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401039915688"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2400776153648"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2403213458298"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="out_palette" id="2400839083480"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="We don't expect changes to the index here even if the bit depth is
          * changed." comment_scope_start="6879" comment_scope_end="6888">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2401493144253"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2403540094877"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2403411868942"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2404266907365"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403723038235"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401547112958"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404150785776"/>
			<StringLiteral type="char [37]" spelling="&quot;unexpected transformed palette index&quot;" id="2403687232470"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2402182479024"/>
			<MemberRefExpr type="unsigned int" spelling="palette_index" id="2404112096136"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2404079010574"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403248199805"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2403803363032"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2400923533752"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400041787258"/>
			<UnexposedExpr type="unsigned int" spelling="palette_index" id="2400505714021"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404165733758"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401893962000"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the colours for palette images too - in fact the palette could
          * be separately verified itself in most cases." comment_scope_start="6889" comment_scope_end="6917">
		<SYMBOLS>
			<CallExpr type="void" spelling="transform_range_check" id="2404037001535"/>
			<CallExpr type="void" spelling="transform_range_check" id="2403318323542"/>
			<CallExpr type="void" spelling="transform_range_check" id="2403581698259"/>
			<CallExpr type="void" spelling="transform_range_check" id="2400293464365"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401872025912"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403703285489"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2402019714465"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401806653032"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2403469923509"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2404035880048"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402950673761"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2400401396977"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401553653056"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401669403045"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403475881341"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402532687384"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402615108747"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403688365505"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403248400322"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400839348766"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2401871313241"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401640787288"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2400239978752"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401994441211"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403639429298"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2402523705369"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2404193271873"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402288351792"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2401738639258"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403257131500"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400330240350"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2400104908068"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2402244670691"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402307801021"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403768218724"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403883065890"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400540388497"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2400570719923"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402659830846"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2402114695754"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401694076471"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403058843433"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2400334923723"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2400977482181"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2402675000037"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2402344489940"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403157476961"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401247930735"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2401413181415"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2401166196864"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402402649197"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2403541689563"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403616336181"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2403879638756"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2402205887050"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403202031162"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2403585284972"/>
			<DeclRefExpr type="void (png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401542739184"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402954876813"/>
			<DeclRefExpr type="unsigned int" spelling="r" id="2400174906955"/>
			<DeclRefExpr type="unsigned int" spelling="g" id="2403009939629"/>
			<DeclRefExpr type="unsigned int" spelling="b" id="2401520948458"/>
			<DeclRefExpr type="unsigned int" spelling="a" id="2402003072065"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2400128752291"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2403525048259"/>
			<DeclRefExpr type="image_pixel" spelling="out_pixel" id="2404252748300"/>
			<DeclRefExpr type="png_byte" spelling="sample_depth" id="2403738734622"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2402983149479"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2401273371332"/>
			<DeclRefExpr type="image_pixel" spelling="in_pixel" id="2401708596103"/>
			<DeclRefExpr type="double" spelling="digitization_error" id="2400354605112"/>
			<StringLiteral type="char [9]" spelling="&quot;red/gray&quot;" id="2401853208183"/>
			<StringLiteral type="char [6]" spelling="&quot;green&quot;" id="2403106874819"/>
			<StringLiteral type="char [5]" spelling="&quot;blue&quot;" id="2403891057487"/>
			<StringLiteral type="char [6]" spelling="&quot;alpha&quot;" id="2403606536340"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400753036730"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400819997388"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403736443435"/>
			<MemberRefExpr type="double" spelling="redf" id="2400860905393"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2400905700001"/>
			<MemberRefExpr type="double" spelling="rede" id="2401386474382"/>
			<MemberRefExpr type="double" spelling="limit" id="2402147119451"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403101280802"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402277765793"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2401492755997"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403275062482"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2400748762802"/>
			<MemberRefExpr type="double" spelling="greenf" id="2402994843847"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403961386908"/>
			<MemberRefExpr type="double" spelling="greene" id="2403860562883"/>
			<MemberRefExpr type="double" spelling="limit" id="2401051212571"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400596763266"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2400625529027"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2401037148470"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2402149135861"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400246716072"/>
			<MemberRefExpr type="double" spelling="bluef" id="2403439842817"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2400581121729"/>
			<MemberRefExpr type="double" spelling="bluee" id="2404077744967"/>
			<MemberRefExpr type="double" spelling="limit" id="2401370665135"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403978363920"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403158511998"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2400893703865"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402067573898"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2401582464125"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401241671994"/>
			<MemberRefExpr type="unsigned int" spelling="alpha" id="2402703740454"/>
			<MemberRefExpr type="double" spelling="alphae" id="2403677646206"/>
			<MemberRefExpr type="double" spelling="limit" id="2401695970114"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403958712447"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2403826661916"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400808033598"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401299642659"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401746323911"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401334595746"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2403949822283"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401482624981"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400074399051"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2400294912709"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401827894943"/>
			<UnexposedExpr type="double" spelling="redf" id="2401027474419"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2400443874195"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400159538245"/>
			<UnexposedExpr type="double" spelling="rede" id="2403409003958"/>
			<UnexposedExpr type="double" spelling="limit" id="2402206100241"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403675411159"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403434404595"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2402590357594"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402382454937"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2404259332021"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402663301509"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401071054037"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402321525598"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400124797121"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2401242871352"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402811604901"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2402126036585"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2400886787765"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400140387147"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2400772722807"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2400149277998"/>
			<UnexposedExpr type="double" spelling="greenf" id="2404030506511"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402526998676"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400743357267"/>
			<UnexposedExpr type="double" spelling="greene" id="2403337994761"/>
			<UnexposedExpr type="double" spelling="limit" id="2401710799741"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400054114942"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400835442602"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2400439751885"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2402830338555"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2400854685939"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2404014579936"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401664249408"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2400071498118"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2402680975390"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2400634628114"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403329129651"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2402906508936"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401950156817"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2402897499689"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2401307931366"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2404207050853"/>
			<UnexposedExpr type="double" spelling="bluef" id="2402575252815"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2401385214713"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2400458667869"/>
			<UnexposedExpr type="double" spelling="bluee" id="2402465398140"/>
			<UnexposedExpr type="double" spelling="limit" id="2401077545876"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402619050745"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2400364973078"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2403787625740"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402743803410"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2403752006182"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402768970063"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402443021337"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2403292094205"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2404181675003"/>
			<UnexposedExpr type="void (*)(png_const_structp, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, double, unsigned int, png_byte, double, double, const char *, double)" spelling="transform_range_check" id="2402935730030"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404015302558"/>
			<UnexposedExpr type="unsigned int" spelling="r" id="2401086797844"/>
			<UnexposedExpr type="unsigned int" spelling="g" id="2401921242110"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2400178264345"/>
			<UnexposedExpr type="unsigned int" spelling="a" id="2402410852515"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2400037430742"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400415556654"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2402989616065"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2403787084554"/>
			<UnexposedExpr type="double" spelling="alphae" id="2401294087352"/>
			<UnexposedExpr type="double" spelling="limit" id="2400078249808"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403859212757"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2402818671523"/>
			<UnexposedExpr type="int" spelling="alpha_sBIT" id="2401565359833"/>
			<UnexposedExpr type="png_byte" spelling="alpha_sBIT" id="2401664967587"/>
			<UnexposedExpr type="double" spelling="digitization_error" id="2402824338994"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="pixel (x) loop" comment_scope_start="6918" comment_scope_end="6918"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="row (y) loop" comment_scope_start="6919" comment_scope_end="6919"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Record that something was actually checked to avoid a false positive." comment_scope_start="6921" comment_scope_end="6923">
		<SYMBOLS>
			<FunctionDecl type="void (transform_display *, png_const_structp, png_infop)" spelling="transform_image_validate" id="2400274650840"/>
			<DeclRefExpr type="transform_display *" spelling="dp" id="2400755556699"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2402236417274"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401350610731"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401614947942"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2401546487824"/>
			<UnexposedExpr type="transform_display *" spelling="dp" id="2403917918963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="positive" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A single test run." comment_scope_start="6938" comment_scope_end="6954">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<VarDecl type="transform_display" spelling="d" id="2402043520197"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2400761786674"/>
			<VarDecl type="png_store *" spelling="fault" id="2401275410725"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2402182332934"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2401126503445"/>
			<VarDecl type="size_t" spelling="pos" id="2400064060749"/>
			<VarDecl type="png_structp" spelling="pp" id="2400798037756"/>
			<VarDecl type="png_infop" spelling="pi" id="2402205770328"/>
			<VarDecl type="char [256]" spelling="full_name" id="2401838744829"/>
			<ParmDecl type="png_modifier *" spelling="pmIn" id="2400418961352"/>
			<ParmDecl type="png_uint_32" spelling="idIn" id="2400489477635"/>
			<ParmDecl type="const image_transform *" spelling="transform_listIn" id="2401654100296"/>
			<ParmDecl type="const char *const" spelling="name" id="2403720599568"/>
			<CallExpr type="void" spelling="transform_display_init" id="2401266204737"/>
			<CallExpr type="int" spelling="_setjmp" id="2402345236001"/>
			<DeclRefExpr type="png_modifier *" spelling="pmIn" id="2401523070948"/>
			<DeclRefExpr type="void (transform_display *, png_modifier *, png_uint_32, const image_transform *)" spelling="transform_display_init" id="2402224486057"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2404043884604"/>
			<DeclRefExpr type="png_modifier *" spelling="pmIn" id="2400749965066"/>
			<DeclRefExpr type="png_uint_32" spelling="idIn" id="2401043081780"/>
			<DeclRefExpr type="const image_transform *" spelling="transform_listIn" id="2402617163120"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401577852080"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2404025816666"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402623425647"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401959253773"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2403790782354"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2402379172406"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2402627559334"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401660179673"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402446126830"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400837861690"/>
			<UnexposedExpr type="png_modifier *" spelling="pmIn" id="2404003800182"/>
			<UnexposedExpr type="void (*)(transform_display *, png_modifier *, png_uint_32, const image_transform *)" spelling="transform_display_init" id="2403548738547"/>
			<UnexposedExpr type="png_modifier *" spelling="pmIn" id="2403299060087"/>
			<UnexposedExpr type="png_uint_32" spelling="idIn" id="2400500256088"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_listIn" id="2402523696752"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2402929941744"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403487973323"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400629212099"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2403335278659"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2402030429013"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make sure the encoding fields are correct and enter the required
       * modifications." comment_scope_start="6955" comment_scope_end="6959">
		<SYMBOLS>
			<CallExpr type="void" spelling="transform_set_encoding" id="2403516452557"/>
			<DeclRefExpr type="void (transform_display *)" spelling="transform_set_encoding" id="2401617174216"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401136207780"/>
			<UnexposedExpr type="void (*)(transform_display *)" spelling="transform_set_encoding" id="2402048523444"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add any modifications required by the transform list." comment_scope_start="6960" comment_scope_end="6962">
		<SYMBOLS>
			<CallExpr type="void" spelling="ini" id="2402737134257"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2403253645878"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401667978853"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2400154368470"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *)" spelling="ini" id="2402666851771"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2402763577826"/>
			<MemberRefExpr type="const image_transform *" spelling="transform_list" id="2400712391774"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *)" spelling="ini" id="2401853209539"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2402326946949"/>
			<UnexposedExpr type="const image_transform *" spelling="transform_list" id="2401817227999"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add the color space information, if any, to the name." comment_scope_start="6963" comment_scope_end="6966">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401137202157"/>
			<CallExpr type="size_t" spelling="safecat_current_encoding" id="2400451172309"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403729047481"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402497785022"/>
			<DeclRefExpr type="char [256]" spelling="full_name" id="2403028320978"/>
			<DeclRefExpr type="char [256]" spelling="full_name" id="2403168525838"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402755845750"/>
			<DeclRefExpr type="const char *const" spelling="name" id="2403603169792"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400799327659"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const png_modifier *)" spelling="safecat_current_encoding" id="2401821877730"/>
			<DeclRefExpr type="char [256]" spelling="full_name" id="2401124892919"/>
			<DeclRefExpr type="char [256]" spelling="full_name" id="2403565184516"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403947273345"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2400870655532"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401291054512"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400907737911"/>
			<UnexposedExpr type="char *" spelling="full_name" id="2400928372730"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403580633217"/>
			<UnexposedExpr type="const char *" spelling="name" id="2403644297009"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const png_modifier *)" spelling="safecat_current_encoding" id="2400636493075"/>
			<UnexposedExpr type="char *" spelling="full_name" id="2404079396005"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401712754848"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2400844707875"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402848605786"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get a png_struct for reading the image." comment_scope_start="6967" comment_scope_end="6971">
		<SYMBOLS>
			<CallExpr type="png_structp" spelling="set_modifier_for_read" id="2403503337812"/>
			<CallExpr type="void" spelling="standard_palette_init" id="2400004965424"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402094758810"/>
			<DeclRefExpr type="png_structp (png_modifier *, png_infopp, png_uint_32, const char *)" spelling="set_modifier_for_read" id="2402145369417"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2402544997746"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400697767231"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401394556152"/>
			<DeclRefExpr type="char [256]" spelling="full_name" id="2401127851753"/>
			<DeclRefExpr type="void (standard_display *)" spelling="standard_palette_init" id="2401762704232"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2403120529513"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401093740282"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2403652798585"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400779802130"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403608546843"/>
			<UnexposedExpr type="png_structp (*)(png_modifier *, png_infopp, png_uint_32, const char *)" spelling="set_modifier_for_read" id="2400733214576"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404137596073"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2403150394877"/>
			<UnexposedExpr type="const char *" spelling="full_name" id="2400156210909"/>
			<UnexposedExpr type="char *" spelling="full_name" id="2400078283494"/>
			<UnexposedExpr type="void (*)(standard_display *)" spelling="standard_palette_init" id="2401044814917"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Logging (debugging only)" comment_scope_start="6972" comment_scope_end="6980"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Introduce the correct read function." comment_scope_start="6983" comment_scope_end="6992">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2402108948348"/>
			<CallExpr type="void" spelling="modifier_progressive_read" id="2403891591365"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401959349309"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2403958039765"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403569651381"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401177645602"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="transform_info" id="2404228569515"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2402047040917"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="transform_end" id="2402308484718"/>
			<DeclRefExpr type="void (png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2401047090004"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401111877136"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401690819768"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400330334935"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2403990792908"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402493923242"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2404220564167"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400353666976"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2401242326645"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403561890336"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400626308759"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403187189185"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="transform_info" id="2402611440811"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2402911099269"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="transform_end" id="2400561453267"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2403944852102"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400245055346"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403122539872"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401606720378"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="introduce" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Share the row function with the standard implementation." comment_scope_start="6986" comment_scope_end="6989">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2402108948348"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2403958039765"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403569651381"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401177645602"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="transform_info" id="2404228569515"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2402047040917"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="transform_end" id="2402308484718"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400626308759"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403187189185"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="transform_info" id="2402611440811"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2402911099269"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="transform_end" id="2400561453267"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now feed data into the reader until we reach the end:" comment_scope_start="6990" comment_scope_end="6992">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_progressive_read" id="2403891591365"/>
			<DeclRefExpr type="void (png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2401047090004"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401111877136"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401690819768"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400330334935"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400353666976"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2403944852102"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400245055346"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403122539872"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401606720378"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="modifier_read expects a png_modifier*" comment_scope_start="6995" comment_scope_end="6997">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_read_fn" id="2403496053139"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2401865548376"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401660410758"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2403838115576"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="modifier_read" id="2402344714275"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401611298808"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2404046184384"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401128215307"/>
			<UnexposedExpr type="png_voidp" spelling="pm" id="2401646390053"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403660660443"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="modifier_read" id="2402021182007"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the header values:" comment_scope_start="6998" comment_scope_end="7000">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_read_info" id="2404215806951"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2402527161886"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400689505273"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403201934351"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2400323813170"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402440812090"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402764089172"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Process the 'info' requirements. Only one image is generated" comment_scope_start="7001" comment_scope_end="7010">
		<SYMBOLS>
			<CallExpr type="void" spelling="transform_info_imp" id="2403341769421"/>
			<CallExpr type="void" spelling="sequential_row" id="2401616708968"/>
			<CallExpr type="void" spelling="transform_image_validate" id="2402577077930"/>
			<DeclRefExpr type="void (transform_display *, png_structp, png_infop)" spelling="transform_info_imp" id="2401050058798"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2402856890503"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401629619850"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401234290920"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2401433873293"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2401961157145"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404167236263"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404103792597"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2404195495632"/>
			<DeclRefExpr type="void (transform_display *, png_const_structp, png_infop)" spelling="transform_image_validate" id="2402462860918"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2402895479215"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402449172940"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403894297027"/>
			<DeclRefExpr type="transform_display" spelling="d" id="2400104944917"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402012574183"/>
			<MemberRefExpr type="int" spelling="speed" id="2400555271352"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401024078154"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2401737059715"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2404056496192"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400952139391"/>
			<UnexposedExpr type="void (*)(transform_display *, png_structp, png_infop)" spelling="transform_info_imp" id="2402525961254"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402120748641"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402812420985"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2401092585914"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403587586406"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401745287134"/>
			<UnexposedExpr type="int" spelling="speed" id="2400014411511"/>
			<UnexposedExpr type="void (*)(transform_display *, png_const_structp, png_infop)" spelling="transform_image_validate" id="2400540691089"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402678628969"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403989030255"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403626295706"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402339359807"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The transforms:" comment_scope_start="7021" comment_scope_end="7028"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="enable" comment_scope_start="7029" comment_scope_end="7029"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="list" comment_scope_start="7030" comment_scope_end="7030"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="global_use" comment_scope_start="7031" comment_scope_end="7031"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="local_use" comment_scope_start="7032" comment_scope_end="7032"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="next" comment_scope_start="7033" comment_scope_end="7033"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="stores the previous transform" comment_scope_start="7039" comment_scope_end="7039"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="To save code:" comment_scope_start="7041" comment_scope_end="7042">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402798058886"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="silence GCC warnings" comment_scope_start="7043" comment_scope_end="7043">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2400955828953"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<ParmDecl type="transform_display *" spelling="that" id="2401847710951"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gcc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="private, but almost always needed" comment_scope_start="7045" comment_scope_end="7045"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_palette_to_rgb" comment_scope_start="7068" comment_scope_end="7102">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_palette_to_rgb_set" id="2402184174277"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_palette_to_rgb_mod" id="2402999741786"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_palette_to_rgb_add" id="2403222706304"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_palette_to_rgb" id="2402181133037"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400269409929"/>
			<ParmDecl type="transform_display *" spelling="that" id="2401639215547"/>
			<ParmDecl type="png_structp" spelling="pp" id="2402961990130"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402822163287"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2403484555942"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2402701405224"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400741308663"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2402471764356"/>
			<ParmDecl type="image_transform *" spelling="this" id="2401740521782"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2404153497937"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2400142056066"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400487460495"/>
			<CallExpr type="void" spelling="png_set_palette_to_rgb" id="2404126253086"/>
			<CallExpr type="void" spelling="set" id="2402132456133"/>
			<CallExpr type="void" spelling="image_pixel_convert_PLTE" id="2403971846469"/>
			<CallExpr type="void" spelling="mod" id="2403113763435"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_palette_to_rgb" id="2403684999445"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403773819887"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400637609005"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401502164520"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401546022300"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403230808285"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402507503390"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401774650511"/>
			<DeclRefExpr type="void (image_pixel *)" spelling="image_pixel_convert_PLTE" id="2401969284518"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402236106410"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400217657858"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400052752626"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401096681725"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401864006242"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2404215509584"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2404209260932"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2400701743644"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2401405907337"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2400399689049"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2401465431631"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402770050339"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2400331772049"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2403978219588"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_palette_to_rgb_set" id="2403255994602"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_palette_to_rgb_mod" id="2402176241832"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_palette_to_rgb_add" id="2401744593523"/>
			<StringLiteral type="char [15]" spelling="&quot;palette_to_rgb&quot;" id="2403694181631"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401167318243"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401409731813"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401187435624"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400340055145"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402489560966"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401124214439"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403834225812"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2400618677972"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_palette_to_rgb" id="2404240721678"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403121473097"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400948913473"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2404212974811"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401408679152"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403554913836"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401299521724"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2404294481293"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401304977744"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403259928320"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2404146531160"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400510592374"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401699605915"/>
			<UnexposedExpr type="void (*)(image_pixel *)" spelling="image_pixel_convert_PLTE" id="2401636452916"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404096540153"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2400148348354"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400792146684"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403824695210"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400225119202"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403151468687"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403754359156"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402843581736"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2403954981491"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401111659392"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2404045882478"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2400048612838"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401784717562"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402491667194"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2403988451959"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400888362132"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402212873916"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2401105232721"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_palette_to_rgb_set" id="2404124308957"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_palette_to_rgb_mod" id="2402170129411"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_palette_to_rgb_add" id="2401744388614"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_EXPAND_SUPPORTED" comment_scope_start="7103" comment_scope_end="7103"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_tRNS_to_alpha" comment_scope_start="7106" comment_scope_end="7112">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2403113603539"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400578020858"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400459706895"/>
			<ParmDecl type="png_infop" spelling="pi" id="2404070550935"/>
			<CallExpr type="void" spelling="png_set_tRNS_to_alpha" id="2403566866778"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_tRNS_to_alpha" id="2403169810926"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401720820713"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_tRNS_to_alpha" id="2402906733716"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404257028854"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If there was a tRNS chunk that would get expanded and add an alpha
    * channel is_transparent must be updated:" comment_scope_start="7113" comment_scope_end="7120">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_tRNS_to_alpha_set" id="2401601484709"/>
			<CallExpr type="void" spelling="set" id="2402392936174"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401954899971"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402388219115"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401328392632"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402190085884"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403583193086"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401107564970"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400749209793"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2400503368559"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402523447341"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2404257725058"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2404178827202"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400313561765"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403580698271"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403369026520"/>
			<UnexposedExpr type="int" spelling="has_tRNS" id="2403343099818"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403459576612"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402715975388"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402895337129"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402710553036"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403976514154"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403848336967"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401622090781"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403576681448"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403263097398"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400146413456"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="LIBPNG BUG: this always forces palette images to RGB." comment_scope_start="7128" comment_scope_end="7132">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_convert_PLTE" id="2403197270943"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403391138354"/>
			<DeclRefExpr type="void (image_pixel *)" spelling="image_pixel_convert_PLTE" id="2403066804811"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401439324151"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400584547640"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402268219399"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402010964442"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401783326731"/>
			<UnexposedExpr type="void (*)(image_pixel *)" spelling="image_pixel_convert_PLTE" id="2403605229268"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401977322979"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This effectively does an 'expand' only if there is some transparency to
    * convert to an alpha channel." comment_scope_start="7133" comment_scope_end="7140">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401335066575"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2402519799575"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2403118600611"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400414133529"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!for background" comment_scope_start="7141" comment_scope_end="7141">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_add_alpha" id="2401717483228"/>
			<DeclRefExpr type="void (image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2401532341000"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403034428175"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2401743118586"/>
			<MemberRefExpr type="const standard_display" spelling="this" id="2403464616741"/>
			<UnexposedExpr type="void (*)(image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2400893362105"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404104429419"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2402616401929"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="LIBPNG BUG: otherwise libpng still expands to 8 bits!" comment_scope_start="7144" comment_scope_end="7151">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402524694919"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402102224216"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403362271904"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403933100850"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402142629795"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403954009715"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2402043003601"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401097448827"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402381271234"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402683118558"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400466799212"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402284687425"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401024790417"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401822304017"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400982073244"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400516699874"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="We don't know yet whether there will be a tRNS chunk, but we know that
    * this transformation should do nothing if there already is an alpha
    * channel.  In addition, after the bug fix in 1.7.0, there is no longer
    * any action on a palette image." comment_scope_start="7166" comment_scope_end="7176">
		<SYMBOLS>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_tRNS_to_alpha_add" id="2402212051822"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403428237085"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401866858400"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402867536564"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="addition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="transformation"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_EXPAND_SUPPORTED" comment_scope_start="7181" comment_scope_end="7181"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_gray_to_rgb" comment_scope_start="7184" comment_scope_end="7189">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400657554586"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400219836243"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400171886522"/>
			<ParmDecl type="png_infop" spelling="pi" id="2403588993842"/>
			<CallExpr type="void" spelling="png_set_gray_to_rgb" id="2401438166698"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_gray_to_rgb" id="2400449641157"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401002889966"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_gray_to_rgb" id="2400409009199"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401363580632"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: this doesn't result in tRNS expansion." comment_scope_start="7190" comment_scope_end="7192">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_gray_to_rgb_set" id="2401079378657"/>
			<CallExpr type="void" spelling="set" id="2400282068167"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403100490003"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403166645136"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400604433733"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402823904125"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403457995450"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401826406422"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400141263459"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402566375886"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400779645575"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2404244278174"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401846752790"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402807387158"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403546000022"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400972104804"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402600261284"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403710612185"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="expansion" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: we can actually pend the tRNS processing at this point because we
    * can correctly recognize the original pixel value even though we have
    * mapped the one gray channel to the three RGB ones, but in fact libpng
    * doesn't do this, so we don't either." comment_scope_start="7199" comment_scope_end="7204">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402969255957"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402160238693"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404193231610"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2404205807108"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2404275071996"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402693779103"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400318612422"/>
			<UnexposedExpr type="int" spelling="have_tRNS" id="2400694934416"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2404083164328"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401382443118"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!for background" comment_scope_start="7205" comment_scope_end="7205">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_add_alpha" id="2403835065873"/>
			<DeclRefExpr type="void (image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2404289770115"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404264088711"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2403635979820"/>
			<MemberRefExpr type="const standard_display" spelling="this" id="2404261702002"/>
			<UnexposedExpr type="void (*)(image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2400281547824"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402297679336"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2402833725563"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Simply expand the bit depth and alter the colour type as required." comment_scope_start="7207" comment_scope_end="7218">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401104049098"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402512877436"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401652215245"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402278235241"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400875977761"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400935699837"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400131616378"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401609972166"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402730445316"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403863136652"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402421444440"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400039162130"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400191791062"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401027110059"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400672842774"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402272005945"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401555670165"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400911412115"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400887177973"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB images have a bit depth at least equal to '8'" comment_scope_start="7210" comment_scope_end="7213">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402512877436"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401652215245"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402278235241"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400131616378"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2401609972166"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402730445316"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401027110059"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400672842774"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402272005945"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401555670165"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400911412115"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="equal" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And just changing the colour type works here because the green and blue
       * channels are being maintained in lock-step with the red/gray:" comment_scope_start="7214" comment_scope_end="7218">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400875977761"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403863136652"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400887177973"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="green"/>
			<PROBLEM_DOMAIN word="blue"/>
			<PROBLEM_DOMAIN word="red"/>
			<PROBLEM_DOMAIN word="gray"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_GRAY_TO_RGB_SUPPORTED" comment_scope_start="7241" comment_scope_end="7241"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_expand" comment_scope_start="7244" comment_scope_end="7261">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_expand_set" id="2400140116947"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401196847917"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402385407667"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400223422830"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401291560793"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401770306751"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2403614289239"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400662682249"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2401161784581"/>
			<CallExpr type="void" spelling="png_set_expand" id="2402008774657"/>
			<CallExpr type="void" spelling="set" id="2403623766986"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_expand" id="2400629032626"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402040214782"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401564752630"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402967572640"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401823123144"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400911504079"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403561476297"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403427200983"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402581511033"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2403362358044"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402667458572"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2402790418043"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401715236749"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404006164595"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403838554641"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400597258042"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_expand" id="2402519136211"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402600830698"/>
			<UnexposedExpr type="int" spelling="has_tRNS" id="2402811431290"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401126551383"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403892070503"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402596080349"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401118921425"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403329572622"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403491926947"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401924645198"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403769728020"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402727635069"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400662213183"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The general expand case depends on what the colour type is:" comment_scope_start="7262" comment_scope_end="7264">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_convert_PLTE" id="2400689502807"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401771973155"/>
			<DeclRefExpr type="void (image_pixel *)" spelling="image_pixel_convert_PLTE" id="2400320216642"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402438988297"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402075411909"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403780618016"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400937207377"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400910697296"/>
			<UnexposedExpr type="void (*)(image_pixel *)" spelling="image_pixel_convert_PLTE" id="2403088394059"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400251749599"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="general" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="grayscale" comment_scope_start="7265" comment_scope_end="7265">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400844450171"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403771485054"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403661407617"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403844145337"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401891581181"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!for background" comment_scope_start="7269" comment_scope_end="7269">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_add_alpha" id="2400109502401"/>
			<DeclRefExpr type="void (image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2402412718333"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403105448170"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2402297291360"/>
			<MemberRefExpr type="const standard_display" spelling="this" id="2401501687866"/>
			<UnexposedExpr type="void (*)(image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2400899539281"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404003513733"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2402747342536"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'expand' should do nothing for RGBA or GA input - no tRNS and the bit
    * depth is at least 8 already." comment_scope_start="7283" comment_scope_end="7287">
		<SYMBOLS>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_expand_add" id="2403866866922"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400207587779"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402590353135"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401094147495"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgba"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_EXPAND_SUPPORTED" comment_scope_start="7292" comment_scope_end="7292"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_expand_gray_1_2_4_to_8
 * Pre 1.7.0 LIBPNG BUG: this just does an 'expand'" comment_scope_start="7295" comment_scope_end="7303">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401081255216"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400354867786"/>
			<ParmDecl type="png_structp" spelling="pp" id="2402547658002"/>
			<ParmDecl type="png_infop" spelling="pi" id="2404077484049"/>
			<CallExpr type="void" spelling="png_set_expand_gray_1_2_4_to_8" id="2402096871534"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_expand_gray_1_2_4_to_8" id="2401932314440"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402758044723"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_expand_gray_1_2_4_to_8" id="2401478322882"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400486160698"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: don't expect this to expand tRNS" comment_scope_start="7304" comment_scope_end="7306">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_expand_gray_1_2_4_to_8_set" id="2403466435034"/>
			<CallExpr type="void" spelling="set" id="2401522232986"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402339617842"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400272936919"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403002679273"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401450711764"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401095854504"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403971194995"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400700297723"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400732989463"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402998443316"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400083368448"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402986829255"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2404176719136"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402996642639"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401568905559"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402552001226"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2404100472967"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Only expand grayscale of bit depth less than 8:" comment_scope_start="7316" comment_scope_end="7321"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1.7 or later" comment_scope_start="7322" comment_scope_end="7322"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This should do nothing unless the color type is gray and the bit depth is
    * less than 8:" comment_scope_start="7338" comment_scope_end="7341"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1.7 or later" comment_scope_start="7342" comment_scope_end="7342"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_EXPAND_SUPPORTED" comment_scope_start="7348" comment_scope_end="7348"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_expand_16" comment_scope_start="7351" comment_scope_end="7357">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402394922777"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402500083276"/>
			<ParmDecl type="png_structp" spelling="pp" id="2402564319514"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402225119646"/>
			<CallExpr type="void" spelling="png_set_expand_16" id="2403256710115"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_expand_16" id="2401320399397"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403641530735"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_expand_16" id="2402540021851"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401436234399"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: prior to 1.7 libpng does SET_EXPAND as well, so tRNS is expanded." comment_scope_start="7358" comment_scope_end="7365">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_expand_16_set" id="2401022911566"/>
			<CallExpr type="void" spelling="set" id="2400628821821"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2404003314780"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403622957040"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400354972737"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401614104182"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403608137917"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400503515712"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403995368453"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2401357212639"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400273382408"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2401118662864"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402871687530"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401555618114"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403553856222"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401809595196"/>
			<UnexposedExpr type="int" spelling="has_tRNS" id="2402243136866"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402647645057"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400985066433"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403267528545"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401267844227"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2404038181677"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403310414290"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401059006375"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402453030164"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400754206941"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403249428258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Expect expand_16 to expand everything to 16 bits as a result of also
    * causing 'expand' to happen." comment_scope_start="7372" comment_scope_end="7378">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_convert_PLTE" id="2404222529711"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403543821570"/>
			<DeclRefExpr type="void (image_pixel *)" spelling="image_pixel_convert_PLTE" id="2402900651971"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401123420411"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402469587172"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402964149009"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2400062248088"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401274614721"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401682575525"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400172746570"/>
			<UnexposedExpr type="void (*)(image_pixel *)" spelling="image_pixel_convert_PLTE" id="2400813571617"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403365793086"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2401666649591"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403908994355"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!for background" comment_scope_start="7379" comment_scope_end="7379">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_add_alpha" id="2400375093897"/>
			<DeclRefExpr type="void (image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2402458909292"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402794094696"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2401737952886"/>
			<MemberRefExpr type="const standard_display" spelling="this" id="2402973696115"/>
			<UnexposedExpr type="void (*)(image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2403060313723"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402309806254"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2400288446488"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="expand_16 does something unless the bit depth is already 16." comment_scope_start="7396" comment_scope_end="7398">
		<SYMBOLS>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_expand_16_add" id="2402343395748"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401195789609"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403644307328"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402225800127"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_EXPAND_16_SUPPORTED" comment_scope_start="7403" comment_scope_end="7403"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="API added in 1.5.4" comment_scope_start="7405" comment_scope_end="7405"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_scale_16" comment_scope_start="7406" comment_scope_end="7412">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400271825683"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402768949011"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401905350221"/>
			<ParmDecl type="png_infop" spelling="pi" id="2400681676922"/>
			<CallExpr type="void" spelling="png_set_scale_16" id="2404200231072"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_scale_16" id="2401729401929"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402517905139"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_scale_16" id="2404187495347"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400588918940"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="libpng will limit the gamma table size:" comment_scope_start="7413" comment_scope_end="7417">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_scale_16_set" id="2403124460940"/>
			<CallExpr type="void" spelling="set" id="2403709862112"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401970402246"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402452098180"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402849657322"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401953751128"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402308316607"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403289909002"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2403012579736"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404286259600"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403351771714"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402525228888"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403516328375"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402505177916"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402687306870"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2404178797067"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403387193989"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402991787237"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403935346550"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404283323520"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401623701920"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SCALE_16_TO_8_SUPPORTED (1.5.4 on)" comment_scope_start="7451" comment_scope_end="7451"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="the default before 1.5.4" comment_scope_start="7453" comment_scope_end="7453"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_strip_16" comment_scope_start="7454" comment_scope_end="7460">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400486009179"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402385207700"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401571938725"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401843423866"/>
			<CallExpr type="void" spelling="png_set_strip_16" id="2403734800120"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_strip_16" id="2403533384405"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404067949255"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_strip_16" id="2400340333189"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400849971311"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="libpng will limit the gamma table size:" comment_scope_start="7461" comment_scope_end="7465">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_strip_16_set" id="2401596272915"/>
			<CallExpr type="void" spelling="set" id="2403779036320"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400028035006"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401738372823"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402550770504"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402947430291"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403209447178"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404222333349"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2404011614992"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402749966930"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400245449800"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402494760165"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400905468582"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401236987813"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403034419368"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401717996398"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401048435807"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403418541605"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401123658410"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402469560657"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402046031684"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Prior to 1.5.4 png_set_strip_16 would use an 'accurate' method if this
       * configuration option is set.  From 1.5.4 the flag is never set and the
       * 'scale' API (above) must be used." comment_scope_start="7480" comment_scope_end="7488"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The strip 16 algorithm drops the low 8 bits rather than calculating
          * 1/257, so we need to adjust the permitted errors appropriately:
          * Notice that this is only relevant prior to the addition of the
          * png_set_scale_16 API in 1.5.4 (but 1.5.4+ always defines the above!)" comment_scope_start="7489" comment_scope_end="7500"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_16_TO_8_SUPPORTED" comment_scope_start="7522" comment_scope_end="7522"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_strip_alpha" comment_scope_start="7525" comment_scope_end="7564">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_strip_alpha_set" id="2403401148866"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_strip_alpha_mod" id="2403557837392"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_strip_alpha_add" id="2402486868534"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_strip_alpha" id="2403884961519"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2403003353045"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400336208688"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400010674736"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401392063346"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401521555082"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2403764586479"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2402567949637"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2403642939043"/>
			<ParmDecl type="image_transform *" spelling="this" id="2401437805054"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2401069941008"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2403631687859"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2401138130163"/>
			<CallExpr type="void" spelling="png_set_strip_alpha" id="2402613048964"/>
			<CallExpr type="void" spelling="set" id="2401306823164"/>
			<CallExpr type="void" spelling="mod" id="2400389582664"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_strip_alpha" id="2402430857467"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403775694313"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402308776955"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401361977662"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2404031819958"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401463808654"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401775121469"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400242608874"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402904542318"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400495472435"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402465518556"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400194152754"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401044156834"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400522003090"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400704926765"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400418970414"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401252194531"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2401781143345"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403991596348"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2402019739483"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2402293868515"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2401206527830"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2401824795731"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402155311171"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_strip_16" id="2401930701585"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2400292312410"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_strip_alpha_set" id="2402683728657"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_strip_alpha_mod" id="2402834193611"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_strip_alpha_add" id="2402290555698"/>
			<StringLiteral type="char [12]" spelling="&quot;strip_alpha&quot;" id="2402753922694"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404106028490"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402602782541"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400710639972"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404090552093"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403320174856"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402381465935"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400459162618"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2403745473372"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401895162599"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402066319727"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403773839991"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402749669088"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2400947946075"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_strip_alpha" id="2400411433261"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401491718613"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400686533582"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401372028855"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403870361691"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402995358289"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2404194455238"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400203420587"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402067856419"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403520699568"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400272738094"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400068777546"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403311973231"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400998497973"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403507805414"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403839921020"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403783885122"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402555733812"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402819941886"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400999281805"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2400714934224"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400396097140"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402256460918"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400854040242"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400206688701"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403103769272"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402037646846"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2401809042965"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403836968933"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2402085978700"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401342080813"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2404251630055"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400552119116"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2401279898146"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400852180069"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2404170532787"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2403318123027"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_strip_alpha_set" id="2400562543593"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_strip_alpha_mod" id="2400015486676"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_strip_alpha_add" id="2401251563896"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_STRIP_ALPHA_SUPPORTED" comment_scope_start="7565" comment_scope_end="7565"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_rgb_to_gray(png_structp, int err_action, double red, double green)
 * png_set_rgb_to_gray_fixed(png_structp, int err_action, png_fixed_point red,
 *    png_fixed_point green)
 * png_get_rgb_to_gray_status
 *
 * The 'default' test here uses values known to be used inside libpng prior to
 * 1.7.0:
 *
 *   red:    6968
 *   green: 23434
 *   blue:   2366
 *
 * These values are being retained for compatibility, along with the somewhat
 * broken truncation calculation in the fast-and-inaccurate code path.  Older
 * versions of libpng will fail the accuracy tests below because they use the
 * truncation algorithm everywhere." comment_scope_start="7568" comment_scope_end="7587"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="File gamma to use in processing" comment_scope_start="7588" comment_scope_end="7588">
		<SYMBOLS>
			<FieldDecl type="double" spelling="gamma" id="2402741610966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following are the parameters for png_set_rgb_to_gray:" comment_scope_start="7590" comment_scope_end="7598">
		<SYMBOLS>
			<FieldDecl type="double" spelling="red_to_set" id="2402863421403"/>
			<FieldDecl type="double" spelling="green_to_set" id="2401506253626"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The actual coefficients:" comment_scope_start="7599" comment_scope_end="7603">
		<SYMBOLS>
			<FieldDecl type="double" spelling="red_coefficient" id="2402231474332"/>
			<FieldDecl type="double" spelling="green_coefficient" id="2402342372214"/>
			<FieldDecl type="double" spelling="blue_coefficient" id="2401845200909"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set if the coeefficients have been overridden." comment_scope_start="7604" comment_scope_end="7606">
		<SYMBOLS>
			<FieldDecl type="int" spelling="coefficients_overridden" id="2401750640256"/>
			<VarDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400455468778"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Since we check the encoding this flag must be set:" comment_scope_start="7619" comment_scope_end="7621">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401730321985"/>
			<MemberRefExpr type="unsigned int" spelling="test_uses_encoding" id="2401620818482"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402739563285"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If 'e' is not NULL chromaticity information is present and either a cHRM
    * or an sRGB chunk will be inserted." comment_scope_start="7622" comment_scope_end="7642">
		<SYMBOLS>
			<VarDecl type="const double" spelling="whiteY" id="2402867889867"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2403158514830"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2401261916252"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2400946088768"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2402890647703"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403437055460"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2400195165523"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402582630723"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2402716221508"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401724435624"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2403447244276"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2400476532777"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402317612887"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2402503747452"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401897635781"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2401846997104"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403707754823"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2404088884567"/>
			<MemberRefExpr type="const double" spelling="Y" id="2400030036879"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2402754808162"/>
			<MemberRefExpr type="const double" spelling="Y" id="2402023555863"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2401828931289"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403440730865"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2404055643448"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401120532440"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403297269675"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2402945578772"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2400371221657"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403561067339"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2403898952371"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2400967980442"/>
			<MemberRefExpr type="const double" spelling="Y" id="2401344285387"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2400579500601"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401272958859"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403879780382"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2401965692607"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403791875682"/>
			<UnexposedExpr type="double" spelling="Y" id="2401387080333"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403314653291"/>
			<UnexposedExpr type="double" spelling="Y" id="2400159008506"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403857744671"/>
			<UnexposedExpr type="double" spelling="Y" id="2403255726135"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2401324589165"/>
			<UnexposedExpr type="double" spelling="Y" id="2403611391086"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403111796596"/>
			<UnexposedExpr type="double" spelling="Y" id="2403058743602"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2402895122930"/>
			<UnexposedExpr type="double" spelling="Y" id="2400403593454"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2401331957047"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2401323920159"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2402295975261"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2400710919358"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2401929198507"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="srgb"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Coefficients come from the encoding, but may need to be normalized to a
       * white point Y of 1.0" comment_scope_start="7627" comment_scope_end="7642">
		<SYMBOLS>
			<VarDecl type="const double" spelling="whiteY" id="2402867889867"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2401261916252"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2400946088768"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2402890647703"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403437055460"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2400195165523"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402582630723"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2402716221508"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401724435624"/>
			<DeclRefExpr type="const color_encoding *" spelling="e" id="2403447244276"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2400476532777"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402317612887"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2402503747452"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401897635781"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2401846997104"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403707754823"/>
			<DeclRefExpr type="const double" spelling="whiteY" id="2404088884567"/>
			<MemberRefExpr type="const double" spelling="Y" id="2400030036879"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2402754808162"/>
			<MemberRefExpr type="const double" spelling="Y" id="2402023555863"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2401828931289"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403440730865"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2404055643448"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401120532440"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403297269675"/>
			<MemberRefExpr type="const CIE_color" spelling="red" id="2402945578772"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2400371221657"/>
			<MemberRefExpr type="const double" spelling="Y" id="2403561067339"/>
			<MemberRefExpr type="const CIE_color" spelling="green" id="2403898952371"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2400967980442"/>
			<MemberRefExpr type="const double" spelling="Y" id="2401344285387"/>
			<MemberRefExpr type="const CIE_color" spelling="blue" id="2400579500601"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401272958859"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403879780382"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2401965692607"/>
			<UnexposedExpr type="double" spelling="Y" id="2401387080333"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403314653291"/>
			<UnexposedExpr type="double" spelling="Y" id="2400159008506"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403857744671"/>
			<UnexposedExpr type="double" spelling="Y" id="2403255726135"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2401324589165"/>
			<UnexposedExpr type="double" spelling="Y" id="2403611391086"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2403111796596"/>
			<UnexposedExpr type="double" spelling="Y" id="2403058743602"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2402895122930"/>
			<UnexposedExpr type="double" spelling="Y" id="2400403593454"/>
			<UnexposedExpr type="const color_encoding *" spelling="e" id="2401331957047"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2401323920159"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2402295975261"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2400710919358"/>
			<UnexposedExpr type="double" spelling="whiteY" id="2401929198507"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The default (built in) coeffcients, as above:" comment_scope_start="7646" comment_scope_end="7656">
		<SYMBOLS>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400449230684"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402036342089"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403620920094"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2404235261447"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2404075544461"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2401829130239"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If not set then the calculations assume linear encoding (implicitly):" comment_scope_start="7660" comment_scope_end="7663">
		<SYMBOLS>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401833892305"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404256611247"/>
			<MemberRefExpr type="double" spelling="gamma" id="2402460290984"/>
			<MemberRefExpr type="double" spelling="gamma" id="2401391492366"/>
			<UnexposedExpr type="double" spelling="gamma" id="2401629218097"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The arguments to png_set_rgb_to_gray can override the coefficients implied
    * by the color space encoding.  If doing exhaustive checks do the override
    * in each case, otherwise do it randomly." comment_scope_start="7664" comment_scope_end="7676">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404068638466"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400453430253"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404208909482"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401898176330"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401001814618"/>
			<MemberRefExpr type="unsigned int" spelling="test_exhaustive" id="2403951044248"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2400922561324"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2404076468758"/>
			<MemberRefExpr type="unsigned int" spelling="repeat" id="2403469440682"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2400543503754"/>
			<UnexposedExpr type="unsigned int" spelling="test_exhaustive" id="2404027426443"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400969537688"/>
			<UnexposedExpr type="int" spelling="coefficients_overridden" id="2401063943105"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403685211375"/>
			<UnexposedExpr type="int" spelling="coefficients_overridden" id="2400722173916"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First time in coefficients_overridden is 0, the following sets it to 1,
       * so repeat if it is set.  If a test fails this may mean we subsequently
       * skip a non-override test, ignore that." comment_scope_start="7670" comment_scope_end="7676">
		<SYMBOLS>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400453430253"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404208909482"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401898176330"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401001814618"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2400922561324"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2404076468758"/>
			<MemberRefExpr type="unsigned int" spelling="repeat" id="2403469440682"/>
			<MemberRefExpr type="int" spelling="coefficients_overridden" id="2400543503754"/>
			<UnexposedExpr type="int" spelling="coefficients_overridden" id="2401063943105"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403685211375"/>
			<UnexposedExpr type="int" spelling="coefficients_overridden" id="2400722173916"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="mean" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="These values override the color encoding defaults, simply use random
       * numbers." comment_scope_start="7683" comment_scope_end="7703">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="png_uint_32" spelling="ru" id="2403807687800"/>
			<VarDecl type="double" spelling="total" id="2401004776435"/>
			<CallExpr type="png_uint_32" spelling="random_u32" id="2400783892282"/>
			<DeclRefExpr type="png_uint_32" spelling="ru" id="2401821445045"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_u32" id="2402530904843"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403471536028"/>
			<DeclRefExpr type="double" spelling="total" id="2400255768321"/>
			<DeclRefExpr type="png_uint_32" spelling="ru" id="2402052005317"/>
			<DeclRefExpr type="png_uint_32" spelling="ru" id="2401553559994"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402477834334"/>
			<DeclRefExpr type="double" spelling="total" id="2400146156610"/>
			<DeclRefExpr type="png_uint_32" spelling="ru" id="2400785916440"/>
			<DeclRefExpr type="double" spelling="total" id="2402040800557"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401753596061"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403451666492"/>
			<DeclRefExpr type="double" spelling="total" id="2401764636553"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403594357129"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403456531228"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403257162870"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404142108637"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403588936842"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2403326922328"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2402708519566"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2400278125307"/>
			<MemberRefExpr type="double" spelling="red_to_set" id="2401475087919"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2403046613771"/>
			<MemberRefExpr type="double" spelling="green_to_set" id="2400071022837"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403393237005"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_u32" id="2400837987115"/>
			<UnexposedExpr type="png_uint_32" spelling="ru" id="2401090949639"/>
			<UnexposedExpr type="double" spelling="total" id="2401791647985"/>
			<UnexposedExpr type="png_uint_32" spelling="ru" id="2400536815035"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2400157460622"/>
			<UnexposedExpr type="double" spelling="total" id="2400641725619"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2403537274253"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2404266355692"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following just changes the error messages:" comment_scope_start="7704" comment_scope_end="7706">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400399171048"/>
			<MemberRefExpr type="int" spelling="encoding_ignored" id="2401114527747"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403048245132"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Adjust the error limit in the png_modifier because of the larger errors
    * produced in the digitization during the gamma handling." comment_scope_start="7714" comment_scope_end="7759">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2400376436859"/>
			<CallExpr type="double" spelling="pow" id="2400362306109"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402402598028"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401481525152"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402018596580"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400207951710"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401622303685"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403545590941"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403047280800"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2404183290716"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400610769014"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400605330104"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403416882451"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403309063127"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402940910210"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402344995657"/>
			<MemberRefExpr type="double" spelling="gamma" id="2400341262980"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403684312214"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400626486340"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2402005318645"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400159921043"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403321153180"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2402812260409"/>
			<MemberRefExpr type="double" spelling="limit" id="2400472879559"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401905953337"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401498634228"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403350004316"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2400639725991"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2403366703024"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403292462522"/>
			<MemberRefExpr type="double" spelling="limit" id="2403432550050"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400488593485"/>
			<MemberRefExpr type="double" spelling="gamma" id="2402425084203"/>
			<UnexposedExpr type="double" spelling="gamma" id="2402082937293"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403927162715"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400534904275"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403644176325"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2400187926763"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2402047185552"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401100261738"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400474742814"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400277548416"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400336323674"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401105970933"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400878045264"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401806317244"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2404223160116"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401340122415"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400822473993"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401693024401"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2403194784370"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402959374794"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2401784188770"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402453904608"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400819282977"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403296603695"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402846153877"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401879837305"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400794151963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use gamma tables" comment_scope_start="7717" comment_scope_end="7717">
		<SYMBOLS>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402402598028"/>
			<MemberRefExpr type="double" spelling="gamma" id="2400341262980"/>
			<UnexposedExpr type="double" spelling="gamma" id="2402082937293"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The computations have the form:
          *
          *    r * rc + g * gc + b * bc
          *
          *  Each component of which is +/-1/65535 from the gamma_to_1 table
          *  lookup, resulting in a base error of +/-6.  The gamma_from_1
          *  conversion adds another +/-2 in the 16-bit case and
          *  +/-(1&lt;&lt;(15-PNG_MAX_GAMMA_8)) in the 8-bit case." comment_scope_start="7721" comment_scope_end="7739">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2400376436859"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400207951710"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401622303685"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403545590941"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403047280800"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2404183290716"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400610769014"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400605330104"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403416882451"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400159921043"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403321153180"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2402812260409"/>
			<MemberRefExpr type="double" spelling="limit" id="2400472879559"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401905953337"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401498634228"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403350004316"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2400639725991"/>
			<MemberRefExpr type="unsigned int" spelling="max_gamma_8" id="2403366703024"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403292462522"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400474742814"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400277548416"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400336323674"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401105970933"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400878045264"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401806317244"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2404223160116"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401340122415"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400822473993"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401693024401"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2403194784370"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402959374794"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2401784188770"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402453904608"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400819282977"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adds" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Rounding to 8 bits in the linear space causes massive errors which
          * will trigger the error check in transform_range_check.  Fix that
          * here by taking the gamma encoding into account.
          *
          * When DIGITIZE is set because a pre-1.7 version of libpng is being
          * tested allow a bigger slack.
          *
          * NOTE: this number only affects the internal limit check in pngvalid,
          * it has no effect on the limits applied to the libpng values." comment_scope_start="7743" comment_scope_end="7758">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2400362306109"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403309063127"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402940910210"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402344995657"/>
			<MemberRefExpr type="double" spelling="limit" id="2403432550050"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400488593485"/>
			<MemberRefExpr type="double" spelling="gamma" id="2402425084203"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403296603695"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402846153877"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401879837305"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400794151963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bigger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="With no gamma correction a large error comes from the truncation of the
       * calculation in the 8 bit case, allow for that here." comment_scope_start="7763" comment_scope_end="7768">
		<SYMBOLS>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400801261943"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400889920744"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401487013999"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402919264710"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402499644772"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2404140971321"/>
			<MemberRefExpr type="double" spelling="limit" id="2403786262374"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2404139940091"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403534838845"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402923959754"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402966468997"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2400815216334"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401371712467"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401553249104"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400158083064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no error, no defines in png.h" comment_scope_start="7775" comment_scope_end="7775">
		<SYMBOLS>
			<VarDecl type="int" spelling="error_action" id="2404187100741"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="We have an encoding so a cHRM chunk may have been set; if so then
          * check that the libpng APIs give the correct (X,Y,Z) values within
          * some margin of error for the round trip through the chromaticity
          * form." comment_scope_start="7787" comment_scope_end="7814">
		<SYMBOLS>
			<TypeRef type="color_encoding" spelling="color_encoding" id="2401716886356"/>
			<VarDecl type="double" spelling="rX" id="2401179200181"/>
			<VarDecl type="double" spelling="gX" id="2400781872268"/>
			<VarDecl type="double" spelling="bX" id="2402270674070"/>
			<VarDecl type="double" spelling="rY" id="2401268284362"/>
			<VarDecl type="double" spelling="gY" id="2400951407314"/>
			<VarDecl type="double" spelling="bY" id="2400634448359"/>
			<VarDecl type="double" spelling="rZ" id="2403958749890"/>
			<VarDecl type="double" spelling="gZ" id="2403829038187"/>
			<VarDecl type="double" spelling="bZ" id="2403552344729"/>
			<VarDecl type="double" spelling="maxe" id="2403609042952"/>
			<VarDecl type="const char *" spelling="el" id="2401553226803"/>
			<VarDecl type="color_encoding" spelling="e" id="2402477883824"/>
			<VarDecl type="color_encoding" spelling="o" id="2401817744681"/>
			<CallExpr type="png_uint_32" spelling="png_get_cHRM_XYZ" id="2404050526630"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, double *, double *, double *, double *, double *, double *, double *, double *, double *)" spelling="png_get_cHRM_XYZ" id="2401036530834"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400040453744"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404072875609"/>
			<DeclRefExpr type="double" spelling="rX" id="2402027854313"/>
			<DeclRefExpr type="double" spelling="rY" id="2400187810125"/>
			<DeclRefExpr type="double" spelling="rZ" id="2402351319102"/>
			<DeclRefExpr type="double" spelling="gX" id="2403806053050"/>
			<DeclRefExpr type="double" spelling="gY" id="2400611571515"/>
			<DeclRefExpr type="double" spelling="gZ" id="2403751065730"/>
			<DeclRefExpr type="double" spelling="bX" id="2401597760858"/>
			<DeclRefExpr type="double" spelling="bY" id="2403453299162"/>
			<DeclRefExpr type="double" spelling="bZ" id="2403063478921"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, double *, double *, double *, double *, double *, double *, double *, double *, double *)" spelling="png_get_cHRM_XYZ" id="2404022976388"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2404093369604"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401569581262"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2400719322677"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403193957510"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Expect libpng to return a normalized result, but the original
             * color space encoding may not be normalized." comment_scope_start="7815" comment_scope_end="7820">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_current_encoding" id="2403144405057"/>
			<CallExpr type="void" spelling="normalize_color_encoding" id="2400075819783"/>
			<DeclRefExpr type="void (const png_modifier *, color_encoding *)" spelling="modifier_current_encoding" id="2400715896694"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403516464452"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2400384604523"/>
			<DeclRefExpr type="void (color_encoding *)" spelling="normalize_color_encoding" id="2404042935767"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2401886216473"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402220905326"/>
			<UnexposedExpr type="void (*)(const png_modifier *, color_encoding *)" spelling="modifier_current_encoding" id="2401242177546"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403352311470"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402779701635"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401341240059"/>
			<UnexposedExpr type="void (*)(color_encoding *)" spelling="normalize_color_encoding" id="2402748860655"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Sanity check the pngvalid code - the coefficients should match
             * the normalized Y values of the encoding unless they were
             * overridden." comment_scope_start="7821" comment_scope_end="7830">
		<SYMBOLS>
			<CallExpr type="double" spelling="fabs" id="2403841542010"/>
			<CallExpr type="double" spelling="fabs" id="2400287800202"/>
			<CallExpr type="double" spelling="fabs" id="2402101732421"/>
			<CallExpr type="void" spelling="png_error" id="2402872331092"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402409347603"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402687275452"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2404160498712"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2400678702864"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402149458946"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2400971878076"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2401009225659"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404153988721"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2401621992225"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2402477353890"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401421535410"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400426173137"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400087457542"/>
			<StringLiteral type="char [41]" spelling="&quot;internal pngvalid cHRM coefficient error&quot;" id="2403672665883"/>
			<MemberRefExpr type="double" spelling="red_to_set" id="2400690296130"/>
			<MemberRefExpr type="double" spelling="green_to_set" id="2402133598347"/>
			<MemberRefExpr type="double" spelling="Y" id="2401299988665"/>
			<MemberRefExpr type="CIE_color" spelling="red" id="2402610266565"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401292595889"/>
			<MemberRefExpr type="double" spelling="Y" id="2403233742796"/>
			<MemberRefExpr type="CIE_color" spelling="green" id="2401148924462"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2400887536150"/>
			<MemberRefExpr type="double" spelling="Y" id="2400351931548"/>
			<MemberRefExpr type="CIE_color" spelling="blue" id="2400589580893"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2404197925368"/>
			<UnexposedExpr type="double" spelling="red_to_set" id="2402053742547"/>
			<UnexposedExpr type="double" spelling="green_to_set" id="2400206177318"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2402690911775"/>
			<UnexposedExpr type="double" spelling="Y" id="2401580370444"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2403021208884"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2400514176951"/>
			<UnexposedExpr type="double" spelling="Y" id="2401426103287"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2404033659778"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2401508752473"/>
			<UnexposedExpr type="double" spelling="Y" id="2401273822306"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2401051041429"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400734468415"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400832773385"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402205327768"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Generate a colour space encoding." comment_scope_start="7831" comment_scope_end="7831"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="not used" comment_scope_start="7832" comment_scope_end="7832">
		<SYMBOLS>
			<DeclRefExpr type="color_encoding" spelling="e" id="2402030951343"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2402475715721"/>
			<MemberRefExpr type="double" spelling="gamma" id="2400757024710"/>
			<MemberRefExpr type="double" spelling="gamma" id="2401290408049"/>
			<UnexposedExpr type="double" spelling="gamma" id="2404225685008"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This should match the original one from the png_modifier, within
             * the range permitted by the libpng fixed point representation." comment_scope_start="7843" comment_scope_end="7846">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="maxe" id="2403076995429"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="fixed point"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set to element name with error" comment_scope_start="7847" comment_scope_end="7847">
		<SYMBOLS>
			<DeclRefExpr type="const char *" spelling="el" id="2401253786086"/>
			<StringLiteral type="char [2]" spelling="&quot;-&quot;" id="2402529367709"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="element" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Here in both fixed and floating cases to check the values read
             * from the cHRm chunk.  PNG uses fixed point in the cHRM chunk, so
             * we can't expect better than +/-.5E-5 on the result, allow 1E-5." comment_scope_start="7869" comment_scope_end="7890">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="pos" id="2404041154857"/>
			<VarDecl type="char [256]" spelling="buffer" id="2401457551287"/>
			<CallExpr type="size_t" spelling="safecat" id="2400240731374"/>
			<CallExpr type="size_t" spelling="safecat" id="2402769652663"/>
			<CallExpr type="size_t" spelling="safecat" id="2402788949224"/>
			<CallExpr type="size_t" spelling="safecat" id="2404282608664"/>
			<CallExpr type="size_t" spelling="safecatd" id="2402098171276"/>
			<CallExpr type="size_t" spelling="safecat" id="2402904794842"/>
			<CallExpr type="size_t" spelling="safecat_color_encoding" id="2401925559832"/>
			<CallExpr type="size_t" spelling="safecat" id="2403736040656"/>
			<CallExpr type="size_t" spelling="safecat_color_encoding" id="2400013580304"/>
			<CallExpr type="void" spelling="png_error" id="2403422060510"/>
			<DeclRefExpr type="double" spelling="maxe" id="2401563102465"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401677001787"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402694840675"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2404250800632"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2404173793778"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400850919398"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401738759812"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401036439559"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401898314211"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2400588917741"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403847982182"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404208238130"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2404269677433"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403673726636"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2402292278996"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403887977658"/>
			<DeclRefExpr type="const char *" spelling="el" id="2401757466260"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402672109788"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402418132394"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403953847670"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2400654959837"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402123092748"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401218042811"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403106594746"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401365747009"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2404101169961"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402138262010"/>
			<DeclRefExpr type="double" spelling="maxe" id="2402282632003"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402311002268"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403259850496"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2400117181051"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2404100397319"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400060267567"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401318911988"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400646290520"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401965103287"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2402825587578"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401316235644"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2401165938929"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401954870271"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403123337811"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403436930319"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403489970526"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403460145311"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400175742906"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400242194748"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403710548348"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403589833457"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403128012264"/>
			<DeclRefExpr type="color_encoding" spelling="e" id="2401920700779"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404173465857"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404270024849"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401621740026"/>
			<StringLiteral type="char [3]" spelling="&quot;FP&quot;" id="2402392502639"/>
			<StringLiteral type="char [7]" spelling="&quot; cHRM &quot;" id="2401433551569"/>
			<StringLiteral type="char [9]" spelling="&quot; error: &quot;" id="2402907083815"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2402551907385"/>
			<StringLiteral type="char [5]" spelling="&quot; -&gt; &quot;" id="2402279454044"/>
			<UnexposedExpr type="double" spelling="maxe" id="2402935454170"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401052122200"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400551808714"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401888805314"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400878299314"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403494457041"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400133785296"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402005920393"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2404044860243"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400726913608"/>
			<UnexposedExpr type="const char *" spelling="el" id="2400797584781"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404170854330"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403888009412"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400890020519"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400394695151"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400459149838"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403341221949"/>
			<UnexposedExpr type="double" spelling="maxe" id="2400087567894"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403929733156"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400219913572"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402230762891"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400832695536"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402379508061"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400346620986"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402290665367"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403895074807"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402319748591"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2401107326344"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403814032803"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402473616264"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403754835058"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400492325847"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400527982487"/>
			<UnexposedExpr type="png_const_charp" spelling="buffer" id="2403678661057"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400907167221"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="chrm"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="fixed point"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Print the color space without the gamma value:" comment_scope_start="7884" comment_scope_end="7890">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat_color_encoding" id="2401925559832"/>
			<CallExpr type="size_t" spelling="safecat" id="2403736040656"/>
			<CallExpr type="size_t" spelling="safecat_color_encoding" id="2400013580304"/>
			<CallExpr type="void" spelling="png_error" id="2403422060510"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401318911988"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400646290520"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401965103287"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2402825587578"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401316235644"/>
			<DeclRefExpr type="color_encoding" spelling="o" id="2401165938929"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401954870271"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403123337811"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403436930319"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403489970526"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403460145311"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400175742906"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400242194748"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403710548348"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2403589833457"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403128012264"/>
			<DeclRefExpr type="color_encoding" spelling="e" id="2401920700779"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2404173465857"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404270024849"/>
			<DeclRefExpr type="char [256]" spelling="buffer" id="2401621740026"/>
			<StringLiteral type="char [5]" spelling="&quot; -&gt; &quot;" id="2402279454044"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2400832695536"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402379508061"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400346620986"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402290665367"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403895074807"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402319748591"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const color_encoding *, double)" spelling="safecat_color_encoding" id="2401107326344"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403814032803"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402473616264"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403754835058"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2400492325847"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400527982487"/>
			<UnexposedExpr type="png_const_charp" spelling="buffer" id="2403678661057"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2400907167221"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_cHRM" comment_scope_start="7893" comment_scope_end="7893"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Image now has RGB channels..." comment_scope_start="7912" comment_scope_end="8084">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="png_modifier *" spelling="pm" id="2403104478176"/>
			<VarDecl type="unsigned int" spelling="sample_depth" id="2401594392853"/>
			<VarDecl type="unsigned int" spelling="calc_depth" id="2403604906553"/>
			<VarDecl type="unsigned int" spelling="gamma_depth" id="2401783082922"/>
			<VarDecl type="int" spelling="isgray" id="2402846012905"/>
			<VarDecl type="double" spelling="r" id="2402950643617"/>
			<VarDecl type="double" spelling="g" id="2402182548197"/>
			<VarDecl type="double" spelling="b" id="2403160571859"/>
			<VarDecl type="double" spelling="rlo" id="2403472708311"/>
			<VarDecl type="double" spelling="rhi" id="2404026505862"/>
			<VarDecl type="double" spelling="glo" id="2401302342309"/>
			<VarDecl type="double" spelling="ghi" id="2403920734888"/>
			<VarDecl type="double" spelling="blo" id="2400117715114"/>
			<VarDecl type="double" spelling="bhi" id="2401420401757"/>
			<VarDecl type="double" spelling="graylo" id="2401358806463"/>
			<VarDecl type="double" spelling="grayhi" id="2401724939352"/>
			<VarDecl type="const double" spelling="power" id="2403796962333"/>
			<VarDecl type="const double" spelling="abse" id="2403020599097"/>
			<VarDecl type="int" spelling="do_round" id="2404257129577"/>
			<VarDecl type="const double" spelling="ce" id="2404271477504"/>
			<VarDecl type="const double" spelling="power" id="2400063825173"/>
			<VarDecl type="size_t" spelling="pos" id="2400025305992"/>
			<VarDecl type="char [128]" spelling="buffer" id="2403774083147"/>
			<CallExpr type="double" spelling="digitize" id="2404174568132"/>
			<CallExpr type="double" spelling="digitize" id="2403559336984"/>
			<CallExpr type="double" spelling="digitize" id="2401856018921"/>
			<CallExpr type="double" spelling="digitize" id="2402849318657"/>
			<CallExpr type="double" spelling="digitize" id="2402935356381"/>
			<CallExpr type="double" spelling="digitize" id="2403140724515"/>
			<CallExpr type="double" spelling="digitize" id="2402060187696"/>
			<CallExpr type="double" spelling="digitize" id="2401221079648"/>
			<CallExpr type="double" spelling="digitize" id="2403157255765"/>
			<CallExpr type="double" spelling="digitize" id="2403327656576"/>
			<CallExpr type="double" spelling="digitize" id="2402588633423"/>
			<CallExpr type="double" spelling="digitize" id="2402052516252"/>
			<CallExpr type="double" spelling="pow" id="2401907273718"/>
			<CallExpr type="double" spelling="digitize" id="2401004781638"/>
			<CallExpr type="double" spelling="pow" id="2402883972538"/>
			<CallExpr type="double" spelling="digitize" id="2402137316477"/>
			<CallExpr type="double" spelling="pow" id="2402304266577"/>
			<CallExpr type="double" spelling="pow" id="2401400780917"/>
			<CallExpr type="double" spelling="digitize" id="2400335481298"/>
			<CallExpr type="double" spelling="pow" id="2402272183824"/>
			<CallExpr type="double" spelling="digitize" id="2401716413073"/>
			<CallExpr type="double" spelling="pow" id="2404274463010"/>
			<CallExpr type="double" spelling="pow" id="2400641954934"/>
			<CallExpr type="double" spelling="digitize" id="2402173206236"/>
			<CallExpr type="double" spelling="pow" id="2400115448159"/>
			<CallExpr type="double" spelling="digitize" id="2401869672262"/>
			<CallExpr type="double" spelling="pow" id="2403103068980"/>
			<CallExpr type="double" spelling="digitize" id="2401378782002"/>
			<CallExpr type="double" spelling="digitize" id="2403074215754"/>
			<CallExpr type="double" spelling="digitize" id="2404025745744"/>
			<CallExpr type="double" spelling="digitize" id="2400064030809"/>
			<CallExpr type="double" spelling="digitize" id="2401439988061"/>
			<CallExpr type="double" spelling="digitize" id="2403287501226"/>
			<CallExpr type="double" spelling="digitize" id="2401260518197"/>
			<CallExpr type="double" spelling="digitize" id="2403965485233"/>
			<CallExpr type="double" spelling="pow" id="2400587598623"/>
			<CallExpr type="double" spelling="digitize" id="2401148743316"/>
			<CallExpr type="double" spelling="pow" id="2403182977846"/>
			<CallExpr type="double" spelling="digitize" id="2403791854993"/>
			<CallExpr type="double" spelling="pow" id="2402587059390"/>
			<CallExpr type="double" spelling="fabs" id="2400962843479"/>
			<CallExpr type="double" spelling="fabs" id="2402135058127"/>
			<CallExpr type="double" spelling="fabs" id="2403801706288"/>
			<CallExpr type="size_t" spelling="safecat" id="2401862112950"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400388351109"/>
			<CallExpr type="size_t" spelling="safecat" id="2404193810518"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400060450348"/>
			<CallExpr type="void" spelling="png_warning" id="2403756783691"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2403146612925"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404255479131"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400676739878"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2402572086842"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2400332404505"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2402950220588"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400389637537"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2402919840115"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2402647844392"/>
			<DeclRefExpr type="double" spelling="r" id="2401212208743"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400152732104"/>
			<DeclRefExpr type="double" spelling="rhi" id="2401505911067"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402167798992"/>
			<DeclRefExpr type="double" spelling="rlo" id="2403746629155"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402309964355"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401520743411"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400753230172"/>
			<DeclRefExpr type="double" spelling="rlo" id="2404087006759"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400381449858"/>
			<DeclRefExpr type="double" spelling="rhi" id="2404124586212"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402925074750"/>
			<DeclRefExpr type="double" spelling="rhi" id="2402130704381"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402540725751"/>
			<DeclRefExpr type="double" spelling="rhi" id="2402841949305"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400123222987"/>
			<DeclRefExpr type="double" spelling="g" id="2403644321797"/>
			<DeclRefExpr type="double" spelling="glo" id="2403497301402"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402568335154"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401909580754"/>
			<DeclRefExpr type="double" spelling="glo" id="2403070079586"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400054519831"/>
			<DeclRefExpr type="double" spelling="glo" id="2404175580975"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400721845197"/>
			<DeclRefExpr type="double" spelling="glo" id="2402664507687"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2404252189097"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402127720107"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403374956274"/>
			<DeclRefExpr type="double" spelling="ghi" id="2403258092999"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2401886509710"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400401029373"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400353521607"/>
			<DeclRefExpr type="double" spelling="b" id="2403396386119"/>
			<DeclRefExpr type="double" spelling="blo" id="2402725198376"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403339125371"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404059500276"/>
			<DeclRefExpr type="double" spelling="blo" id="2401281796152"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400960170097"/>
			<DeclRefExpr type="double" spelling="blo" id="2403869160429"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2401938477429"/>
			<DeclRefExpr type="double" spelling="blo" id="2402042552882"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402014036754"/>
			<DeclRefExpr type="double" spelling="bhi" id="2402451879321"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403851995196"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403839121717"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402433439842"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401806361192"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402751011390"/>
			<DeclRefExpr type="int" spelling="isgray" id="2400612042267"/>
			<DeclRefExpr type="double" spelling="r" id="2402072572066"/>
			<DeclRefExpr type="double" spelling="g" id="2403492111501"/>
			<DeclRefExpr type="double" spelling="g" id="2400387310075"/>
			<DeclRefExpr type="double" spelling="b" id="2404076848735"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400199807966"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400568484156"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2403484324360"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2403453558674"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2403385691162"/>
			<DeclRefExpr type="double" spelling="rlo" id="2404239438825"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402572777817"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401318634424"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404104205450"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400886377018"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2403032963452"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403514147345"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401890284288"/>
			<DeclRefExpr type="double" spelling="glo" id="2402212189570"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402834976268"/>
			<DeclRefExpr type="double" spelling="glo" id="2402804092948"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2400396555820"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400526616164"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400166473661"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400403391805"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402547385359"/>
			<DeclRefExpr type="double" spelling="blo" id="2403216062903"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404208082018"/>
			<DeclRefExpr type="double" spelling="blo" id="2402263962873"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2403508124539"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403626240820"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402877081382"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403714058232"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402463782954"/>
			<DeclRefExpr type="double" spelling="r" id="2400379761969"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401729240410"/>
			<DeclRefExpr type="double" spelling="r" id="2400662111770"/>
			<DeclRefExpr type="const double" spelling="power" id="2403671265089"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401141516370"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404179824717"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400845841303"/>
			<DeclRefExpr type="double" spelling="rlo" id="2402052113301"/>
			<DeclRefExpr type="const double" spelling="power" id="2403125769873"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403853439005"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2401757289661"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403635576655"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402636620107"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401725422562"/>
			<DeclRefExpr type="double" spelling="rhi" id="2404278591349"/>
			<DeclRefExpr type="const double" spelling="power" id="2403296311049"/>
			<DeclRefExpr type="const double" spelling="abse" id="2401712576936"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402842148916"/>
			<DeclRefExpr type="double" spelling="g" id="2402063879111"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404120051353"/>
			<DeclRefExpr type="double" spelling="g" id="2400373435058"/>
			<DeclRefExpr type="const double" spelling="power" id="2400704713933"/>
			<DeclRefExpr type="double" spelling="glo" id="2400331088146"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400454423593"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400938546585"/>
			<DeclRefExpr type="double" spelling="glo" id="2402673146980"/>
			<DeclRefExpr type="const double" spelling="power" id="2400566281176"/>
			<DeclRefExpr type="const double" spelling="abse" id="2401653304612"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400295319929"/>
			<DeclRefExpr type="double" spelling="ghi" id="2403421794561"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404216489867"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403001178649"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401563507809"/>
			<DeclRefExpr type="const double" spelling="power" id="2400695541710"/>
			<DeclRefExpr type="const double" spelling="abse" id="2402500053014"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402535326265"/>
			<DeclRefExpr type="double" spelling="b" id="2402945385428"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402904724647"/>
			<DeclRefExpr type="double" spelling="b" id="2403194454989"/>
			<DeclRefExpr type="const double" spelling="power" id="2401419730354"/>
			<DeclRefExpr type="double" spelling="blo" id="2401577472267"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400594378226"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401306675343"/>
			<DeclRefExpr type="double" spelling="blo" id="2400462117093"/>
			<DeclRefExpr type="const double" spelling="power" id="2402598221013"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403132205549"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400091177303"/>
			<DeclRefExpr type="double" spelling="bhi" id="2400970113943"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404268720474"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402859384596"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403965883537"/>
			<DeclRefExpr type="const double" spelling="power" id="2401491081932"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403634871211"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402305806407"/>
			<DeclRefExpr type="double" spelling="gray" id="2402218053290"/>
			<DeclRefExpr type="double" spelling="r" id="2403457857392"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403602295839"/>
			<DeclRefExpr type="double" spelling="g" id="2403070877065"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403822598131"/>
			<DeclRefExpr type="double" spelling="b" id="2403772263443"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403637025588"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403930080482"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2401321308183"/>
			<DeclRefExpr type="double" spelling="graylo" id="2404019564727"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402608548986"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400649834250"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404244702272"/>
			<DeclRefExpr type="const double" spelling="ce" id="2402569526430"/>
			<DeclRefExpr type="double" spelling="glo" id="2400363906758"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400089066346"/>
			<DeclRefExpr type="const double" spelling="ce" id="2401494608143"/>
			<DeclRefExpr type="double" spelling="blo" id="2403251833091"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402592196695"/>
			<DeclRefExpr type="const double" spelling="ce" id="2400149288046"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2403661048486"/>
			<DeclRefExpr type="int" spelling="do_round" id="2403622928263"/>
			<DeclRefExpr type="double" spelling="graylo" id="2404179405121"/>
			<DeclRefExpr type="double" spelling="gray" id="2402892714523"/>
			<DeclRefExpr type="double" spelling="graylo" id="2401261912550"/>
			<DeclRefExpr type="double" spelling="gray" id="2400556431543"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2403026363679"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2401058176783"/>
			<DeclRefExpr type="double" spelling="rhi" id="2401606355923"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401657641331"/>
			<DeclRefExpr type="const double" spelling="ce" id="2400686302868"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401951673003"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401077771336"/>
			<DeclRefExpr type="const double" spelling="ce" id="2404292844604"/>
			<DeclRefExpr type="double" spelling="bhi" id="2402491843493"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403420140935"/>
			<DeclRefExpr type="const double" spelling="ce" id="2401798633067"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402064599249"/>
			<DeclRefExpr type="int" spelling="do_round" id="2403474778137"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2403473180023"/>
			<DeclRefExpr type="double" spelling="gray" id="2403527796153"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2401252622501"/>
			<DeclRefExpr type="double" spelling="gray" id="2403187325701"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401781046381"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402380325994"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401185677238"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2400310239991"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401257510484"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402374644684"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400933801696"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404102047430"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400195500483"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402324355301"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403965866974"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402728213659"/>
			<DeclRefExpr type="double" spelling="glo" id="2401909514173"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400895898875"/>
			<DeclRefExpr type="double" spelling="glo" id="2402766115400"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402588625410"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401713868568"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400848799952"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402388750783"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402283702295"/>
			<DeclRefExpr type="double" spelling="blo" id="2402032371992"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400144604639"/>
			<DeclRefExpr type="double" spelling="blo" id="2403526445298"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402088141290"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401458203417"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404109707054"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403957872508"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402590298401"/>
			<DeclRefExpr type="double" spelling="gray" id="2403289085516"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404034476721"/>
			<DeclRefExpr type="double" spelling="gray" id="2400732015084"/>
			<DeclRefExpr type="const double" spelling="power" id="2400840737221"/>
			<DeclRefExpr type="double" spelling="graylo" id="2401679417044"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402902162014"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400223070274"/>
			<DeclRefExpr type="double" spelling="graylo" id="2400671739741"/>
			<DeclRefExpr type="const double" spelling="power" id="2403036673959"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2401897554994"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2401489638939"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2403261284029"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404010307156"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2403226669020"/>
			<DeclRefExpr type="const double" spelling="power" id="2400946050581"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2401913190644"/>
			<DeclRefExpr type="int" spelling="isgray" id="2403152312873"/>
			<DeclRefExpr type="double" spelling="err" id="2404094556031"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401077845210"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402994648046"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402007401580"/>
			<DeclRefExpr type="double" spelling="err" id="2404118773559"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2404281440174"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2402829627025"/>
			<DeclRefExpr type="double" spelling="gray" id="2403357056550"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2402373148223"/>
			<DeclRefExpr type="double" spelling="gray" id="2400381306836"/>
			<DeclRefExpr type="double" spelling="graylo" id="2403842253219"/>
			<DeclRefExpr type="double" spelling="err" id="2401397103841"/>
			<DeclRefExpr type="double" spelling="err" id="2401135961421"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403040416233"/>
			<DeclRefExpr type="double" spelling="graylo" id="2400915817206"/>
			<DeclRefExpr type="double" spelling="gray" id="2403820355842"/>
			<DeclRefExpr type="double" spelling="err" id="2402241044412"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402304310412"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403527810640"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402962208208"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400820231733"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400898729742"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400274274132"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402792130634"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400881774363"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2402462065444"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400230710157"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400978972401"/>
			<DeclRefExpr type="double" spelling="err" id="2401895374126"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402487001070"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403960846187"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2401074958390"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2401372266151"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401097333029"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401223300498"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400460870737"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2403848271949"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400336389196"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403391725921"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402781091021"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp)" spelling="png_warning" id="2401676181968"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400870013801"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2404078342744"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402953606549"/>
			<DeclRefExpr type="double" spelling="err" id="2401180042417"/>
			<StringLiteral type="char [19]" spelling="&quot;rgb_to_gray error &quot;" id="2401887662268"/>
			<StringLiteral type="char [16]" spelling="&quot; exceeds limit &quot;" id="2403762657174"/>
			<MemberRefExpr type="png_modifier *const" spelling="pm" id="2400152263801"/>
			<MemberRefExpr type="png_byte" spelling="sample_depth" id="2400092594837"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2403358868184"/>
			<MemberRefExpr type="const unsigned int" spelling="max_gamma_8" id="2400428910440"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2401046400661"/>
			<MemberRefExpr type="const unsigned int" spelling="max_gamma_8" id="2401560413679"/>
			<MemberRefExpr type="double" spelling="redf" id="2402856313065"/>
			<MemberRefExpr type="double" spelling="rede" id="2400864263069"/>
			<MemberRefExpr type="double" spelling="rede" id="2402021911684"/>
			<MemberRefExpr type="double" spelling="greenf" id="2401562694311"/>
			<MemberRefExpr type="double" spelling="greene" id="2401097397093"/>
			<MemberRefExpr type="double" spelling="greene" id="2403909396332"/>
			<MemberRefExpr type="double" spelling="bluef" id="2402080823229"/>
			<MemberRefExpr type="double" spelling="bluee" id="2403616761201"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401426167625"/>
			<MemberRefExpr type="double" spelling="gamma" id="2400224488504"/>
			<MemberRefExpr type="double" spelling="gamma" id="2401735673584"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401204550588"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2402332751619"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2402482255987"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403817657150"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2402805060376"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403993923049"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2400872273767"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2400174987889"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2400694356033"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2401605694888"/>
			<MemberRefExpr type="double" spelling="gamma" id="2401737388247"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403878477437"/>
			<MemberRefExpr type="double" spelling="rede" id="2400968928606"/>
			<MemberRefExpr type="double" spelling="greene" id="2402869550435"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401346381074"/>
			<MemberRefExpr type="double" spelling="limit" id="2400715799320"/>
			<MemberRefExpr type="double" spelling="limit" id="2402728190363"/>
			<MemberRefExpr type="double" spelling="limit" id="2403676119459"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403401528754"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2403512657688"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400742600704"/>
			<UnexposedExpr type="png_byte" spelling="sample_depth" id="2401372603182"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403289608869"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2403292549080"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2402663223081"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402057025824"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2402266649484"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400465642587"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2403335338611"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2401262830513"/>
			<UnexposedExpr type="int" spelling="assume_16_bit_calculations" id="2400537246732"/>
			<UnexposedExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2403614948675"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402055055522"/>
			<UnexposedExpr type="unsigned int" spelling="max_gamma_8" id="2404052698670"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2400921295117"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400328828517"/>
			<UnexposedExpr type="double" spelling="redf" id="2400011263794"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401129047131"/>
			<UnexposedExpr type="double" spelling="rede" id="2400986831988"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400084406768"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400431869548"/>
			<UnexposedExpr type="double" spelling="rlo" id="2401574625775"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2403877100922"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402928275065"/>
			<UnexposedExpr type="double" spelling="rede" id="2404249597161"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403068517706"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403781608164"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400907859637"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2403428253157"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402505462463"/>
			<UnexposedExpr type="double" spelling="greenf" id="2401415439096"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402035729035"/>
			<UnexposedExpr type="double" spelling="greene" id="2400280304748"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401365198652"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404120143678"/>
			<UnexposedExpr type="double" spelling="glo" id="2403699617518"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401334633980"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400406924972"/>
			<UnexposedExpr type="double" spelling="greene" id="2403697670090"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402741264489"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403586254905"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400093955037"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401199874400"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400039258117"/>
			<UnexposedExpr type="double" spelling="bluef" id="2402121260739"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400333270693"/>
			<UnexposedExpr type="double" spelling="bluee" id="2402971899791"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401276860336"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403662959901"/>
			<UnexposedExpr type="double" spelling="blo" id="2403953910862"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400407578273"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403715692636"/>
			<UnexposedExpr type="double" spelling="bluee" id="2402516730550"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400468104624"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401799030224"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401913512219"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2404176107869"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403308375244"/>
			<UnexposedExpr type="double" spelling="r" id="2400234774931"/>
			<UnexposedExpr type="double" spelling="g" id="2400991620323"/>
			<UnexposedExpr type="double" spelling="g" id="2400519954049"/>
			<UnexposedExpr type="double" spelling="b" id="2403749252106"/>
			<UnexposedExpr type="double" spelling="gamma" id="2404078730089"/>
			<UnexposedExpr type="double" spelling="gamma" id="2401736633501"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2403167998118"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403417804003"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400497457301"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401632855311"/>
			<UnexposedExpr type="double" spelling="rlo" id="2400846926524"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403097789586"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401199677528"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401470737186"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400948866868"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403432015952"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400238933975"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402512266855"/>
			<UnexposedExpr type="double" spelling="glo" id="2402297975777"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069110366"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401592941601"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403226533553"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400155485536"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402814253924"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401890745148"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403851767177"/>
			<UnexposedExpr type="double" spelling="blo" id="2402595386511"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069657147"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401172554199"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400302794621"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401282471521"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400374630861"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403734995478"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402505867739"/>
			<UnexposedExpr type="double" spelling="r" id="2401977457431"/>
			<UnexposedExpr type="double" spelling="power" id="2400057066778"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402615436059"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2400458754982"/>
			<UnexposedExpr type="double" spelling="rlo" id="2401080177203"/>
			<UnexposedExpr type="double" spelling="power" id="2403923312717"/>
			<UnexposedExpr type="double" spelling="abse" id="2403745728135"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401100328919"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402304310182"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401189519524"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402416255016"/>
			<UnexposedExpr type="double" spelling="rhi" id="2401853645809"/>
			<UnexposedExpr type="double" spelling="power" id="2400682164424"/>
			<UnexposedExpr type="double" spelling="abse" id="2404190430022"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401773994361"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400017891256"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402115654429"/>
			<UnexposedExpr type="double" spelling="g" id="2403215029287"/>
			<UnexposedExpr type="double" spelling="power" id="2403687451920"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404224401968"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403958495087"/>
			<UnexposedExpr type="double" spelling="glo" id="2403215282619"/>
			<UnexposedExpr type="double" spelling="power" id="2402290715717"/>
			<UnexposedExpr type="double" spelling="abse" id="2403281328136"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400180036582"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402994545061"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403526494843"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403801720546"/>
			<UnexposedExpr type="double" spelling="ghi" id="2404001015917"/>
			<UnexposedExpr type="double" spelling="power" id="2403527123993"/>
			<UnexposedExpr type="double" spelling="abse" id="2403204874137"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2404140175320"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400395418388"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402450001020"/>
			<UnexposedExpr type="double" spelling="b" id="2402935832886"/>
			<UnexposedExpr type="double" spelling="power" id="2402733355358"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403466782276"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403542959803"/>
			<UnexposedExpr type="double" spelling="blo" id="2401506090582"/>
			<UnexposedExpr type="double" spelling="power" id="2403058294416"/>
			<UnexposedExpr type="double" spelling="abse" id="2403781628469"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2402235716705"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403468475175"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402548337189"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2400236899540"/>
			<UnexposedExpr type="double" spelling="bhi" id="2400648198724"/>
			<UnexposedExpr type="double" spelling="power" id="2403270263564"/>
			<UnexposedExpr type="double" spelling="abse" id="2400035101797"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2402420065473"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402380638774"/>
			<UnexposedExpr type="double" spelling="r" id="2402146296720"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2402042744287"/>
			<UnexposedExpr type="double" spelling="g" id="2401152194200"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2402216080270"/>
			<UnexposedExpr type="double" spelling="b" id="2401361411623"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2403339528145"/>
			<UnexposedExpr type="double" spelling="gamma" id="2402154648632"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402429850709"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404278700023"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403889346197"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2401544079090"/>
			<UnexposedExpr type="double" spelling="ce" id="2401693022096"/>
			<UnexposedExpr type="double" spelling="glo" id="2401388339983"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2401309672729"/>
			<UnexposedExpr type="double" spelling="ce" id="2402724639011"/>
			<UnexposedExpr type="double" spelling="blo" id="2401916733571"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2402188104735"/>
			<UnexposedExpr type="double" spelling="ce" id="2403244201267"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400048794776"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402424103330"/>
			<UnexposedExpr type="int" spelling="do_round" id="2400979751920"/>
			<UnexposedExpr type="double" spelling="graylo" id="2403614972144"/>
			<UnexposedExpr type="double" spelling="gray" id="2400396287042"/>
			<UnexposedExpr type="double" spelling="gray" id="2401248481316"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401506440788"/>
			<UnexposedExpr type="double" spelling="rhi" id="2404034067182"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2401827898967"/>
			<UnexposedExpr type="double" spelling="ce" id="2403616000510"/>
			<UnexposedExpr type="double" spelling="ghi" id="2403082013695"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2403063126655"/>
			<UnexposedExpr type="double" spelling="ce" id="2401670114820"/>
			<UnexposedExpr type="double" spelling="bhi" id="2403284105265"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2403392236751"/>
			<UnexposedExpr type="double" spelling="ce" id="2401938581170"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2403357269057"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403767801451"/>
			<UnexposedExpr type="int" spelling="do_round" id="2400482477193"/>
			<UnexposedExpr type="double" spelling="grayhi" id="2402981570908"/>
			<UnexposedExpr type="double" spelling="gray" id="2402198065298"/>
			<UnexposedExpr type="double" spelling="gray" id="2403644812634"/>
			<UnexposedExpr type="double" spelling="gamma" id="2403355901821"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400382414363"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403343265233"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400433246835"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401571740018"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403806982960"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401010522177"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402484647194"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400158992879"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400391918188"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401891460458"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403995011030"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402214167238"/>
			<UnexposedExpr type="double" spelling="glo" id="2400234521939"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402160252156"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402638384975"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402647414834"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400649751317"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401249091645"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400868307652"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402933396779"/>
			<UnexposedExpr type="double" spelling="blo" id="2400929938597"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2404093719976"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401850264935"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403538413329"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401515221444"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400331476045"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403643418980"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403654792237"/>
			<UnexposedExpr type="double" spelling="gray" id="2403947926830"/>
			<UnexposedExpr type="double" spelling="power" id="2403688196351"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400092616114"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401595762497"/>
			<UnexposedExpr type="double" spelling="graylo" id="2402908115292"/>
			<UnexposedExpr type="double" spelling="power" id="2404110901892"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2400486753872"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400808748701"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400213537780"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401308316867"/>
			<UnexposedExpr type="double" spelling="grayhi" id="2403332692542"/>
			<UnexposedExpr type="double" spelling="power" id="2400739320605"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401822751883"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400023910508"/>
			<UnexposedExpr type="int" spelling="isgray" id="2402839326341"/>
			<UnexposedExpr type="double" spelling="rede" id="2402567536149"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402369020100"/>
			<UnexposedExpr type="double" spelling="greene" id="2402090821299"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402806798088"/>
			<UnexposedExpr type="double" spelling="bluee" id="2400490183390"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403295049676"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2402689693818"/>
			<UnexposedExpr type="double" spelling="grayhi" id="2400924707430"/>
			<UnexposedExpr type="double" spelling="gray" id="2403141926743"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2403596010625"/>
			<UnexposedExpr type="double" spelling="gray" id="2401947424801"/>
			<UnexposedExpr type="double" spelling="graylo" id="2400696919096"/>
			<UnexposedExpr type="double" spelling="err" id="2403525198501"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2402528463622"/>
			<UnexposedExpr type="double" spelling="graylo" id="2404222823456"/>
			<UnexposedExpr type="double" spelling="gray" id="2400923312351"/>
			<UnexposedExpr type="double" spelling="err" id="2401438410833"/>
			<UnexposedExpr type="double" spelling="limit" id="2401273651685"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401292879305"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402201353775"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403406910930"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402038234427"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402342962324"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402483555470"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404222822387"/>
			<UnexposedExpr type="double" spelling="err" id="2404050218520"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400728172986"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403386028212"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402898982092"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400320488715"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2401804596976"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403897405537"/>
			<UnexposedExpr type="double" spelling="limit" id="2400432069271"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400331253013"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp)" spelling="png_warning" id="2400193855340"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401561114007"/>
			<UnexposedExpr type="png_const_charp" spelling="buffer" id="2401775704859"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403422651655"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402178828339"/>
			<UnexposedExpr type="double" spelling="err" id="2400695951048"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do this using interval arithmetic, otherwise it is too difficult to
          * handle the errors correctly.
          *
          * To handle the gamma correction work out the upper and lower bounds
          * of the digitized value.  Assume rounding here - normally the values
          * will be identical after this operation if there is only one
          * transform, feel free to delete the png_error checks on this below in
          * the future (this is just me trying to ensure it works!)
          *
          * Interval arithmetic is exact, but to implement it it must be
          * possible to control the floating point implementation rounding mode.
          * This cannot be done in ANSI-C, so instead I reduce the 'lo' values
          * by DBL_EPSILON and increase the 'hi' values by the same." comment_scope_start="7929" comment_scope_end="7947">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="r" id="2401212208743"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400152732104"/>
			<DeclRefExpr type="double" spelling="rhi" id="2401505911067"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402167798992"/>
			<DeclRefExpr type="double" spelling="rlo" id="2403746629155"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402309964355"/>
			<MemberRefExpr type="double" spelling="redf" id="2402856313065"/>
			<MemberRefExpr type="double" spelling="rede" id="2400864263069"/>
			<UnexposedExpr type="double" spelling="redf" id="2400011263794"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401129047131"/>
			<UnexposedExpr type="double" spelling="rede" id="2400986831988"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400084406768"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="free" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="mode" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="reduce" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="increase" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="png_error"/>
			<PROBLEM_DOMAIN word="ansi-c"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7948" comment_scope_end="7948">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2404174568132"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401520743411"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400753230172"/>
			<DeclRefExpr type="double" spelling="rlo" id="2404087006759"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400381449858"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400431869548"/>
			<UnexposedExpr type="double" spelling="rlo" id="2401574625775"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2403877100922"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402928275065"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7950" comment_scope_end="7950">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403559336984"/>
			<DeclRefExpr type="double" spelling="rhi" id="2402130704381"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402540725751"/>
			<DeclRefExpr type="double" spelling="rhi" id="2402841949305"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400123222987"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403781608164"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400907859637"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2403428253157"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402505462463"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7954" comment_scope_end="7954">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2401856018921"/>
			<DeclRefExpr type="double" spelling="glo" id="2404175580975"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400721845197"/>
			<DeclRefExpr type="double" spelling="glo" id="2402664507687"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2404252189097"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404120143678"/>
			<UnexposedExpr type="double" spelling="glo" id="2403699617518"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401334633980"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400406924972"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7956" comment_scope_end="7956">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402849318657"/>
			<DeclRefExpr type="double" spelling="ghi" id="2403258092999"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2401886509710"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400401029373"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400353521607"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403586254905"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400093955037"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401199874400"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400039258117"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7960" comment_scope_end="7960">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402935356381"/>
			<DeclRefExpr type="double" spelling="blo" id="2403869160429"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2401938477429"/>
			<DeclRefExpr type="double" spelling="blo" id="2402042552882"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402014036754"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403662959901"/>
			<UnexposedExpr type="double" spelling="blo" id="2403953910862"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400407578273"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403715692636"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="round" comment_scope_start="7962" comment_scope_end="7962">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403140724515"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403839121717"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402433439842"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401806361192"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402751011390"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401799030224"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401913512219"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2404176107869"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403308375244"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If a gamma calculation is done it is done using lookup tables of
             * precision gamma_depth, so the already digitized value above may
             * need to be further digitized here." comment_scope_start="7971" comment_scope_end="7983">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402060187696"/>
			<CallExpr type="double" spelling="digitize" id="2401221079648"/>
			<CallExpr type="double" spelling="digitize" id="2403157255765"/>
			<CallExpr type="double" spelling="digitize" id="2403327656576"/>
			<CallExpr type="double" spelling="digitize" id="2402588633423"/>
			<CallExpr type="double" spelling="digitize" id="2402052516252"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2403453558674"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2403385691162"/>
			<DeclRefExpr type="double" spelling="rlo" id="2404239438825"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402572777817"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401318634424"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404104205450"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400886377018"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2403032963452"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403514147345"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401890284288"/>
			<DeclRefExpr type="double" spelling="glo" id="2402212189570"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402834976268"/>
			<DeclRefExpr type="double" spelling="glo" id="2402804092948"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2400396555820"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400526616164"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400166473661"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400403391805"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402547385359"/>
			<DeclRefExpr type="double" spelling="blo" id="2403216062903"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404208082018"/>
			<DeclRefExpr type="double" spelling="blo" id="2402263962873"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2403508124539"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403626240820"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402877081382"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403714058232"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402463782954"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403417804003"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400497457301"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401632855311"/>
			<UnexposedExpr type="double" spelling="rlo" id="2400846926524"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403097789586"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401199677528"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401470737186"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400948866868"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403432015952"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400238933975"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402512266855"/>
			<UnexposedExpr type="double" spelling="glo" id="2402297975777"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069110366"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401592941601"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403226533553"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400155485536"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402814253924"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401890745148"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403851767177"/>
			<UnexposedExpr type="double" spelling="blo" id="2402595386511"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069657147"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401172554199"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400302794621"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401282471521"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400374630861"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403734995478"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7977" comment_scope_end="7977">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402060187696"/>
			<DeclRefExpr type="double" spelling="rlo" id="2404239438825"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402572777817"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401318634424"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404104205450"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401632855311"/>
			<UnexposedExpr type="double" spelling="rlo" id="2400846926524"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403097789586"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401199677528"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7978" comment_scope_end="7978">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2401221079648"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400886377018"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2403032963452"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403514147345"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401890284288"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401470737186"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400948866868"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403432015952"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400238933975"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7979" comment_scope_end="7979">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403157255765"/>
			<DeclRefExpr type="double" spelling="glo" id="2402212189570"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402834976268"/>
			<DeclRefExpr type="double" spelling="glo" id="2402804092948"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2400396555820"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402512266855"/>
			<UnexposedExpr type="double" spelling="glo" id="2402297975777"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069110366"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401592941601"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7980" comment_scope_end="7980">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403327656576"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400526616164"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400166473661"/>
			<DeclRefExpr type="double" spelling="ghi" id="2400403391805"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402547385359"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403226533553"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400155485536"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402814253924"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401890745148"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7981" comment_scope_end="7981">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402588633423"/>
			<DeclRefExpr type="double" spelling="blo" id="2403216062903"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404208082018"/>
			<DeclRefExpr type="double" spelling="blo" id="2402263962873"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2403508124539"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403851767177"/>
			<UnexposedExpr type="double" spelling="blo" id="2402595386511"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2403069657147"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401172554199"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="7982" comment_scope_end="7982">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2402052516252"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403626240820"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402877081382"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403714058232"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402463782954"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400302794621"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401282471521"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400374630861"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403734995478"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'abse' is the error in the gamma table calculation itself." comment_scope_start="7985" comment_scope_end="7997">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2401907273718"/>
			<CallExpr type="double" spelling="digitize" id="2401004781638"/>
			<CallExpr type="double" spelling="pow" id="2402883972538"/>
			<CallExpr type="double" spelling="digitize" id="2402137316477"/>
			<CallExpr type="double" spelling="pow" id="2402304266577"/>
			<CallExpr type="double" spelling="pow" id="2401400780917"/>
			<CallExpr type="double" spelling="digitize" id="2400335481298"/>
			<CallExpr type="double" spelling="pow" id="2402272183824"/>
			<CallExpr type="double" spelling="digitize" id="2401716413073"/>
			<CallExpr type="double" spelling="pow" id="2404274463010"/>
			<CallExpr type="double" spelling="pow" id="2400641954934"/>
			<CallExpr type="double" spelling="digitize" id="2402173206236"/>
			<CallExpr type="double" spelling="pow" id="2400115448159"/>
			<CallExpr type="double" spelling="digitize" id="2401869672262"/>
			<CallExpr type="double" spelling="pow" id="2403103068980"/>
			<DeclRefExpr type="double" spelling="r" id="2400379761969"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401729240410"/>
			<DeclRefExpr type="double" spelling="r" id="2400662111770"/>
			<DeclRefExpr type="const double" spelling="power" id="2403671265089"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401141516370"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404179824717"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400845841303"/>
			<DeclRefExpr type="double" spelling="rlo" id="2402052113301"/>
			<DeclRefExpr type="const double" spelling="power" id="2403125769873"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403853439005"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2401757289661"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403635576655"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402636620107"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401725422562"/>
			<DeclRefExpr type="double" spelling="rhi" id="2404278591349"/>
			<DeclRefExpr type="const double" spelling="power" id="2403296311049"/>
			<DeclRefExpr type="const double" spelling="abse" id="2401712576936"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402842148916"/>
			<DeclRefExpr type="double" spelling="g" id="2402063879111"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404120051353"/>
			<DeclRefExpr type="double" spelling="g" id="2400373435058"/>
			<DeclRefExpr type="const double" spelling="power" id="2400704713933"/>
			<DeclRefExpr type="double" spelling="glo" id="2400331088146"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400454423593"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400938546585"/>
			<DeclRefExpr type="double" spelling="glo" id="2402673146980"/>
			<DeclRefExpr type="const double" spelling="power" id="2400566281176"/>
			<DeclRefExpr type="const double" spelling="abse" id="2401653304612"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400295319929"/>
			<DeclRefExpr type="double" spelling="ghi" id="2403421794561"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404216489867"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403001178649"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401563507809"/>
			<DeclRefExpr type="const double" spelling="power" id="2400695541710"/>
			<DeclRefExpr type="const double" spelling="abse" id="2402500053014"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402535326265"/>
			<DeclRefExpr type="double" spelling="b" id="2402945385428"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402904724647"/>
			<DeclRefExpr type="double" spelling="b" id="2403194454989"/>
			<DeclRefExpr type="const double" spelling="power" id="2401419730354"/>
			<DeclRefExpr type="double" spelling="blo" id="2401577472267"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400594378226"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401306675343"/>
			<DeclRefExpr type="double" spelling="blo" id="2400462117093"/>
			<DeclRefExpr type="const double" spelling="power" id="2402598221013"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403132205549"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2400091177303"/>
			<DeclRefExpr type="double" spelling="bhi" id="2400970113943"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404268720474"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402859384596"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403965883537"/>
			<DeclRefExpr type="const double" spelling="power" id="2401491081932"/>
			<DeclRefExpr type="const double" spelling="abse" id="2403634871211"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2402305806407"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402505867739"/>
			<UnexposedExpr type="double" spelling="r" id="2401977457431"/>
			<UnexposedExpr type="double" spelling="power" id="2400057066778"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402615436059"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2400458754982"/>
			<UnexposedExpr type="double" spelling="rlo" id="2401080177203"/>
			<UnexposedExpr type="double" spelling="power" id="2403923312717"/>
			<UnexposedExpr type="double" spelling="abse" id="2403745728135"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401100328919"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402304310182"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401189519524"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402416255016"/>
			<UnexposedExpr type="double" spelling="rhi" id="2401853645809"/>
			<UnexposedExpr type="double" spelling="power" id="2400682164424"/>
			<UnexposedExpr type="double" spelling="abse" id="2404190430022"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2401773994361"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400017891256"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402115654429"/>
			<UnexposedExpr type="double" spelling="g" id="2403215029287"/>
			<UnexposedExpr type="double" spelling="power" id="2403687451920"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404224401968"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403958495087"/>
			<UnexposedExpr type="double" spelling="glo" id="2403215282619"/>
			<UnexposedExpr type="double" spelling="power" id="2402290715717"/>
			<UnexposedExpr type="double" spelling="abse" id="2403281328136"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400180036582"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402994545061"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403526494843"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403801720546"/>
			<UnexposedExpr type="double" spelling="ghi" id="2404001015917"/>
			<UnexposedExpr type="double" spelling="power" id="2403527123993"/>
			<UnexposedExpr type="double" spelling="abse" id="2403204874137"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2404140175320"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2400395418388"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402450001020"/>
			<UnexposedExpr type="double" spelling="b" id="2402935832886"/>
			<UnexposedExpr type="double" spelling="power" id="2402733355358"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403466782276"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403542959803"/>
			<UnexposedExpr type="double" spelling="blo" id="2401506090582"/>
			<UnexposedExpr type="double" spelling="power" id="2403058294416"/>
			<UnexposedExpr type="double" spelling="abse" id="2403781628469"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2402235716705"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2403468475175"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402548337189"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2400236899540"/>
			<UnexposedExpr type="double" spelling="bhi" id="2400648198724"/>
			<UnexposedExpr type="double" spelling="power" id="2403270263564"/>
			<UnexposedExpr type="double" spelling="abse" id="2400035101797"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2402420065473"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402380638774"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now calculate the actual gray values.  Although the error in the
          * coefficients depends on whether they were specified on the command
          * line (in which case truncation to 15 bits happened) or not (rounding
          * was used) the maximum error in an individual coefficient is always
          * 2/32768, because even in the rounding case the requirement that
          * coefficients add up to 32768 can cause a larger rounding error.
          *
          * The only time when rounding doesn't occur in 1.5.5 and later is when
          * the non-gamma code path is used for less than 16 bit data." comment_scope_start="7999" comment_scope_end="8018">
		<SYMBOLS>
			<VarDecl type="int" spelling="do_round" id="2404257129577"/>
			<VarDecl type="const double" spelling="ce" id="2404271477504"/>
			<CallExpr type="double" spelling="digitize" id="2401378782002"/>
			<DeclRefExpr type="double" spelling="gray" id="2402218053290"/>
			<DeclRefExpr type="double" spelling="r" id="2403457857392"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403602295839"/>
			<DeclRefExpr type="double" spelling="g" id="2403070877065"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403822598131"/>
			<DeclRefExpr type="double" spelling="b" id="2403772263443"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403637025588"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2403930080482"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2401321308183"/>
			<DeclRefExpr type="double" spelling="graylo" id="2404019564727"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402608548986"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400649834250"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2404244702272"/>
			<DeclRefExpr type="const double" spelling="ce" id="2402569526430"/>
			<DeclRefExpr type="double" spelling="glo" id="2400363906758"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2400089066346"/>
			<DeclRefExpr type="const double" spelling="ce" id="2401494608143"/>
			<DeclRefExpr type="double" spelling="blo" id="2403251833091"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402592196695"/>
			<DeclRefExpr type="const double" spelling="ce" id="2400149288046"/>
			<DeclRefExpr type="unsigned int" spelling="calc_depth" id="2403661048486"/>
			<DeclRefExpr type="int" spelling="do_round" id="2403622928263"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2401204550588"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2402332751619"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2402482255987"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403817657150"/>
			<MemberRefExpr type="double" spelling="red_coefficient" id="2402805060376"/>
			<MemberRefExpr type="double" spelling="green_coefficient" id="2403993923049"/>
			<MemberRefExpr type="double" spelling="blue_coefficient" id="2400872273767"/>
			<UnexposedExpr type="double" spelling="r" id="2402146296720"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2402042744287"/>
			<UnexposedExpr type="double" spelling="g" id="2401152194200"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2402216080270"/>
			<UnexposedExpr type="double" spelling="b" id="2401361411623"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2403339528145"/>
			<UnexposedExpr type="double" spelling="gamma" id="2402154648632"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402429850709"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2404278700023"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403889346197"/>
			<UnexposedExpr type="double" spelling="red_coefficient" id="2401544079090"/>
			<UnexposedExpr type="double" spelling="ce" id="2401693022096"/>
			<UnexposedExpr type="double" spelling="glo" id="2401388339983"/>
			<UnexposedExpr type="double" spelling="green_coefficient" id="2401309672729"/>
			<UnexposedExpr type="double" spelling="ce" id="2402724639011"/>
			<UnexposedExpr type="double" spelling="blo" id="2401916733571"/>
			<UnexposedExpr type="double" spelling="blue_coefficient" id="2402188104735"/>
			<UnexposedExpr type="double" spelling="ce" id="2403244201267"/>
			<UnexposedExpr type="int" spelling="calc_depth" id="2400048794776"/>
			<UnexposedExpr type="unsigned int" spelling="calc_depth" id="2402424103330"/>
			<UnexposedExpr type="int" spelling="do_round" id="2400979751920"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="path" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="always accept the right answer" comment_scope_start="8019" comment_scope_end="8019">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="graylo" id="2404179405121"/>
			<DeclRefExpr type="double" spelling="gray" id="2402892714523"/>
			<UnexposedExpr type="double" spelling="graylo" id="2403614972144"/>
			<UnexposedExpr type="double" spelling="gray" id="2400396287042"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And invert the gamma." comment_scope_start="8029" comment_scope_end="8048">
		<SYMBOLS>
			<VarDecl type="const double" spelling="power" id="2400063825173"/>
			<CallExpr type="double" spelling="digitize" id="2404025745744"/>
			<CallExpr type="double" spelling="digitize" id="2400064030809"/>
			<CallExpr type="double" spelling="digitize" id="2401439988061"/>
			<CallExpr type="double" spelling="digitize" id="2403287501226"/>
			<CallExpr type="double" spelling="digitize" id="2401260518197"/>
			<CallExpr type="double" spelling="digitize" id="2403965485233"/>
			<CallExpr type="double" spelling="pow" id="2400587598623"/>
			<CallExpr type="double" spelling="digitize" id="2401148743316"/>
			<CallExpr type="double" spelling="pow" id="2403182977846"/>
			<CallExpr type="double" spelling="digitize" id="2403791854993"/>
			<CallExpr type="double" spelling="pow" id="2402587059390"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2401781046381"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_rgb_to_gray" id="2402380325994"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401185677238"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2400310239991"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401257510484"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402374644684"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400933801696"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404102047430"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400195500483"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402324355301"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403965866974"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402728213659"/>
			<DeclRefExpr type="double" spelling="glo" id="2401909514173"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400895898875"/>
			<DeclRefExpr type="double" spelling="glo" id="2402766115400"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402588625410"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401713868568"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400848799952"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402388750783"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402283702295"/>
			<DeclRefExpr type="double" spelling="blo" id="2402032371992"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400144604639"/>
			<DeclRefExpr type="double" spelling="blo" id="2403526445298"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402088141290"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401458203417"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404109707054"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403957872508"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402590298401"/>
			<DeclRefExpr type="double" spelling="gray" id="2403289085516"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404034476721"/>
			<DeclRefExpr type="double" spelling="gray" id="2400732015084"/>
			<DeclRefExpr type="const double" spelling="power" id="2400840737221"/>
			<DeclRefExpr type="double" spelling="graylo" id="2401679417044"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402902162014"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400223070274"/>
			<DeclRefExpr type="double" spelling="graylo" id="2400671739741"/>
			<DeclRefExpr type="const double" spelling="power" id="2403036673959"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2401897554994"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2401489638939"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2403261284029"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404010307156"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2403226669020"/>
			<DeclRefExpr type="const double" spelling="power" id="2400946050581"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2401913190644"/>
			<MemberRefExpr type="double" spelling="gamma" id="2401737388247"/>
			<MemberRefExpr type="double" spelling="gamma" id="2403878477437"/>
			<UnexposedExpr type="double" spelling="gamma" id="2403355901821"/>
			<UnexposedExpr type="double" spelling="gamma" id="2400382414363"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403343265233"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400433246835"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401571740018"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403806982960"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401010522177"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402484647194"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400158992879"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400391918188"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401891460458"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403995011030"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402214167238"/>
			<UnexposedExpr type="double" spelling="glo" id="2400234521939"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402160252156"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402638384975"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402647414834"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400649751317"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401249091645"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400868307652"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402933396779"/>
			<UnexposedExpr type="double" spelling="blo" id="2400929938597"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2404093719976"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401850264935"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403538413329"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401515221444"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400331476045"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403643418980"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403654792237"/>
			<UnexposedExpr type="double" spelling="gray" id="2403947926830"/>
			<UnexposedExpr type="double" spelling="power" id="2403688196351"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400092616114"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401595762497"/>
			<UnexposedExpr type="double" spelling="graylo" id="2402908115292"/>
			<UnexposedExpr type="double" spelling="power" id="2404110901892"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2400486753872"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400808748701"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400213537780"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401308316867"/>
			<UnexposedExpr type="double" spelling="grayhi" id="2403332692542"/>
			<UnexposedExpr type="double" spelling="power" id="2400739320605"/>
			<UnexposedExpr type="int" spelling="sample_depth" id="2401822751883"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400023910508"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="invert" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And this happens yet again, shifting the values once more." comment_scope_start="8034" comment_scope_end="8043">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2404025745744"/>
			<CallExpr type="double" spelling="digitize" id="2400064030809"/>
			<CallExpr type="double" spelling="digitize" id="2401439988061"/>
			<CallExpr type="double" spelling="digitize" id="2403287501226"/>
			<CallExpr type="double" spelling="digitize" id="2401260518197"/>
			<CallExpr type="double" spelling="digitize" id="2403965485233"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2401185677238"/>
			<DeclRefExpr type="unsigned int" spelling="sample_depth" id="2400310239991"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401257510484"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402374644684"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400933801696"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404102047430"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400195500483"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402324355301"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403965866974"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402728213659"/>
			<DeclRefExpr type="double" spelling="glo" id="2401909514173"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400895898875"/>
			<DeclRefExpr type="double" spelling="glo" id="2402766115400"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402588625410"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401713868568"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400848799952"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402388750783"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402283702295"/>
			<DeclRefExpr type="double" spelling="blo" id="2402032371992"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400144604639"/>
			<DeclRefExpr type="double" spelling="blo" id="2403526445298"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402088141290"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401458203417"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404109707054"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403957872508"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402590298401"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403343265233"/>
			<UnexposedExpr type="unsigned int" spelling="sample_depth" id="2400433246835"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401571740018"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403806982960"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401010522177"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402484647194"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400158992879"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400391918188"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401891460458"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403995011030"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402214167238"/>
			<UnexposedExpr type="double" spelling="glo" id="2400234521939"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402160252156"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402638384975"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402647414834"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400649751317"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401249091645"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400868307652"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402933396779"/>
			<UnexposedExpr type="double" spelling="blo" id="2400929938597"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2404093719976"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401850264935"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403538413329"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401515221444"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400331476045"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403643418980"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8037" comment_scope_end="8037">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2404025745744"/>
			<DeclRefExpr type="double" spelling="rlo" id="2401257510484"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402374644684"/>
			<DeclRefExpr type="double" spelling="rlo" id="2400933801696"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2404102047430"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2401571740018"/>
			<UnexposedExpr type="double" spelling="rlo" id="2403806982960"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401010522177"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402484647194"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8038" comment_scope_end="8038">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2400064030809"/>
			<DeclRefExpr type="double" spelling="rhi" id="2400195500483"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2402324355301"/>
			<DeclRefExpr type="double" spelling="rhi" id="2403965866974"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402728213659"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2400158992879"/>
			<UnexposedExpr type="double" spelling="rhi" id="2400391918188"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401891460458"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403995011030"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8039" comment_scope_end="8039">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2401439988061"/>
			<DeclRefExpr type="double" spelling="glo" id="2401909514173"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400895898875"/>
			<DeclRefExpr type="double" spelling="glo" id="2402766115400"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402588625410"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402214167238"/>
			<UnexposedExpr type="double" spelling="glo" id="2400234521939"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2402160252156"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2402638384975"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8040" comment_scope_end="8040">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403287501226"/>
			<DeclRefExpr type="double" spelling="ghi" id="2401713868568"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400848799952"/>
			<DeclRefExpr type="double" spelling="ghi" id="2402388750783"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402283702295"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402647414834"/>
			<UnexposedExpr type="double" spelling="ghi" id="2400649751317"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2401249091645"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2400868307652"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8041" comment_scope_end="8041">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2401260518197"/>
			<DeclRefExpr type="double" spelling="blo" id="2402032371992"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2400144604639"/>
			<DeclRefExpr type="double" spelling="blo" id="2403526445298"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402088141290"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2402933396779"/>
			<UnexposedExpr type="double" spelling="blo" id="2400929938597"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2404093719976"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2401850264935"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="truncate" comment_scope_start="8042" comment_scope_end="8042">
		<SYMBOLS>
			<CallExpr type="double" spelling="digitize" id="2403965485233"/>
			<DeclRefExpr type="double" spelling="bhi" id="2401458203417"/>
			<DeclRefExpr type="double (double, int, int)" spelling="digitize" id="2404109707054"/>
			<DeclRefExpr type="double" spelling="bhi" id="2403957872508"/>
			<DeclRefExpr type="unsigned int" spelling="gamma_depth" id="2402590298401"/>
			<UnexposedExpr type="double (*)(double, int, int)" spelling="digitize" id="2403538413329"/>
			<UnexposedExpr type="double" spelling="bhi" id="2401515221444"/>
			<UnexposedExpr type="int" spelling="gamma_depth" id="2400331476045"/>
			<UnexposedExpr type="unsigned int" spelling="gamma_depth" id="2403643418980"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now the error can be calculated.
          *
          * If r==g==b because there is no overall gamma correction libpng
          * currently preserves the original value." comment_scope_start="8053" comment_scope_end="8068">
		<SYMBOLS>
			<CallExpr type="double" spelling="fabs" id="2400962843479"/>
			<CallExpr type="double" spelling="fabs" id="2402135058127"/>
			<CallExpr type="double" spelling="fabs" id="2403801706288"/>
			<DeclRefExpr type="int" spelling="isgray" id="2403152312873"/>
			<DeclRefExpr type="double" spelling="err" id="2404094556031"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401077845210"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402994648046"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402007401580"/>
			<DeclRefExpr type="double" spelling="err" id="2404118773559"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2404281440174"/>
			<DeclRefExpr type="double" spelling="grayhi" id="2402829627025"/>
			<DeclRefExpr type="double" spelling="gray" id="2403357056550"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2402373148223"/>
			<DeclRefExpr type="double" spelling="gray" id="2400381306836"/>
			<DeclRefExpr type="double" spelling="graylo" id="2403842253219"/>
			<DeclRefExpr type="double" spelling="err" id="2401397103841"/>
			<DeclRefExpr type="double" spelling="err" id="2401135961421"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403040416233"/>
			<DeclRefExpr type="double" spelling="graylo" id="2400915817206"/>
			<DeclRefExpr type="double" spelling="gray" id="2403820355842"/>
			<MemberRefExpr type="double" spelling="rede" id="2400968928606"/>
			<MemberRefExpr type="double" spelling="greene" id="2402869550435"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401346381074"/>
			<UnexposedExpr type="int" spelling="isgray" id="2402839326341"/>
			<UnexposedExpr type="double" spelling="rede" id="2402567536149"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402369020100"/>
			<UnexposedExpr type="double" spelling="greene" id="2402090821299"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402806798088"/>
			<UnexposedExpr type="double" spelling="bluee" id="2400490183390"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403295049676"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2402689693818"/>
			<UnexposedExpr type="double" spelling="grayhi" id="2400924707430"/>
			<UnexposedExpr type="double" spelling="gray" id="2403141926743"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2403596010625"/>
			<UnexposedExpr type="double" spelling="gray" id="2401947424801"/>
			<UnexposedExpr type="double" spelling="graylo" id="2400696919096"/>
			<UnexposedExpr type="double" spelling="err" id="2403525198501"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2402528463622"/>
			<UnexposedExpr type="double" spelling="graylo" id="2404222823456"/>
			<UnexposedExpr type="double" spelling="gray" id="2400923312351"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check that this worked:" comment_scope_start="8069" comment_scope_end="8081">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="pos" id="2400025305992"/>
			<VarDecl type="char [128]" spelling="buffer" id="2403774083147"/>
			<CallExpr type="size_t" spelling="safecat" id="2401862112950"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400388351109"/>
			<CallExpr type="size_t" spelling="safecat" id="2404193810518"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400060450348"/>
			<CallExpr type="void" spelling="png_warning" id="2403756783691"/>
			<DeclRefExpr type="double" spelling="err" id="2402241044412"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402304310412"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403527810640"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402962208208"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400820231733"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400898729742"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400274274132"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402792130634"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400881774363"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2402462065444"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400230710157"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400978972401"/>
			<DeclRefExpr type="double" spelling="err" id="2401895374126"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402487001070"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403960846187"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2401074958390"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2401372266151"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401097333029"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401223300498"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400460870737"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2403848271949"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2400336389196"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403391725921"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402781091021"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp)" spelling="png_warning" id="2401676181968"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400870013801"/>
			<DeclRefExpr type="char [128]" spelling="buffer" id="2404078342744"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402953606549"/>
			<DeclRefExpr type="double" spelling="err" id="2401180042417"/>
			<StringLiteral type="char [19]" spelling="&quot;rgb_to_gray error &quot;" id="2401887662268"/>
			<StringLiteral type="char [16]" spelling="&quot; exceeds limit &quot;" id="2403762657174"/>
			<MemberRefExpr type="double" spelling="limit" id="2400715799320"/>
			<MemberRefExpr type="double" spelling="limit" id="2402728190363"/>
			<MemberRefExpr type="double" spelling="limit" id="2403676119459"/>
			<UnexposedExpr type="double" spelling="err" id="2401438410833"/>
			<UnexposedExpr type="double" spelling="limit" id="2401273651685"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401292879305"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402201353775"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403406910930"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402038234427"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402342962324"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2402483555470"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404222822387"/>
			<UnexposedExpr type="double" spelling="err" id="2404050218520"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400728172986"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403386028212"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402898982092"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400320488715"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2401804596976"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403897405537"/>
			<UnexposedExpr type="double" spelling="limit" id="2400432069271"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400331253013"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp)" spelling="png_warning" id="2400193855340"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401561114007"/>
			<UnexposedExpr type="png_const_charp" spelling="buffer" id="2401775704859"/>
			<UnexposedExpr type="char *" spelling="buffer" id="2403422651655"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402178828339"/>
			<UnexposedExpr type="double" spelling="err" id="2400695951048"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!RELEASE_BUILD" comment_scope_start="8082" comment_scope_end="8082"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!DIGITIZE" comment_scope_start="8085" comment_scope_end="8085"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The true gray case involves no math in earlier versions (not
             * true, there was some if gamma correction was happening too.)" comment_scope_start="8095" comment_scope_end="8104"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="before 1.7" comment_scope_start="8107" comment_scope_end="8107"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There is no need to do the conversions to and from linear space,
             * so the calculation should be a lot more accurate.  There is a
             * built in error in the coefficients because they only have 15 bits
             * and are adjusted to make sure they add up to 32768.  This
             * involves a integer calculation with truncation of the form:
             *
             *     ((int)(coefficient * 100000) * 32768)/100000
             *
             * This is done to the red and green coefficients (the ones
             * provided to the API) then blue is calculated from them so the
             * result adds up to 32768.  In the worst case this can result in
             * a -1 error in red and green and a +2 error in blue.  Consequently
             * the worst case in the calculation below is 2/32768 error.
             *
             * TODO: consider fixing this in libpng by rounding the calculation
             * limiting the error to 1/32768.
             *
             * Handling this by adding 2/32768 here avoids needing to increase
             * the global error limits to take this into account.)" comment_scope_start="8110" comment_scope_end="8134"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The calculation happens in linear space, and this produces much
             * wider errors in the encoded space.  These are handled here by
             * factoring the errors in to the calculation.  There are two table
             * lookups in the calculation and each introduces a quantization
             * error defined by the table size." comment_scope_start="8138" comment_scope_end="8162"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Work out the lower and upper bounds for the gray value in the
             * encoded space, then work out an average and error.  Remove the
             * previously added input quantization error at this point." comment_scope_start="8163" comment_scope_end="8194"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate that the error is within limits (this has caused
             * problems before, it's much easier to detect them here.)" comment_scope_start="8195" comment_scope_end="8209"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!RELEASE_BUILD" comment_scope_start="8210" comment_scope_end="8210"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!DIGITIZE" comment_scope_start="8213" comment_scope_end="8213"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The sBIT is the minimum of the three colour channel sBITs." comment_scope_start="8218" comment_scope_end="8224">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403067620253"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403961729839"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402218699781"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403286680451"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402785141243"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401770746913"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401801694897"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400724992630"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401796959046"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404197293503"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402137218052"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2400090144247"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401208580891"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2400877706278"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403759072197"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401823012397"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2403725164350"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401016346670"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400501189853"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400913884634"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2402111883185"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2401137230053"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2402179246660"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2401724145758"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400149369648"/>
			<UnexposedExpr type="int" spelling="green_sBIT" id="2404270171056"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2400878845487"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401245282225"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402672564991"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2400369577078"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404191899396"/>
			<UnexposedExpr type="int" spelling="red_sBIT" id="2403366727526"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2401433856752"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401390850362"/>
			<UnexposedExpr type="int" spelling="blue_sBIT" id="2402619027920"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402728907785"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403592361020"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401266820374"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2401634244253"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404263681718"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402910836672"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402332069682"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2404118509747"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400385568830"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="minimum" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And remove the colour bit in the type:" comment_scope_start="8225" comment_scope_end="8230">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400867068397"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404284557319"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403664861041"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403982822655"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402343919779"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403335828925"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402006648341"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404198398716"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400477797557"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400786156133"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404106732586"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403418874167"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401479357069"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401975182942"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403664139165"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400800450445"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_RGB_TO_GRAY_SUPPORTED" comment_scope_start="8253" comment_scope_end="8253"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_background(png_structp, png_const_color_16p background_color,
 *    int background_gamma_code, int need_expand, double background_gamma)
 * png_set_background_fixed(png_structp, png_const_color_16p background_color,
 *    int background_gamma_code, int need_expand,
 *    png_fixed_point background_gamma)
 *
 * This ignores the gamma (at present.)" comment_scope_start="8256" comment_scope_end="8271">
		<SYMBOLS>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="image_pixel" spelling="image_transform_data_background" id="2400969474584"/>
			<VarDecl type="png_byte" spelling="colour_type" id="2403229529619"/>
			<VarDecl type="png_byte" spelling="bit_depth" id="2400798735621"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2403057026823"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402743363055"/>
			<ParmDecl type="png_structp" spelling="pp" id="2403480335073"/>
			<ParmDecl type="png_infop" spelling="pi" id="2403401795316"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="8 bytes - 64 bits - the biggest pixel" comment_scope_start="8272" comment_scope_end="8272">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte [8]" spelling="random_bytes" id="2402159591832"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="We need a background colour, because we don't know exactly what transforms
    * have been set we have to supply the colour in the original file format and
    * so we need to know what that is!  The background colour is stored in the
    * transform_display." comment_scope_start="8276" comment_scope_end="8282">
		<SYMBOLS>
			<CallExpr type="void" spelling="randomize" id="2400060717725"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="randomize" id="2403239058284"/>
			<DeclRefExpr type="png_byte [8]" spelling="random_bytes" id="2402919220081"/>
			<DeclRefExpr type="png_byte [8]" spelling="random_bytes" id="2402741488116"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="randomize" id="2404288256717"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Read the random value, for colour type 3 the background colour is actually
    * expressed as a 24bit rgb, not an index." comment_scope_start="8283" comment_scope_end="8290">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403428437881"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401808259023"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402521010490"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402342753303"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2404048838310"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403504033740"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401916518916"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402107316633"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403902776281"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401168405005"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400703499124"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="passing in an RGB not a pixel index" comment_scope_start="8291" comment_scope_end="8291">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="expand" id="2401418008633"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="x" comment_scope_start="8304" comment_scope_end="8304">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_init" id="2400865096315"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402411293219"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402291802458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="unused: palette" comment_scope_start="8304" comment_scope_end="8304">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_init" id="2400865096315"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402411293219"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402291802458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="format" comment_scope_start="8304" comment_scope_end="8304">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_init" id="2400865096315"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402411293219"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402291802458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Extract the background colour from this image_pixel, but make sure the
    * unused fields of 'back' are garbage." comment_scope_start="8306" comment_scope_end="8328">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_background_set" id="2403051717612"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<CallExpr type="void" spelling="randomize" id="2400457019721"/>
			<CallExpr type="void" spelling="png_set_background" id="2401892637286"/>
			<CallExpr type="void" spelling="set" id="2400570677299"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="randomize" id="2401424588132"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2402632293773"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2400238731828"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400490248034"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2401327003045"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2403630806959"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2403159304768"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402839834173"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2402318549322"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402448256160"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2400569694186"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2403035434298"/>
			<DeclRefExpr type="void (png_structrp, png_const_color_16p, int, int, double)" spelling="png_set_background" id="2402342318868"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402184352278"/>
			<DeclRefExpr type="png_color_16" spelling="back" id="2403639117070"/>
			<DeclRefExpr type="int" spelling="expand" id="2400941277477"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400557861662"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400589459463"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401622083895"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402611533358"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401902944369"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2401478445445"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2402733672420"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2403508251869"/>
			<MemberRefExpr type="unsigned int" spelling="green" id="2403282573053"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2400452690400"/>
			<MemberRefExpr type="unsigned int" spelling="blue" id="2403170337888"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2401744507582"/>
			<MemberRefExpr type="unsigned int" spelling="red" id="2403656601200"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400215009223"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400880042154"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400219249026"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="randomize" id="2403329790105"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403613728728"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402123638532"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2402845924125"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402172361363"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2401847428778"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2402942587056"/>
			<UnexposedExpr type="void (*)(png_structrp, png_const_color_16p, int, int, double)" spelling="png_set_background" id="2402685600413"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401855912190"/>
			<UnexposedExpr type="int" spelling="expand" id="2404209001878"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403032591460"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400624775412"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401662774898"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402456062264"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402346118310"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2404274147502"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400610769817"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400939290034"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="garbage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for tRNS first:" comment_scope_start="8335" comment_scope_end="8336">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404281270063"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401495321933"/>
			<MemberRefExpr type="unsigned int" spelling="have_tRNS" id="2401359923562"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401901289120"/>
			<UnexposedExpr type="int" spelling="have_tRNS" id="2401013921545"/>
			<UnexposedExpr type="unsigned int" spelling="have_tRNS" id="2400306861098"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403488552315"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400147627150"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402786716184"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402506024682"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="for background" comment_scope_start="8337" comment_scope_end="8337">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_pixel_add_alpha" id="2402472102164"/>
			<DeclRefExpr type="void (image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2403657182321"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403344395416"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2403514240976"/>
			<MemberRefExpr type="const standard_display" spelling="this" id="2402974959000"/>
			<UnexposedExpr type="void (*)(image_pixel *, const standard_display *, int)" spelling="image_pixel_add_alpha" id="2400490778586"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401204111663"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2400448322547"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is only necessary if the alpha value is less than 1." comment_scope_start="8339" comment_scope_end="8376">
		<SYMBOLS>
			<VarDecl type="double" spelling="alf" id="2401264943342"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402174072587"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400479602098"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401498147473"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401162815195"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403854493030"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2400189304222"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400478635991"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2404236130894"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400260852744"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401884985887"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404191537374"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402139221749"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402838372576"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401456525959"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402438435505"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402681039358"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403615991774"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401518830282"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402506034558"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2404275232957"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402616431850"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401414902008"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400536670595"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404001889856"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2400745455985"/>
			<DeclRefExpr type="double" spelling="alf" id="2402555593486"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402957041709"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400136864465"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401493392111"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402204998160"/>
			<DeclRefExpr type="double" spelling="alf" id="2404014114739"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403112868428"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401655203705"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401061348083"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401112022403"/>
			<DeclRefExpr type="double" spelling="alf" id="2400780985894"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400593150558"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403148277321"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402192779380"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402110024855"/>
			<DeclRefExpr type="double" spelling="alf" id="2400034250952"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400824521123"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401294340112"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403655065509"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2404238557209"/>
			<DeclRefExpr type="double" spelling="alf" id="2400365628509"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402662221945"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402592483150"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400757200718"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2400688548143"/>
			<DeclRefExpr type="double" spelling="alf" id="2401765865161"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401432379320"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401443694387"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2402552508696"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2400959967321"/>
			<MemberRefExpr type="double" spelling="redf" id="2400625371564"/>
			<MemberRefExpr type="double" spelling="redf" id="2401797480169"/>
			<MemberRefExpr type="double" spelling="greenf" id="2403003768528"/>
			<MemberRefExpr type="double" spelling="greenf" id="2400499724027"/>
			<MemberRefExpr type="double" spelling="bluef" id="2402895110401"/>
			<MemberRefExpr type="double" spelling="bluef" id="2401191597394"/>
			<MemberRefExpr type="double" spelling="rede" id="2402479743658"/>
			<MemberRefExpr type="double" spelling="rede" id="2403655042230"/>
			<MemberRefExpr type="double" spelling="greene" id="2402690882827"/>
			<MemberRefExpr type="double" spelling="greene" id="2402072239294"/>
			<MemberRefExpr type="double" spelling="bluee" id="2403903336667"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401743894807"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2403341405647"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402842258298"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401631924598"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401595381633"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400665157180"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2402011581401"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2404018515584"/>
			<MemberRefExpr type="double" spelling="redf" id="2400942300027"/>
			<MemberRefExpr type="double" spelling="redf" id="2402022653995"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2402881820789"/>
			<MemberRefExpr type="double" spelling="redf" id="2404041872310"/>
			<MemberRefExpr type="double" spelling="rede" id="2402496338204"/>
			<MemberRefExpr type="double" spelling="rede" id="2402248643659"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2400337067723"/>
			<MemberRefExpr type="double" spelling="rede" id="2402403877672"/>
			<MemberRefExpr type="double" spelling="greenf" id="2400520215125"/>
			<MemberRefExpr type="double" spelling="greenf" id="2401242154057"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401380768422"/>
			<MemberRefExpr type="double" spelling="greenf" id="2400872678526"/>
			<MemberRefExpr type="double" spelling="greene" id="2401191154822"/>
			<MemberRefExpr type="double" spelling="greene" id="2402983623848"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403847350959"/>
			<MemberRefExpr type="double" spelling="greene" id="2400328190840"/>
			<MemberRefExpr type="double" spelling="bluef" id="2404144793107"/>
			<MemberRefExpr type="double" spelling="bluef" id="2403895870911"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2402993566575"/>
			<MemberRefExpr type="double" spelling="bluef" id="2404084305103"/>
			<MemberRefExpr type="double" spelling="bluee" id="2400723393314"/>
			<MemberRefExpr type="double" spelling="bluee" id="2400563355405"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2401482779797"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401911087374"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403952320541"/>
			<MemberRefExpr type="double" spelling="alphae" id="2402145646855"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2401985699049"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403514395637"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400158484312"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400753875664"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401280852326"/>
			<UnexposedExpr type="double" spelling="redf" id="2403665661203"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400997948856"/>
			<UnexposedExpr type="double" spelling="greenf" id="2401739302173"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401204940939"/>
			<UnexposedExpr type="double" spelling="bluef" id="2400725143069"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403523909677"/>
			<UnexposedExpr type="double" spelling="rede" id="2403099901928"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400381791590"/>
			<UnexposedExpr type="double" spelling="greene" id="2400927658851"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401788100997"/>
			<UnexposedExpr type="double" spelling="bluee" id="2400670611964"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403110890652"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402716042729"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403740347841"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2401324883601"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404072732926"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402974991492"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2401927042339"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404148440334"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402753516052"/>
			<UnexposedExpr type="double" spelling="redf" id="2400611510676"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402738116489"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2403988100473"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400131726006"/>
			<UnexposedExpr type="double" spelling="redf" id="2403990313242"/>
			<UnexposedExpr type="double" spelling="alf" id="2400528472241"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400668498054"/>
			<UnexposedExpr type="double" spelling="rede" id="2402227516577"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401058041976"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2401294213207"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401465407447"/>
			<UnexposedExpr type="double" spelling="rede" id="2401682349636"/>
			<UnexposedExpr type="double" spelling="alf" id="2402495193680"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403350632640"/>
			<UnexposedExpr type="double" spelling="greenf" id="2401722100295"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402689872191"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400397595040"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402254594368"/>
			<UnexposedExpr type="double" spelling="greenf" id="2401240259813"/>
			<UnexposedExpr type="double" spelling="alf" id="2402761302743"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401776030792"/>
			<UnexposedExpr type="double" spelling="greene" id="2400539499753"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400287790356"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400828518700"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400970006106"/>
			<UnexposedExpr type="double" spelling="greene" id="2400358401729"/>
			<UnexposedExpr type="double" spelling="alf" id="2403227336398"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400843368015"/>
			<UnexposedExpr type="double" spelling="bluef" id="2400671168502"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402803923548"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2402041847665"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401314214652"/>
			<UnexposedExpr type="double" spelling="bluef" id="2404223677361"/>
			<UnexposedExpr type="double" spelling="alf" id="2400991073463"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402389505365"/>
			<UnexposedExpr type="double" spelling="bluee" id="2404018031838"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401550192836"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2402847234522"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404215336247"/>
			<UnexposedExpr type="double" spelling="bluee" id="2403396908663"/>
			<UnexposedExpr type="double" spelling="alf" id="2401749499427"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400322001560"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400668117211"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now we do the background calculation without any gamma correction." comment_scope_start="8342" comment_scope_end="8356">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400479602098"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401498147473"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401162815195"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403854493030"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2400189304222"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400478635991"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2404236130894"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400260852744"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401884985887"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404191537374"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402139221749"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402838372576"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401456525959"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402438435505"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2402681039358"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403615991774"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2401518830282"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402506034558"/>
			<DeclRefExpr type="image_pixel" spelling="image_transform_data_background" id="2404275232957"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2400959967321"/>
			<MemberRefExpr type="double" spelling="redf" id="2400625371564"/>
			<MemberRefExpr type="double" spelling="redf" id="2401797480169"/>
			<MemberRefExpr type="double" spelling="greenf" id="2403003768528"/>
			<MemberRefExpr type="double" spelling="greenf" id="2400499724027"/>
			<MemberRefExpr type="double" spelling="bluef" id="2402895110401"/>
			<MemberRefExpr type="double" spelling="bluef" id="2401191597394"/>
			<MemberRefExpr type="double" spelling="rede" id="2402479743658"/>
			<MemberRefExpr type="double" spelling="rede" id="2403655042230"/>
			<MemberRefExpr type="double" spelling="greene" id="2402690882827"/>
			<MemberRefExpr type="double" spelling="greene" id="2402072239294"/>
			<MemberRefExpr type="double" spelling="bluee" id="2403903336667"/>
			<MemberRefExpr type="double" spelling="bluee" id="2401743894807"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2403341405647"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2402842258298"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401631924598"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2401595381633"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2400665157180"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2402011581401"/>
			<UnexposedExpr type="double" spelling="alphaf" id="2400158484312"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400753875664"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401280852326"/>
			<UnexposedExpr type="double" spelling="redf" id="2403665661203"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400997948856"/>
			<UnexposedExpr type="double" spelling="greenf" id="2401739302173"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401204940939"/>
			<UnexposedExpr type="double" spelling="bluef" id="2400725143069"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403523909677"/>
			<UnexposedExpr type="double" spelling="rede" id="2403099901928"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400381791590"/>
			<UnexposedExpr type="double" spelling="greene" id="2400927658851"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401788100997"/>
			<UnexposedExpr type="double" spelling="bluee" id="2400670611964"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403110890652"/>
			<UnexposedExpr type="png_byte" spelling="red_sBIT" id="2402716042729"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403740347841"/>
			<UnexposedExpr type="png_byte" spelling="green_sBIT" id="2401324883601"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404072732926"/>
			<UnexposedExpr type="png_byte" spelling="blue_sBIT" id="2402974991492"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="0 &lt; alpha &lt; 1" comment_scope_start="8358" comment_scope_end="8358"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Remove the alpha type and set the alpha (not in that order.)" comment_scope_start="8373" comment_scope_end="8376">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401432379320"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401443694387"/>
			<MemberRefExpr type="double" spelling="alphaf" id="2403952320541"/>
			<MemberRefExpr type="double" spelling="alphae" id="2402145646855"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400322001560"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400668117211"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_COLOR_TYPE_PALETTE is not changed" comment_scope_start="8382" comment_scope_end="8385">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_background_mod" id="2402140837942"/>
			<CallExpr type="void" spelling="mod" id="2403648606585"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403194624694"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403898404046"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400161154270"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401878080645"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2400311213515"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2401095724591"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400455014672"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401558368681"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2404284897721"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401927792077"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402527432947"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401193137803"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402240214481"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403076810336"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400489467490"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2402740971309"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_BACKGROUND_SUPPORTED" comment_scope_start="8393" comment_scope_end="8393"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_quantize(png_structp, png_colorp palette, int num_palette,
 *    int maximum_colors, png_const_uint_16p histogram, int full_quantize)
 *
 * Very difficult to validate this!" comment_scope_start="8395" comment_scope_end="8410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: TBD NYI" comment_scope_start="8395" comment_scope_end="8410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The data layout transforms are handled by swapping our own channel data,
 * necessarily these need to happen at the end of the transform list because the
 * semantic of the channels changes after these are executed.  Some of these,
 * like set_shift and set_packing, can't be done at present because they change
 * the layout of the data at the sub-sample level so sample() won't get the
 * right answer." comment_scope_start="8395" comment_scope_end="8410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_invert_alpha" comment_scope_start="8395" comment_scope_end="8410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Invert the alpha channel
 *
 *  png_set_invert_alpha(png_structrp png_ptr)" comment_scope_start="8411" comment_scope_end="8442">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_invert_alpha_set" id="2403437979190"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_invert_alpha_mod" id="2401157314576"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2404035027612"/>
			<ParmDecl type="transform_display *" spelling="that" id="2402658523757"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400657724227"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401847679541"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402370666063"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2402744206610"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400920311360"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2403794417869"/>
			<ParmDecl type="image_transform *" spelling="this" id="2402091526276"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2401560329873"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2401967233012"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400285284464"/>
			<CallExpr type="void" spelling="png_set_invert_alpha" id="2403723220236"/>
			<CallExpr type="void" spelling="set" id="2400075027696"/>
			<CallExpr type="void" spelling="mod" id="2401930621686"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_invert_alpha" id="2401005975604"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403155505191"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401417735306"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403411617488"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402456243596"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402319945889"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400927593015"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401221844492"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403599430158"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2402385746614"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400568544762"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400844051715"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400783370154"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2402862242006"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400602456800"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2400350298456"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2400268395435"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2400153866399"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2403261938985"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400116564341"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403117023236"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400110685977"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402480207053"/>
			<MemberRefExpr type="unsigned int" spelling="alpha_inverted" id="2401477137246"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403593094497"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400955448350"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402837830154"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2401990192200"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_invert_alpha" id="2403621590243"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401788238716"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401477960409"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401628209937"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402239424904"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402961215499"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401265716473"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2402641267653"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404258085349"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402133967395"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403337866429"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401214205677"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403004958052"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401565534546"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2404037458509"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401711452366"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400745950588"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401685055379"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400366454367"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402970646409"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402176000642"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2404033000419"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403366563765"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2404247202912"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2402443583132"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2400766121122"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403138762366"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2401315329054"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="invert" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Only has an effect on pixels with alpha:" comment_scope_start="8443" comment_scope_end="8445">
		<SYMBOLS>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_invert_alpha_add" id="2402518887139"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401600713090"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400132252567"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403153119064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_INVERT_ALPHA_SUPPORTED" comment_scope_start="8451" comment_scope_end="8451"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_bgr" comment_scope_start="8453" comment_scope_end="8454"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Swap R,G,B channels to order B,G,R.
 *
 *  png_set_bgr(png_structrp png_ptr)
 *
 * This only has an effect on RGB and RGBA pixels." comment_scope_start="8455" comment_scope_end="8497">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_bgr_set" id="2403594101237"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_bgr_mod" id="2402975099562"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_bgr_add" id="2400173525518"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_bgr" id="2400528339253"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400206283927"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400639963685"/>
			<ParmDecl type="png_structp" spelling="pp" id="2403204694410"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401261762179"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400188295068"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2403212139709"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2401941220919"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2401385498908"/>
			<ParmDecl type="image_transform *" spelling="this" id="2403675194597"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2403210346542"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2402160155651"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2402440291966"/>
			<CallExpr type="void" spelling="png_set_bgr" id="2401814978221"/>
			<CallExpr type="void" spelling="set" id="2402725146083"/>
			<CallExpr type="void" spelling="mod" id="2401726245281"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_bgr" id="2400212536729"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402299104442"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401122070112"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2404035176323"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400936268087"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404083711665"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402955885246"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400620577321"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401246379291"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401864620656"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401628126367"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401034724484"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400759805846"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402850155447"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2403824302971"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2404100497360"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2401580615395"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2400395817014"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2400664189160"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2403395234097"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403926894947"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403996289604"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_invert_alpha" id="2402258155957"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2403622836028"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_bgr_set" id="2400964299735"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_bgr_mod" id="2402087879001"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_bgr_add" id="2400136474710"/>
			<StringLiteral type="char [4]" spelling="&quot;bgr&quot;" id="2403871171098"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400521457588"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403909730018"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400142128242"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404147912617"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403906965810"/>
			<MemberRefExpr type="unsigned int" spelling="swap_rgb" id="2401018927707"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2401833752564"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402389341803"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2404149891195"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2401860725921"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_bgr" id="2401259704025"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401757392379"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404045035601"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401458086438"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403895786134"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400106388543"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403757476488"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403970682690"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400808894877"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400173725500"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402013420602"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402131428474"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403924724069"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401977423537"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400655351212"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400034798414"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402447020641"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402606286436"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403010604919"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402469933633"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400876706142"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400169039412"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400317912659"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401152449615"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2403985417818"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401738446927"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2401808260976"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401931244328"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2400628615839"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401313433754"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2404047650309"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401587717524"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400212565142"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402676131020"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400574187028"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2402733772771"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_bgr_set" id="2402707841745"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_bgr_mod" id="2403722842058"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_bgr_add" id="2404150061489"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="swap" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_BGR_SUPPORTED" comment_scope_start="8498" comment_scope_end="8498"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_swap_alpha" comment_scope_start="8500" comment_scope_end="8501"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Put the alpha channel first.
 *
 *  png_set_swap_alpha(png_structrp png_ptr)
 *
 * This only has an effect on GA and RGBA pixels." comment_scope_start="8502" comment_scope_end="8544">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_alpha_set" id="2400999318995"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_alpha_mod" id="2403593149937"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_alpha_add" id="2400904608424"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_swap_alpha" id="2404232206956"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402641340718"/>
			<ParmDecl type="transform_display *" spelling="that" id="2401525811409"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401685271320"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401823662030"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402089488614"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2400804818636"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403094024445"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2400506753529"/>
			<ParmDecl type="image_transform *" spelling="this" id="2403689948264"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2402427231294"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2403838036775"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400449654201"/>
			<CallExpr type="void" spelling="png_set_swap_alpha" id="2400319820973"/>
			<CallExpr type="void" spelling="set" id="2403916470748"/>
			<CallExpr type="void" spelling="mod" id="2402082651135"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_swap_alpha" id="2403035528063"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400145474487"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2404245459269"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401529650434"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402499516756"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400397975086"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400838427473"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403017362717"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402490322405"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403907262173"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2404163889009"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403595061776"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400587246100"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401368514557"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2403061911781"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403701648176"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2402975853615"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2402066769633"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2403382703175"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2403382898983"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401457806613"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402649217198"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_bgr" id="2400151306618"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2402389046535"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_alpha_set" id="2404085265365"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_alpha_mod" id="2401872644974"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_alpha_add" id="2401678864464"/>
			<StringLiteral type="char [11]" spelling="&quot;swap_alpha&quot;" id="2403035241117"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400910941208"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400076776639"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403107824557"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402692409841"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403876542320"/>
			<MemberRefExpr type="unsigned int" spelling="alpha_first" id="2400871375122"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403303161321"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400028487081"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401228740764"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2402875912108"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_swap_alpha" id="2400747347454"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400629546139"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400315482573"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400235365907"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401714706133"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403988266417"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402195098792"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400200423073"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402325881233"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403067288339"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2403593730462"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400172913936"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401976850426"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401365103770"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403733079378"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403576268524"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403439062176"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403926944072"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400649867718"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400163881168"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402907162918"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403214894890"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403959372550"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400415084939"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2401015884176"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402939770816"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2400827774806"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2400281970589"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401152883161"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403091334807"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2403010239556"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402652749352"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403996693319"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402573484344"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402214335586"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2400000768915"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_alpha_set" id="2400267512962"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_alpha_mod" id="2402038887382"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_alpha_add" id="2403716376455"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="put" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SWAP_ALPHA_SUPPORTED" comment_scope_start="8545" comment_scope_end="8545"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_swap" comment_scope_start="8547" comment_scope_end="8548"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Byte swap 16-bit components.
 *
 *  png_set_swap(png_structrp png_ptr)" comment_scope_start="8549" comment_scope_end="8587">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_set" id="2400001656195"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_mod" id="2403606243049"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_add" id="2403519731917"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_swap" id="2401662574376"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400234987268"/>
			<ParmDecl type="transform_display *" spelling="that" id="2403256876438"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400818450383"/>
			<ParmDecl type="png_infop" spelling="pi" id="2400228429460"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400960095952"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2403962173289"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2402590357935"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2400621265962"/>
			<ParmDecl type="image_transform *" spelling="this" id="2401939757147"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2403482909296"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2402316369313"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2402326669136"/>
			<CallExpr type="void" spelling="png_set_swap" id="2401955841472"/>
			<CallExpr type="void" spelling="set" id="2402487072897"/>
			<CallExpr type="void" spelling="mod" id="2402875634163"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_swap" id="2403726074915"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400977966606"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403525854804"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400651322496"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400049341944"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403030881519"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402313473743"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401911735245"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402587720748"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400228474347"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2404256790766"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402588090128"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402495705133"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2401926023243"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402124210306"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2401283021005"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2401688764004"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2403947953359"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2403809623209"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401129057596"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_swap_alpha" id="2402015031860"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2401615619009"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_set" id="2401274660850"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_mod" id="2401521789059"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_add" id="2403493794344"/>
			<StringLiteral type="char [5]" spelling="&quot;swap&quot;" id="2404201061298"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404150925889"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2404085211879"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2404081987739"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401144363511"/>
			<MemberRefExpr type="unsigned int" spelling="swap16" id="2400047282748"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2403613432257"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401238558568"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401813120429"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2402622653771"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_swap" id="2401224832514"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402263945258"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402654249451"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403558449663"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402203237664"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402650243553"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402716871264"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400027737184"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403583711122"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403048725035"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400566422852"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403917810971"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402601772955"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400804073143"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2400090714072"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402063340631"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403525119869"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2403702564596"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402726569170"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400385251556"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401977556760"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2400037694957"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402918649281"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2402817340268"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2402404689942"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401210715472"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403179757440"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2401556687499"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402494761805"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402186650524"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2403198194797"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_swap_set" id="2401986890896"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_swap_mod" id="2403308569595"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_swap_add" id="2402637682469"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="swap" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SWAP_SUPPORTED" comment_scope_start="8588" comment_scope_end="8588"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add a filler byte to 8-bit Gray or 24-bit RGB images.
 *
 *  png_set_filler, (png_structp png_ptr, png_uint_32 filler, int flags));
 *
 * Flags:
 *
 *  PNG_FILLER_BEFORE
 *  PNG_FILLER_AFTER" comment_scope_start="8591" comment_scope_end="8610">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<FieldDecl type="png_uint_32" spelling="filler" id="2402291376785"/>
			<FieldDecl type="int" spelling="flags" id="2402106360459"/>
			<VarDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_filler" id="2401851422774"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401459654217"/>
			<ParmDecl type="transform_display *" spelling="that" id="2403274609121"/>
			<ParmDecl type="png_structp" spelling="pp" id="2403694644747"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401551320717"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need a random choice for 'before' and 'after' as well as for the
    * filler.  The 'filler' value has all 32 bits set, but only bit_depth
    * will be used.  At this point we don't know bit_depth." comment_scope_start="8611" comment_scope_end="8619">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="random_u32" id="2402757897479"/>
			<CallExpr type="int" spelling="random_choice" id="2401286422287"/>
			<CallExpr type="void" spelling="png_set_filler" id="2401500837135"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_filler" id="2403382882794"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_u32" id="2400916509285"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_filler" id="2401441711821"/>
			<DeclRefExpr type="int (void)" spelling="random_choice" id="2400443372300"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, int)" spelling="png_set_filler" id="2401780137637"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401732466337"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_filler" id="2400068971960"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_filler" id="2403701312856"/>
			<MemberRefExpr type="png_uint_32" spelling="filler" id="2403739906106"/>
			<MemberRefExpr type="int" spelling="flags" id="2404143495955"/>
			<MemberRefExpr type="png_uint_32" spelling="filler" id="2403973163263"/>
			<MemberRefExpr type="int" spelling="flags" id="2402969688689"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_u32" id="2402240143685"/>
			<UnexposedExpr type="int (*)(void)" spelling="random_choice" id="2401622950831"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, int)" spelling="png_set_filler" id="2402028545851"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402880212627"/>
			<UnexposedExpr type="png_uint_32" spelling="filler" id="2400032874181"/>
			<UnexposedExpr type="int" spelling="flags" id="2402915803537"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The standard display handling stuff also needs to know that
    * there is a filler, so set that here." comment_scope_start="8620" comment_scope_end="8626">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_filler_set" id="2402897177222"/>
			<CallExpr type="void" spelling="set" id="2402267259671"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401006762808"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400382277584"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401797509863"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403930397037"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403101373877"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2403632089608"/>
			<MemberRefExpr type="png_byte" spelling="filler" id="2403467581540"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400493056011"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403318562664"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401065882760"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401265225000"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401119230439"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400359065020"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402744773250"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401099373991"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2400822496862"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400761724376"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2403968643606"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402076977164"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400733665338"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The filler has been stored in the alpha channel, we must record
       * that this has been done for the checking later on, the color
       * type is faked to have an alpha channel, but libpng won't report
       * this; the app has to know the extra channel is there and this
       * was recording in standard_display::filler above." comment_scope_start="8642" comment_scope_end="8647"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha added" comment_scope_start="8648" comment_scope_end="8648">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2404205117197"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401917172771"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400934127154"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_add_alpha, (png_structp png_ptr, png_uint_32 filler, int flags));" comment_scope_start="8671" comment_scope_end="8683">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<FieldDecl type="png_uint_32" spelling="filler" id="2400112753380"/>
			<FieldDecl type="int" spelling="flags" id="2400526839662"/>
			<VarDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2400122843928"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401939665550"/>
			<ParmDecl type="transform_display *" spelling="that" id="2403819800676"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400523425335"/>
			<ParmDecl type="png_infop" spelling="pi" id="2400325413354"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add an alpha byte to 8-bit Gray or 24-bit RGB images." comment_scope_start="8671" comment_scope_end="8683">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<FieldDecl type="png_uint_32" spelling="filler" id="2400112753380"/>
			<FieldDecl type="int" spelling="flags" id="2400526839662"/>
			<VarDecl type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2400122843928"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2401939665550"/>
			<ParmDecl type="transform_display *" spelling="that" id="2403819800676"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400523425335"/>
			<ParmDecl type="png_infop" spelling="pi" id="2400325413354"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need a random choice for 'before' and 'after' as well as for the
    * filler.  The 'filler' value has all 32 bits set, but only bit_depth
    * will be used.  At this point we don't know bit_depth." comment_scope_start="8684" comment_scope_end="8693">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_add_alpha_set" id="2403857828467"/>
			<CallExpr type="png_uint_32" spelling="random_u32" id="2403015324574"/>
			<CallExpr type="int" spelling="random_choice" id="2401201835462"/>
			<CallExpr type="void" spelling="png_set_add_alpha" id="2403742975864"/>
			<CallExpr type="void" spelling="set" id="2400468981206"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2402002395846"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_u32" id="2401648724868"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2404291845897"/>
			<DeclRefExpr type="int (void)" spelling="random_choice" id="2403941410471"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, int)" spelling="png_set_add_alpha" id="2401401557512"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401620723273"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2400423692816"/>
			<DeclRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="image_transform_data_add_alpha" id="2402027264840"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401368764934"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403487838658"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401490476960"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401648645817"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402629385684"/>
			<MemberRefExpr type="png_uint_32" spelling="filler" id="2402508181727"/>
			<MemberRefExpr type="int" spelling="flags" id="2401473693533"/>
			<MemberRefExpr type="png_uint_32" spelling="filler" id="2400254115649"/>
			<MemberRefExpr type="int" spelling="flags" id="2401634228659"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2401541226323"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400625275484"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401774132242"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_u32" id="2402401494583"/>
			<UnexposedExpr type="int (*)(void)" spelling="random_choice" id="2400919346975"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, int)" spelling="png_set_add_alpha" id="2401608846929"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403919743046"/>
			<UnexposedExpr type="png_uint_32" spelling="filler" id="2402966833918"/>
			<UnexposedExpr type="int" spelling="flags" id="2401190671788"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402007812708"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401768161342"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402375421497"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401051369131"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402584209166"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2404243796878"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401736930646"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400968220875"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha added" comment_scope_start="8709" comment_scope_end="8709">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402534085070"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2400314639994"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401500333095"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_FILLER_SUPPORTED" comment_scope_start="8732" comment_scope_end="8732"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_packing" comment_scope_start="8734" comment_scope_end="8735"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use 1 byte per pixel in 1, 2, or 4-bit depth files.
 *
 *  png_set_packing(png_structrp png_ptr)
 *
 * This should only affect grayscale and palette images with less than 8 bits
 * per pixel." comment_scope_start="8736" comment_scope_end="8756">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_packing_set" id="2403210546075"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2403182676639"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400977053405"/>
			<ParmDecl type="png_structp" spelling="pp" id="2400506191728"/>
			<ParmDecl type="png_infop" spelling="pi" id="2402770788939"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2404254473531"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2402124503716"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2400583413434"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2401510170645"/>
			<CallExpr type="void" spelling="png_set_packing" id="2402521702043"/>
			<CallExpr type="void" spelling="set" id="2403151199361"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_packing" id="2403910006400"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401246157124"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400234249468"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403870642118"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2403657728209"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2402276605045"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401655208678"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402588740811"/>
			<MemberRefExpr type="png_byte" spelling="unpacked" id="2402915533179"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2403604755665"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401413843141"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2404263205556"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_packing" id="2404096922031"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400519405838"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400168107689"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2402346267142"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402966964880"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402111617529"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402283303443"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2400757178015"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400479707676"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401388996509"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403026315512"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The general expand case depends on what the colour type is,
    * low bit-depth pixel values are unpacked into bytes without
    * scaling, so sample_depth is not changed." comment_scope_start="8757" comment_scope_end="8760"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="grayscale or palette" comment_scope_start="8761" comment_scope_end="8761">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400884750084"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401672138802"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403658865705"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400547823416"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402651175496"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Nothing should happen unless the bit depth is less than 8:" comment_scope_start="8776" comment_scope_end="8778">
		<SYMBOLS>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_packing_add" id="2401047952235"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400162929627"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401671250746"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402209698602"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_PACK_SUPPORTED" comment_scope_start="8784" comment_scope_end="8784"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_packswap" comment_scope_start="8786" comment_scope_end="8787"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Swap pixels packed into bytes; reverses the order on screen so that
 * the high order bits correspond to the rightmost pixels.
 *
 *  png_set_packswap(png_structrp png_ptr)" comment_scope_start="8788" comment_scope_end="8828">
		<SYMBOLS>
			<FunctionDecl type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_packswap_set" id="2403535028147"/>
			<FunctionDecl type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_packswap_mod" id="2401504619177"/>
			<FunctionDecl type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_packswap_add" id="2402546543228"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_pixel" spelling="image_pixel" id="2403340566190"/>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform" spelling="image_transform_packswap" id="2403242575242"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2402284356896"/>
			<ParmDecl type="transform_display *" spelling="that" id="2401487180522"/>
			<ParmDecl type="png_structp" spelling="pp" id="2401844240292"/>
			<ParmDecl type="png_infop" spelling="pi" id="2403132311491"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2400264504775"/>
			<ParmDecl type="image_pixel *" spelling="that" id="2400080228530"/>
			<ParmDecl type="png_const_structp" spelling="pp" id="2403537184360"/>
			<ParmDecl type="const transform_display *" spelling="display" id="2404161713184"/>
			<ParmDecl type="image_transform *" spelling="this" id="2404084390360"/>
			<ParmDecl type="const image_transform **" spelling="that" id="2402031909333"/>
			<ParmDecl type="png_byte" spelling="colour_type" id="2401839591508"/>
			<ParmDecl type="png_byte" spelling="bit_depth" id="2400695803770"/>
			<CallExpr type="void" spelling="png_set_packswap" id="2403957331707"/>
			<CallExpr type="void" spelling="set" id="2400928841090"/>
			<CallExpr type="void" spelling="mod" id="2402520672220"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_packswap" id="2400371709143"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404091575273"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2401023955928"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401386665448"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2404159426170"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2400766502418"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403121720683"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402860924552"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401539496921"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400935335580"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2401793028121"/>
			<DeclRefExpr type="const image_transform *" spelling="this" id="2400376702115"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2401056516197"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2401337429606"/>
			<DeclRefExpr type="const transform_display *" spelling="display" id="2401651267807"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402901800990"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2401028068100"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2404079900301"/>
			<DeclRefExpr type="const image_transform **" spelling="that" id="2404285853640"/>
			<DeclRefExpr type="image_transform *" spelling="this" id="2402160057829"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402930707119"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_packing" id="2402635461334"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2400321079193"/>
			<DeclRefExpr type="void (const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_packswap_set" id="2403819348985"/>
			<DeclRefExpr type="void (const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_packswap_mod" id="2401023638300"/>
			<DeclRefExpr type="int (image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_packswap_add" id="2404225548092"/>
			<StringLiteral type="char [9]" spelling="&quot;packswap&quot;" id="2400934156390"/>
			<MemberRefExpr type="int" spelling="littleendian" id="2400945702254"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402728521211"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2400764686029"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2400110408374"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2402483146232"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2402928515973"/>
			<MemberRefExpr type="unsigned int" spelling="littleendian" id="2402995506672"/>
			<MemberRefExpr type="void (*const)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402333583323"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2401675015755"/>
			<MemberRefExpr type="const struct image_transform *const" spelling="next" id="2403102169012"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2401867188827"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_packswap" id="2404147944072"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401595047281"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400594911490"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, struct transform_display *, png_structp, png_infop)" spelling="set" id="2404257574708"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401239745735"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403418566332"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402451627530"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2402776144281"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2401705085299"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403076129770"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403540822694"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404090593628"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400838068530"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402614983875"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2403660968003"/>
			<UnexposedExpr type="void (*)(const struct image_transform *, image_pixel *, png_const_structp, const struct transform_display *)" spelling="mod" id="2402866227312"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2402488792339"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2401701737455"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2404020907130"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403342605331"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404186379116"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403998018556"/>
			<UnexposedExpr type="const transform_display *" spelling="display" id="2400992979767"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403115319965"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2403659976401"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2403507194047"/>
			<UnexposedExpr type="const image_transform **" spelling="that" id="2401712592903"/>
			<UnexposedExpr type="const image_transform *" spelling="this" id="2403926110305"/>
			<UnexposedExpr type="image_transform *" spelling="this" id="2401849387512"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2401690779665"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400010623881"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *)" spelling="image_transform_default_ini" id="2401553638379"/>
			<UnexposedExpr type="void (*)(const image_transform *, transform_display *, png_structp, png_infop)" spelling="image_transform_png_set_packswap_set" id="2403113714499"/>
			<UnexposedExpr type="void (*)(const image_transform *, image_pixel *, png_const_structp, const transform_display *)" spelling="image_transform_png_set_packswap_mod" id="2400760822513"/>
			<UnexposedExpr type="int (*)(image_transform *, const image_transform **, png_byte, png_byte)" spelling="image_transform_png_set_packswap_add" id="2402629914583"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="swap" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="rightmost" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_PACKSWAP_SUPPORTED" comment_scope_start="8829" comment_scope_end="8829"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_invert_mono" comment_scope_start="8832" comment_scope_end="8833"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Invert the gray channel
 *
 *  png_set_invert_mono(png_structrp png_ptr)" comment_scope_start="8834" comment_scope_end="8865"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Only has an effect on pixels with no colour:" comment_scope_start="8866" comment_scope_end="8868"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_INVERT_MONO_SUPPORTED" comment_scope_start="8874" comment_scope_end="8874"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_set_shift(png_structp, png_const_color_8p true_bits)
 *
 * The output pixels will be shifted by the given true_bits
 * values." comment_scope_start="8877" comment_scope_end="8888">
		<SYMBOLS>
			<TypeRef type="png_color_8" spelling="png_color_8" id="2403459474608"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<TypeRef type="transform_display" spelling="transform_display" id="2402146042420"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<VarDecl type="png_color_8" spelling="image_transform_data_shift" id="2400575579335"/>
			<ParmDecl type="const image_transform *" spelling="this" id="2404041730655"/>
			<ParmDecl type="transform_display *" spelling="that" id="2400822771286"/>
			<ParmDecl type="png_structp" spelling="pp" id="2404281119758"/>
			<ParmDecl type="png_infop" spelling="pi" id="2401020022296"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get a random set of shifts.  The shifts need to do something
    * to test the transform, so they are limited to the bit depth
    * of the input image.  Notice that in the following the 'gray'
    * field is randomized independently.  This acts as a check that
    * libpng does use the correct field." comment_scope_start="8889" comment_scope_end="8896">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="depth" id="2401705269064"/>
			<DeclRefExpr type="transform_display *" spelling="that" id="2403368039990"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2403038854918"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2404082140862"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2402456476239"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402620812736"/>
			<UnexposedExpr type="transform_display *" spelling="that" id="2400951264258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="8897" comment_scope_end="8897">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2400728949275"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2402346090874"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2403650917475"/>
			<DeclRefExpr type="unsigned int" spelling="depth" id="2402877634344"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401993603950"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2400924217109"/>
			<UnexposedExpr type="unsigned int" spelling="depth" id="2400575281279"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="8898" comment_scope_end="8898">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2400085899589"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2402050007356"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2400301435927"/>
			<DeclRefExpr type="unsigned int" spelling="depth" id="2402249534890"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2403851004796"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2402961990850"/>
			<UnexposedExpr type="unsigned int" spelling="depth" id="2402476198981"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="8899" comment_scope_end="8899">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2400968108543"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2402932730562"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2400527375777"/>
			<DeclRefExpr type="unsigned int" spelling="depth" id="2400255658356"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2401260307880"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2400517919706"/>
			<UnexposedExpr type="unsigned int" spelling="depth" id="2400617633388"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="8900" comment_scope_end="8900">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2400997260741"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2401090767174"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2402133327202"/>
			<DeclRefExpr type="unsigned int" spelling="depth" id="2401678499436"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2404124069062"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2402941257605"/>
			<UnexposedExpr type="unsigned int" spelling="depth" id="2403461726983"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="SAFE" comment_scope_start="8901" comment_scope_end="8901">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<CallExpr type="unsigned int" spelling="random_mod" id="2401571879316"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2401136625119"/>
			<DeclRefExpr type="unsigned int (unsigned int)" spelling="random_mod" id="2401513860002"/>
			<DeclRefExpr type="unsigned int" spelling="depth" id="2401372702202"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2402884211518"/>
			<UnexposedExpr type="unsigned int (*)(unsigned int)" spelling="random_mod" id="2401209012935"/>
			<UnexposedExpr type="unsigned int" spelling="depth" id="2402859549172"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Copy the correct values into the sBIT fields, libpng does not do
    * anything to palette data:" comment_scope_start="8912" comment_scope_end="8934">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403306985157"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400377631723"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400425962887"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402741017442"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2403497590454"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403838145929"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2401633778127"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402451927140"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2403326987002"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402056359506"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400903659420"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402710318657"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2402900884160"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400043916195"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2400681060372"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401781412382"/>
			<MemberRefExpr type="unsigned int" spelling="sig_bits" id="2403560114018"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404231407565"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2400745794590"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401201016222"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403501739930"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400172867184"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401827547234"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2400204740701"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2403244987822"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403598025189"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401500072213"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2403924991500"/>
			<MemberRefExpr type="png_byte" spelling="alpha_sBIT" id="2403272074552"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2402704580120"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400921378324"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403212741503"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2404232627236"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402910778489"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401141819248"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403270137737"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401838277450"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402672640977"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2402665814505"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401152794396"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2400491922090"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402103817650"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403130058306"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400406309833"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401055810084"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402140100761"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2404002749360"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2400262740089"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2403429837655"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The sBIT fields are reset to the values previously sent to
        * png_set_shift according to the colour type.
        * does." comment_scope_start="8919" comment_scope_end="8928">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400425962887"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402741017442"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2403497590454"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2403838145929"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2401633778127"/>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2402451927140"/>
			<DeclRefExpr type="png_color_8" spelling="image_transform_data_shift" id="2403326987002"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404231407565"/>
			<MemberRefExpr type="png_byte" spelling="red_sBIT" id="2400745794590"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2401201016222"/>
			<MemberRefExpr type="png_byte" spelling="green_sBIT" id="2403501739930"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2400172867184"/>
			<MemberRefExpr type="png_byte" spelling="blue_sBIT" id="2401827547234"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2400204740701"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401141819248"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403270137737"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401838277450"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402672640977"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2402665814505"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401152794396"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2400491922090"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2402103817650"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2403130058306"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB channels" comment_scope_start="8923" comment_scope_end="8923">
		<SYMBOLS>
			<DeclRefExpr type="image_pixel *" spelling="that" id="2400425962887"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2404231407565"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401141819248"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403270137737"/>
			<UnexposedExpr type="image_pixel *" spelling="that" id="2401838277450"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="One grey channel" comment_scope_start="8930" comment_scope_end="8930"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SHIFT_SUPPORTED" comment_scope_start="8955" comment_scope_end="8955"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This may just be 'end' if all the transforms are disabled!" comment_scope_start="8988" comment_scope_end="8993">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform *const" spelling="image_transform_first" id="2403125865517"/>
			<ParmDecl type="const char *" spelling="name" id="2401763350784"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_shift" id="2400929304790"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Everything starts out enabled, so if we see an 'enable' disabled
    * everything else the first time round." comment_scope_start="8994" comment_scope_end="9022">
		<SYMBOLS>
			<FunctionDecl type="void (const char *)" spelling="transform_enable" id="2400397239326"/>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="int" spelling="all_disabled" id="2402429958810"/>
			<VarDecl type="int" spelling="found_it" id="2403240036351"/>
			<VarDecl type="image_transform *" spelling="list" id="2403687359859"/>
			<CallExpr type="int" spelling="strcmp" id="2404022712269"/>
			<CallExpr type="int" spelling="fprintf" id="2403200028788"/>
			<CallExpr type="void" spelling="exit" id="2400240533282"/>
			<DeclRefExpr type="image_transform *const" spelling="image_transform_first" id="2404283526275"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401058612648"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2403013871829"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400871885058"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2400026307998"/>
			<DeclRefExpr type="const char *" spelling="name" id="2403540026601"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403219442820"/>
			<DeclRefExpr type="int" spelling="found_it" id="2400175805299"/>
			<DeclRefExpr type="int" spelling="all_disabled" id="2403187276734"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2400536039958"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403324954550"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402401314146"/>
			<DeclRefExpr type="int" spelling="all_disabled" id="2402680565046"/>
			<DeclRefExpr type="int" spelling="found_it" id="2404154172109"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401875219901"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401640332957"/>
			<DeclRefExpr type="const char *" spelling="name" id="2404244673356"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400283432451"/>
			<StringLiteral type="char [52]" spelling="&quot;pngvalid: --transform-enable=%s: unknown transform\n&quot;" id="2402466116861"/>
			<MemberRefExpr type="const char *" spelling="name" id="2400901439097"/>
			<MemberRefExpr type="int" spelling="enable" id="2403968692940"/>
			<MemberRefExpr type="int" spelling="enable" id="2401450447614"/>
			<MemberRefExpr type="struct image_transform *const" spelling="list" id="2403608492672"/>
			<UnexposedExpr type="image_transform *" spelling="image_transform_first" id="2400723545316"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2403870831926"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400113704846"/>
			<UnexposedExpr type="const char *" spelling="name" id="2400039013364"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401434398209"/>
			<UnexposedExpr type="const char *" spelling="name" id="2404284241090"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2403469398506"/>
			<UnexposedExpr type="int" spelling="all_disabled" id="2403747550551"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2400975437407"/>
			<UnexposedExpr type="struct image_transform *" spelling="list" id="2401273424268"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2403113880612"/>
			<UnexposedExpr type="int" spelling="found_it" id="2402848826973"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2400594500626"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400108902683"/>
			<UnexposedExpr type="const char *" spelling="name" id="2400685100408"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400794015856"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="starts" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="round" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This can only happen if we every have more than 32 transforms (excluding
    * the end) in the list." comment_scope_start="9059" comment_scope_end="9063">
		<SYMBOLS>
			<FunctionDecl type="void (void)" spelling="image_transform_reset_count" id="2403614327676"/>
			<CallExpr type="void" spelling="abort" id="2401414519267"/>
			<DeclRefExpr type="int" spelling="count" id="2401042384068"/>
			<DeclRefExpr type="void (void) __attribute__((noreturn))" spelling="abort" id="2402345246605"/>
			<UnexposedExpr type="int" spelling="count" id="2403948179242"/>
			<UnexposedExpr type="void (*)(void) __attribute__((noreturn))" spelling="abort" id="2402239212350"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test the list to see if there is any point contining, given a current
    * counter and a 'max' value." comment_scope_start="9068" comment_scope_end="9074">
		<SYMBOLS>
			<TypeRef type="image_transform" spelling="image_transform" id="2402577567029"/>
			<VarDecl type="image_transform *" spelling="next" id="2401093165023"/>
			<DeclRefExpr type="image_transform *const" spelling="image_transform_first" id="2401690968565"/>
			<DeclRefExpr type="image_transform *" spelling="next" id="2403558166416"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2403971399791"/>
			<UnexposedExpr type="image_transform *" spelling="image_transform_first" id="2400866471453"/>
			<UnexposedExpr type="image_transform *" spelling="next" id="2402905929888"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For max 0 or 1 continue until the counter overflows:" comment_scope_start="9075" comment_scope_end="9077">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2403764379435"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="continue" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Continue if any entry hasn't reacked the max." comment_scope_start="9078" comment_scope_end="9082">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="max" id="2402923246186"/>
			<DeclRefExpr type="image_transform *" spelling="next" id="2403337431515"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401416537333"/>
			<DeclRefExpr type="image_transform *" spelling="next" id="2403775771795"/>
			<DeclRefExpr type="image_transform *" spelling="next" id="2402535602225"/>
			<MemberRefExpr type="unsigned int" spelling="local_use" id="2401424907916"/>
			<MemberRefExpr type="struct image_transform *const" spelling="list" id="2403981579789"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400080362729"/>
			<UnexposedExpr type="unsigned int" spelling="local_use" id="2403564132798"/>
			<UnexposedExpr type="image_transform *" spelling="next" id="2403842566491"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403889656829"/>
			<UnexposedExpr type="struct image_transform *" spelling="list" id="2403575061313"/>
			<UnexposedExpr type="image_transform *" spelling="next" id="2401921995494"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="continue" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="until we manage to add something" comment_scope_start="9092" comment_scope_end="9092"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Find the next counter value, if the counter is zero this is the start
       * of the list.  This routine always returns the current counter (not the
       * next) so it returns 0 at the end and expects 0 at the beginning." comment_scope_start="9097" comment_scope_end="9108">
		<SYMBOLS>
			<CallExpr type="void" spelling="image_transform_reset_count" id="2402851861736"/>
			<CallExpr type="png_uint_32" spelling="random_32" id="2400694675785"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2400647747759"/>
			<DeclRefExpr type="void (void)" spelling="image_transform_reset_count" id="2402255486625"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400056104220"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2400363753614"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2400795899250"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_32" id="2400358670052"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2402394726978"/>
			<UnexposedExpr type="void (*)(void)" spelling="image_transform_reset_count" id="2403279237991"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2401818662679"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_32" id="2403166661131"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="first time" comment_scope_start="9101" comment_scope_end="9101">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2400647747759"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2402394726978"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="advance the counter" comment_scope_start="9109" comment_scope_end="9109"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now add all these items, if possible" comment_scope_start="9119" comment_scope_end="9123">
		<SYMBOLS>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2401167519324"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2401302459016"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2400494221273"/>
			<DeclRefExpr type="image_transform *const" spelling="image_transform_first" id="2403742127927"/>
			<DeclRefExpr type="png_uint_32" spelling="mask" id="2403418410998"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2402267018235"/>
			<UnexposedExpr type="image_transform *" spelling="image_transform_first" id="2402954695803"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="items" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Go through the whole list adding anything that the counter selects:" comment_scope_start="9124" comment_scope_end="9153">
		<SYMBOLS>
			<CallExpr type="int" spelling="add" id="2401201227245"/>
			<CallExpr type="size_t" spelling="safecat" id="2402746801809"/>
			<CallExpr type="size_t" spelling="safecat" id="2402515484477"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403513566974"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2402705087390"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2403202049224"/>
			<DeclRefExpr type="png_uint_32" spelling="mask" id="2404114260584"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401281770318"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400067925895"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402467006035"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401836046037"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402077611280"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401490884834"/>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2401310778583"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400912933028"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403645524324"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401185067492"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400385365382"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400313797119"/>
			<DeclRefExpr type="char *" spelling="name" id="2403607448209"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2403686522542"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2402653503920"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400661183920"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403196786213"/>
			<DeclRefExpr type="char *" spelling="name" id="2402780280403"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2401723971225"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2404106725681"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403096241013"/>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2403163202283"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2404138172335"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401692775967"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402039417414"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400017675322"/>
			<DeclRefExpr type="png_uint_32" spelling="mask" id="2401283420179"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403846321471"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2400871995219"/>
			<StringLiteral type="char [3]" spelling="&quot; +&quot;" id="2402566616713"/>
			<MemberRefExpr type="int" spelling="enable" id="2402711937159"/>
			<MemberRefExpr type="unsigned int" spelling="local_use" id="2400756743050"/>
			<MemberRefExpr type="int (*)(struct image_transform *, const struct image_transform **, png_byte, png_byte)" spelling="add" id="2400721192148"/>
			<MemberRefExpr type="const char *" spelling="name" id="2403154303797"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2400123341668"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2402920646881"/>
			<MemberRefExpr type="unsigned int" spelling="local_use" id="2402321062055"/>
			<MemberRefExpr type="struct image_transform *const" spelling="list" id="2400030664350"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2400974414487"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2404196703522"/>
			<UnexposedExpr type="png_uint_32" spelling="mask" id="2401977570452"/>
			<UnexposedExpr type="int" spelling="enable" id="2402961275951"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401198704338"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2403177715865"/>
			<UnexposedExpr type="unsigned int" spelling="local_use" id="2403152623147"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401573399309"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2402635980695"/>
			<UnexposedExpr type="int (*)(struct image_transform *, const struct image_transform **, png_byte, png_byte)" spelling="add" id="2403168420701"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401712530764"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401528672599"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2403477696526"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403407219709"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403214275760"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2401117733265"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400254977373"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400142974162"/>
			<UnexposedExpr type="char *" spelling="name" id="2401176820290"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403866524454"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400956792027"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2401808536129"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400478132156"/>
			<UnexposedExpr type="char *" spelling="name" id="2402244133583"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403046931383"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2402615423272"/>
			<UnexposedExpr type="const char *" spelling="name" id="2401213247081"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2404055881788"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2400972307767"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401766478637"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2404261321293"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2400073863593"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2402834434386"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400679208707"/>
			<UnexposedExpr type="struct image_transform *" spelling="list" id="2400812728603"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2402480141490"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="counter" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Candidate to add:" comment_scope_start="9130" comment_scope_end="9136">
		<SYMBOLS>
			<CallExpr type="int" spelling="add" id="2401201227245"/>
			<CallExpr type="size_t" spelling="safecat" id="2402746801809"/>
			<CallExpr type="size_t" spelling="safecat" id="2402515484477"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402077611280"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401490884834"/>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2401310778583"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400912933028"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403645524324"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401185067492"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400385365382"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400313797119"/>
			<DeclRefExpr type="char *" spelling="name" id="2403607448209"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2403686522542"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2402653503920"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400661183920"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403196786213"/>
			<DeclRefExpr type="char *" spelling="name" id="2402780280403"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2401723971225"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2404106725681"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403096241013"/>
			<StringLiteral type="char [3]" spelling="&quot; +&quot;" id="2402566616713"/>
			<MemberRefExpr type="int (*)(struct image_transform *, const struct image_transform **, png_byte, png_byte)" spelling="add" id="2400721192148"/>
			<MemberRefExpr type="const char *" spelling="name" id="2403154303797"/>
			<UnexposedExpr type="int (*)(struct image_transform *, const struct image_transform **, png_byte, png_byte)" spelling="add" id="2403168420701"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401712530764"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2401528672599"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2403477696526"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403407219709"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2403214275760"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2401117733265"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400254977373"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400142974162"/>
			<UnexposedExpr type="char *" spelling="name" id="2401176820290"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403866524454"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400956792027"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2401808536129"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400478132156"/>
			<UnexposedExpr type="char *" spelling="name" id="2402244133583"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403046931383"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2402615423272"/>
			<UnexposedExpr type="const char *" spelling="name" id="2401213247081"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2404055881788"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Added, so add to the name too." comment_scope_start="9133" comment_scope_end="9136">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402746801809"/>
			<CallExpr type="size_t" spelling="safecat" id="2402515484477"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400385365382"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400313797119"/>
			<DeclRefExpr type="char *" spelling="name" id="2403607448209"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2403686522542"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2402653503920"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2400661183920"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403196786213"/>
			<DeclRefExpr type="char *" spelling="name" id="2402780280403"/>
			<DeclRefExpr type="size_t" spelling="sizeof_name" id="2401723971225"/>
			<DeclRefExpr type="size_t *" spelling="pos" id="2404106725681"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2403096241013"/>
			<StringLiteral type="char [3]" spelling="&quot; +&quot;" id="2402566616713"/>
			<MemberRefExpr type="const char *" spelling="name" id="2403154303797"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400254977373"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400142974162"/>
			<UnexposedExpr type="char *" spelling="name" id="2401176820290"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403866524454"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2400956792027"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2401808536129"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400478132156"/>
			<UnexposedExpr type="char *" spelling="name" id="2402244133583"/>
			<UnexposedExpr type="size_t" spelling="sizeof_name" id="2403046931383"/>
			<UnexposedExpr type="size_t *" spelling="pos" id="2402615423272"/>
			<UnexposedExpr type="const char *" spelling="name" id="2401213247081"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2404055881788"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Not useful and max&gt;0, so remove it from *this:" comment_scope_start="9140" comment_scope_end="9143">
		<SYMBOLS>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2403163202283"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2404138172335"/>
			<DeclRefExpr type="image_transform *" spelling="list" id="2401692775967"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2400123341668"/>
			<MemberRefExpr type="const struct image_transform *" spelling="next" id="2402920646881"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2400972307767"/>
			<UnexposedExpr type="const struct image_transform *" spelling="next" id="2401766478637"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2404261321293"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2400073863593"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And, since we know it isn't useful, stop it being added again
                * in this run:" comment_scope_start="9144" comment_scope_end="9148">
		<SYMBOLS>
			<DeclRefExpr type="image_transform *" spelling="list" id="2402039417414"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2400017675322"/>
			<MemberRefExpr type="unsigned int" spelling="local_use" id="2402321062055"/>
			<UnexposedExpr type="image_transform *" spelling="list" id="2402834434386"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400679208707"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now if anything was added we have something to do." comment_scope_start="9155" comment_scope_end="9158">
		<SYMBOLS>
			<DeclRefExpr type="const image_transform **" spelling="this" id="2403652326077"/>
			<DeclRefExpr type="image_transform" spelling="image_transform_end" id="2402248907785"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2402911920202"/>
			<UnexposedExpr type="const image_transform **" spelling="this" id="2403453292089"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2403394596020"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Nothing added, but was there anything in there to add?" comment_scope_start="9159" comment_scope_end="9162">
		<SYMBOLS>
			<CallExpr type="int" spelling="image_transform_test_counter" id="2400404357573"/>
			<DeclRefExpr type="int (png_uint_32, unsigned int)" spelling="image_transform_test_counter" id="2402241986020"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2401702746545"/>
			<DeclRefExpr type="unsigned int" spelling="max" id="2401526499553"/>
			<UnexposedExpr type="int (*)(png_uint_32, unsigned int)" spelling="image_transform_test_counter" id="2401303320326"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2403138476259"/>
			<UnexposedExpr type="unsigned int" spelling="max" id="2400677300137"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'max' is currently hardwired to '1'; this should be settable on the
          * command line." comment_scope_start="9186" comment_scope_end="9188"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="max" comment_scope_start="9189" comment_scope_end="9189">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2403924292942"/>
			<DeclRefExpr type="png_uint_32 (const image_transform **, unsigned int, png_uint_32, char *, size_t, size_t *, png_byte, png_byte)" spelling="image_transform_add" id="2404209799621"/>
			<DeclRefExpr type="const image_transform *" spelling="list" id="2401715483053"/>
			<DeclRefExpr type="png_uint_32" spelling="counter" id="2400803341391"/>
			<UnexposedExpr type="png_uint_32 (*)(const image_transform **, unsigned int, png_uint_32, char *, size_t, size_t *, png_byte, png_byte)" spelling="image_transform_add" id="2400415056463"/>
			<UnexposedExpr type="png_uint_32" spelling="counter" id="2402440235046"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The command line can change this to checking interlaced images." comment_scope_start="9195" comment_scope_end="9204">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<CallExpr type="void" spelling="transform_test" id="2402136669345"/>
			<CallExpr type="int" spelling="fail" id="2400729166737"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401034981391"/>
			<DeclRefExpr type="void (png_modifier *, png_uint_32, const image_transform *, const char *const)" spelling="transform_test" id="2401795472216"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402448017229"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400154758877"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402994021457"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2403875030436"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401460102909"/>
			<DeclRefExpr type="const image_transform *" spelling="list" id="2403288543636"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2400200430337"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2402640482022"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401880098418"/>
			<MemberRefExpr type="unsigned int" spelling="repeat" id="2403958805878"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2402479299629"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400450790816"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_uint_32, const image_transform *, const char *const)" spelling="transform_test" id="2401665050582"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404110073110"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400349871738"/>
			<UnexposedExpr type="const image_transform *" spelling="list" id="2403408867576"/>
			<UnexposedExpr type="const char *" spelling="name" id="2400403324471"/>
			<UnexposedExpr type="char *" spelling="name" id="2403831461408"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2400536402832"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400777115059"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlaced"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_TRANSFORMS_SUPPORTED" comment_scope_start="9209" comment_scope_end="9209"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="******************************** GAMMA TESTS *******************************" comment_scope_start="9211" comment_scope_end="9212"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reader callbacks and implementations, where they differ from the standard
 * ones." comment_scope_start="9213" comment_scope_end="9237">
		<SYMBOLS>
			<TypedefDecl type="gamma_display" spelling="gamma_display" id="2401331112115"/>
			<TypeRef type="standard_display" spelling="standard_display" id="2401085707593"/>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_color_16" spelling="png_color_16" id="2401023428895"/>
			<FieldDecl type="standard_display" spelling="this" id="2402093678890"/>
			<FieldDecl type="png_modifier *" spelling="pm" id="2400422676865"/>
			<FieldDecl type="double" spelling="file_gamma" id="2402932283066"/>
			<FieldDecl type="double" spelling="screen_gamma" id="2402708564629"/>
			<FieldDecl type="double" spelling="background_gamma" id="2403108260377"/>
			<FieldDecl type="png_byte" spelling="sbit" id="2403560091615"/>
			<FieldDecl type="int" spelling="threshold_test" id="2400100252172"/>
			<FieldDecl type="int" spelling="use_input_precision" id="2401139870321"/>
			<FieldDecl type="int" spelling="scale16" id="2402279653213"/>
			<FieldDecl type="int" spelling="expand16" id="2401380443992"/>
			<FieldDecl type="int" spelling="do_background" id="2403190916221"/>
			<FieldDecl type="png_color_16" spelling="background_color" id="2402468265912"/>
			<FieldDecl type="double" spelling="maxerrout" id="2403585621114"/>
			<FieldDecl type="double" spelling="maxerrpc" id="2400618184534"/>
			<FieldDecl type="double" spelling="maxerrabs" id="2404068679136"/>
			<StructDecl type="struct gamma_display" spelling="gamma_display" id="2401677152319"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Parameters" comment_scope_start="9220" comment_scope_end="9232">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_color_16" spelling="png_color_16" id="2401023428895"/>
			<FieldDecl type="png_modifier *" spelling="pm" id="2400422676865"/>
			<FieldDecl type="double" spelling="file_gamma" id="2402932283066"/>
			<FieldDecl type="double" spelling="screen_gamma" id="2402708564629"/>
			<FieldDecl type="double" spelling="background_gamma" id="2403108260377"/>
			<FieldDecl type="png_byte" spelling="sbit" id="2403560091615"/>
			<FieldDecl type="int" spelling="threshold_test" id="2400100252172"/>
			<FieldDecl type="int" spelling="use_input_precision" id="2401139870321"/>
			<FieldDecl type="int" spelling="scale16" id="2402279653213"/>
			<FieldDecl type="int" spelling="expand16" id="2401380443992"/>
			<FieldDecl type="int" spelling="do_background" id="2403190916221"/>
			<FieldDecl type="png_color_16" spelling="background_color" id="2402468265912"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Local variables" comment_scope_start="9233" comment_scope_end="9237">
		<SYMBOLS>
			<TypedefDecl type="gamma_display" spelling="gamma_display" id="2401331112115"/>
			<FieldDecl type="double" spelling="maxerrout" id="2403585621114"/>
			<FieldDecl type="double" spelling="maxerrpc" id="2400618184534"/>
			<FieldDecl type="double" spelling="maxerrabs" id="2404068679136"/>
			<StructDecl type="struct gamma_display" spelling="gamma_display" id="2401677152319"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard fields" comment_scope_start="9248" comment_scope_end="9251">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_display_init" id="2400857619044"/>
			<DeclRefExpr type="void (standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2402440038213"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401957922600"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401808709419"/>
			<DeclRefExpr type="png_uint_32" spelling="id" id="2403048461721"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400796581982"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400740752885"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400780655107"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2403160312868"/>
			<UnexposedExpr type="void (*)(standard_display *, png_store *, png_uint_32, int, int)" spelling="standard_display_init" id="2400993211026"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400290779294"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403976815737"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2403444023652"/>
			<UnexposedExpr type="int" spelling="use_update_info" id="2400999419582"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401464835444"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Parameter fields" comment_scope_start="9252" comment_scope_end="9267">
		<SYMBOLS>
			<CallExpr type="void *" spelling="memset" id="2402132710191"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403836989412"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401427947598"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403619672629"/>
			<DeclRefExpr type="double" spelling="file_gamma" id="2400391861472"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401547750661"/>
			<DeclRefExpr type="double" spelling="screen_gamma" id="2404226526422"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400861546811"/>
			<DeclRefExpr type="double" spelling="background_gamma" id="2403327584485"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400014218958"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2403868475686"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403255988417"/>
			<DeclRefExpr type="int" spelling="threshold_test" id="2400454538642"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403375274629"/>
			<DeclRefExpr type="int" spelling="use_input_precision" id="2401768102814"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403343059920"/>
			<DeclRefExpr type="int" spelling="scale16" id="2401136356448"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401023084131"/>
			<DeclRefExpr type="int" spelling="expand16" id="2402192642661"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401637245944"/>
			<DeclRefExpr type="int" spelling="do_background" id="2402240910252"/>
			<DeclRefExpr type="int" spelling="do_background" id="2402110275661"/>
			<DeclRefExpr type="const png_color_16 *" spelling="pointer_to_the_background_color" id="2402685878909"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400657706033"/>
			<DeclRefExpr type="const png_color_16 *" spelling="pointer_to_the_background_color" id="2400175844270"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2400464060779"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400983751770"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402310457695"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403682979499"/>
			<MemberRefExpr type="double" spelling="file_gamma" id="2404200890505"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2402977525721"/>
			<MemberRefExpr type="double" spelling="background_gamma" id="2403086798194"/>
			<MemberRefExpr type="png_byte" spelling="sbit" id="2400302905514"/>
			<MemberRefExpr type="int" spelling="threshold_test" id="2401056257928"/>
			<MemberRefExpr type="int" spelling="use_input_precision" id="2402820510926"/>
			<MemberRefExpr type="int" spelling="scale16" id="2401942464190"/>
			<MemberRefExpr type="int" spelling="expand16" id="2402998970184"/>
			<MemberRefExpr type="int" spelling="do_background" id="2400341637354"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2403735563545"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2403066265527"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2400172101352"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403112562929"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403758933369"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404086089603"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2402103029893"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401793459365"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2402872694101"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402610944784"/>
			<UnexposedExpr type="double" spelling="background_gamma" id="2403295584245"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401301644465"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2403798119744"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400339423530"/>
			<UnexposedExpr type="int" spelling="threshold_test" id="2403398916299"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400176626201"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2402958699740"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402963637153"/>
			<UnexposedExpr type="int" spelling="scale16" id="2402311086182"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403894450808"/>
			<UnexposedExpr type="int" spelling="expand16" id="2400502543069"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403285637399"/>
			<UnexposedExpr type="int" spelling="do_background" id="2402557789151"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401028953123"/>
			<UnexposedExpr type="const png_color_16 *" spelling="pointer_to_the_background_color" id="2403850592931"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403494596467"/>
			<UnexposedExpr type="const png_color_16 *" spelling="pointer_to_the_background_color" id="2402661409343"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2403263034899"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402305154836"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400948455853"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Local variable fields" comment_scope_start="9268" comment_scope_end="9270">
		<SYMBOLS>
			<FunctionDecl type="void (gamma_display *, png_modifier *, png_uint_32, double, double, png_byte, int, int, int, int, int, const png_color_16 *, double)" spelling="gamma_display_init" id="2401078137229"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402258741197"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401286369880"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400717613347"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2402231230719"/>
			<MemberRefExpr type="double" spelling="maxerrpc" id="2401322961991"/>
			<MemberRefExpr type="double" spelling="maxerrabs" id="2403735707553"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400443246491"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400912654236"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403486236837"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reuse the standard stuff as appropriate." comment_scope_start="9275" comment_scope_end="9277">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_part1" id="2401577347210"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2401465079139"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403955175147"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400870595513"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400002925048"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402342122984"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop)" spelling="standard_info_part1" id="2401710369100"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400023626513"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403744399511"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401057635322"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If requested strip 16 to 8 bits - this is handled automagically below
    * because the output bit depth is read from the library.  Note that there
    * are interactions with sBIT but, internally, libpng makes sbit at most
    * PNG_MAX_GAMMA_8 prior to 1.7 when doing the following." comment_scope_start="9278" comment_scope_end="9286">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_scale_16" id="2401099753966"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402992569162"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_scale_16" id="2404222576278"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404229757894"/>
			<MemberRefExpr type="int" spelling="scale16" id="2401622009585"/>
			<UnexposedExpr type="int" spelling="scale16" id="2403937628091"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400700860686"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_scale_16" id="2402821941703"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402165918518"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following works both in 1.5.4 and earlier versions:" comment_scope_start="9287" comment_scope_end="9305">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_expand_16" id="2402484055160"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2404173794696"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_set_expand_16" id="2401516946160"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403883714811"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403451374962"/>
			<MemberRefExpr type="int" spelling="expand16" id="2403359102436"/>
			<MemberRefExpr type="int" spelling="do_background" id="2402363338715"/>
			<UnexposedExpr type="int" spelling="expand16" id="2403831321305"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400746437048"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_set_expand_16" id="2402157515183"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403922507226"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403756923433"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403764752657"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This tests the alpha mode handling, if supported." comment_scope_start="9306" comment_scope_end="9308">
		<SYMBOLS>
			<VarDecl type="int" spelling="mode" id="2401135403771"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401436386105"/>
			<MemberRefExpr type="int" spelling="do_background" id="2400665294358"/>
			<UnexposedExpr type="int" spelling="do_background" id="2402743470736"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400544036729"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="mode" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The gamma value is the output gamma, and is in the standard,
          * non-inverted, representation.  It provides a default for the PNG file
          * gamma, but since the file has a gAMA chunk this does not matter." comment_scope_start="9309" comment_scope_end="9323">
		<SYMBOLS>
			<VarDecl type="const double" spelling="sg" id="2401288846071"/>
			<CallExpr type="void" spelling="png_set_alpha_mode" id="2402431191143"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400755251697"/>
			<DeclRefExpr type="void (png_structrp, int, double)" spelling="png_set_alpha_mode" id="2402229021501"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403393958020"/>
			<DeclRefExpr type="int" spelling="mode" id="2402091687482"/>
			<DeclRefExpr type="const double" spelling="sg" id="2401613203630"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2401376005480"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2400354864318"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400279188088"/>
			<UnexposedExpr type="void (*)(png_structrp, int, double)" spelling="png_set_alpha_mode" id="2402167023711"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402312456043"/>
			<UnexposedExpr type="int" spelling="mode" id="2403215498571"/>
			<UnexposedExpr type="double" spelling="sg" id="2400115059182"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gama"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="However, for the standard Porter-Duff algorithm the output defaults
          * to be linear, so if the test requires non-linear output it must be
          * corrected here." comment_scope_start="9324" comment_scope_end="9336">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_gamma" id="2400592741790"/>
			<DeclRefExpr type="int" spelling="mode" id="2400017451089"/>
			<DeclRefExpr type="const double" spelling="sg" id="2402077159570"/>
			<DeclRefExpr type="void (png_structrp, double, double)" spelling="png_set_gamma" id="2400742185927"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401286848106"/>
			<DeclRefExpr type="const double" spelling="sg" id="2403375060849"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402221950286"/>
			<MemberRefExpr type="double" spelling="file_gamma" id="2402270902318"/>
			<UnexposedExpr type="int" spelling="mode" id="2402270832517"/>
			<UnexposedExpr type="double" spelling="sg" id="2403384466825"/>
			<UnexposedExpr type="void (*)(png_structrp, double, double)" spelling="png_set_gamma" id="2403158607440"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403972435599"/>
			<UnexposedExpr type="double" spelling="sg" id="2400915575696"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2403836765259"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403737951786"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set up gamma processing." comment_scope_start="9345" comment_scope_end="9358">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_gamma" id="2402878849176"/>
			<DeclRefExpr type="void (png_structrp, double, double)" spelling="png_set_gamma" id="2400303708002"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400339875313"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403776685584"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403436657707"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402294359520"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2400536850925"/>
			<MemberRefExpr type="double" spelling="file_gamma" id="2400997058355"/>
			<MemberRefExpr type="int" spelling="do_background" id="2400205512070"/>
			<UnexposedExpr type="void (*)(png_structrp, double, double)" spelling="png_set_gamma" id="2403239022708"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2404074407455"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2401685495849"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403159192181"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2401244289546"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402409769981"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403036344302"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400940156775"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: this assumes the caller provided the correct background gamma!" comment_scope_start="9359" comment_scope_end="9367">
		<SYMBOLS>
			<VarDecl type="const double" spelling="bg" id="2400145292655"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401468944983"/>
			<DeclRefExpr type="void (png_structrp, png_const_color_16p, int, int, double)" spelling="png_set_background" id="2403737695937"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403055539643"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401754997882"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401492286988"/>
			<MemberRefExpr type="double" spelling="background_gamma" id="2401300555800"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2400099803952"/>
			<MemberRefExpr type="int" spelling="do_background" id="2401224270506"/>
			<UnexposedExpr type="double" spelling="background_gamma" id="2403912460333"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404193919357"/>
			<UnexposedExpr type="void (*)(png_structrp, png_const_color_16p, int, int, double)" spelling="png_set_background" id="2401095912160"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2402765747612"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404075008342"/>
			<UnexposedExpr type="int" spelling="do_background" id="2402027682782"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401378999043"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="need_expand" comment_scope_start="9368" comment_scope_end="9368">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_background" id="2403872242603"/>
			<DeclRefExpr type="const double" spelling="bg" id="2400269648322"/>
			<UnexposedExpr type="double" spelling="bg" id="2401731349111"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="need_expand" comment_scope_start="9371" comment_scope_end="9371"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Always do one call, even if use_update_info is 0." comment_scope_start="9381" comment_scope_end="9385">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_read_update_info" id="2402057663399"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_update_info" id="2402860565788"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401123965547"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400308203485"/>
			<DeclRefExpr type="int" spelling="i" id="2401077913184"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_update_info" id="2400794421642"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403895102897"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2401882776372"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now we may get a different cbRow:" comment_scope_start="9387" comment_scope_end="9387"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="images" comment_scope_start="9388" comment_scope_end="9388">
		<SYMBOLS>
			<CallExpr type="void" spelling="standard_info_part2" id="2402873983072"/>
			<DeclRefExpr type="void (standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2403859320586"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401776663689"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401501271832"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402050735284"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400368970819"/>
			<UnexposedExpr type="void (*)(standard_display *, png_const_structp, png_const_infop, int)" spelling="standard_info_part2" id="2402210027654"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401422133764"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402919798131"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401444311170"/>
			<UnexposedExpr type="png_const_infop" spelling="pi" id="2402033018676"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403333088679"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Validate a single component value - the routine gets the input and output
 * sample values as unscaled PNG component values along with a cache of all the
 * information required to validate the values." comment_scope_start="9398" comment_scope_end="9430">
		<SYMBOLS>
			<TypeRef type="png_const_structp" spelling="png_const_structp" id="2404039361659"/>
			<TypeRef type="gamma_display" spelling="gamma_display" id="2402670920995"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<FieldDecl type="png_const_structp" spelling="pp" id="2401538585678"/>
			<FieldDecl type="gamma_display *" spelling="dp" id="2400160864575"/>
			<FieldDecl type="png_byte" spelling="sbit" id="2403766732885"/>
			<FieldDecl type="int" spelling="use_input_precision" id="2400953303618"/>
			<FieldDecl type="int" spelling="do_background" id="2402059331100"/>
			<FieldDecl type="int" spelling="scale16" id="2400672394904"/>
			<FieldDecl type="unsigned int" spelling="sbit_max" id="2400327373208"/>
			<FieldDecl type="unsigned int" spelling="isbit_shift" id="2401910495706"/>
			<FieldDecl type="unsigned int" spelling="outmax" id="2401339915778"/>
			<FieldDecl type="double" spelling="gamma_correction" id="2401209572263"/>
			<FieldDecl type="double" spelling="file_inverse" id="2401274808090"/>
			<FieldDecl type="double" spelling="screen_gamma" id="2402058062529"/>
			<FieldDecl type="double" spelling="screen_inverse" id="2402455086612"/>
			<FieldDecl type="double" spelling="background_red" id="2404248860558"/>
			<FieldDecl type="double" spelling="background_green" id="2400353753186"/>
			<FieldDecl type="double" spelling="background_blue" id="2402904264164"/>
			<FieldDecl type="double" spelling="maxabs" id="2400879157263"/>
			<FieldDecl type="double" spelling="maxpc" id="2401920106506"/>
			<FieldDecl type="double" spelling="maxcalc" id="2402977691302"/>
			<FieldDecl type="double" spelling="maxout" id="2400748356070"/>
			<FieldDecl type="double" spelling="maxout_total" id="2402608522993"/>
			<FieldDecl type="double" spelling="outlog" id="2404076478216"/>
			<FieldDecl type="int" spelling="outquant" id="2400154271637"/>
			<StructDecl type="struct validate_info" spelling="validate_info" id="2404294022256"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Overall correction required." comment_scope_start="9414" comment_scope_end="9414">
		<SYMBOLS>
			<FieldDecl type="double" spelling="gamma_correction" id="2401209572263"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Inverse of file gamma." comment_scope_start="9415" comment_scope_end="9415">
		<SYMBOLS>
			<FieldDecl type="double" spelling="file_inverse" id="2401274808090"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="inverse" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Inverse of screen gamma." comment_scope_start="9417" comment_scope_end="9417">
		<SYMBOLS>
			<FieldDecl type="double" spelling="screen_inverse" id="2402455086612"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="inverse" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Linear background value, red or gray." comment_scope_start="9419" comment_scope_end="9419">
		<SYMBOLS>
			<FieldDecl type="double" spelling="background_red" id="2404248860558"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="red"/>
			<PROBLEM_DOMAIN word="gray"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Total including quantization error" comment_scope_start="9427" comment_scope_end="9427">
		<SYMBOLS>
			<FieldDecl type="double" spelling="maxout_total" id="2402608522993"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This mimics the libpng threshold test, '0' is used to prevent gamma
    * correction in the validation test." comment_scope_start="9456" comment_scope_end="9486">
		<SYMBOLS>
			<VarDecl type="const double" spelling="bg_inverse" id="2401755289983"/>
			<VarDecl type="double" spelling="r" id="2404184730054"/>
			<VarDecl type="double" spelling="g" id="2403982604773"/>
			<VarDecl type="double" spelling="b" id="2403963176223"/>
			<CallExpr type="double" spelling="fabs" id="2402005592495"/>
			<CallExpr type="double" spelling="abserr" id="2402715716778"/>
			<CallExpr type="double" spelling="pcerr" id="2403122766992"/>
			<CallExpr type="double" spelling="calcerr" id="2402925691568"/>
			<CallExpr type="double" spelling="outerr" id="2400311157033"/>
			<CallExpr type="int" spelling="output_quantization_factor" id="2400638824039"/>
			<CallExpr type="double" spelling="outlog" id="2401825602928"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2400029125252"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400425570137"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403132281338"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2404215717284"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2401690425133"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403211117407"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2404159445187"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403505820873"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403342592858"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400519481296"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2402325042510"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401651427472"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2400189649356"/>
			<DeclRefExpr type="double (const png_modifier *, int, int)" spelling="abserr" id="2403906666146"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403642361813"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2400049531530"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403867830371"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403258704194"/>
			<DeclRefExpr type="double (const png_modifier *, int, int)" spelling="pcerr" id="2402337994133"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401762666399"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2403396838573"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2401307583507"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2404027372444"/>
			<DeclRefExpr type="double (const png_modifier *, int, int)" spelling="calcerr" id="2403373988396"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401002204190"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401006672812"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403572506702"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403477646203"/>
			<DeclRefExpr type="double (const png_modifier *, int, int)" spelling="outerr" id="2401058779577"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402230227002"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401306955326"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403403338032"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2401525274499"/>
			<DeclRefExpr type="int (const png_modifier *, int, int)" spelling="output_quantization_factor" id="2403487506296"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401696268181"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2400962978593"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2403854795964"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2400383932047"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2402679414463"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2403964808286"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2401842462648"/>
			<DeclRefExpr type="double (const png_modifier *, int, int)" spelling="outlog" id="2404112491853"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402653193701"/>
			<DeclRefExpr type="int" spelling="in_depth" id="2401859186264"/>
			<DeclRefExpr type="int" spelling="out_depth" id="2402150899575"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402899163811"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402225240169"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402977196829"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402676175548"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401402827054"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400711274498"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2401600907105"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402790247469"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2400612627133"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402741966882"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2400371318841"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2402363440097"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2403282602931"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2400715270677"/>
			<MemberRefExpr type="double" spelling="screen_inverse" id="2402593427909"/>
			<MemberRefExpr type="double" spelling="screen_inverse" id="2401741851577"/>
			<MemberRefExpr type="double" spelling="screen_gamma" id="2402905486895"/>
			<MemberRefExpr type="int" spelling="use_input_precision" id="2401274802018"/>
			<MemberRefExpr type="int" spelling="use_input_precision" id="2403621760731"/>
			<MemberRefExpr type="unsigned int" spelling="outmax" id="2403748949111"/>
			<MemberRefExpr type="double" spelling="maxabs" id="2400344858256"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400604963436"/>
			<MemberRefExpr type="double" spelling="maxpc" id="2403653555371"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403334825406"/>
			<MemberRefExpr type="double" spelling="maxcalc" id="2403675120468"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403123256879"/>
			<MemberRefExpr type="double" spelling="maxout" id="2402767775029"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400549090947"/>
			<MemberRefExpr type="int" spelling="outquant" id="2401902080405"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403780469826"/>
			<MemberRefExpr type="double" spelling="maxout_total" id="2403461039218"/>
			<MemberRefExpr type="double" spelling="maxout" id="2404190519847"/>
			<MemberRefExpr type="int" spelling="outquant" id="2404103526446"/>
			<MemberRefExpr type="double" spelling="outlog" id="2402128015216"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400900039993"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401901408328"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402058974399"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402140744290"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401094830120"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2400822901574"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401129260433"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2401185407482"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400476829291"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402665826703"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400666454720"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2400916486282"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403404373955"/>
			<MemberRefExpr type="int" spelling="do_background" id="2401244119823"/>
			<MemberRefExpr type="int" spelling="do_background" id="2401879380240"/>
			<MemberRefExpr type="int" spelling="do_background" id="2403132030283"/>
			<MemberRefExpr type="double" spelling="background_gamma" id="2403082015922"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2403927288444"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2400237378830"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400773526074"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2401404571326"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2402069320681"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2404051107489"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401379446330"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401444274379"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400427060213"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2402369583689"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400511846146"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401072053748"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2400074927782"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404208446661"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2403221500416"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400741237183"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2402682190219"/>
			<UnexposedExpr type="double (*)(const png_modifier *, int, int)" spelling="abserr" id="2403746404753"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2403776928105"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401763557769"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401927929879"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2403807407271"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2401508791804"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400442563620"/>
			<UnexposedExpr type="double (*)(const png_modifier *, int, int)" spelling="pcerr" id="2402299862079"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401998857194"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401082522940"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400015522192"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2403763482134"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403386606324"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400372777670"/>
			<UnexposedExpr type="double (*)(const png_modifier *, int, int)" spelling="calcerr" id="2402613471007"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402653477229"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402442656997"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401279979883"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2401520077408"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2401747897373"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401138829037"/>
			<UnexposedExpr type="double (*)(const png_modifier *, int, int)" spelling="outerr" id="2401661153243"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402264017099"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403727316681"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401668728403"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2402243024709"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2402072734546"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2402578482877"/>
			<UnexposedExpr type="int (*)(const png_modifier *, int, int)" spelling="output_quantization_factor" id="2400481396964"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2402621864772"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402501726508"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403007465197"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2401338706269"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2403398557611"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2402396451610"/>
			<UnexposedExpr type="double" spelling="maxout" id="2402721524403"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400421671227"/>
			<UnexposedExpr type="double" spelling="outquant" id="2403939134498"/>
			<UnexposedExpr type="int" spelling="outquant" id="2400999789034"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2403509614806"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2404070521534"/>
			<UnexposedExpr type="double (*)(const png_modifier *, int, int)" spelling="outlog" id="2401148591925"/>
			<UnexposedExpr type="const png_modifier *" spelling="pm" id="2401345331694"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403917617668"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403957174447"/>
			<UnexposedExpr type="int" spelling="in_depth" id="2402175589586"/>
			<UnexposedExpr type="int" spelling="out_depth" id="2400045286895"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402486519032"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400403552821"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401612307256"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401845725406"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400189678966"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404006501188"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2402131865664"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400816469393"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401108551801"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403025324999"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404042575460"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400652259388"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402132752522"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400292867827"/>
			<UnexposedExpr type="int" spelling="has_tRNS" id="2402898600529"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400432139025"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401798624304"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400587593731"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401403910957"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401911740627"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400280551203"/>
			<UnexposedExpr type="double" spelling="background_gamma" id="2400444958805"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401081752830"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Caller must at least put the gray value into the red channel" comment_scope_start="9487" comment_scope_end="9492">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="r" id="2401875256016"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403450608693"/>
			<DeclRefExpr type="double" spelling="r" id="2403016375065"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401461821876"/>
			<DeclRefExpr type="double" spelling="g" id="2403500148877"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402091848559"/>
			<DeclRefExpr type="double" spelling="g" id="2401894077627"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2402011872760"/>
			<DeclRefExpr type="double" spelling="b" id="2401130756352"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403907520279"/>
			<DeclRefExpr type="double" spelling="b" id="2401805096256"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401968938400"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2401142317784"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2400064680094"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2400745829285"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2402200092114"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2400900171375"/>
			<MemberRefExpr type="png_color_16" spelling="background_color" id="2401254951126"/>
			<UnexposedExpr type="double" spelling="red" id="2402922290276"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2401449355178"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401098099104"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401421935243"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400569546304"/>
			<UnexposedExpr type="double" spelling="green" id="2402590120168"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2402099098788"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403110934470"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402082253232"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2403737676971"/>
			<UnexposedExpr type="double" spelling="blue" id="2400650335497"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2400597147216"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400518690719"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402585751489"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400679899665"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="put" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="red"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="libpng doesn't do this optimization, if we do pngvalid will fail." comment_scope_start="9493" comment_scope_end="9506">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2401654652734"/>
			<CallExpr type="double" spelling="pow" id="2402450928216"/>
			<CallExpr type="double" spelling="pow" id="2400908192985"/>
			<DeclRefExpr type="double" spelling="r" id="2400044573926"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403440069104"/>
			<DeclRefExpr type="double" spelling="r" id="2400435291307"/>
			<DeclRefExpr type="const double" spelling="bg_inverse" id="2402615959525"/>
			<DeclRefExpr type="double" spelling="g" id="2400377860812"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400892089544"/>
			<DeclRefExpr type="double" spelling="g" id="2401685032396"/>
			<DeclRefExpr type="const double" spelling="bg_inverse" id="2401525521732"/>
			<DeclRefExpr type="double" spelling="b" id="2402237597364"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2404008878295"/>
			<DeclRefExpr type="double" spelling="b" id="2404073995955"/>
			<DeclRefExpr type="const double" spelling="bg_inverse" id="2402934080928"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2402168630094"/>
			<DeclRefExpr type="double" spelling="r" id="2403399514900"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2404081983674"/>
			<DeclRefExpr type="double" spelling="g" id="2402750341049"/>
			<DeclRefExpr type="validate_info *" spelling="vi" id="2400906037040"/>
			<DeclRefExpr type="double" spelling="b" id="2401238224391"/>
			<MemberRefExpr type="double" spelling="background_red" id="2402521082007"/>
			<MemberRefExpr type="double" spelling="background_green" id="2401780078766"/>
			<MemberRefExpr type="double" spelling="background_blue" id="2401315892435"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401933353377"/>
			<UnexposedExpr type="double" spelling="r" id="2403395952604"/>
			<UnexposedExpr type="double" spelling="bg_inverse" id="2400477807746"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401397434367"/>
			<UnexposedExpr type="double" spelling="g" id="2402124420696"/>
			<UnexposedExpr type="double" spelling="bg_inverse" id="2401395721102"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403195633202"/>
			<UnexposedExpr type="double" spelling="b" id="2404149788818"/>
			<UnexposedExpr type="double" spelling="bg_inverse" id="2402343535737"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2401022177129"/>
			<UnexposedExpr type="double" spelling="r" id="2403271566558"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2400570039810"/>
			<UnexposedExpr type="double" spelling="g" id="2402286189211"/>
			<UnexposedExpr type="validate_info *" spelling="vi" id="2403466182783"/>
			<UnexposedExpr type="double" spelling="b" id="2403012447901"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do not expect any background processing" comment_scope_start="9508" comment_scope_end="9508"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This function handles composition of a single non-alpha component.  The
 * argument is the input sample value, in the range 0..1, and the alpha value.
 * The result is the composed, linear, input sample.  If alpha is less than zero
 * this is the alpha component and the function should not be called!" comment_scope_start="9525" comment_scope_end="9539">
		<SYMBOLS>
			<ParmDecl type="int" spelling="do_background" id="2400846755812"/>
			<ParmDecl type="double" spelling="input_sample" id="2403273370829"/>
			<ParmDecl type="double" spelling="alpha" id="2403102152355"/>
			<ParmDecl type="double" spelling="background" id="2401732168985"/>
			<ParmDecl type="int *" spelling="compose" id="2403727017896"/>
			<DeclRefExpr type="int" spelling="do_background" id="2402827045287"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400200566293"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="composed" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard PNG background processing." comment_scope_start="9540" comment_scope_end="9552">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="alpha" id="2402256622696"/>
			<DeclRefExpr type="double" spelling="alpha" id="2401818233665"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403546520823"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402074854598"/>
			<DeclRefExpr type="double" spelling="alpha" id="2400031611970"/>
			<DeclRefExpr type="double" spelling="background" id="2402597192603"/>
			<DeclRefExpr type="double" spelling="alpha" id="2400646825575"/>
			<DeclRefExpr type="int *" spelling="compose" id="2400724783064"/>
			<DeclRefExpr type="int *" spelling="compose" id="2401376779802"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2401233518680"/>
			<DeclRefExpr type="double" spelling="background" id="2400320638633"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403682628695"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403137312032"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2403609635831"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400007946833"/>
			<UnexposedExpr type="double" spelling="background" id="2402176354687"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401451629904"/>
			<UnexposedExpr type="int *" spelling="compose" id="2401075783274"/>
			<UnexposedExpr type="int *" spelling="compose" id="2403711160724"/>
			<UnexposedExpr type="double" spelling="background" id="2401073300983"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The components are premultiplied in either case and the output is
          * gamma encoded (to get standard Porter-Duff we expect the output
          * gamma to be set to 1.0!)" comment_scope_start="9559" comment_scope_end="9563"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The optimization is that the partial-alpha entries are linear
          * while the opaque pixels are gamma encoded, but this only affects the
          * output encoding." comment_scope_start="9564" comment_scope_end="9579">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="alpha" id="2400258780701"/>
			<DeclRefExpr type="double" spelling="alpha" id="2402551807657"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402412612490"/>
			<DeclRefExpr type="double" spelling="alpha" id="2404150326075"/>
			<DeclRefExpr type="int *" spelling="compose" id="2400589780784"/>
			<DeclRefExpr type="int *" spelling="compose" id="2401619284712"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402796976157"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401424691536"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401275198431"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400351919611"/>
			<UnexposedExpr type="int *" spelling="compose" id="2402013997883"/>
			<UnexposedExpr type="int *" spelling="compose" id="2400770535299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Standard cases where no compositing is done (so the component
          * value is already correct.)" comment_scope_start="9584" comment_scope_end="9591">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="alpha" id="2402673249588"/>
			<DeclRefExpr type="double" spelling="background" id="2401300541383"/>
			<DeclRefExpr type="int *" spelling="compose" id="2402983984503"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403179204960"/>
			<UnexposedExpr type="double" spelling="background" id="2403562143589"/>
			<UnexposedExpr type="int *" spelling="compose" id="2403365126101"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This API returns the encoded *input* component, in the range 0..1" comment_scope_start="9596" comment_scope_end="9599">
		<SYMBOLS>
			<TypeRef type="validate_info" spelling="validate_info" id="2400490351217"/>
			<ParmDecl type="const char *" spelling="name" id="2400290457276"/>
			<ParmDecl type="const validate_info *" spelling="vi" id="2402647804662"/>
			<ParmDecl type="unsigned int" spelling="id" id="2400852642615"/>
			<ParmDecl type="unsigned int" spelling="od" id="2400464130242"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="&lt;0 for the alpha channel itself" comment_scope_start="9600" comment_scope_end="9600">
		<SYMBOLS>
			<ParmDecl type="const double" spelling="alpha" id="2402358691159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="component background value" comment_scope_start="9601" comment_scope_end="9601">
		<SYMBOLS>
			<ParmDecl type="const double" spelling="background" id="2403056605802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First check on the 'perfect' result obtained from the digitized input
    * value, id, and compare this against the actual digitized result, 'od'.
    * 'i' is the input result in the range 0..1:" comment_scope_start="9610" comment_scope_end="9615">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="i" id="2402353151238"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2402947551828"/>
			<DeclRefExpr type="double" spelling="i" id="2402366859527"/>
			<DeclRefExpr type="unsigned int" spelling="sbit_max" id="2401525450123"/>
			<UnexposedExpr type="double" spelling="isbit" id="2400924860091"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2403380580308"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2402554387910"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2402393368320"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for the fast route: if we don't do any background composition or if
    * this is the alpha channel ('alpha' &lt; 0) or if the pixel is opaque then
    * just use the gamma_correction field to correct to the final output gamma." comment_scope_start="9616" comment_scope_end="9619"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="opaque pixel component" comment_scope_start="9620" comment_scope_end="9620">
		<SYMBOLS>
			<DeclRefExpr type="const double" spelling="alpha" id="2403006950701"/>
			<DeclRefExpr type="int" spelling="do_background" id="2402456649002"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402695472787"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403617812398"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha channel" comment_scope_start="9624" comment_scope_end="9624">
		<SYMBOLS>
			<DeclRefExpr type="const double" spelling="alpha" id="2401113136177"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402123367096"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then get the gamma corrected version of 'i' and compare to 'od', any
       * error less than .5 is insignificant - just quantization of the output
       * value to the nearest digital value (nevertheless the error is still
       * recorded - it's interesting ;-)" comment_scope_start="9630" comment_scope_end="9637">
		<SYMBOLS>
			<VarDecl type="double" spelling="encoded_sample" id="2400369209230"/>
			<VarDecl type="double" spelling="encoded_error" id="2401784987035"/>
			<DeclRefExpr type="double" spelling="i" id="2402188602977"/>
			<UnexposedExpr type="double" spelling="i" id="2401940801500"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha less than 0 indicates the alpha channel, which is always linear" comment_scope_start="9638" comment_scope_end="9651">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2404048027380"/>
			<CallExpr type="double" spelling="fabs" id="2401811300638"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400397112044"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403989791265"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2404188060247"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402724609863"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2402354479255"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402622487213"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401542739441"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401506510206"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2401120701289"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2400486781196"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2401387177197"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401919376326"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2400751459827"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400982600224"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403791730408"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2403364567485"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2404011284694"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403635883433"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2400813103113"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403114309266"/>
			<DeclRefExpr type="double" spelling="i" id="2402756903463"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2400382875309"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2403251943235"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2403129809398"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2400853338070"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2402675039370"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2400199737213"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2402629205578"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2402541575413"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403898387405"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2403253005310"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403368458185"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2400363486683"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2402676355364"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2403422404892"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2404251679629"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401319228699"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402953469126"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2403843337699"/>
			<UnexposedExpr type="double" spelling="od" id="2403390353225"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2400027889149"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2404133366793"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2402401764557"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2402589908255"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403182960687"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403448592965"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404032171373"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400874019058"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2401385765942"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2400539504094"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2403512488396"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403490102769"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2400814164294"/>
			<UnexposedExpr type="double" spelling="outlog" id="2403914359079"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400028255914"/>
			<UnexposedExpr type="double" spelling="i" id="2402580711078"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The slow route - attempt to do linear calculations." comment_scope_start="9653" comment_scope_end="9661"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There may be an error, or background processing is required, so calculate
    * the actual sample values - unencoded light intensity values.  Note that in
    * practice these are not completely unencoded because they include a
    * 'viewing correction' to decrease or (normally) increase the perceptual
    * contrast of the image.  There's nothing we can do about this - we don't
    * know what it is - so assume the unencoded value is perceptually linear." comment_scope_start="9653" comment_scope_end="9661"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In range 0..1" comment_scope_start="9662" comment_scope_end="9662">
		<SYMBOLS>
			<VarDecl type="double" spelling="input_sample" id="2402566898495"/>
			<DeclRefExpr type="double" spelling="i" id="2403852146437"/>
			<UnexposedExpr type="double" spelling="i" id="2401364508522"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set to one if composition done" comment_scope_start="9665" comment_scope_end="9665">
		<SYMBOLS>
			<VarDecl type="int" spelling="compose" id="2402928481879"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set if encoded to screen gamma" comment_scope_start="9666" comment_scope_end="9666">
		<SYMBOLS>
			<VarDecl type="int" spelling="output_is_encoded" id="2400274870070"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check maximum error values" comment_scope_start="9667" comment_scope_end="9667">
		<SYMBOLS>
			<VarDecl type="int" spelling="log_max_error" id="2401115632850"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Reason test passes (or 0 for fail)" comment_scope_start="9668" comment_scope_end="9668">
		<SYMBOLS>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2400731636560"/>
			<VarDecl type="png_const_charp" spelling="pass" id="2401616198669"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Convert to linear light (with the above caveat.)  The alpha channel is
       * already linear." comment_scope_start="9670" comment_scope_end="9687">
		<SYMBOLS>
			<VarDecl type="int" spelling="tcompose" id="2402759890088"/>
			<CallExpr type="double" spelling="pow" id="2402119923027"/>
			<CallExpr type="double" spelling="gamma_component_compose" id="2402971412946"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402044093328"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403495187092"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403591054120"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400783916454"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400606005504"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404212803424"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2403681684437"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400674518486"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2403190562058"/>
			<DeclRefExpr type="int" spelling="do_background" id="2403694401833"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403586404393"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2403068726913"/>
			<DeclRefExpr type="const double" spelling="background" id="2402576362691"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2403488133602"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2402259229345"/>
			<DeclRefExpr type="int" spelling="compose" id="2403405867890"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2404257892192"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2400844442355"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403590672521"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2401150993928"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401596775865"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403686663419"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401172977931"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2400912911807"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400198880953"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2400537312555"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403240632930"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2400266631070"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403636877505"/>
			<UnexposedExpr type="double" spelling="background" id="2403208755381"/>
			<UnexposedExpr type="int" spelling="tcompose" id="2403072955654"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Handle the compose processing:" comment_scope_start="9680" comment_scope_end="9687">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_compose" id="2402971412946"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2403681684437"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400674518486"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2403190562058"/>
			<DeclRefExpr type="int" spelling="do_background" id="2403694401833"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403586404393"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2403068726913"/>
			<DeclRefExpr type="const double" spelling="background" id="2402576362691"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2403488133602"/>
			<DeclRefExpr type="int" spelling="tcompose" id="2402259229345"/>
			<DeclRefExpr type="int" spelling="compose" id="2403405867890"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2400537312555"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403240632930"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2400266631070"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403636877505"/>
			<UnexposedExpr type="double" spelling="background" id="2403208755381"/>
			<UnexposedExpr type="int" spelling="tcompose" id="2403072955654"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And similarly for the output value, but we need to check the background
       * handling to linearize it correctly." comment_scope_start="9689" comment_scope_end="9696">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="output" id="2401650967810"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2404049712991"/>
			<DeclRefExpr type="double" spelling="output" id="2403997998684"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2402968828993"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403872944092"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400468795477"/>
			<MemberRefExpr type="const double" spelling="screen_gamma" id="2403720571603"/>
			<UnexposedExpr type="double" spelling="od" id="2402223729451"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2402299193281"/>
			<UnexposedExpr type="double" spelling="outmax" id="2400136984080"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400900455380"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2400180500371"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401213717385"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The alpha channel" comment_scope_start="9697" comment_scope_end="9697">
		<SYMBOLS>
			<DeclRefExpr type="const double" spelling="alpha" id="2401790122883"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400894642071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In all other cases the output alpha channel is linear already,
             * don't log errors here, they are much larger in linear data." comment_scope_start="9703" comment_scope_end="9708">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2400370028662"/>
			<DeclRefExpr type="int" spelling="log_max_error" id="2401637160417"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A component" comment_scope_start="9712" comment_scope_end="9712"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="the optimized case - linear output" comment_scope_start="9715" comment_scope_end="9715">
		<SYMBOLS>
			<DeclRefExpr type="const double" spelling="alpha" id="2403103414318"/>
			<UnexposedExpr type="double" spelling="alpha" id="2404079674228"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="optimized" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Calculate (or recalculate) the encoded_sample value and repeat the
       * check above (unnecessary if we took the fast route, but harmless.)" comment_scope_start="9726" comment_scope_end="9735">
		<SYMBOLS>
			<CallExpr type="double" spelling="pow" id="2403267512457"/>
			<CallExpr type="double" spelling="fabs" id="2400570533192"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401148268834"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403046328270"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2400831333428"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2403189850567"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2400199642652"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2403941129989"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401393894423"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2400119717661"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401912151912"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2400954095299"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403698765508"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2400311108615"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401519801282"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2400508728483"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2400281510470"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2404163618326"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401139742770"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400142596480"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2400207907183"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401957236194"/>
			<UnexposedExpr type="double" spelling="outmax" id="2403134805774"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2403904442938"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2400200624056"/>
			<UnexposedExpr type="double" spelling="od" id="2400225779010"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2400440907283"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400789313040"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't log errors in the alpha channel, or the 'optimized' case,
       * neither are significant to the overall perception." comment_scope_start="9736" comment_scope_end="9746">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="log_max_error" id="2402163859769"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2403893394041"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400563644314"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401661497704"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2402035370897"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2402207354301"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403872635343"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2403290837033"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402835334708"/>
			<DeclRefExpr type="double" spelling="i" id="2403158895722"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2403294866796"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2401987013983"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2401543546487"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2403314803948"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2400759424862"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2403903088453"/>
			<UnexposedExpr type="int" spelling="log_max_error" id="2404280591364"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2402495936224"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2403546306235"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400736812589"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400442304021"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402083684440"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401073063063"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2403243848415"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2400084443168"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2402474585559"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401437609407"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2402389904432"/>
			<UnexposedExpr type="double" spelling="outlog" id="2400368491706"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402767021603"/>
			<UnexposedExpr type="double" spelling="i" id="2400645467701"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="optimized" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test passed but error is bigger than the log limit, record why the
          * test passed:" comment_scope_start="9747" comment_scope_end="9751">
		<SYMBOLS>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402847267484"/>
			<StringLiteral type="char [19]" spelling="&quot;less than maxout:\n&quot;" id="2401936128983"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bigger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="i: the original input value in the range 0..1
       *
       * pngvalid calculations:
       *  input_sample: linear result; i linearized and composed, range 0..1
       *  encoded_sample: encoded result; input_sample scaled to output bit depth
       *
       * libpng calculations:
       *  output: linear result; od scaled to 0..1 and linearized
       *  od: encoded result from libpng" comment_scope_start="9753" comment_scope_end="9771">
		<SYMBOLS>
			<CallExpr type="double" spelling="fabs" id="2400973188508"/>
			<DeclRefExpr type="double" spelling="error" id="2401232185355"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403968931360"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2401764939748"/>
			<DeclRefExpr type="double" spelling="output" id="2403291205867"/>
			<DeclRefExpr type="int" spelling="log_max_error" id="2400174350206"/>
			<DeclRefExpr type="double" spelling="error" id="2401992175130"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400396034833"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401983119480"/>
			<DeclRefExpr type="double" spelling="error" id="2401216064437"/>
			<MemberRefExpr type="double" spelling="maxerrabs" id="2402242705701"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2401365011965"/>
			<MemberRefExpr type="double" spelling="maxerrabs" id="2401872819459"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2402088543077"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2403877373330"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2402067574066"/>
			<UnexposedExpr type="double" spelling="output" id="2403709755633"/>
			<UnexposedExpr type="int" spelling="log_max_error" id="2403474516727"/>
			<UnexposedExpr type="double" spelling="error" id="2402328955611"/>
			<UnexposedExpr type="double" spelling="maxerrabs" id="2401662471759"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402368389018"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400708018349"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401468223069"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403949435951"/>
			<UnexposedExpr type="double" spelling="error" id="2403602994203"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="composed" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now we have the numbers for real errors, both absolute values as as a
       * percentage of the correct value (output):" comment_scope_start="9753" comment_scope_end="9771">
		<SYMBOLS>
			<CallExpr type="double" spelling="fabs" id="2400973188508"/>
			<DeclRefExpr type="double" spelling="error" id="2401232185355"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2403968931360"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2401764939748"/>
			<DeclRefExpr type="double" spelling="output" id="2403291205867"/>
			<DeclRefExpr type="int" spelling="log_max_error" id="2400174350206"/>
			<DeclRefExpr type="double" spelling="error" id="2401992175130"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400396034833"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401983119480"/>
			<DeclRefExpr type="double" spelling="error" id="2401216064437"/>
			<MemberRefExpr type="double" spelling="maxerrabs" id="2402242705701"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2401365011965"/>
			<MemberRefExpr type="double" spelling="maxerrabs" id="2401872819459"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2402088543077"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2403877373330"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2402067574066"/>
			<UnexposedExpr type="double" spelling="output" id="2403709755633"/>
			<UnexposedExpr type="int" spelling="log_max_error" id="2403474516727"/>
			<UnexposedExpr type="double" spelling="error" id="2402328955611"/>
			<UnexposedExpr type="double" spelling="maxerrabs" id="2401662471759"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402368389018"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400708018349"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401468223069"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403949435951"/>
			<UnexposedExpr type="double" spelling="error" id="2403602994203"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="real" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following is an attempt to ignore the tendency of quantization to
       * dominate the percentage errors for lower result values:" comment_scope_start="9772" comment_scope_end="9780">
		<SYMBOLS>
			<VarDecl type="double" spelling="percentage_error" id="2400991658362"/>
			<DeclRefExpr type="int" spelling="log_max_error" id="2403703057108"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403402256853"/>
			<DeclRefExpr type="double" spelling="error" id="2400275131489"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400518325668"/>
			<DeclRefExpr type="double" spelling="percentage_error" id="2402678918914"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401578504346"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402840836506"/>
			<DeclRefExpr type="double" spelling="percentage_error" id="2401258061620"/>
			<MemberRefExpr type="double" spelling="maxerrpc" id="2403167427472"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2402985475196"/>
			<MemberRefExpr type="double" spelling="maxerrpc" id="2401216969712"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2403370207160"/>
			<UnexposedExpr type="int" spelling="log_max_error" id="2400755562803"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2402848885630"/>
			<UnexposedExpr type="double" spelling="error" id="2403434026396"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2403577009891"/>
			<UnexposedExpr type="double" spelling="percentage_error" id="2400927221749"/>
			<UnexposedExpr type="double" spelling="maxerrpc" id="2402044562126"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401523152946"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403463871726"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401069748313"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403116094740"/>
			<UnexposedExpr type="double" spelling="percentage_error" id="2403531879266"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now calculate the digitization limits for 'encoded_sample' using the
       * 'max' values.  Note that maxout is in the encoded space but maxpc and
       * maxabs are in linear light space.
       *
       * First find the maximum error in linear light space, range 0..1:" comment_scope_start="9782" comment_scope_end="9834">
		<SYMBOLS>
			<VarDecl type="double" spelling="tmp" id="2401830885151"/>
			<VarDecl type="double" spelling="low_value" id="2400103423665"/>
			<VarDecl type="double" spelling="high_value" id="2401617701629"/>
			<CallExpr type="double" spelling="pow" id="2403955087406"/>
			<CallExpr type="double" spelling="ceil" id="2403059005789"/>
			<CallExpr type="double" spelling="pow" id="2402125375514"/>
			<CallExpr type="double" spelling="floor" id="2403612086003"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400558579676"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403471474150"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403090212561"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403323736926"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401152009590"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401691689014"/>
			<DeclRefExpr type="int" spelling="compose" id="2401936353137"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401902184487"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404085215476"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403423753855"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400877239283"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2401835788910"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2403311052567"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402608276948"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2400435914854"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402820578173"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401745475281"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402837828959"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402052463104"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2401872480541"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402290188506"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403705253109"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402053596715"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401199008103"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402911295082"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403155694975"/>
			<DeclRefExpr type="double" spelling="low_value" id="2403747024039"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403665489268"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403856430671"/>
			<DeclRefExpr type="double" spelling="low_value" id="2401257900536"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2400032538188"/>
			<DeclRefExpr type="double (double)" spelling="ceil" id="2400263614264"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403372582788"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404189042817"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403463592849"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2401788123208"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2402175144663"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401690164990"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400920741874"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2402634372085"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2400517669775"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402649351112"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403980977801"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2403029459742"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400505652764"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2400769149656"/>
			<DeclRefExpr type="double" spelling="high_value" id="2402034068842"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401483649248"/>
			<DeclRefExpr type="double" spelling="high_value" id="2403307272775"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400443259028"/>
			<DeclRefExpr type="double" spelling="high_value" id="2400467865044"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403669888601"/>
			<DeclRefExpr type="double" spelling="high_value" id="2400249146166"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2402254798491"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2402680430136"/>
			<DeclRefExpr type="double" spelling="high_value" id="2400747102849"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2403172501744"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2403769045012"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2401014788989"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402661808073"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402600144276"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2401295550766"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403667469329"/>
			<MemberRefExpr type="const double" spelling="maxpc" id="2402131267758"/>
			<MemberRefExpr type="const double" spelling="maxabs" id="2400644199551"/>
			<MemberRefExpr type="const double" spelling="maxabs" id="2402546294971"/>
			<MemberRefExpr type="const double" spelling="maxcalc" id="2401040023389"/>
			<MemberRefExpr type="const double" spelling="maxcalc" id="2404150600729"/>
			<MemberRefExpr type="const double" spelling="maxout" id="2401527535566"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2401915419217"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2400672574856"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2401393368396"/>
			<MemberRefExpr type="const double" spelling="maxout" id="2400726204557"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2403293420743"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2402306554353"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2401736084011"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401023524978"/>
			<UnexposedExpr type="double" spelling="maxpc" id="2401133490478"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401472540360"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400520783706"/>
			<UnexposedExpr type="double" spelling="maxabs" id="2401978334074"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403914679427"/>
			<UnexposedExpr type="double" spelling="maxabs" id="2403292167539"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401143541077"/>
			<UnexposedExpr type="int" spelling="compose" id="2404272779017"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403051786933"/>
			<UnexposedExpr type="double" spelling="maxcalc" id="2400351691771"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403611751983"/>
			<UnexposedExpr type="double" spelling="maxcalc" id="2401903514596"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401435146835"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400635293461"/>
			<UnexposedExpr type="double" spelling="maxout" id="2401564774324"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400000451883"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2400543868138"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401168160643"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403475265527"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2402119300600"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400191502412"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2401685570643"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402200862720"/>
			<UnexposedExpr type="double" spelling="low_value" id="2401170510212"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403249876440"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403881409539"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402758167969"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402770259622"/>
			<UnexposedExpr type="double" spelling="low_value" id="2402699724327"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2403793663796"/>
			<UnexposedExpr type="double" spelling="low_value" id="2401367972963"/>
			<UnexposedExpr type="double (*)(double)" spelling="ceil" id="2402658141396"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2401088262351"/>
			<UnexposedExpr type="double" spelling="outquant" id="2402532663085"/>
			<UnexposedExpr type="int" spelling="outquant" id="2402826371172"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401273266010"/>
			<UnexposedExpr type="double" spelling="outquant" id="2402112136342"/>
			<UnexposedExpr type="int" spelling="outquant" id="2400336550344"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401186594280"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400719713686"/>
			<UnexposedExpr type="double" spelling="maxout" id="2403795861396"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400356373837"/>
			<UnexposedExpr type="double" spelling="es_hi" id="2402636764118"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401984607133"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400199264138"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401265487339"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400513352703"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2403180685278"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402958566349"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2402138472536"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402229635845"/>
			<UnexposedExpr type="double" spelling="high_value" id="2402019267280"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2401260595405"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403961194216"/>
			<UnexposedExpr type="double" spelling="outmax" id="2403655656307"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402297615282"/>
			<UnexposedExpr type="double" spelling="high_value" id="2400635038921"/>
			<UnexposedExpr type="double" spelling="es_hi" id="2401769432641"/>
			<UnexposedExpr type="double" spelling="high_value" id="2402563955436"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2400741434135"/>
			<UnexposedExpr type="double" spelling="es_hi" id="2403526383810"/>
			<UnexposedExpr type="double" spelling="outquant" id="2402151279145"/>
			<UnexposedExpr type="int" spelling="outquant" id="2403680371775"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400115450731"/>
			<UnexposedExpr type="double" spelling="outquant" id="2401223061533"/>
			<UnexposedExpr type="int" spelling="outquant" id="2402915476234"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402388972071"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401464418014"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400901939733"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If 'compose' is true the composition was done in linear space using
          * integer arithmetic.  This introduces an extra error of +/- 0.5 (at
          * least) in the integer space used.  'maxcalc' records this, taking
          * into account the possibility that even for 16 bit output 8 bit space
          * may have been used." comment_scope_start="9791" comment_scope_end="9798">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="compose" id="2401936353137"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401902184487"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404085215476"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403423753855"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400877239283"/>
			<MemberRefExpr type="const double" spelling="maxcalc" id="2401040023389"/>
			<MemberRefExpr type="const double" spelling="maxcalc" id="2404150600729"/>
			<UnexposedExpr type="int" spelling="compose" id="2404272779017"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403051786933"/>
			<UnexposedExpr type="double" spelling="maxcalc" id="2400351691771"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403611751983"/>
			<UnexposedExpr type="double" spelling="maxcalc" id="2401903514596"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401435146835"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="integer" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="introduces" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="integer" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The 'maxout' value refers to the encoded result, to compare with
          * this encode input_sample adjusted by the maximum error (tmp) above." comment_scope_start="9799" comment_scope_end="9811">
		<SYMBOLS>
			<VarDecl type="double" spelling="low_value" id="2400103423665"/>
			<CallExpr type="double" spelling="pow" id="2403955087406"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2401835788910"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2403311052567"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402608276948"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2400435914854"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402820578173"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401745475281"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2402837828959"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402052463104"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2401872480541"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402290188506"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2403705253109"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402053596715"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401199008103"/>
			<DeclRefExpr type="double" spelling="low_value" id="2402911295082"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403155694975"/>
			<DeclRefExpr type="double" spelling="low_value" id="2403747024039"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403665489268"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403856430671"/>
			<DeclRefExpr type="double" spelling="low_value" id="2401257900536"/>
			<MemberRefExpr type="const double" spelling="maxout" id="2401527535566"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2401915419217"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400635293461"/>
			<UnexposedExpr type="double" spelling="maxout" id="2401564774324"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400000451883"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2400543868138"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401168160643"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403475265527"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2402119300600"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400191502412"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2401685570643"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402200862720"/>
			<UnexposedExpr type="double" spelling="low_value" id="2401170510212"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403249876440"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403881409539"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402758167969"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402770259622"/>
			<UnexposedExpr type="double" spelling="low_value" id="2402699724327"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2403793663796"/>
			<UnexposedExpr type="double" spelling="low_value" id="2401367972963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Quantize this appropriately:" comment_scope_start="9812" comment_scope_end="9814">
		<SYMBOLS>
			<CallExpr type="double" spelling="ceil" id="2403059005789"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2400032538188"/>
			<DeclRefExpr type="double (double)" spelling="ceil" id="2400263614264"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403372582788"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404189042817"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403463592849"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2400672574856"/>
			<MemberRefExpr type="const int" spelling="outquant" id="2401393368396"/>
			<UnexposedExpr type="double (*)(double)" spelling="ceil" id="2402658141396"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2401088262351"/>
			<UnexposedExpr type="double" spelling="outquant" id="2402532663085"/>
			<UnexposedExpr type="int" spelling="outquant" id="2402826371172"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401273266010"/>
			<UnexposedExpr type="double" spelling="outquant" id="2402112136342"/>
			<UnexposedExpr type="int" spelling="outquant" id="2400336550344"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401186594280"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The primary test is that the final encoded value returned by the
       * library should be between the two limits (inclusive) that were
       * calculated above." comment_scope_start="9836" comment_scope_end="9848">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="od" id="2400700365841"/>
			<DeclRefExpr type="double" spelling="es_lo" id="2403057136392"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2402731739183"/>
			<DeclRefExpr type="double" spelling="es_hi" id="2403234448318"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2401228376126"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400129429387"/>
			<DeclRefExpr type="double" spelling="i" id="2401173617868"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402722798829"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401340792494"/>
			<StringLiteral type="char [29]" spelling="&quot;within digitization limits:\n&quot;" id="2402301627381"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2402788023394"/>
			<UnexposedExpr type="double" spelling="od" id="2402774500112"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2401731487169"/>
			<UnexposedExpr type="double" spelling="es_lo" id="2404171337294"/>
			<UnexposedExpr type="double" spelling="od" id="2402746837072"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2402211886538"/>
			<UnexposedExpr type="double" spelling="es_hi" id="2403221397616"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2401417325269"/>
			<UnexposedExpr type="double" spelling="outlog" id="2403727461861"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402054044366"/>
			<UnexposedExpr type="double" spelling="i" id="2400921489870"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2400736297905"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The value passes, but we may need to log the information anyway." comment_scope_start="9842" comment_scope_end="9848">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="encoded_error" id="2401228376126"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400129429387"/>
			<DeclRefExpr type="double" spelling="i" id="2401173617868"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402722798829"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401340792494"/>
			<StringLiteral type="char [29]" spelling="&quot;within digitization limits:\n&quot;" id="2402301627381"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2402788023394"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2401417325269"/>
			<UnexposedExpr type="double" spelling="outlog" id="2403727461861"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402054044366"/>
			<UnexposedExpr type="double" spelling="i" id="2400921489870"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2400736297905"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There has been an error in processing, or we need to log this
          * value." comment_scope_start="9851" comment_scope_end="9855">
		<SYMBOLS>
			<VarDecl type="double" spelling="is_lo" id="2400804708083"/>
			<VarDecl type="double" spelling="is_hi" id="2401372433697"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="pass is set at this point if either of the tests above would have
          * passed.  Don't do these additional tests here - just log the
          * original [es_lo..es_hi] values." comment_scope_start="9856" comment_scope_end="9975">
		<SYMBOLS>
			<VarDecl type="double" spelling="tmp" id="2403703827876"/>
			<CallExpr type="double" spelling="pow" id="2400415267201"/>
			<CallExpr type="double" spelling="gamma_component_compose" id="2401940051720"/>
			<CallExpr type="double" spelling="pow" id="2403094983135"/>
			<CallExpr type="double" spelling="ceil" id="2402299519371"/>
			<CallExpr type="double" spelling="pow" id="2401654438355"/>
			<CallExpr type="double" spelling="gamma_component_compose" id="2403522647290"/>
			<CallExpr type="double" spelling="pow" id="2404132729636"/>
			<CallExpr type="double" spelling="floor" id="2403825776842"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403554488140"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403026197013"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2404103673658"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2403946196895"/>
			<DeclRefExpr type="unsigned int" spelling="sbit_max" id="2402035931358"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401391768326"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401276656039"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402370807903"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403134104862"/>
			<DeclRefExpr type="double" spelling="tmp" id="2404228991331"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400499382431"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401298138188"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401721292193"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402603973168"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403639786206"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2400769731935"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401000247417"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403406193179"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400306989654"/>
			<DeclRefExpr type="const double" spelling="background" id="2404241462037"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403178463907"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401261380483"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400617498961"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401392255943"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402292648618"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402091849068"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401362997396"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2401511478718"/>
			<DeclRefExpr type="double (double)" spelling="ceil" id="2400423970860"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2402915914973"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401969716304"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402631154355"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2402265993958"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400845407123"/>
			<DeclRefExpr type="double" spelling="tmp" id="2404020644499"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2403647220365"/>
			<DeclRefExpr type="unsigned int" spelling="sbit_max" id="2401201006704"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400814212673"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401418659337"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402806918707"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400991925203"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402144197794"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402868264004"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401427939693"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402768995176"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402469776479"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401512925026"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2400862313160"/>
			<DeclRefExpr type="int" spelling="do_background" id="2404134380700"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403145330207"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2401061385561"/>
			<DeclRefExpr type="const double" spelling="background" id="2402801992412"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2401077090443"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403928098687"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400736201149"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402862288169"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402139231038"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402337129373"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400478924904"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2403650491806"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2400152512401"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403575547471"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400623715750"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403977422520"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2400178755042"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401399374552"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2400293553454"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2404255845836"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2403711290532"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400688676960"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2401722321474"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2401092706577"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2400539218880"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402414803181"/>
			<DeclRefExpr type="double" spelling="i" id="2400237442708"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402212899069"/>
			<StringLiteral type="char [32]" spelling="&quot;within input precision limits:\n&quot;" id="2400532561783"/>
			<MemberRefExpr type="const int" spelling="use_input_precision" id="2401701455045"/>
			<MemberRefExpr type="png_byte" spelling="sbit" id="2402944349322"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2403953326114"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2401144969182"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2400929823529"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2402792662250"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2400961054236"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2402032251285"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2401138288426"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2400110326771"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2402245529193"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2402631948741"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403963658358"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2403362919344"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403528861105"/>
			<UnexposedExpr type="int" spelling="sbit" id="2402003992450"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2403005999274"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401577267547"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401309838110"/>
			<UnexposedExpr type="double" spelling="isbit" id="2402605208868"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2403225100835"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2401710476818"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2403254418265"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403915284678"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403345964843"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402658653045"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403953673938"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403950544086"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402594339834"/>
			<UnexposedExpr type="double" spelling="tmp" id="2401718052680"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402064045347"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403053259250"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2402758240357"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403355765756"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400941740392"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400081993077"/>
			<UnexposedExpr type="double" spelling="background" id="2404080397883"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2402505928576"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402947047003"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402147460875"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401250153633"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400670170462"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2401087865659"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403756800582"/>
			<UnexposedExpr type="double (*)(double)" spelling="ceil" id="2402770919989"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401184347019"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402499000586"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402967559815"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2404118289740"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401173598549"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2401932873028"/>
			<UnexposedExpr type="double" spelling="isbit" id="2400520696321"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2403684039634"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2400148211898"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2401698015739"/>
			<UnexposedExpr type="double" spelling="tmp" id="2404098452614"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403256255821"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2401981360409"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403563918771"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403839564952"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403270397179"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402765531898"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402950414065"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400093410367"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2401146447068"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400289484689"/>
			<UnexposedExpr type="double" spelling="tmp" id="2401396489465"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403468469949"/>
			<UnexposedExpr type="double" spelling="background" id="2402818147079"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2402619541229"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400448428896"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402772183327"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402038578074"/>
			<UnexposedExpr type="double" spelling="tmp" id="2404025314952"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403569835798"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403277851181"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2400694868544"/>
			<UnexposedExpr type="double" spelling="outmax" id="2403026208566"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400180274502"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400874338975"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2403619079862"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400825755685"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402696779740"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402530606554"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2401559966271"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402930988480"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2403126836466"/>
			<UnexposedExpr type="double" spelling="od" id="2401803425431"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2402176314311"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2402021524318"/>
			<UnexposedExpr type="double" spelling="od" id="2402244940961"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2403819455712"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402789778809"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2403706297165"/>
			<UnexposedExpr type="double" spelling="outlog" id="2402660212353"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403498191073"/>
			<UnexposedExpr type="double" spelling="i" id="2400425190063"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Ok, something is wrong - this actually happens in current libpng
             * 16-to-8 processing.  Assume that the input value (id, adjusted
             * for sbit) can be anywhere between value-.5 and value+.5 - quite a
             * large range if sbit is low.
             *
             * NOTE: at present because the libpng gamma table stuff has been
             * changed to use a rounding algorithm to correct errors in 8-bit
             * calculations the precise sbit calculation (a shift) has been
             * lost.  This can result in up to a +/-1 error in the presence of
             * an sbit less than the bit depth." comment_scope_start="9862" comment_scope_end="9923">
		<SYMBOLS>
			<VarDecl type="double" spelling="tmp" id="2403703827876"/>
			<CallExpr type="double" spelling="pow" id="2400415267201"/>
			<CallExpr type="double" spelling="gamma_component_compose" id="2401940051720"/>
			<CallExpr type="double" spelling="pow" id="2403094983135"/>
			<CallExpr type="double" spelling="ceil" id="2402299519371"/>
			<CallExpr type="double" spelling="pow" id="2401654438355"/>
			<CallExpr type="double" spelling="gamma_component_compose" id="2403522647290"/>
			<CallExpr type="double" spelling="pow" id="2404132729636"/>
			<CallExpr type="double" spelling="floor" id="2403825776842"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2403946196895"/>
			<DeclRefExpr type="unsigned int" spelling="sbit_max" id="2402035931358"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401391768326"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401276656039"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402370807903"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403134104862"/>
			<DeclRefExpr type="double" spelling="tmp" id="2404228991331"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400499382431"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401298138188"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401721292193"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402603973168"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403639786206"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2400769731935"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401000247417"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403406193179"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400306989654"/>
			<DeclRefExpr type="const double" spelling="background" id="2404241462037"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403178463907"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401261380483"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400617498961"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401392255943"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402292648618"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402091849068"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401362997396"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2401511478718"/>
			<DeclRefExpr type="double (double)" spelling="ceil" id="2400423970860"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2402915914973"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401969716304"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402631154355"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2402265993958"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400845407123"/>
			<DeclRefExpr type="double" spelling="tmp" id="2404020644499"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2403647220365"/>
			<DeclRefExpr type="unsigned int" spelling="sbit_max" id="2401201006704"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400814212673"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401418659337"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402806918707"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400991925203"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402144197794"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402868264004"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2401427939693"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402768995176"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402469776479"/>
			<DeclRefExpr type="double" spelling="tmp" id="2401512925026"/>
			<DeclRefExpr type="double (int, double, double, double, int *)" spelling="gamma_component_compose" id="2400862313160"/>
			<DeclRefExpr type="int" spelling="do_background" id="2404134380700"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403145330207"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2401061385561"/>
			<DeclRefExpr type="const double" spelling="background" id="2402801992412"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2401077090443"/>
			<DeclRefExpr type="double" spelling="tmp" id="2403928098687"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400736201149"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402862288169"/>
			<DeclRefExpr type="double (double, double)" spelling="pow" id="2402139231038"/>
			<DeclRefExpr type="double" spelling="tmp" id="2402337129373"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2400478924904"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2403650491806"/>
			<DeclRefExpr type="double (double)" spelling="floor" id="2400152512401"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2403575547471"/>
			<DeclRefExpr type="double" spelling="tmp" id="2400623715750"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403977422520"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2400178755042"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401399374552"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2400293553454"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2404255845836"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2403711290532"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400688676960"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2401722321474"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2401092706577"/>
			<DeclRefExpr type="double" spelling="encoded_error" id="2400539218880"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2402414803181"/>
			<DeclRefExpr type="double" spelling="i" id="2400237442708"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402212899069"/>
			<StringLiteral type="char [32]" spelling="&quot;within input precision limits:\n&quot;" id="2400532561783"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2401144969182"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2400929823529"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2402792662250"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2400961054236"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2402032251285"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2401138288426"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2400110326771"/>
			<MemberRefExpr type="const double" spelling="maxout_total" id="2402245529193"/>
			<MemberRefExpr type="const double" spelling="outlog" id="2402631948741"/>
			<UnexposedExpr type="double" spelling="isbit" id="2402605208868"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2403225100835"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2401710476818"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2403254418265"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403915284678"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403345964843"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402658653045"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403953673938"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403950544086"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402594339834"/>
			<UnexposedExpr type="double" spelling="tmp" id="2401718052680"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402064045347"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403053259250"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2402758240357"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403355765756"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400941740392"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400081993077"/>
			<UnexposedExpr type="double" spelling="background" id="2404080397883"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2402505928576"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402947047003"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402147460875"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2401250153633"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400670170462"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2401087865659"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403756800582"/>
			<UnexposedExpr type="double (*)(double)" spelling="ceil" id="2402770919989"/>
			<UnexposedExpr type="double" spelling="outmax" id="2401184347019"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402499000586"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402967559815"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2404118289740"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401173598549"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2401932873028"/>
			<UnexposedExpr type="double" spelling="isbit" id="2400520696321"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2403684039634"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2400148211898"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2401698015739"/>
			<UnexposedExpr type="double" spelling="tmp" id="2404098452614"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403256255821"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2401981360409"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403563918771"/>
			<UnexposedExpr type="double" spelling="tmp" id="2403839564952"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2403270397179"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402765531898"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402950414065"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400093410367"/>
			<UnexposedExpr type="double (*)(int, double, double, double, int *)" spelling="gamma_component_compose" id="2401146447068"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400289484689"/>
			<UnexposedExpr type="double" spelling="tmp" id="2401396489465"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403468469949"/>
			<UnexposedExpr type="double" spelling="background" id="2402818147079"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2402619541229"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400448428896"/>
			<UnexposedExpr type="double" spelling="tmp" id="2402772183327"/>
			<UnexposedExpr type="double (*)(double, double)" spelling="pow" id="2402038578074"/>
			<UnexposedExpr type="double" spelling="tmp" id="2404025314952"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403569835798"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403277851181"/>
			<UnexposedExpr type="double (*)(double)" spelling="floor" id="2400694868544"/>
			<UnexposedExpr type="double" spelling="outmax" id="2403026208566"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2400180274502"/>
			<UnexposedExpr type="double" spelling="tmp" id="2400874338975"/>
			<UnexposedExpr type="double" spelling="maxout_total" id="2403619079862"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400825755685"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402696779740"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402530606554"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2401559966271"/>
			<UnexposedExpr type="double" spelling="outmax" id="2402930988480"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2403126836466"/>
			<UnexposedExpr type="double" spelling="od" id="2401803425431"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2402176314311"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2402021524318"/>
			<UnexposedExpr type="double" spelling="od" id="2402244940961"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2403819455712"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402789778809"/>
			<UnexposedExpr type="double" spelling="encoded_error" id="2403706297165"/>
			<UnexposedExpr type="double" spelling="outlog" id="2402660212353"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2403498191073"/>
			<UnexposedExpr type="double" spelling="i" id="2400425190063"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="rounding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="One last chance.  If this is an alpha channel and the 16to8
             * option has been used and 'inaccurate' scaling is used then the
             * bit reduction is obtained by simply using the top 8 bits of the
             * value.
             *
             * This is only done for older libpng versions when the 'inaccurate'
             * (chop) method of scaling was used." comment_scope_start="9924" comment_scope_end="9933"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This may be required for other components in the future,
                   * but at present the presence of gamma correction effectively
                   * prevents the errors in the component scaling (I don't quite
                   * understand why, but since it's better this way I care not
                   * to ask, JB 20110419.)" comment_scope_start="9934" comment_scope_end="9975"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!use_input_precision" comment_scope_start="9976" comment_scope_end="9976"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Attempt to output a meaningful error/warning message: the message
          * output depends on the background/composite operation being performed
          * because this changes what parameters were actually used above." comment_scope_start="9979" comment_scope_end="10159">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="size_t" spelling="pos" id="2402219614677"/>
			<VarDecl type="int" spelling="precision" id="2403226558090"/>
			<VarDecl type="int" spelling="use_input" id="2403908120291"/>
			<VarDecl type="int" spelling="use_background" id="2402885683220"/>
			<VarDecl type="int" spelling="do_compose" id="2402511639415"/>
			<VarDecl type="char [256]" spelling="msg" id="2404100916910"/>
			<CallExpr type="size_t" spelling="safecat" id="2403188661028"/>
			<CallExpr type="void" spelling="png_error" id="2400181124068"/>
			<CallExpr type="size_t" spelling="safecat" id="2400654532693"/>
			<CallExpr type="size_t" spelling="safecat" id="2401651563811"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401122499590"/>
			<CallExpr type="size_t" spelling="safecat" id="2403859308125"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400033658922"/>
			<CallExpr type="size_t" spelling="safecat" id="2400999976409"/>
			<CallExpr type="size_t" spelling="safecatn" id="2403423578449"/>
			<CallExpr type="size_t" spelling="safecat" id="2400597470095"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401318449478"/>
			<CallExpr type="size_t" spelling="safecat" id="2400873358489"/>
			<CallExpr type="size_t" spelling="safecat" id="2402004295291"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401978183236"/>
			<CallExpr type="size_t" spelling="safecat" id="2401411003631"/>
			<CallExpr type="size_t" spelling="safecat" id="2400018054608"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403474055422"/>
			<CallExpr type="size_t" spelling="safecat" id="2401283883079"/>
			<CallExpr type="size_t" spelling="safecat" id="2403641520104"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403827303822"/>
			<CallExpr type="size_t" spelling="safecat" id="2401934577593"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404056583892"/>
			<CallExpr type="size_t" spelling="safecat" id="2403700945450"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404171924225"/>
			<CallExpr type="size_t" spelling="safecat" id="2402830521792"/>
			<CallExpr type="size_t" spelling="safecatd" id="2402751169734"/>
			<CallExpr type="size_t" spelling="safecat" id="2403917648546"/>
			<CallExpr type="size_t" spelling="safecat" id="2402762994685"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401845532416"/>
			<CallExpr type="size_t" spelling="safecat" id="2400104615017"/>
			<CallExpr type="size_t" spelling="safecat" id="2401497548203"/>
			<CallExpr type="size_t" spelling="safecat" id="2400563958238"/>
			<CallExpr type="size_t" spelling="safecat" id="2404046949429"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400812979818"/>
			<CallExpr type="size_t" spelling="safecat" id="2404111805015"/>
			<CallExpr type="size_t" spelling="safecat" id="2400230563160"/>
			<CallExpr type="size_t" spelling="safecat" id="2402581969278"/>
			<CallExpr type="size_t" spelling="safecat" id="2401498137072"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401385387723"/>
			<CallExpr type="size_t" spelling="safecat" id="2403893129724"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403063414448"/>
			<CallExpr type="size_t" spelling="safecat" id="2401467073834"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401493758677"/>
			<CallExpr type="size_t" spelling="safecat" id="2400972186299"/>
			<CallExpr type="size_t" spelling="safecat" id="2400160173940"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402302988818"/>
			<CallExpr type="size_t" spelling="safecat" id="2401036091224"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401162075738"/>
			<CallExpr type="void" spelling="png_warning" id="2404239691758"/>
			<CallExpr type="void" spelling="store_verbose" id="2403266260447"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2400034021963"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402238327944"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402760365854"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401725496134"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401048174935"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402281269897"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403751542175"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401285010208"/>
			<DeclRefExpr type="int" spelling="use_background" id="2401889898182"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402355370970"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402837942200"/>
			<DeclRefExpr type="int" spelling="do_compose" id="2400555826285"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2401032180748"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2404046946948"/>
			<DeclRefExpr type="int" spelling="use_input" id="2401395330683"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2403587765005"/>
			<DeclRefExpr type="int" spelling="compose" id="2403530394447"/>
			<DeclRefExpr type="int" spelling="do_compose" id="2402522579171"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401487069485"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403240892193"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401345887874"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403679977230"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402178696959"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403432105545"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400301277391"/>
			<DeclRefExpr type="const char *" spelling="name" id="2401541259117"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403082519640"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402812492908"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404121292231"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403407052459"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400038279671"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402450593532"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402442468540"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403534187329"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402709086575"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402933618006"/>
			<DeclRefExpr type="unsigned int" spelling="id" id="2402509374550"/>
			<DeclRefExpr type="int" spelling="use_input" id="2401306932907"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403520516901"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2400743455094"/>
			<DeclRefExpr type="unsigned int" spelling="id" id="2400983767090"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402621651689"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402712541755"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402294832666"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401662855182"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401777501553"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402161019949"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403231448758"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402259735351"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402552882422"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402844373312"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401454156353"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403571977829"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403443655607"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401256013382"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402072824890"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400692337092"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402240874582"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403746653438"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401728778910"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401088608706"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402389958645"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2402208284343"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401278990360"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401233085764"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402997062098"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401253744639"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401197127824"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400001996816"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2400165032946"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402676944346"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401809701895"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403423417120"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403277398600"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402273593689"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402863406654"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402311650997"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402044872728"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401012369400"/>
			<DeclRefExpr type="int" spelling="compose" id="2402741204340"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2404282031190"/>
			<DeclRefExpr type="int" spelling="use_input" id="2400176504903"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401334418314"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401777176832"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403710749087"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401887638523"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401570498736"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403875447445"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401525089055"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403167927149"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402442127327"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402395423450"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403956230354"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401061742303"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401007607477"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401221727241"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401735839288"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402754411824"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400230911285"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402862598153"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401410324597"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402046201157"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400647012432"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403839018193"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400595009377"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402880420912"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401322701726"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403556417566"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402001559191"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403979337613"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402041623608"/>
			<DeclRefExpr type="int" spelling="precision" id="2400388915537"/>
			<DeclRefExpr type="int" spelling="use_background" id="2401685906834"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400068040336"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402040106626"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402172760569"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400384929074"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400551989641"/>
			<DeclRefExpr type="int" spelling="use_input" id="2404109614753"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402986412631"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400665236662"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404085203995"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404091567129"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400409885905"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403974118557"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401039383033"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402527164110"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400616097114"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403070136267"/>
			<DeclRefExpr type="const double" spelling="background" id="2402237293944"/>
			<DeclRefExpr type="int" spelling="precision" id="2403589756433"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401938910789"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402859272619"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402873088750"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400013870758"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402095375022"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403721105234"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402681504804"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400079077679"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400071688125"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402172529599"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400998317078"/>
			<DeclRefExpr type="int" spelling="precision" id="2403627463881"/>
			<DeclRefExpr type="int" spelling="compose" id="2401765512319"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400110520204"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401293990915"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402097976827"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400272961845"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401481630405"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401019856180"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401185050128"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403546147681"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403661321703"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401408419683"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400712388205"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403703546595"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403059495129"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400772831393"/>
			<DeclRefExpr type="int" spelling="precision" id="2400554052407"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403358749072"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400763669921"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401977606833"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400089139744"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402958274333"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400957564271"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401576904218"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401203187589"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402843524075"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404207366635"/>
			<DeclRefExpr type="double" spelling="output" id="2403461896966"/>
			<DeclRefExpr type="int" spelling="precision" id="2402088435967"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400293580023"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402955362814"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400459437661"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402400924277"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403457775728"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403887858709"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403456897717"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402634170844"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402255546981"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400139218313"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401433952635"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400889539892"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400733911828"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404010619275"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401608435989"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400789652669"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403348018694"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401799526091"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402170542696"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401200089451"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401833095937"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400048384324"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404133930813"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403917196961"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402672411767"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402271168632"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402332181313"/>
			<DeclRefExpr type="int" spelling="compose" id="2401664559019"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2403584916921"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2404214836531"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401201050793"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400746156367"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403567358140"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404099569852"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400491883126"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400524613556"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403827461786"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403186350583"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401026605815"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400006828037"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402128337936"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403794822397"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402642408967"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402562489063"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401812457315"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402306545594"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402944222547"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401434961104"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400761471992"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400239072549"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401979611263"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404039327979"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400145207207"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403135520191"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400429757818"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400629334786"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403841339055"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401068814241"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2404004853021"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400006135707"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403235115877"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400266163326"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400100836791"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400439008176"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402240298245"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402402497937"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401045500306"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402137519699"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403032739365"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402488303830"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400432248903"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403124536676"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404075783454"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403664401230"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400658125823"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400077526632"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403753451268"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400876306329"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402919793176"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403573016635"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402072882334"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402526677299"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403150826223"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401007843321"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402496355984"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403970290944"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401825160624"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404191078204"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400563488272"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401392709441"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401617635499"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402602231175"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404055220060"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403345260330"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401766954450"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400832474014"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404123845869"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2401498356106"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402227238115"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400117192904"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401549876625"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402895952036"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400785277336"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401366670975"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403047260300"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403595159163"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400357638918"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402071664788"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401261553964"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2401902202437"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402109567430"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400197631831"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401994256817"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401936498413"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402907439255"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401977707568"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403821233955"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402601018118"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401478284688"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403979876521"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403856571352"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400802072196"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404272377930"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403337719167"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2403853477827"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403018934817"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp)" spelling="png_warning" id="2400436712390"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403441656393"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401689810692"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, png_const_charp)" spelling="store_verbose" id="2400806088825"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401258227283"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401587626066"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2400536498081"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404137380228"/>
			<StringLiteral type="char [3]" spelling="&quot;\n\t&quot;" id="2401539304750"/>
			<StringLiteral type="char [25]" spelling="&quot;internal error (compose)&quot;" id="2404122329236"/>
			<StringLiteral type="char [2]" spelling="&quot;(&quot;" id="2401377245623"/>
			<StringLiteral type="char [8]" spelling="&quot;, sbit(&quot;" id="2400066407410"/>
			<StringLiteral type="char [4]" spelling="&quot;): &quot;" id="2400263828182"/>
			<StringLiteral type="char [2]" spelling="&quot;/&quot;" id="2402393476133"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2400577543657"/>
			<StringLiteral type="char [2]" spelling="&quot;^&quot;" id="2401512103526"/>
			<StringLiteral type="char [9]" spelling="&quot;[linear]&quot;" id="2401189004425"/>
			<StringLiteral type="char [9]" spelling="&quot;*(alpha)&quot;" id="2400090577308"/>
			<StringLiteral type="char [2]" spelling="&quot;+&quot;" id="2400260864540"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2400349852563"/>
			<StringLiteral type="char [13]" spelling="&quot;(background)&quot;" id="2400668834964"/>
			<StringLiteral type="char [2]" spelling="&quot;*&quot;" id="2403434544793"/>
			<StringLiteral type="char [5]" spelling="&quot; =\n\t&quot;" id="2402296103632"/>
			<StringLiteral type="char [4]" spelling="&quot; = &quot;" id="2400582805453"/>
			<StringLiteral type="char [11]" spelling="&quot; (libpng: &quot;" id="2402365106571"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2400774801971"/>
			<StringLiteral type="char [3]" spelling="&quot; ^&quot;" id="2400099008427"/>
			<StringLiteral type="char [14]" spelling="&quot;(to screen) =&quot;" id="2402211855675"/>
			<StringLiteral type="char [22]" spelling="&quot; [screen is linear] =&quot;" id="2401534807633"/>
			<StringLiteral type="char [12]" spelling="&quot;\n\t[overall:&quot;" id="2402201755120"/>
			<StringLiteral type="char [3]" spelling="&quot; ^&quot;" id="2403072695326"/>
			<StringLiteral type="char [21]" spelling="&quot;(gamma correction) =&quot;" id="2401022027869"/>
			<StringLiteral type="char [25]" spelling="&quot; [no gamma correction] =&quot;" id="2400650292732"/>
			<StringLiteral type="char [2]" spelling="&quot;]&quot;" id="2403636863365"/>
			<StringLiteral type="char [3]" spelling="&quot;\n\t&quot;" id="2400902774096"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2404073018782"/>
			<StringLiteral type="char [4]" spelling="&quot; &lt; &quot;" id="2400284057028"/>
			<StringLiteral type="char [11]" spelling="&quot; (libpng: &quot;" id="2400705080767"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2400255023114"/>
			<StringLiteral type="char [2]" spelling="&quot;/&quot;" id="2400993291202"/>
			<StringLiteral type="char [4]" spelling="&quot; &lt; &quot;" id="2403965492911"/>
			<MemberRefExpr type="const png_const_structp" spelling="pp" id="2400846276378"/>
			<MemberRefExpr type="const png_byte" spelling="sbit" id="2400631651087"/>
			<MemberRefExpr type="const unsigned int" spelling="sbit_max" id="2403998763172"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403958944847"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403994973194"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2403471193207"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2403641987835"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2404018756278"/>
			<MemberRefExpr type="const png_const_structp" spelling="pp" id="2404079349886"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400388901484"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400239972654"/>
			<MemberRefExpr type="gamma_display *const" spelling="dp" id="2400680477448"/>
			<MemberRefExpr type="const png_const_structp" spelling="pp" id="2402160963070"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2404287017354"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403192136238"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400400624014"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404228518221"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403730773406"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400269518384"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403070794347"/>
			<UnexposedExpr type="double" spelling="alpha" id="2404215414221"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401766103866"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403180869460"/>
			<UnexposedExpr type="double" spelling="alpha" id="2404133862849"/>
			<UnexposedExpr type="int" spelling="compose" id="2402619259703"/>
			<UnexposedExpr type="int" spelling="do_compose" id="2401069961914"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403985489642"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401575308575"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402172588719"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403628883287"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403820585068"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402582647808"/>
			<UnexposedExpr type="const char *" spelling="name" id="2402099259730"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400192871483"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402902203065"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403919185802"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2401720302347"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401173796477"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402196510918"/>
			<UnexposedExpr type="int" spelling="id" id="2401746944852"/>
			<UnexposedExpr type="unsigned int" spelling="id" id="2403388022978"/>
			<UnexposedExpr type="int" spelling="use_input" id="2400665615216"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402342078188"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2402913606108"/>
			<UnexposedExpr type="unsigned int" spelling="id" id="2403827028803"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403317417531"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404287782945"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401633476111"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403660823995"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401489926001"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400970366148"/>
			<UnexposedExpr type="int" spelling="sbit" id="2402820762336"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2402742500993"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400659127391"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403570021581"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400520960018"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404083248191"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402376618571"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402538949283"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402780866168"/>
			<UnexposedExpr type="int" spelling="isbit" id="2402345274894"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2401412791999"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400088281277"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403999076957"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401583225063"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402207080099"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401959068399"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403721788310"/>
			<UnexposedExpr type="int" spelling="sbit_max" id="2403568166168"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2400677964447"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401150464870"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402044876019"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403088407307"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401043033266"/>
			<UnexposedExpr type="int" spelling="compose" id="2402984035256"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402409746303"/>
			<UnexposedExpr type="int" spelling="use_input" id="2402348848642"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401469741646"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402448625196"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402928829897"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401796121284"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403901873728"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400591672107"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401008933116"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401718376053"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403285319521"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2404042398188"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400239711016"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403443086909"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402206298428"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403590102291"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402101005091"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401081229022"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403051694490"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402936318195"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401813990068"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400560026079"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401663742353"/>
			<UnexposedExpr type="int" spelling="precision" id="2403745971262"/>
			<UnexposedExpr type="int" spelling="use_background" id="2401235485636"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402568761598"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403447280424"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400918105379"/>
			<UnexposedExpr type="int" spelling="use_input" id="2400643798506"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402616045362"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403840806586"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400758886652"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403414777366"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400057045772"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403952566438"/>
			<UnexposedExpr type="double" spelling="background" id="2401458936301"/>
			<UnexposedExpr type="int" spelling="precision" id="2402744984496"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401146261507"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400465051310"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401911633295"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403453092798"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401389100980"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403640339586"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403462408726"/>
			<UnexposedExpr type="int" spelling="precision" id="2400094517426"/>
			<UnexposedExpr type="int" spelling="compose" id="2402860302135"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402960416412"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2404238192259"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403457582309"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404272035957"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401553179133"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403273660405"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401871448300"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403186581419"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402250376812"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401759803303"/>
			<UnexposedExpr type="int" spelling="precision" id="2401014490744"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403037378665"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401359819558"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400228569100"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402196420917"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401749008114"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402851011797"/>
			<UnexposedExpr type="double" spelling="output" id="2401985124729"/>
			<UnexposedExpr type="int" spelling="precision" id="2403936816582"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403065417940"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401779187066"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403876475125"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2401612254908"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401331561762"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400773407209"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402279249905"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401275809897"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401491292316"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402508274432"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403727993299"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401677823639"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402170063917"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401031621841"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401385299036"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401507432720"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400800916940"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400440568872"/>
			<UnexposedExpr type="int" spelling="compose" id="2400134279863"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402495619128"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402858075922"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401043758722"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400872706621"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403576756946"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401833919769"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2402267697000"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2404051120023"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402453213297"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403424452999"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400586138372"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400861003089"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402571003487"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401582168864"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2402342829370"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401762772656"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403901230286"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400003745837"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402753827045"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401947094323"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400194907542"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402459935567"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403496525896"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403904508328"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401068207770"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400769979003"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400457831583"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400045361667"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402405670273"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401256306436"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400430254916"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401448456745"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400477375610"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2403967904496"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402681296820"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402116069887"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400363856081"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402215252286"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402837814013"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403087955514"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400051285501"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402458953149"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402218362708"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403463325207"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403455806363"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404230853337"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402065637344"/>
			<UnexposedExpr type="int" spelling="od" id="2401828518533"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2404096333732"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402637541784"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404046287530"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401198523979"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401821128539"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402872290259"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403028951323"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2404103061370"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401966369156"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400186031166"/>
			<UnexposedExpr type="int" spelling="outmax" id="2400742185102"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402524161113"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403811839131"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403525867716"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401956458276"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403189067085"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402185085205"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403185036855"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402861294018"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401408325134"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp)" spelling="png_warning" id="2402391404402"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402967377590"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402830200467"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2401083728965"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402205454800"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, png_const_charp)" spelling="store_verbose" id="2402713504512"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400966162195"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401226398624"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400915058291"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401793681026"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400782513765"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402598526781"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2401419512224"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402837485850"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="composite" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Need either 1/255 or 1/65535 precision here; 3 or 6 decimal
             * places.  Just use outmax to work out which." comment_scope_start="9985" comment_scope_end="9994">
		<SYMBOLS>
			<VarDecl type="int" spelling="precision" id="2403226558090"/>
			<VarDecl type="int" spelling="use_input" id="2403908120291"/>
			<VarDecl type="int" spelling="use_background" id="2402885683220"/>
			<VarDecl type="int" spelling="do_compose" id="2402511639415"/>
			<VarDecl type="char [256]" spelling="msg" id="2404100916910"/>
			<CallExpr type="size_t" spelling="safecat" id="2403188661028"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2400034021963"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402238327944"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402760365854"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401725496134"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401048174935"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402281269897"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403751542175"/>
			<StringLiteral type="char [3]" spelling="&quot;\n\t&quot;" id="2401539304750"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2404287017354"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403192136238"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400400624014"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404228518221"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403730773406"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set up the various flags, the output_is_encoded flag above
             * is also used below.  do_compose is just a double check." comment_scope_start="9995" comment_scope_end="10018">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="do_background" id="2401285010208"/>
			<DeclRefExpr type="int" spelling="use_background" id="2401889898182"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402355370970"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402837942200"/>
			<DeclRefExpr type="int" spelling="do_compose" id="2400555826285"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2401032180748"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2404046946948"/>
			<DeclRefExpr type="int" spelling="use_input" id="2401395330683"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2403587765005"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400269518384"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403070794347"/>
			<UnexposedExpr type="double" spelling="alpha" id="2404215414221"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401766103866"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403180869460"/>
			<UnexposedExpr type="double" spelling="alpha" id="2404133862849"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="FALLTHROUGH" comment_scope_start="10007" comment_scope_end="10010"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="ALPHA_MODE_SUPPORTED" comment_scope_start="10011" comment_scope_end="10011"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the 'compose' flag" comment_scope_start="10020" comment_scope_end="10023">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2400181124068"/>
			<DeclRefExpr type="int" spelling="compose" id="2403530394447"/>
			<DeclRefExpr type="int" spelling="do_compose" id="2402522579171"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401487069485"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403240892193"/>
			<StringLiteral type="char [25]" spelling="&quot;internal error (compose)&quot;" id="2404122329236"/>
			<MemberRefExpr type="const png_const_structp" spelling="pp" id="2400846276378"/>
			<UnexposedExpr type="int" spelling="compose" id="2402619259703"/>
			<UnexposedExpr type="int" spelling="do_compose" id="2401069961914"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403985489642"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401575308575"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402172588719"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="'name' is the component name" comment_scope_start="10024" comment_scope_end="10027">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2400654532693"/>
			<CallExpr type="size_t" spelling="safecat" id="2401651563811"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401122499590"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401345887874"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403679977230"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402178696959"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403432105545"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400301277391"/>
			<DeclRefExpr type="const char *" spelling="name" id="2401541259117"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403082519640"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402812492908"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404121292231"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403407052459"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400038279671"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402450593532"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402442468540"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403534187329"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402709086575"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402933618006"/>
			<DeclRefExpr type="unsigned int" spelling="id" id="2402509374550"/>
			<StringLiteral type="char [2]" spelling="&quot;(&quot;" id="2401377245623"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403628883287"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403820585068"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402582647808"/>
			<UnexposedExpr type="const char *" spelling="name" id="2402099259730"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400192871483"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402902203065"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403919185802"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2401720302347"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401173796477"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402196510918"/>
			<UnexposedExpr type="int" spelling="id" id="2401746944852"/>
			<UnexposedExpr type="unsigned int" spelling="id" id="2403388022978"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="logging" comment_scope_start="10028" comment_scope_end="10028">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="use_input" id="2401306932907"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403520516901"/>
			<UnexposedExpr type="int" spelling="use_input" id="2400665615216"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402342078188"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="sBIT has reduced the precision of the input:" comment_scope_start="10032" comment_scope_end="10037">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403859308125"/>
			<CallExpr type="size_t" spelling="safecatn" id="2400033658922"/>
			<CallExpr type="size_t" spelling="safecat" id="2400999976409"/>
			<CallExpr type="size_t" spelling="safecatn" id="2403423578449"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402621651689"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402712541755"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402294832666"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401662855182"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401777501553"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402161019949"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403231448758"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402259735351"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402552882422"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402844373312"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401454156353"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403571977829"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403443655607"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401256013382"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402072824890"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400692337092"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402240874582"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403746653438"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401728778910"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401088608706"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402389958645"/>
			<DeclRefExpr type="unsigned int" spelling="isbit" id="2402208284343"/>
			<StringLiteral type="char [8]" spelling="&quot;, sbit(&quot;" id="2400066407410"/>
			<StringLiteral type="char [4]" spelling="&quot;): &quot;" id="2400263828182"/>
			<MemberRefExpr type="const png_byte" spelling="sbit" id="2400631651087"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403317417531"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404287782945"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401633476111"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403660823995"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401489926001"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400970366148"/>
			<UnexposedExpr type="int" spelling="sbit" id="2402820762336"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2402742500993"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400659127391"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403570021581"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400520960018"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404083248191"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402376618571"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402538949283"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402780866168"/>
			<UnexposedExpr type="int" spelling="isbit" id="2402345274894"/>
			<UnexposedExpr type="unsigned int" spelling="isbit" id="2401412791999"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reduced" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The output is either &quot;id/max&quot; or &quot;id sbit(sbit): isbit/max&quot;" comment_scope_start="10039" comment_scope_end="10041">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecatn" id="2401318449478"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400001996816"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2400165032946"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402676944346"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401809701895"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403423417120"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403277398600"/>
			<MemberRefExpr type="const unsigned int" spelling="sbit_max" id="2403998763172"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402207080099"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401959068399"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403721788310"/>
			<UnexposedExpr type="int" spelling="sbit_max" id="2403568166168"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2400677964447"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401150464870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A component may have been multiplied (in linear space) by the
             * alpha value, 'compose' says whether this is relevant." comment_scope_start="10044" comment_scope_end="10081">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402004295291"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401978183236"/>
			<CallExpr type="size_t" spelling="safecat" id="2401411003631"/>
			<CallExpr type="size_t" spelling="safecat" id="2400018054608"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403474055422"/>
			<CallExpr type="size_t" spelling="safecat" id="2401283883079"/>
			<CallExpr type="size_t" spelling="safecat" id="2403641520104"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403827303822"/>
			<CallExpr type="size_t" spelling="safecat" id="2401934577593"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404056583892"/>
			<DeclRefExpr type="int" spelling="compose" id="2402741204340"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2404282031190"/>
			<DeclRefExpr type="int" spelling="use_input" id="2400176504903"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401334418314"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401777176832"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403710749087"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401887638523"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401570498736"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403875447445"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401525089055"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403167927149"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402442127327"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402395423450"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403956230354"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401061742303"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401007607477"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401221727241"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401735839288"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402754411824"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400230911285"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402862598153"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401410324597"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402046201157"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400647012432"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403839018193"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400595009377"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402880420912"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401322701726"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403556417566"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402001559191"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403979337613"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402041623608"/>
			<DeclRefExpr type="int" spelling="precision" id="2400388915537"/>
			<DeclRefExpr type="int" spelling="use_background" id="2401685906834"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400068040336"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402040106626"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402172760569"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400384929074"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400551989641"/>
			<DeclRefExpr type="int" spelling="use_input" id="2404109614753"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402986412631"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400665236662"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404085203995"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404091567129"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400409885905"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403974118557"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401039383033"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402527164110"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400616097114"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403070136267"/>
			<DeclRefExpr type="const double" spelling="background" id="2402237293944"/>
			<DeclRefExpr type="int" spelling="precision" id="2403589756433"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401938910789"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402859272619"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402873088750"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400013870758"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402095375022"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403721105234"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402681504804"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400079077679"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400071688125"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402172529599"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400998317078"/>
			<DeclRefExpr type="int" spelling="precision" id="2403627463881"/>
			<StringLiteral type="char [2]" spelling="&quot;^&quot;" id="2401512103526"/>
			<StringLiteral type="char [9]" spelling="&quot;[linear]&quot;" id="2401189004425"/>
			<StringLiteral type="char [9]" spelling="&quot;*(alpha)&quot;" id="2400090577308"/>
			<StringLiteral type="char [2]" spelling="&quot;+&quot;" id="2400260864540"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2400349852563"/>
			<StringLiteral type="char [13]" spelling="&quot;(background)&quot;" id="2400668834964"/>
			<StringLiteral type="char [2]" spelling="&quot;*&quot;" id="2403434544793"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403958944847"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403994973194"/>
			<UnexposedExpr type="int" spelling="compose" id="2402984035256"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2402409746303"/>
			<UnexposedExpr type="int" spelling="use_input" id="2402348848642"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401469741646"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402448625196"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402928829897"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401796121284"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403901873728"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400591672107"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401008933116"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401718376053"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403285319521"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2404042398188"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400239711016"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403443086909"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402206298428"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403590102291"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402101005091"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401081229022"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403051694490"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402936318195"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401813990068"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400560026079"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401663742353"/>
			<UnexposedExpr type="int" spelling="precision" id="2403745971262"/>
			<UnexposedExpr type="int" spelling="use_background" id="2401235485636"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402568761598"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403447280424"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400918105379"/>
			<UnexposedExpr type="int" spelling="use_input" id="2400643798506"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402616045362"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403840806586"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400758886652"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403414777366"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400057045772"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403952566438"/>
			<UnexposedExpr type="double" spelling="background" id="2401458936301"/>
			<UnexposedExpr type="int" spelling="precision" id="2402744984496"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401146261507"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400465051310"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401911633295"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403453092798"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401389100980"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403640339586"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403462408726"/>
			<UnexposedExpr type="int" spelling="precision" id="2400094517426"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="multiplied" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If any form of composition is being done report our
                * calculated linear value here (the code above doesn't record
                * the input value before composition is performed, so what
                * gets reported is the value after composition.)" comment_scope_start="10049" comment_scope_end="10067">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402004295291"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401978183236"/>
			<CallExpr type="size_t" spelling="safecat" id="2401411003631"/>
			<CallExpr type="size_t" spelling="safecat" id="2400018054608"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403474055422"/>
			<DeclRefExpr type="int" spelling="use_input" id="2400176504903"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401334418314"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401777176832"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403710749087"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401887638523"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401570498736"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403875447445"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401525089055"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403167927149"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402442127327"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402395423450"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403956230354"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401061742303"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401007607477"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401221727241"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401735839288"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402754411824"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400230911285"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402862598153"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401410324597"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402046201157"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400647012432"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403839018193"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400595009377"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402880420912"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401322701726"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403556417566"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402001559191"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403979337613"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2402041623608"/>
			<DeclRefExpr type="int" spelling="precision" id="2400388915537"/>
			<StringLiteral type="char [2]" spelling="&quot;^&quot;" id="2401512103526"/>
			<StringLiteral type="char [9]" spelling="&quot;[linear]&quot;" id="2401189004425"/>
			<StringLiteral type="char [9]" spelling="&quot;*(alpha)&quot;" id="2400090577308"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403958944847"/>
			<MemberRefExpr type="const double" spelling="file_inverse" id="2403994973194"/>
			<UnexposedExpr type="int" spelling="use_input" id="2402348848642"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401469741646"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2402448625196"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2402928829897"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401796121284"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403901873728"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400591672107"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401008933116"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401718376053"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403285319521"/>
			<UnexposedExpr type="double" spelling="file_inverse" id="2404042398188"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2400239711016"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403443086909"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402206298428"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403590102291"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402101005091"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401081229022"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403051694490"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402936318195"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401813990068"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400560026079"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401663742353"/>
			<UnexposedExpr type="int" spelling="precision" id="2403745971262"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now record the *linear* background value if it was used
                * (this function is not passed the original, non-linear,
                * value but it is contained in the test name.)" comment_scope_start="10069" comment_scope_end="10080">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401283883079"/>
			<CallExpr type="size_t" spelling="safecat" id="2403641520104"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403827303822"/>
			<CallExpr type="size_t" spelling="safecat" id="2401934577593"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404056583892"/>
			<DeclRefExpr type="int" spelling="use_background" id="2401685906834"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400068040336"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402040106626"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402172760569"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400384929074"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400551989641"/>
			<DeclRefExpr type="int" spelling="use_input" id="2404109614753"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402986412631"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400665236662"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404085203995"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404091567129"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400409885905"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403974118557"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401039383033"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402527164110"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400616097114"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403070136267"/>
			<DeclRefExpr type="const double" spelling="background" id="2402237293944"/>
			<DeclRefExpr type="int" spelling="precision" id="2403589756433"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401938910789"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402859272619"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402873088750"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400013870758"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402095375022"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403721105234"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402681504804"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400079077679"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400071688125"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402172529599"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400998317078"/>
			<DeclRefExpr type="int" spelling="precision" id="2403627463881"/>
			<StringLiteral type="char [2]" spelling="&quot;+&quot;" id="2400260864540"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2400349852563"/>
			<StringLiteral type="char [13]" spelling="&quot;(background)&quot;" id="2400668834964"/>
			<StringLiteral type="char [2]" spelling="&quot;*&quot;" id="2403434544793"/>
			<UnexposedExpr type="int" spelling="use_background" id="2401235485636"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402568761598"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403447280424"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400918105379"/>
			<UnexposedExpr type="int" spelling="use_input" id="2400643798506"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402616045362"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403840806586"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400758886652"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403414777366"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400057045772"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403952566438"/>
			<UnexposedExpr type="double" spelling="background" id="2401458936301"/>
			<UnexposedExpr type="int" spelling="precision" id="2402744984496"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401146261507"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400465051310"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401911633295"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403453092798"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401389100980"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403640339586"/>
			<UnexposedExpr type="double" spelling="alpha" id="2403462408726"/>
			<UnexposedExpr type="int" spelling="precision" id="2400094517426"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Report the calculated value (input_sample) and the linearized
             * libpng value (output) unless this is just a component gamma
             * correction." comment_scope_start="10083" comment_scope_end="10106">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2403700945450"/>
			<CallExpr type="size_t" spelling="safecatd" id="2404171924225"/>
			<CallExpr type="size_t" spelling="safecat" id="2402830521792"/>
			<CallExpr type="size_t" spelling="safecatd" id="2402751169734"/>
			<CallExpr type="size_t" spelling="safecat" id="2403917648546"/>
			<CallExpr type="size_t" spelling="safecat" id="2402762994685"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401845532416"/>
			<CallExpr type="size_t" spelling="safecat" id="2400104615017"/>
			<CallExpr type="size_t" spelling="safecat" id="2401497548203"/>
			<DeclRefExpr type="int" spelling="compose" id="2401765512319"/>
			<DeclRefExpr type="const double" spelling="alpha" id="2400110520204"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401293990915"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402097976827"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400272961845"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401481630405"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401019856180"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401185050128"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403546147681"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403661321703"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401408419683"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400712388205"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403703546595"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403059495129"/>
			<DeclRefExpr type="double" spelling="input_sample" id="2400772831393"/>
			<DeclRefExpr type="int" spelling="precision" id="2400554052407"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403358749072"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400763669921"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401977606833"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400089139744"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402958274333"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400957564271"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2401576904218"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401203187589"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402843524075"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404207366635"/>
			<DeclRefExpr type="double" spelling="output" id="2403461896966"/>
			<DeclRefExpr type="int" spelling="precision" id="2402088435967"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400293580023"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402955362814"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400459437661"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402400924277"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403457775728"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403887858709"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403456897717"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402634170844"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402255546981"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400139218313"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401433952635"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400889539892"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400733911828"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404010619275"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401608435989"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400789652669"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403348018694"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401799526091"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402170542696"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401200089451"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401833095937"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400048384324"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404133930813"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403917196961"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402672411767"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402271168632"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402332181313"/>
			<StringLiteral type="char [5]" spelling="&quot; =\n\t&quot;" id="2402296103632"/>
			<StringLiteral type="char [4]" spelling="&quot; = &quot;" id="2400582805453"/>
			<StringLiteral type="char [11]" spelling="&quot; (libpng: &quot;" id="2402365106571"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2400774801971"/>
			<StringLiteral type="char [3]" spelling="&quot; ^&quot;" id="2400099008427"/>
			<StringLiteral type="char [14]" spelling="&quot;(to screen) =&quot;" id="2402211855675"/>
			<StringLiteral type="char [22]" spelling="&quot; [screen is linear] =&quot;" id="2401534807633"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2403471193207"/>
			<UnexposedExpr type="int" spelling="compose" id="2402860302135"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402960416412"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2404238192259"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403457582309"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404272035957"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401553179133"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2403273660405"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401871448300"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403186581419"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402250376812"/>
			<UnexposedExpr type="double" spelling="input_sample" id="2401759803303"/>
			<UnexposedExpr type="int" spelling="precision" id="2401014490744"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403037378665"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401359819558"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400228569100"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402196420917"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401749008114"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402851011797"/>
			<UnexposedExpr type="double" spelling="output" id="2401985124729"/>
			<UnexposedExpr type="int" spelling="precision" id="2403936816582"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403065417940"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401779187066"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403876475125"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2401612254908"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401331561762"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400773407209"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402279249905"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401275809897"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401491292316"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402508274432"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403727993299"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401677823639"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402170063917"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401031621841"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401385299036"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401507432720"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400800916940"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400440568872"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Finally report the output gamma encoding, if any." comment_scope_start="10096" comment_scope_end="10102">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402762994685"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401845532416"/>
			<CallExpr type="size_t" spelling="safecat" id="2400104615017"/>
			<DeclRefExpr type="int" spelling="output_is_encoded" id="2403887858709"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403456897717"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402634170844"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402255546981"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400139218313"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401433952635"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400889539892"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2400733911828"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404010619275"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401608435989"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400789652669"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403348018694"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401799526091"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402170542696"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401200089451"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401833095937"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400048384324"/>
			<StringLiteral type="char [3]" spelling="&quot; ^&quot;" id="2400099008427"/>
			<StringLiteral type="char [14]" spelling="&quot;(to screen) =&quot;" id="2402211855675"/>
			<MemberRefExpr type="const double" spelling="screen_inverse" id="2403471193207"/>
			<UnexposedExpr type="int" spelling="output_is_encoded" id="2401612254908"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401331561762"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400773407209"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402279249905"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2401275809897"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401491292316"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402508274432"/>
			<UnexposedExpr type="double" spelling="screen_inverse" id="2403727993299"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401677823639"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402170063917"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401031621841"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401385299036"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="logging" comment_scope_start="10110" comment_scope_end="10110">
		<SYMBOLS>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2401201050793"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401043758722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is the non-composition case, the internal linear
                * values are irrelevant (though the log below will reveal
                * them.)  Output a much shorter warning/error message and report
                * the overall gamma correction." comment_scope_start="10113" comment_scope_end="10123">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2404046949429"/>
			<CallExpr type="size_t" spelling="safecatd" id="2400812979818"/>
			<CallExpr type="size_t" spelling="safecat" id="2404111805015"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2403827461786"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403186350583"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401026605815"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400006828037"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402128337936"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403794822397"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402642408967"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2402562489063"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401812457315"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402306545594"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402944222547"/>
			<DeclRefExpr type="const validate_info *" spelling="vi" id="2401434961104"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400761471992"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400239072549"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401979611263"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404039327979"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400145207207"/>
			<StringLiteral type="char [3]" spelling="&quot; ^&quot;" id="2403072695326"/>
			<StringLiteral type="char [21]" spelling="&quot;(gamma correction) =&quot;" id="2401022027869"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2403641987835"/>
			<MemberRefExpr type="const double" spelling="gamma_correction" id="2404018756278"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2402267697000"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2404051120023"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402453213297"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403424452999"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400586138372"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400861003089"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402571003487"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401582168864"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2402342829370"/>
			<UnexposedExpr type="const validate_info *" spelling="vi" id="2401762772656"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403901230286"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400003745837"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402753827045"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="shorter" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is our calculated encoded_sample which should (but does
             * not) match od:" comment_scope_start="10133" comment_scope_end="10147">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401498137072"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401385387723"/>
			<CallExpr type="size_t" spelling="safecat" id="2403893129724"/>
			<CallExpr type="size_t" spelling="safecatd" id="2403063414448"/>
			<CallExpr type="size_t" spelling="safecat" id="2401467073834"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401493758677"/>
			<CallExpr type="size_t" spelling="safecat" id="2400972186299"/>
			<CallExpr type="size_t" spelling="safecat" id="2400160173940"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402302988818"/>
			<CallExpr type="size_t" spelling="safecat" id="2401036091224"/>
			<CallExpr type="size_t" spelling="safecatd" id="2401162075738"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402240298245"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402402497937"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401045500306"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402137519699"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403032739365"/>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2402488303830"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400432248903"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403124536676"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404075783454"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403664401230"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400658125823"/>
			<DeclRefExpr type="double" spelling="is_lo" id="2400077526632"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403753451268"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400876306329"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402919793176"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403573016635"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402072882334"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402526677299"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403150826223"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401007843321"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402496355984"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403970290944"/>
			<DeclRefExpr type="double" spelling="encoded_sample" id="2401825160624"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404191078204"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400563488272"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401392709441"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401617635499"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402602231175"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404055220060"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403345260330"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401766954450"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400832474014"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404123845869"/>
			<DeclRefExpr type="unsigned int" spelling="od" id="2401498356106"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402227238115"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400117192904"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2401549876625"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402895952036"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400785277336"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401366670975"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403047260300"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403595159163"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400357638918"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402071664788"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401261553964"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2401902202437"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402109567430"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400197631831"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401994256817"/>
			<DeclRefExpr type="unsigned int" spelling="outmax" id="2401936498413"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402907439255"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401977707568"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2403821233955"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2402601018118"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401478284688"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403979876521"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, double, int)" spelling="safecatd" id="2403856571352"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2400802072196"/>
			<DeclRefExpr type="char [256]" spelling="msg" id="2404272377930"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403337719167"/>
			<DeclRefExpr type="double" spelling="is_hi" id="2403853477827"/>
			<StringLiteral type="char [3]" spelling="&quot;\n\t&quot;" id="2400902774096"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2404073018782"/>
			<StringLiteral type="char [4]" spelling="&quot; &lt; &quot;" id="2400284057028"/>
			<StringLiteral type="char [11]" spelling="&quot; (libpng: &quot;" id="2400705080767"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2400255023114"/>
			<StringLiteral type="char [2]" spelling="&quot;/&quot;" id="2400993291202"/>
			<StringLiteral type="char [4]" spelling="&quot; &lt; &quot;" id="2403965492911"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400457831583"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400045361667"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402405670273"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401256306436"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2400430254916"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401448456745"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400477375610"/>
			<UnexposedExpr type="double" spelling="is_lo" id="2403967904496"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402681296820"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402116069887"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400363856081"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2402215252286"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402837814013"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403087955514"/>
			<UnexposedExpr type="double" spelling="encoded_sample" id="2400051285501"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402458953149"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402218362708"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403463325207"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403455806363"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404230853337"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402065637344"/>
			<UnexposedExpr type="int" spelling="od" id="2401828518533"/>
			<UnexposedExpr type="unsigned int" spelling="od" id="2404096333732"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402637541784"/>
			<UnexposedExpr type="char *" spelling="msg" id="2404046287530"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401198523979"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401821128539"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402872290259"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403028951323"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2404103061370"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401966369156"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400186031166"/>
			<UnexposedExpr type="int" spelling="outmax" id="2400742185102"/>
			<UnexposedExpr type="unsigned int" spelling="outmax" id="2402524161113"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403811839131"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403525867716"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401956458276"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, double, int)" spelling="safecatd" id="2403189067085"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402185085205"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403185036855"/>
			<UnexposedExpr type="double" spelling="is_hi" id="2402861294018"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The error condition" comment_scope_start="10148" comment_scope_end="10148">
		<SYMBOLS>
			<DeclRefExpr type="png_const_charp" spelling="pass" id="2403018934817"/>
			<UnexposedExpr type="png_const_charp" spelling="pass" id="2401408325134"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="logging this value" comment_scope_start="10157" comment_scope_end="10157"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get some constants derived from the input and output file formats:" comment_scope_start="10170" comment_scope_end="10179">
		<SYMBOLS>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="const png_store *const" spelling="ps" id="2401767245783"/>
			<VarDecl type="png_byte" spelling="in_ct" id="2401305225894"/>
			<VarDecl type="png_byte" spelling="in_bd" id="2400088500531"/>
			<VarDecl type="png_uint_32" spelling="w" id="2401736309954"/>
			<VarDecl type="png_uint_32" spelling="h" id="2401557532749"/>
			<VarDecl type="const size_t" spelling="cbRow" id="2403415301688"/>
			<VarDecl type="png_byte" spelling="out_ct" id="2403602421711"/>
			<VarDecl type="png_byte" spelling="out_bd" id="2400328749154"/>
			<CallExpr type="png_byte" spelling="png_get_color_type" id="2401143683023"/>
			<CallExpr type="png_byte" spelling="png_get_bit_depth" id="2400972596647"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402476950346"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400601575640"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400625638671"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400407363857"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401977339852"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402475204528"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2400608736580"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400449547404"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400628346427"/>
			<DeclRefExpr type="png_byte (png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2401648186604"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400574289955"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2402884060482"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2401806869421"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403217757052"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2402774705244"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400462281194"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2400882717505"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402519450139"/>
			<MemberRefExpr type="png_uint_32" spelling="w" id="2401279138475"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401242368387"/>
			<MemberRefExpr type="png_uint_32" spelling="h" id="2403408943771"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400283943031"/>
			<MemberRefExpr type="size_t" spelling="cbRow" id="2402025986792"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400413992667"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401868184861"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403241330555"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402402361079"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403996829798"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402015598533"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401614910855"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401723888671"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2401767963704"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2400083452615"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2403261714155"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403388879230"/>
			<UnexposedExpr type="size_t" spelling="cbRow" id="2404094046119"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402461828534"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_color_type" id="2403089040354"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2400270885029"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403226257271"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402372260101"/>
			<UnexposedExpr type="png_byte (*)(png_const_structrp, png_const_inforp)" spelling="png_get_bit_depth" id="2401183272133"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403430296516"/>
			<UnexposedExpr type="const png_info *" spelling="pi" id="2403914839131"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400146238381"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There are three sources of error, firstly the quantization in the
    * file encoding, determined by sbit and/or the file depth, secondly
    * the output (screen) gamma and thirdly the output file encoding.
    *
    * Since this API receives the screen and file gamma in double
    * precision it is possible to calculate an exact answer given an input
    * pixel value.  Therefore we assume that the *input* value is exact -
    * sample/maxsample - calculate the corresponding gamma corrected
    * output to the limits of double precision arithmetic and compare with
    * what libpng returns.
    *
    * Since the library must quantize the output to 8 or 16 bits there is
    * a fundamental limit on the accuracy of the output of +/-.5 - this
    * quantization limit is included in addition to the other limits
    * specified by the parameters to the API.  (Effectively, add .5
    * everywhere.)
    *
    * The behavior of the 'sbit' parameter is defined by section 12.5
    * (sample depth scaling) of the PNG spec.  That section forces the
    * decoder to assume that the PNG values have been scaled if sBIT is
    * present:
    *
    *     png-sample = floor( input-sample * (max-out/max-in) + .5);
    *
    * This means that only a subset of the possible PNG values should
    * appear in the input. However, the spec allows the encoder to use a
    * variety of approximations to the above and doesn't require any
    * restriction of the values produced.
    *
    * Nevertheless the spec requires that the upper 'sBIT' bits of the
    * value stored in a PNG file be the original sample bits.
    * Consequently the code below simply scales the top sbit bits by
    * (1&lt;&lt;sbit)-1 to obtain an original sample value.
    *
    * Because there is limited precision in the input it is arguable that
    * an acceptable result is any valid result from input-.5 to input+.5.
    * The basic tests below do not do this, however if 'use_input_precision'
    * is set a subsequent test is performed above." comment_scope_start="10180" comment_scope_end="10225">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="store_palette_entry" spelling="store_palette_entry" id="2402159277182"/>
			<VarDecl type="unsigned int" spelling="samples_per_pixel" id="2400739429469"/>
			<VarDecl type="int" spelling="processing" id="2400580239998"/>
			<VarDecl type="png_uint_32" spelling="y" id="2403571628158"/>
			<VarDecl type="const store_palette_entry *" spelling="in_palette" id="2400615696926"/>
			<VarDecl type="int" spelling="in_is_transparent" id="2402433221875"/>
			<VarDecl type="int" spelling="process_tRNS" id="2400304710191"/>
			<VarDecl type="int" spelling="out_npalette" id="2403835544628"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2404224533696"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401370031031"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401168405276"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2401376413937"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402310725920"/>
			<MemberRefExpr type="int" spelling="is_transparent" id="2404115640284"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402755706598"/>
			<UnexposedExpr type="unsigned int" spelling="out_ct" id="2400094063145"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402454901945"/>
			<UnexposedExpr type="const store_palette_entry *" spelling="palette" id="2401077378379"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2401671010736"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401363988293"/>
			<UnexposedExpr type="int" spelling="is_transparent" id="2402522095541"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403428594757"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="determined" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="receives" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="included" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="addition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Just refers to the palette case" comment_scope_start="10226" comment_scope_end="10226">
		<SYMBOLS>
			<VarDecl type="int" spelling="out_is_transparent" id="2402442132064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check for row overwrite errors" comment_scope_start="10230" comment_scope_end="10232">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_image_check" id="2400704453362"/>
			<DeclRefExpr type="void (const png_store *, png_const_structp, int)" spelling="store_image_check" id="2401743177870"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403844759019"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2404123451505"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2404059287718"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2404275230483"/>
			<UnexposedExpr type="void (*)(const png_store *, png_const_structp, int)" spelling="store_image_check" id="2401535728350"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2401560862137"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2403712299129"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403029813707"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401834955093"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Supply the input and output sample depths here - 8 for an indexed image,
    * otherwise the bit depth." comment_scope_start="10233" comment_scope_end="10241">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_validate_info" id="2401160252586"/>
			<DeclRefExpr type="void (validate_info *, gamma_display *, png_const_structp, int, int)" spelling="init_validate_info" id="2400219503768"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2401313445350"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403708907826"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403205006707"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402826624197"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2401808510413"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2403386668877"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2401162819485"/>
			<DeclRefExpr type="int" spelling="processing" id="2402656374383"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2403191332280"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402110469781"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2402972381344"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2402046982203"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2404162610851"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2400944151566"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2403485100104"/>
			<DeclRefExpr type="int" spelling="process_tRNS" id="2402827290204"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401775510173"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2402746765086"/>
			<MemberRefExpr type="double" spelling="gamma_correction" id="2404239357272"/>
			<MemberRefExpr type="int" spelling="threshold_test" id="2403726940114"/>
			<MemberRefExpr type="int" spelling="do_background" id="2401796108375"/>
			<MemberRefExpr type="int" spelling="has_tRNS" id="2402970473237"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400993368841"/>
			<MemberRefExpr type="int" spelling="do_background" id="2400516583767"/>
			<UnexposedExpr type="void (*)(validate_info *, gamma_display *, png_const_structp, int, int)" spelling="init_validate_info" id="2403568124801"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403904773806"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2401286400675"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2401835946523"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2401818411386"/>
			<UnexposedExpr type="int" spelling="in_bd" id="2402344718174"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2400650134002"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2401277794442"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2401110052625"/>
			<UnexposedExpr type="int" spelling="out_bd" id="2402780674365"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2400052995531"/>
			<UnexposedExpr type="double" spelling="gamma_correction" id="2400332990060"/>
			<UnexposedExpr type="int" spelling="threshold_test" id="2402480336488"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402729444402"/>
			<UnexposedExpr type="int" spelling="in_bd" id="2403010653324"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2402830141068"/>
			<UnexposedExpr type="int" spelling="out_bd" id="2403621997180"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2400449928147"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2403454149171"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2400362618775"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2402875247667"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2403434940062"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401462549898"/>
			<UnexposedExpr type="int" spelling="has_tRNS" id="2403070471664"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2403666178446"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401348637580"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: FIX THIS: MAJOR BUG!  If the transformations all happen inside
    * the palette there is no way of finding out, because libpng fails to
    * update the palette on png_read_update_info.  Indeed, libpng doesn't
    * even do the required work until much later, when it doesn't have any
    * info pointer.  Oops.  For the moment 'processing' is turned off if
    * out_ct is palette." comment_scope_start="10242" comment_scope_end="10267">
		<SYMBOLS>
			<TypeRef type="png_const_bytep" spelling="png_const_bytep" id="2403111963452"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_const_bytep" spelling="pRow" id="2403387369008"/>
			<VarDecl type="png_byte [1024]" spelling="std" id="2402217330588"/>
			<VarDecl type="unsigned int" spelling="x" id="2401115177150"/>
			<CallExpr type="int" spelling="read_palette" id="2401726571354"/>
			<CallExpr type="png_bytep" spelling="store_image_row" id="2401310426810"/>
			<CallExpr type="void" spelling="transform_row" id="2400609186312"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402218457321"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2401625757003"/>
			<DeclRefExpr type="int" spelling="processing" id="2402873816941"/>
			<DeclRefExpr type="int" spelling="processing" id="2400004020265"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2402573663719"/>
			<DeclRefExpr type="int" spelling="out_is_transparent" id="2402415294756"/>
			<DeclRefExpr type="int (struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2401567895656"/>
			<DeclRefExpr type="store_palette" spelling="out_palette" id="2401728704465"/>
			<DeclRefExpr type="int" spelling="out_npalette" id="2401550222317"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2403809234885"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400917441158"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403577594557"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402713534165"/>
			<DeclRefExpr type="png_uint_32" spelling="h" id="2400165116101"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403139050105"/>
			<DeclRefExpr type="png_bytep (const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2400448959191"/>
			<DeclRefExpr type="const png_store *const" spelling="ps" id="2403382639919"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2402387883983"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2401428063766"/>
			<DeclRefExpr type="void (png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2403512592462"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400051833999"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2403007984114"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402409016368"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2400126493187"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2402513924238"/>
			<DeclRefExpr type="int" spelling="processing" id="2400395543980"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2402730353788"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2403933339370"/>
			<DeclRefExpr type="png_uint_32" spelling="w" id="2404181076207"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2402221820868"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2403684085253"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402359545803"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2400118318597"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402631050153"/>
			<UnexposedExpr type="int" spelling="processing" id="2403496123999"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2401366745961"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2402528360180"/>
			<UnexposedExpr type="int (*)(struct store_palette_entry *, int *, png_const_structp, png_infop)" spelling="read_palette" id="2401334006010"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="out_palette" id="2400654915596"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404278567212"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403815566992"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402175788008"/>
			<UnexposedExpr type="png_uint_32" spelling="h" id="2403264443854"/>
			<UnexposedExpr type="png_const_bytep" spelling="store_image_row" id="2400458617495"/>
			<UnexposedExpr type="png_bytep (*)(const png_store *, png_const_structp, int, png_uint_32)" spelling="store_image_row" id="2403136359340"/>
			<UnexposedExpr type="const png_store *" spelling="ps" id="2402148598182"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2404120102126"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2400291706930"/>
			<UnexposedExpr type="void (*)(png_const_structp, png_byte *, png_byte, png_byte, png_uint_32)" spelling="transform_row" id="2402104527338"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403710509246"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400437926397"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402116541493"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2403011901135"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2404087936735"/>
			<UnexposedExpr type="int" spelling="processing" id="2400039685053"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2402980062907"/>
			<UnexposedExpr type="png_uint_32" spelling="w" id="2403539472425"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="serves as a flag value" comment_scope_start="10268" comment_scope_end="10268">
		<SYMBOLS>
			<VarDecl type="double" spelling="alpha" id="2401962675580"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Record the palette index for index images." comment_scope_start="10270" comment_scope_end="10275">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="in_index" id="2402998777888"/>
			<VarDecl type="unsigned int" spelling="out_index" id="2401759868492"/>
			<CallExpr type="unsigned int" spelling="sample" id="2400939469456"/>
			<CallExpr type="unsigned int" spelling="sample" id="2400687085956"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2403827277250"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2401534668659"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400791689573"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2403232418264"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2401972441370"/>
			<DeclRefExpr type="png_byte" spelling="out_ct" id="2401207995185"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403400036235"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2402195792548"/>
			<DeclRefExpr type="png_byte" spelling="out_bd" id="2403153131427"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2403891843163"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2404033017453"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2401026352514"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2401572170794"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2400655247123"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2402014921477"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2404100776245"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2402783117080"/>
			<UnexposedExpr type="int" spelling="out_ct" id="2401706691274"/>
			<UnexposedExpr type="png_byte" spelling="out_ct" id="2403755525272"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2402593145883"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2400854240906"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400083914650"/>
			<UnexposedExpr type="png_byte" spelling="out_bd" id="2401716907363"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2402017223237"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Handle input alpha - png_set_background will cause the output
             * alpha to disappear so there is nothing to check." comment_scope_start="10276" comment_scope_end="10285">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="input_alpha" id="2402070748323"/>
			<CallExpr type="unsigned int" spelling="sample" id="2403932134223"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402059296998"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2400948632348"/>
			<DeclRefExpr type="int" spelling="in_is_transparent" id="2403251106098"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2403172171917"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403763906437"/>
			<DeclRefExpr type="unsigned int" spelling="in_index" id="2402721899297"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2402489198473"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2402540646548"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2402718662417"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2400254643211"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2402643178544"/>
			<DeclRefExpr type="unsigned int" spelling="samples_per_pixel" id="2403733365387"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2404005798062"/>
			<MemberRefExpr type="store_palette" spelling="palette" id="2401743164163"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401461484585"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2402221938981"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402433521102"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2401335400716"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402217744176"/>
			<UnexposedExpr type="int" spelling="in_is_transparent" id="2401801057156"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2402491425798"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403943447534"/>
			<UnexposedExpr type="unsigned int" spelling="alpha" id="2403439253696"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2403587250834"/>
			<UnexposedExpr type="struct store_palette_entry *" spelling="palette" id="2400050012029"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404233319253"/>
			<UnexposedExpr type="unsigned int" spelling="in_index" id="2404035513913"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2400261396867"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2403773074641"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2404056080801"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2401147046170"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2401648448377"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2402184010592"/>
			<UnexposedExpr type="unsigned int" spelling="samples_per_pixel" id="2401897068875"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="as a flag value" comment_scope_start="10286" comment_scope_end="10286">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="output_alpha" id="2401109750932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha" comment_scope_start="10300" comment_scope_end="10300">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2400535739498"/>
			<DeclRefExpr type="unsigned int" spelling="output_alpha" id="2400110442819"/>
			<UnexposedExpr type="unsigned int" spelling="output_alpha" id="2401599961368"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="background" comment_scope_start="10300" comment_scope_end="10300">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2400535739498"/>
			<DeclRefExpr type="unsigned int" spelling="output_alpha" id="2400110442819"/>
			<UnexposedExpr type="unsigned int" spelling="output_alpha" id="2401599961368"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no alpha in output" comment_scope_start="10302" comment_scope_end="10302"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is a copy of the calculation of 'i' above in order to
                   * have the alpha value to use in the background calculation." comment_scope_start="10304" comment_scope_end="10309">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="alpha" id="2401949909693"/>
			<DeclRefExpr type="unsigned int" spelling="input_alpha" id="2401210735589"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2402391981584"/>
			<DeclRefExpr type="double" spelling="alpha" id="2404016237600"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2401238013942"/>
			<MemberRefExpr type="unsigned int" spelling="isbit_shift" id="2402359745742"/>
			<MemberRefExpr type="unsigned int" spelling="sbit_max" id="2402247600606"/>
			<UnexposedExpr type="unsigned int" spelling="input_alpha" id="2402793942031"/>
			<UnexposedExpr type="unsigned int" spelling="isbit_shift" id="2402856394214"/>
			<UnexposedExpr type="double" spelling="sbit_max" id="2403568037117"/>
			<UnexposedExpr type="unsigned int" spelling="sbit_max" id="2403591634715"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="alpha needs to be set appropriately for this pixel, it is
                * currently 1 and needs to be 0 for an input pixel which matches
                * the values in tRNS." comment_scope_start="10314" comment_scope_end="10338">
		<SYMBOLS>
			<CallExpr type="unsigned int" spelling="sample" id="2400245270943"/>
			<CallExpr type="unsigned int" spelling="sample" id="2402988977741"/>
			<CallExpr type="unsigned int" spelling="sample" id="2403873068248"/>
			<CallExpr type="unsigned int" spelling="sample" id="2402944641736"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2404218230046"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2401917938856"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2403682915254"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2401111589957"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2401697915060"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2402790615456"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2401285883823"/>
			<DeclRefExpr type="double" spelling="alpha" id="2404180152788"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403529356433"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2400060006705"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2400671977148"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2401320577141"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2402079914929"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2400428060420"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403762643350"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2402975600523"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2403194775938"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2404020783374"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2403558753942"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2402433325337"/>
			<DeclRefExpr type="unsigned int (png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403715175725"/>
			<DeclRefExpr type="png_byte [1024]" spelling="std" id="2403651512571"/>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2404007840989"/>
			<DeclRefExpr type="png_byte" spelling="in_bd" id="2403001548856"/>
			<DeclRefExpr type="unsigned int" spelling="x" id="2403323376248"/>
			<DeclRefExpr type="gamma_display *" spelling="dp" id="2403504765312"/>
			<DeclRefExpr type="double" spelling="alpha" id="2400487851100"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2400308281074"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2403003622312"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403056770809"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2401567838189"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2400231421305"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401939781995"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2400278160379"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2402914081927"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400032598816"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2402898725534"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="transparent" id="2401930338606"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2401485936583"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2404253123839"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2400820330227"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2400330056632"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2400706154294"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400976203680"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402595858670"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2404154528383"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2401079973258"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2403401357659"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2402636734891"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2404154318837"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2400028655322"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2402660267118"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400606918381"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402485205221"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2401478140638"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2400636827476"/>
			<UnexposedExpr type="unsigned int" spelling="red" id="2401630925737"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2402958864706"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401397982807"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2403681438531"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2402393316987"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400502577427"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2401361665370"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2402615022819"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2403499136304"/>
			<UnexposedExpr type="unsigned int" spelling="green" id="2402546484068"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2403350648742"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2402493531106"/>
			<UnexposedExpr type="unsigned int (*)(png_const_bytep, png_byte, png_byte, png_uint_32, unsigned int, int, int)" spelling="sample" id="2402928891144"/>
			<UnexposedExpr type="png_const_bytep" spelling="std" id="2403652213351"/>
			<UnexposedExpr type="png_byte *" spelling="std" id="2400503938052"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2402956222237"/>
			<UnexposedExpr type="png_byte" spelling="in_bd" id="2404291371673"/>
			<UnexposedExpr type="unsigned int" spelling="x" id="2400573410950"/>
			<UnexposedExpr type="unsigned int" spelling="blue" id="2402314628981"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2404175183957"/>
			<UnexposedExpr type="gamma_display *" spelling="dp" id="2401448473915"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gray" comment_scope_start="10320" comment_scope_end="10320"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB" comment_scope_start="10326" comment_scope_end="10326"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Handle grayscale or RGB components." comment_scope_start="10341" comment_scope_end="10341"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="grayscale" comment_scope_start="10342" comment_scope_end="10342">
		<SYMBOLS>
			<DeclRefExpr type="png_byte" spelling="in_ct" id="2400412260877"/>
			<UnexposedExpr type="int" spelling="in_ct" id="2401202251950"/>
			<UnexposedExpr type="png_byte" spelling="in_ct" id="2403954021156"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="component" comment_scope_start="10346" comment_scope_end="10346">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2400483206246"/>
			<DeclRefExpr type="double" spelling="alpha" id="2403562138841"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2400197880497"/>
			<MemberRefExpr type="double" spelling="background_red" id="2401021794687"/>
			<UnexposedExpr type="double" spelling="alpha" id="2400365059293"/>
			<UnexposedExpr type="double" spelling="background_red" id="2403300952963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="RGB or palette" comment_scope_start="10347" comment_scope_end="10347"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="component" comment_scope_start="10354" comment_scope_end="10354">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2400069915147"/>
			<DeclRefExpr type="double" spelling="alpha" id="2402847513701"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2403750334405"/>
			<MemberRefExpr type="double" spelling="background_red" id="2401816822272"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402336888407"/>
			<UnexposedExpr type="double" spelling="background_red" id="2402990920466"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="component" comment_scope_start="10361" comment_scope_end="10361">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2403446022359"/>
			<DeclRefExpr type="double" spelling="alpha" id="2400094015119"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2401288006618"/>
			<MemberRefExpr type="double" spelling="background_green" id="2400462017477"/>
			<UnexposedExpr type="double" spelling="alpha" id="2401277958201"/>
			<UnexposedExpr type="double" spelling="background_green" id="2400366742218"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="component" comment_scope_start="10368" comment_scope_end="10368">
		<SYMBOLS>
			<CallExpr type="double" spelling="gamma_component_validate" id="2403045776136"/>
			<DeclRefExpr type="double" spelling="alpha" id="2401949153097"/>
			<DeclRefExpr type="validate_info" spelling="vi" id="2401802831779"/>
			<MemberRefExpr type="double" spelling="background_blue" id="2402107280131"/>
			<UnexposedExpr type="double" spelling="alpha" id="2402758187164"/>
			<UnexposedExpr type="double" spelling="background_blue" id="2401373915425"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="No transform is expected on the threshold tests." comment_scope_start="10377" comment_scope_end="10382">
		<SYMBOLS>
			<CallExpr type="int" spelling="sprintf" id="2403088687202"/>
			<CallExpr type="void" spelling="png_error" id="2401707206642"/>
			<DeclRefExpr type="int (char *, const char *, ...)" spelling="sprintf" id="2400493642311"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402307464694"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400734796786"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2400478268410"/>
			<DeclRefExpr type="png_const_structp" spelling="pp" id="2400232696330"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402974375839"/>
			<StringLiteral type="char [39]" spelling="&quot;gamma: below threshold row %lu changed&quot;" id="2401230546722"/>
			<UnexposedExpr type="int (*)(char *, const char *, ...)" spelling="sprintf" id="2403561220463"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402308684101"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2401866164989"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2401612040885"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2403861523121"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2403802641299"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403253425159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="row (y) loop" comment_scope_start="10383" comment_scope_end="10383"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="A single test run checking a gamma transformation.
 *
 * maxabs: maximum absolute error as a fraction
 * maxout: maximum output error in the output units
 * maxpc:  maximum percentage error (as a percentage)" comment_scope_start="10400" comment_scope_end="10433">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="png_color_16" spelling="png_color_16" id="2401023428895"/>
			<TypeRef type="gamma_display" spelling="gamma_display" id="2402670920995"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="png_store" spelling="png_store" id="2401727074185"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2401157130182"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2402070326597"/>
			<TypeRef type="gama_modification" spelling="gama_modification" id="2402580357673"/>
			<TypeRef type="srgb_modification" spelling="srgb_modification" id="2400433509633"/>
			<TypeRef type="sbit_modification" spelling="sbit_modification" id="2401592123540"/>
			<VarDecl type="gamma_display" spelling="d" id="2402529505949"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2404007283337"/>
			<VarDecl type="png_store *" spelling="fault" id="2402475035548"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2402404812025"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2402087451475"/>
			<VarDecl type="png_structp" spelling="pp" id="2401943134291"/>
			<VarDecl type="png_infop" spelling="pi" id="2400012778912"/>
			<VarDecl type="gama_modification" spelling="gama_mod" id="2403324363136"/>
			<VarDecl type="srgb_modification" spelling="srgb_mod" id="2401099144824"/>
			<VarDecl type="sbit_modification" spelling="sbit_mod" id="2403641316716"/>
			<ParmDecl type="png_modifier *" spelling="pmIn" id="2402107803146"/>
			<ParmDecl type="png_byte" spelling="colour_typeIn" id="2403804893924"/>
			<ParmDecl type="png_byte" spelling="bit_depthIn" id="2401804896384"/>
			<ParmDecl type="int" spelling="palette_numberIn" id="2402342190401"/>
			<ParmDecl type="int" spelling="interlace_typeIn" id="2401991844037"/>
			<ParmDecl type="const double" spelling="file_gammaIn" id="2402378372626"/>
			<ParmDecl type="const double" spelling="screen_gammaIn" id="2401690767641"/>
			<ParmDecl type="png_byte" spelling="sbitIn" id="2403149848480"/>
			<ParmDecl type="int" spelling="threshold_testIn" id="2402523453438"/>
			<ParmDecl type="const char *" spelling="name" id="2402591165754"/>
			<ParmDecl type="int" spelling="use_input_precisionIn" id="2400962487040"/>
			<ParmDecl type="int" spelling="scale16In" id="2402997975580"/>
			<ParmDecl type="int" spelling="expand16In" id="2400715560107"/>
			<ParmDecl type="int" spelling="do_backgroundIn" id="2402478631042"/>
			<ParmDecl type="const png_color_16 *" spelling="bkgd_colorIn" id="2402165624003"/>
			<ParmDecl type="double" spelling="bkgd_gammaIn" id="2401280639075"/>
			<CallExpr type="void" spelling="gamma_display_init" id="2403051011891"/>
			<CallExpr type="int" spelling="_setjmp" id="2403875983469"/>
			<DeclRefExpr type="png_modifier *" spelling="pmIn" id="2404198138929"/>
			<DeclRefExpr type="void (gamma_display *, png_modifier *, png_uint_32, double, double, png_byte, int, int, int, int, int, const png_color_16 *, double)" spelling="gamma_display_init" id="2403417912999"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402822946565"/>
			<DeclRefExpr type="png_modifier *" spelling="pmIn" id="2400313820383"/>
			<DeclRefExpr type="png_byte" spelling="colour_typeIn" id="2402623760214"/>
			<DeclRefExpr type="png_byte" spelling="bit_depthIn" id="2403309444202"/>
			<DeclRefExpr type="int" spelling="palette_numberIn" id="2400370585579"/>
			<DeclRefExpr type="int" spelling="interlace_typeIn" id="2404281583225"/>
			<DeclRefExpr type="const double" spelling="file_gammaIn" id="2403666097768"/>
			<DeclRefExpr type="const double" spelling="screen_gammaIn" id="2404139380367"/>
			<DeclRefExpr type="png_byte" spelling="sbitIn" id="2401135950558"/>
			<DeclRefExpr type="int" spelling="threshold_testIn" id="2403975750973"/>
			<DeclRefExpr type="int" spelling="use_input_precisionIn" id="2403433512567"/>
			<DeclRefExpr type="int" spelling="scale16In" id="2403309628461"/>
			<DeclRefExpr type="int" spelling="expand16In" id="2400333728267"/>
			<DeclRefExpr type="int" spelling="do_backgroundIn" id="2402919562669"/>
			<DeclRefExpr type="const png_color_16 *" spelling="bkgd_colorIn" id="2401799344992"/>
			<DeclRefExpr type="double" spelling="bkgd_gammaIn" id="2401260831164"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401253960456"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400894190705"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400117328970"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2403028029035"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2401417916560"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2404001993595"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2400325872557"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400662068651"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401123727438"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2402455816271"/>
			<UnexposedExpr type="png_modifier *" spelling="pmIn" id="2402919957389"/>
			<UnexposedExpr type="void (*)(gamma_display *, png_modifier *, png_uint_32, double, double, png_byte, int, int, int, int, int, const png_color_16 *, double)" spelling="gamma_display_init" id="2400428770342"/>
			<UnexposedExpr type="png_modifier *" spelling="pmIn" id="2401937281091"/>
			<UnexposedExpr type="double" spelling="file_gammaIn" id="2401144177137"/>
			<UnexposedExpr type="double" spelling="screen_gammaIn" id="2402495041467"/>
			<UnexposedExpr type="png_byte" spelling="sbitIn" id="2400388700094"/>
			<UnexposedExpr type="int" spelling="threshold_testIn" id="2403617149806"/>
			<UnexposedExpr type="int" spelling="use_input_precisionIn" id="2403505215161"/>
			<UnexposedExpr type="int" spelling="scale16In" id="2400077864358"/>
			<UnexposedExpr type="int" spelling="expand16In" id="2400191174762"/>
			<UnexposedExpr type="int" spelling="do_backgroundIn" id="2400808582672"/>
			<UnexposedExpr type="const png_color_16 *" spelling="bkgd_colorIn" id="2404244557279"/>
			<UnexposedExpr type="double" spelling="bkgd_gammaIn" id="2403093489583"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400635874495"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2402141461602"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401220081219"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2404049576828"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2402337836540"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="fraction" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="percentage" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="transformation"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="For the moment don't use the png_modifier support here." comment_scope_start="10434" comment_scope_end="10435">
		<SYMBOLS>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400345457190"/>
			<MemberRefExpr type="unsigned int" spelling="encoding_counter" id="2403955085129"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402869796254"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401922795414"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Just resets everything" comment_scope_start="10436" comment_scope_end="10436">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_set_encoding" id="2403022327115"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_set_encoding" id="2403038813306"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404267986812"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401473696177"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_set_encoding" id="2404042631558"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400921685332"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="resets" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make an appropriate modifier to set the PNG file gamma to the
       * given gamma value and the sBIT chunk to the given precision." comment_scope_start="10439" comment_scope_end="10443">
		<SYMBOLS>
			<CallExpr type="void" spelling="gama_modification_init" id="2400293476117"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2401140511488"/>
			<DeclRefExpr type="void (gama_modification *, png_modifier *, double)" spelling="gama_modification_init" id="2400256215357"/>
			<DeclRefExpr type="gama_modification" spelling="gama_mod" id="2403568586151"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2401060197615"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403362418855"/>
			<MemberRefExpr type="struct png_modification *" spelling="modifications" id="2402764925147"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400118943546"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400282767561"/>
			<MemberRefExpr type="double" spelling="file_gamma" id="2401573223350"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401696429710"/>
			<UnexposedExpr type="void (*)(gama_modification *, png_modifier *, double)" spelling="gama_modification_init" id="2402579835966"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402145512885"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2403292370916"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="delete" comment_scope_start="10444" comment_scope_end="10444">
		<SYMBOLS>
			<CallExpr type="void" spelling="srgb_modification_init" id="2401884760821"/>
			<DeclRefExpr type="void (srgb_modification *, png_modifier *, png_byte)" spelling="srgb_modification_init" id="2402026369351"/>
			<DeclRefExpr type="srgb_modification" spelling="srgb_mod" id="2400980934052"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403462175126"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402521585914"/>
			<UnexposedExpr type="void (*)(srgb_modification *, png_modifier *, png_byte)" spelling="srgb_modification_init" id="2401837870124"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400517612788"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="delete" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Get a png_struct for reading the image." comment_scope_start="10450" comment_scope_end="10453">
		<SYMBOLS>
			<CallExpr type="png_structp" spelling="set_modifier_for_read" id="2403272663728"/>
			<CallExpr type="void" spelling="standard_palette_init" id="2401946410009"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400952834185"/>
			<DeclRefExpr type="png_structp (png_modifier *, png_infopp, png_uint_32, const char *)" spelling="set_modifier_for_read" id="2402007873350"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400562790549"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2404042188433"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403756504676"/>
			<DeclRefExpr type="const char *" spelling="name" id="2401374305423"/>
			<DeclRefExpr type="void (standard_display *)" spelling="standard_palette_init" id="2403750274363"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403168915843"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401472421674"/>
			<MemberRefExpr type="png_uint_32" spelling="id" id="2402361434649"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402856101603"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400167007964"/>
			<UnexposedExpr type="png_structp (*)(png_modifier *, png_infopp, png_uint_32, const char *)" spelling="set_modifier_for_read" id="2402753363877"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403537149132"/>
			<UnexposedExpr type="png_uint_32" spelling="id" id="2400786071018"/>
			<UnexposedExpr type="const char *" spelling="name" id="2401611526726"/>
			<UnexposedExpr type="void (*)(standard_display *)" spelling="standard_palette_init" id="2400921222454"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Introduce the correct read function." comment_scope_start="10454" comment_scope_end="10463">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2401045198777"/>
			<CallExpr type="void" spelling="modifier_progressive_read" id="2403137879918"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403039746788"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400970313502"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401369955757"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404269156726"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="gamma_info" id="2401122899978"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2404057329087"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="gamma_end" id="2400659072088"/>
			<DeclRefExpr type="void (png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2401856983445"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400485017106"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402394051618"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401932072665"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2404049986112"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402438828417"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403768419785"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402501143078"/>
			<UnexposedExpr type="unsigned int" spelling="progressive" id="2403481623610"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403650210913"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2401804641183"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400779917583"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="gamma_info" id="2403975319266"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2400323929928"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="gamma_end" id="2400016379598"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2402030438536"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401242225744"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400538715412"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402899162659"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="introduce" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Share the row function with the standard implementation." comment_scope_start="10457" comment_scope_end="10460">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_progressive_read_fn" id="2401045198777"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2400970313502"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401369955757"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404269156726"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="gamma_info" id="2401122899978"/>
			<DeclRefExpr type="void (png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2404057329087"/>
			<DeclRefExpr type="void (png_structp, png_infop)" spelling="gamma_end" id="2400659072088"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_progressive_info_ptr, png_progressive_row_ptr, png_progressive_end_ptr)" spelling="png_set_progressive_read_fn" id="2401804641183"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400779917583"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="gamma_info" id="2403975319266"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, png_uint_32, int)" spelling="progressive_row" id="2400323929928"/>
			<UnexposedExpr type="void (*)(png_structp, png_infop)" spelling="gamma_end" id="2400016379598"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now feed data into the reader until we reach the end:" comment_scope_start="10461" comment_scope_end="10463">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_progressive_read" id="2403137879918"/>
			<DeclRefExpr type="void (png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2401856983445"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400485017106"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402394051618"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401932072665"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402501143078"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_structp, png_infop)" spelling="modifier_progressive_read" id="2402030438536"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401242225744"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400538715412"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402899162659"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="modifier_read expects a png_modifier*" comment_scope_start="10466" comment_scope_end="10468">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_read_fn" id="2400939033564"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2403955668436"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401478267398"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404228170604"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="modifier_read" id="2403449078933"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2404037203899"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2401958997183"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401037628521"/>
			<UnexposedExpr type="png_voidp" spelling="pm" id="2401242556303"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402969734211"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="modifier_read" id="2402071307697"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Check the header values:" comment_scope_start="10469" comment_scope_end="10471">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_read_info" id="2400774748728"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2400223798742"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2400553706440"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400834653330"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2401299978460"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2403954405912"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2400926481008"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Process the 'info' requirements. Only one image is generated" comment_scope_start="10472" comment_scope_end="10481">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_info_imp" id="2400852625305"/>
			<CallExpr type="void" spelling="sequential_row" id="2400952071642"/>
			<CallExpr type="void" spelling="gamma_image_validate" id="2401089642401"/>
			<DeclRefExpr type="void (gamma_display *, png_structp, png_infop)" spelling="gamma_info_imp" id="2401848175938"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402989415887"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2401216883297"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400482849697"/>
			<DeclRefExpr type="void (standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2400777368890"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402645224051"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2404178006328"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2401201654371"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400063250426"/>
			<DeclRefExpr type="void (gamma_display *, png_const_structp, png_infop)" spelling="gamma_image_validate" id="2403132113283"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2401244595943"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2402608865752"/>
			<DeclRefExpr type="png_infop" spelling="pi" id="2400522854039"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403932426752"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403543049821"/>
			<MemberRefExpr type="int" spelling="speed" id="2400922282828"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400427739277"/>
			<MemberRefExpr type="unsigned int" spelling="validated" id="2403200573264"/>
			<MemberRefExpr type="png_store *" spelling="ps" id="2402610322969"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402219499455"/>
			<UnexposedExpr type="void (*)(gamma_display *, png_structp, png_infop)" spelling="gamma_info_imp" id="2403525030845"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401076260802"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2403218264588"/>
			<UnexposedExpr type="void (*)(standard_display *, png_structp, png_infop, int, int)" spelling="sequential_row" id="2403426447756"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400059225593"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2402116462207"/>
			<UnexposedExpr type="int" spelling="speed" id="2402011790108"/>
			<UnexposedExpr type="void (*)(gamma_display *, png_const_structp, png_infop)" spelling="gamma_image_validate" id="2403443748574"/>
			<UnexposedExpr type="png_const_structp" spelling="pp" id="2402910280011"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2401900521214"/>
			<UnexposedExpr type="png_infop" spelling="pi" id="2404133903210"/>
			<UnexposedExpr type="png_store *" spelling="ps" id="2402510076581"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Log the summary values too." comment_scope_start="10490" comment_scope_end="10525">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_error" id="2403469661305"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403291633276"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402643081264"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403924176592"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404007974688"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400254735926"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403684275515"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402562813080"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400549546167"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400421417151"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402720455253"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400927694241"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403287370587"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2402435268363"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400704683031"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403325717916"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2400872497503"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2404277299729"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403018768166"/>
			<DeclRefExpr type="gamma_display" spelling="d" id="2403336579398"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403488737317"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2403588858375"/>
			<StringLiteral type="char [28]" spelling="&quot;bad bit depth (internal: 1)&quot;" id="2401555212554"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403236857895"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2400862158768"/>
			<MemberRefExpr type="png_byte" spelling="colour_type" id="2403827836478"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2402714879883"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2401066948724"/>
			<MemberRefExpr type="standard_display" spelling="this" id="2403161769790"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2403590775665"/>
			<MemberRefExpr type="double" spelling="error_gray_2" id="2403582413257"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401669867363"/>
			<MemberRefExpr type="double" spelling="error_gray_2" id="2403507452853"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402365238656"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2402759310662"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2404037804322"/>
			<MemberRefExpr type="double" spelling="error_gray_4" id="2401115413424"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2402238178237"/>
			<MemberRefExpr type="double" spelling="error_gray_4" id="2401795842770"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401698150485"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2400664665562"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2401271321018"/>
			<MemberRefExpr type="double" spelling="error_gray_8" id="2402703021607"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2403756263643"/>
			<MemberRefExpr type="double" spelling="error_gray_8" id="2403196966158"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2401753307449"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2401451854803"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2401117245085"/>
			<MemberRefExpr type="double" spelling="error_gray_16" id="2404168272834"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400898874062"/>
			<MemberRefExpr type="double" spelling="error_gray_16" id="2402067913911"/>
			<MemberRefExpr type="png_modifier *" spelling="pm" id="2400926688121"/>
			<MemberRefExpr type="double" spelling="maxerrout" id="2400214551753"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401746336504"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401051134537"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401416576481"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2404153600735"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2402191403084"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401406385315"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2403120040121"/>
			<UnexposedExpr type="double" spelling="error_gray_2" id="2401887035992"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401364875764"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401420049804"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2402867770102"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2402533937529"/>
			<UnexposedExpr type="double" spelling="error_gray_4" id="2401780196611"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402911101802"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402375527412"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2400785835262"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2402117162145"/>
			<UnexposedExpr type="double" spelling="error_gray_8" id="2400840630128"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400197815482"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401199467549"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2404201865192"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2404148457841"/>
			<UnexposedExpr type="double" spelling="error_gray_16" id="2400532583590"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400871625494"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403235381089"/>
			<UnexposedExpr type="double" spelling="maxerrout" id="2400955622991"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2403526196893"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2402389970148"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2400187928460"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="palette" comment_scope_start="10572" comment_scope_end="10572">
		<SYMBOLS>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, const char *, int, int, int, int, const png_color_16 *, double)" spelling="gamma_test" id="2401107441779"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402616320853"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402963462038"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400375781525"/>
			<DeclRefExpr type="int" spelling="interlace_type" id="2403245593759"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, const char *, int, int, int, int, const png_color_16 *, double)" spelling="gamma_test" id="2401318761313"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401834376930"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403410020828"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400800800188"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401749858263"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="sBIT" comment_scope_start="10573" comment_scope_end="10573">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="file_gamma" id="2400346743375"/>
			<DeclRefExpr type="double" spelling="screen_gamma" id="2402789768054"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2403373533390"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2402755689194"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2403349995797"/>
			<UnexposedExpr type="const char *" spelling="name" id="2403384729242"/>
			<UnexposedExpr type="char *" spelling="name" id="2400806964489"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="threshold test" comment_scope_start="10573" comment_scope_end="10573">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="file_gamma" id="2400346743375"/>
			<DeclRefExpr type="double" spelling="screen_gamma" id="2402789768054"/>
			<DeclRefExpr type="char [64]" spelling="name" id="2403373533390"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2402755689194"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2403349995797"/>
			<UnexposedExpr type="const char *" spelling="name" id="2403384729242"/>
			<UnexposedExpr type="char *" spelling="name" id="2400806964489"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no input precision" comment_scope_start="10574" comment_scope_end="10574"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no scale16" comment_scope_start="10575" comment_scope_end="10575"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no expand16" comment_scope_start="10575" comment_scope_end="10575"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no background" comment_scope_start="10575" comment_scope_end="10575"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="hence" comment_scope_start="10575" comment_scope_end="10575"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="no background gamma" comment_scope_start="10576" comment_scope_end="10576">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_test" id="2400874496776"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't test more than one instance of each palette - it's pointless, in
    * fact this test is somewhat excessive since libpng doesn't make this
    * decision based on colour type or bit depth!
    *
    * CHANGED: now test two palettes and, as a side effect, images with and
    * without tRNS." comment_scope_start="10586" comment_scope_end="10599">
		<SYMBOLS>
			<VarDecl type="double" spelling="test_gamma" id="2401518801484"/>
			<CallExpr type="int" spelling="next_format" id="2402480515177"/>
			<DeclRefExpr type="int (png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2400534355093"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400695649945"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402166787833"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2401012939659"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402143296222"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400373326303"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2400671446444"/>
			<DeclRefExpr type="double" spelling="test_gamma" id="2400403511358"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2401864053479"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2401428941435"/>
			<UnexposedExpr type="int (*)(png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2402035612012"/>
			<UnexposedExpr type="int" spelling="test_lbg_gamma_threshold" id="2403789870663"/>
			<UnexposedExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2400222757970"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402508355510"/>
			<UnexposedExpr type="int" spelling="test_tRNS" id="2403411099841"/>
			<UnexposedExpr type="unsigned int" spelling="test_tRNS" id="2400240997873"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403267888784"/>
			<UnexposedExpr type="unsigned int" spelling="palette_number" id="2400439541365"/>
			<UnexposedExpr type="double" spelling="test_gamma" id="2401242808544"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="instance" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="decision" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="palettes"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="There's little point testing the interlacing vs non-interlacing,
          * but this can be set from the command line." comment_scope_start="10600" comment_scope_end="10606">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_threshold_test" id="2400797390872"/>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, double, double)" spelling="gamma_threshold_test" id="2401651377496"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402411332583"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401275035217"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401163494696"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403304869427"/>
			<DeclRefExpr type="double" spelling="test_gamma" id="2403290728464"/>
			<DeclRefExpr type="double" spelling="test_gamma" id="2402349884053"/>
			<DeclRefExpr type="double" spelling="test_gamma" id="2402582459623"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2403685865875"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, double, double)" spelling="gamma_threshold_test" id="2401685934797"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400914166762"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401981044145"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400345771470"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2400744348503"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403604276029"/>
			<UnexposedExpr type="double" spelling="test_gamma" id="2400873251759"/>
			<UnexposedExpr type="double" spelling="test_gamma" id="2402976422066"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlacing"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And a special test for sRGB" comment_scope_start="10608" comment_scope_end="10614">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_threshold_test" id="2400846558130"/>
			<CallExpr type="int" spelling="fail" id="2401059280957"/>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, double, double)" spelling="gamma_threshold_test" id="2402182777523"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401754962734"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2402308882784"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402404012921"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402525749392"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2403569312166"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402086753135"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2400102879617"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, double, double)" spelling="gamma_threshold_test" id="2403941271885"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401412275386"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2404190992059"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400631301033"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401010301875"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402119067699"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2403521548161"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400920136355"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="srgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="sBIT" comment_scope_start="10668" comment_scope_end="10668">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2400886981197"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400439872732"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2401889486180"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2401327523130"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision" id="2401318475128"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401660964738"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="do not scale16" comment_scope_start="10668" comment_scope_end="10668">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2400886981197"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400439872732"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2401889486180"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2401327523130"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision" id="2401318475128"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401660964738"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The only interesting cases are colour and grayscale, alpha is ignored here
    * for overall speed.  Only bit depths where sbit is less than the bit depth
    * are tested." comment_scope_start="10682" comment_scope_end="10717">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="png_byte" spelling="colour_type" id="2404260688242"/>
			<VarDecl type="png_byte" spelling="bit_depth" id="2400486998618"/>
			<VarDecl type="unsigned int" spelling="npalette" id="2400815207234"/>
			<VarDecl type="unsigned int" spelling="i" id="2403778120030"/>
			<VarDecl type="unsigned int" spelling="j" id="2404207913566"/>
			<CallExpr type="int" spelling="next_format" id="2402932464572"/>
			<CallExpr type="void" spelling="gamma_transform_test" id="2402287584908"/>
			<CallExpr type="int" spelling="fail" id="2401945184824"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2403332719435"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402231060893"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2401821247506"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2400489136122"/>
			<DeclRefExpr type="int (png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2403568361107"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403219055447"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403075344741"/>
			<DeclRefExpr type="unsigned int" spelling="npalette" id="2403684507464"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400213884269"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402271589193"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401532344063"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400122174759"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2404127034417"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400147360403"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2402661539185"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2401663101614"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402738165172"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2401113803143"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403157832170"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2401663210440"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2400328770411"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2400079679319"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402461881287"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2403006912278"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403999727198"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2401161580382"/>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, int)" spelling="gamma_transform_test" id="2403447276078"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401536219292"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2404098197021"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403856199901"/>
			<DeclRefExpr type="unsigned int" spelling="npalette" id="2404183852712"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402363591278"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401902038081"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400755196435"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403072731608"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2400843421898"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2401786951465"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401296989108"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2402097406698"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400996687314"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2403501794006"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2400187783483"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2401658813877"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401273742478"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400512574392"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2404189488628"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2403526374380"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2404178798569"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_sbit" id="2400788663024"/>
			<UnexposedExpr type="png_byte" spelling="sbitlow" id="2401213997366"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404127403281"/>
			<UnexposedExpr type="int" spelling="sbit" id="2404012969020"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2401052259649"/>
			<UnexposedExpr type="int (*)(png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2403606439751"/>
			<UnexposedExpr type="int" spelling="test_lbg_gamma_sbit" id="2401015196437"/>
			<UnexposedExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2400162130526"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401198132687"/>
			<UnexposedExpr type="int" spelling="test_tRNS" id="2400645718853"/>
			<UnexposedExpr type="unsigned int" spelling="test_tRNS" id="2403212700041"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403963861822"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401480292166"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401905462944"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401702639664"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2402299283321"/>
			<UnexposedExpr type="int" spelling="sbit" id="2404230777528"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2403950415602"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2401664978995"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401199306265"/>
			<UnexposedExpr type="int" spelling="sbit" id="2402367213710"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2400236055070"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403758652587"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400721989422"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2401460943679"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2402204382243"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404128079506"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2402889024760"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2403822625120"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401758534182"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2403788607187"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2402411373361"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, int)" spelling="gamma_transform_test" id="2402488554031"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404193854249"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400145993716"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400760913935"/>
			<UnexposedExpr type="int" spelling="npalette" id="2400337322372"/>
			<UnexposedExpr type="unsigned int" spelling="npalette" id="2402884102606"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2401624352065"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402918032661"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2404036273724"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402890195291"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400627450963"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2403932114129"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400591086188"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2402540038371"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2403507019129"/>
			<UnexposedExpr type="int" spelling="use_input_precision_sbit" id="2402065369001"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_sbit" id="2403739560123"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402346333080"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2400451718681"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400979452230"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="scale16" comment_scope_start="10709" comment_scope_end="10709">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2402287584908"/>
			<DeclRefExpr type="png_byte" spelling="sbit" id="2401786951465"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401296989108"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_sbit" id="2400788663024"/>
			<UnexposedExpr type="png_byte" spelling="sbit" id="2403507019129"/>
			<UnexposedExpr type="int" spelling="use_input_precision_sbit" id="2402065369001"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_sbit" id="2403739560123"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402346333080"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Note that this requires a 16 bit source image but produces 8 bit output, so
 * we only need the 16bit write support, but the 16 bit images are only
 * generated if DO_16BIT is defined." comment_scope_start="10720" comment_scope_end="10734">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<ParmDecl type="png_modifier *" spelling="pm" id="2400757190352"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Include the alpha cases here. Note that sbit matches the internal value
    * used by the library - otherwise we will get spurious errors from the
    * internal sbit style approximation.
    *
    * The threshold test is here because otherwise the 16 to 8 conversion will
    * proceed *without* gamma correction, and the tests above will fail (but not
    * by much) - this could be fixed, it only appears with the -g option." comment_scope_start="10735" comment_scope_end="10752">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2402239470676"/>
			<VarDecl type="unsigned int" spelling="j" id="2401360263549"/>
			<CallExpr type="double" spelling="fabs" id="2403656344252"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402142071376"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400678389944"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400231116382"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2404294705600"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2401454556245"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2401010412964"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402590689986"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2402868062582"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400038065995"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2402108775607"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2401742433655"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400369262410"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2402717856125"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401195651205"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402879164638"/>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, int)" spelling="gamma_transform_test" id="2403560139589"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404147248449"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404179719948"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402177160504"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400253490689"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403468416890"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2400321271138"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401755405899"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400106584026"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2402230593065"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2401518818454"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2401354717152"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2402140871137"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2401122026524"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400390628430"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2400134592512"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402924122653"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2400540336064"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2400106654315"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404035335558"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2402334011930"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2401279247020"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2401201720338"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2402766690642"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402150703991"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2400369347787"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2404152305780"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403607167957"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2403249761477"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, int, const double, const double, png_byte, int, int)" spelling="gamma_transform_test" id="2402978953387"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402920917355"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2402618923509"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402070473709"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2403966551971"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402708647338"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2400168784453"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400590527372"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402950484035"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2400872935869"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="approximation" type=" 'Interpolation/Extrapolation/Numerical/Linear Algebra"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="scale16" comment_scope_start="10753" comment_scope_end="10753">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2403856996764"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403002958745"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2403541840292"/>
			<UnexposedExpr type="int" spelling="use_input_precision_16to8" id="2401453682683"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_16to8" id="2401465239731"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401508819470"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="scale16" comment_scope_start="10760" comment_scope_end="10760">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2403477264263"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403201057855"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2401118080110"/>
			<UnexposedExpr type="int" spelling="use_input_precision_16to8" id="2400108374881"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_16to8" id="2400370006006"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402732339579"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="scale16" comment_scope_start="10767" comment_scope_end="10767">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2401562026311"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403760213359"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2403943245906"/>
			<UnexposedExpr type="int" spelling="use_input_precision_16to8" id="2401042571038"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_16to8" id="2400927757613"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404191882803"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="scale16" comment_scope_start="10774" comment_scope_end="10774">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_transform_test" id="2403927299843"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401741637502"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2401228325241"/>
			<UnexposedExpr type="int" spelling="use_input_precision_16to8" id="2403207489494"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision_16to8" id="2403123074120"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400784281260"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="16 to 8 bit conversion" comment_scope_start="10782" comment_scope_end="10782"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make up a name and get an appropriate background gamma value." comment_scope_start="10800" comment_scope_end="10841">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="do_background" id="2403912228952"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2403392738908"/>
			<DeclRefExpr type="double" spelling="bg" id="2403103488762"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2403811624711"/>
			<DeclRefExpr type="double" spelling="bg" id="2402806502814"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2402157698705"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2402281320439"/>
			<DeclRefExpr type="double" spelling="bg" id="2400572684814"/>
			<DeclRefExpr type="const double" spelling="file_gamma" id="2403948061862"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2400157501427"/>
			<DeclRefExpr type="double" spelling="bg" id="2400549715320"/>
			<DeclRefExpr type="const double" spelling="file_gamma" id="2400754133068"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2400319726049"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2401536730888"/>
			<DeclRefExpr type="double" spelling="bg" id="2401962816166"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2402102301039"/>
			<DeclRefExpr type="double" spelling="bg" id="2403390432249"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2403672480710"/>
			<DeclRefExpr type="double" spelling="bg" id="2400248819397"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2402573793459"/>
			<DeclRefExpr type="double" spelling="bg" id="2401014425694"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2403154796517"/>
			<StringLiteral type="char [15]" spelling="&quot; bckg(Screen):&quot;" id="2400404051689"/>
			<StringLiteral type="char [13]" spelling="&quot; bckg(File):&quot;" id="2403186244931"/>
			<StringLiteral type="char [15]" spelling="&quot; bckg(Unique):&quot;" id="2403305594258"/>
			<StringLiteral type="char [12]" spelling="&quot; alpha(PNG)&quot;" id="2403336679989"/>
			<StringLiteral type="char [20]" spelling="&quot; alpha(Porter-Duff)&quot;" id="2401458027486"/>
			<StringLiteral type="char [18]" spelling="&quot; alpha(Optimized)&quot;" id="2401031632599"/>
			<StringLiteral type="char [15]" spelling="&quot; alpha(Broken)&quot;" id="2401847576859"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403812409109"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2402592764681"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2403142357419"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2403994461376"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2400656276936"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="should not be used" comment_scope_start="10805" comment_scope_end="10805">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2403103488762"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This tests the handling of a unique value, the math is such that the
          * value tends to be &lt;1, but is neither screen nor file (even if they
          * match!)" comment_scope_start="10817" comment_scope_end="10825">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2400549715320"/>
			<DeclRefExpr type="const double" spelling="file_gamma" id="2400754133068"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2400319726049"/>
			<DeclRefExpr type="png_const_charp" spelling="base" id="2401536730888"/>
			<StringLiteral type="char [12]" spelling="&quot; alpha(PNG)&quot;" id="2403336679989"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2403994461376"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2400656276936"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="unique" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="screen" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="should not be used" comment_scope_start="10826" comment_scope_end="10826">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2401962816166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="should not be used" comment_scope_start="10830" comment_scope_end="10830">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2403390432249"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="should not be used" comment_scope_start="10834" comment_scope_end="10834">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2400248819397"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="should not be used" comment_scope_start="10838" comment_scope_end="10838">
		<SYMBOLS>
			<DeclRefExpr type="double" spelling="bg" id="2401014425694"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use random background values - the background is always presented in the
    * output space (8 or 16 bit components)." comment_scope_start="10843" comment_scope_end="10877">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<VarDecl type="png_uint_32" spelling="r" id="2401439679277"/>
			<CallExpr type="png_uint_32" spelling="random_32" id="2400136309128"/>
			<CallExpr type="png_uint_32" spelling="random_32" id="2400780132970"/>
			<CallExpr type="double" spelling="fabs" id="2404204430176"/>
			<DeclRefExpr type="int" spelling="expand_16" id="2400939704192"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2400593447027"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_32" id="2400646056350"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400639972213"/>
			<DeclRefExpr type="png_uint_32" spelling="r" id="2400735544823"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402557809714"/>
			<DeclRefExpr type="png_uint_32" spelling="r" id="2401627963251"/>
			<DeclRefExpr type="png_uint_32" spelling="r" id="2402821400571"/>
			<DeclRefExpr type="png_uint_32 (void)" spelling="random_32" id="2402743733226"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402886120487"/>
			<DeclRefExpr type="png_uint_32" spelling="r" id="2404125303414"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402914418625"/>
			<DeclRefExpr type="png_uint_32" spelling="r" id="2400223337872"/>
			<DeclRefExpr type="int" spelling="expand_16" id="2400770863755"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401313299373"/>
			<DeclRefExpr type="int" spelling="do_background" id="2400255766403"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2400034861842"/>
			<DeclRefExpr type="double" spelling="bg" id="2401011383888"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2404133127269"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400899580914"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2401503682962"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403435155803"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400995345928"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403145506770"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402369986834"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400990989869"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400903411543"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2404141214949"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2402845063109"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2403879056907"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2400729846962"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2400570486395"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2404071942124"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2400479867547"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2404277097649"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2402703290950"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2401737530770"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2402341745160"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2401011335804"/>
			<UnexposedExpr type="int" spelling="expand_16" id="2404029317790"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2400376838902"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400575227818"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_32" id="2400945960251"/>
			<UnexposedExpr type="png_uint_32" spelling="r" id="2403483554688"/>
			<UnexposedExpr type="png_uint_32" spelling="r" id="2400927280591"/>
			<UnexposedExpr type="png_uint_32 (*)(void)" spelling="random_32" id="2401926734543"/>
			<UnexposedExpr type="png_uint_32" spelling="r" id="2402447984031"/>
			<UnexposedExpr type="png_uint_32" spelling="r" id="2404241481430"/>
			<UnexposedExpr type="int" spelling="expand_16" id="2400278090882"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400446942017"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403969986173"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2401914417918"/>
			<UnexposedExpr type="double" spelling="bg" id="2404189086398"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2403672164534"/>
			<UnexposedExpr type="int" spelling="red" id="2402954868730"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2404101554522"/>
			<UnexposedExpr type="int" spelling="green" id="2403481187033"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2403540587841"/>
			<UnexposedExpr type="int" spelling="blue" id="2402731214233"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2401637941733"/>
			<UnexposedExpr type="int" spelling="gray" id="2403402012243"/>
			<UnexposedExpr type="png_uint_16" spelling="gray" id="2400179142219"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="space" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="In earlier libpng versions, those where DIGITIZE is set, any background
       * gamma correction in the expand16 case was done using 8-bit gamma
       * correction tables, resulting in larger errors.  To cope with those
       * cases use a 16-bit background value which will handle this gamma
       * correction." comment_scope_start="10856" comment_scope_end="10866">
		<SYMBOLS>
			<CallExpr type="double" spelling="fabs" id="2404204430176"/>
			<DeclRefExpr type="int" spelling="expand_16" id="2400770863755"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401313299373"/>
			<DeclRefExpr type="int" spelling="do_background" id="2400255766403"/>
			<DeclRefExpr type="double (double)" spelling="fabs" id="2400034861842"/>
			<DeclRefExpr type="double" spelling="bg" id="2401011383888"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2404133127269"/>
			<UnexposedExpr type="int" spelling="expand_16" id="2400278090882"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400446942017"/>
			<UnexposedExpr type="int" spelling="do_background" id="2403969986173"/>
			<UnexposedExpr type="double (*)(double)" spelling="fabs" id="2401914417918"/>
			<UnexposedExpr type="double" spelling="bg" id="2404189086398"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2403672164534"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The background values will be looked up in an 8-bit table to do
             * the gamma correction, so only select values which are an exact
             * match for the 8-bit table entries:" comment_scope_start="10867" comment_scope_end="10875">
		<SYMBOLS>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400899580914"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2401503682962"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403435155803"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400995345928"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403145506770"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402369986834"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400990989869"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400903411543"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2400570486395"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2404071942124"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2400479867547"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2404277097649"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2402703290950"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2401737530770"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2402341745160"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2401011335804"/>
			<UnexposedExpr type="int" spelling="red" id="2402954868730"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2404101554522"/>
			<UnexposedExpr type="int" spelling="green" id="2403481187033"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2403540587841"/>
			<UnexposedExpr type="int" spelling="blue" id="2402731214233"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2401637941733"/>
			<UnexposedExpr type="int" spelling="gray" id="2403402012243"/>
			<UnexposedExpr type="png_uint_16" spelling="gray" id="2400179142219"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="8 bit colors" comment_scope_start="10879" comment_scope_end="10879"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="rgb(193,193,193) to detect errors" comment_scope_start="10889" comment_scope_end="10889">
		<SYMBOLS>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400919782749"/>
			<MemberRefExpr type="png_byte" spelling="index" id="2401027979287"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Because, currently, png_set_background is always called with
       * 'need_expand' false in this case and because the gamma test itself
       * doesn't cause an expand to 8-bit for lower bit depths the colour must
       * be reduced to the correct range." comment_scope_start="10893" comment_scope_end="10900">
		<SYMBOLS>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2403997936363"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403210355501"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400767245600"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403858884378"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2403891463315"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2403837517566"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2401887847313"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2404105938324"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2402153448921"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="reduced" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Grayscale input, we do not convert to RGB (TBD), so we must set the
       * background to gray - else libpng seems to fail." comment_scope_start="10901" comment_scope_end="10905">
		<SYMBOLS>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403419501579"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400585346006"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2404162602955"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2403114602947"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2403957821107"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2401731309436"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2402044144253"/>
			<MemberRefExpr type="png_uint_16" spelling="gray" id="2402356534167"/>
			<UnexposedExpr type="png_uint_16" spelling="gray" id="2400215555674"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Include the background color and gamma in the name:" comment_scope_start="10915" comment_scope_end="10916">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401701886732"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401141474239"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402099370953"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2401128643907"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2401602122705"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401274397581"/>
			<StringLiteral type="char [2]" spelling="&quot;(&quot;" id="2402560282714"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401679311132"/>
			<UnexposedExpr type="char *" spelling="name" id="2402958931463"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2404029329930"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This assumes no expand gray-&gt;rgb - the current code won't handle that!" comment_scope_start="10917" comment_scope_end="10926">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecatn" id="2403202038337"/>
			<CallExpr type="size_t" spelling="safecat" id="2401569789390"/>
			<CallExpr type="size_t" spelling="safecatn" id="2403610336950"/>
			<CallExpr type="size_t" spelling="safecat" id="2403276511458"/>
			<CallExpr type="size_t" spelling="safecatn" id="2402541965948"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2400387743193"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402152638138"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2402586686842"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2403344339459"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2403974069717"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403868792627"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2404284717718"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404037505129"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401995963901"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2400509123257"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2404117118576"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401136271740"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401909313561"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2403900720059"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2403794065661"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2403165383726"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403118958334"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2402273041423"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403949747806"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403261304707"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2401712894746"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2402372884418"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402471651690"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401126135568"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2400782891851"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2400703417692"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2401006431646"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400714271406"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2401588551380"/>
			<StringLiteral type="char [2]" spelling="&quot;,&quot;" id="2402849134162"/>
			<StringLiteral type="char [2]" spelling="&quot;,&quot;" id="2404272637862"/>
			<MemberRefExpr type="png_uint_16" spelling="red" id="2402258114117"/>
			<MemberRefExpr type="png_uint_16" spelling="green" id="2401789537291"/>
			<MemberRefExpr type="png_uint_16" spelling="blue" id="2402949057887"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402031416501"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401703980948"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2403590197289"/>
			<UnexposedExpr type="char *" spelling="name" id="2403046320771"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403720480732"/>
			<UnexposedExpr type="int" spelling="red" id="2403817831873"/>
			<UnexposedExpr type="png_uint_16" spelling="red" id="2403286624127"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400972685286"/>
			<UnexposedExpr type="char *" spelling="name" id="2404274906384"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400968436899"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402221518378"/>
			<UnexposedExpr type="char *" spelling="name" id="2403954110180"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400470920496"/>
			<UnexposedExpr type="int" spelling="green" id="2401069409341"/>
			<UnexposedExpr type="png_uint_16" spelling="green" id="2400373116418"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402968654610"/>
			<UnexposedExpr type="char *" spelling="name" id="2404013649770"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401242664343"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2400499946199"/>
			<UnexposedExpr type="char *" spelling="name" id="2402152613094"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402410597162"/>
			<UnexposedExpr type="int" spelling="blue" id="2403309701278"/>
			<UnexposedExpr type="png_uint_16" spelling="blue" id="2400874699657"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="sBIT" comment_scope_start="10934" comment_scope_end="10934">
		<SYMBOLS>
			<DeclRefExpr type="const double" spelling="file_gamma" id="2401154723256"/>
			<DeclRefExpr type="const double" spelling="screen_gamma" id="2403957329055"/>
			<DeclRefExpr type="char [128]" spelling="name" id="2401748965956"/>
			<DeclRefExpr type="int" spelling="use_input_precision" id="2403160803673"/>
			<UnexposedExpr type="double" spelling="file_gamma" id="2400944600637"/>
			<UnexposedExpr type="double" spelling="screen_gamma" id="2401634125194"/>
			<UnexposedExpr type="const char *" spelling="name" id="2402559348105"/>
			<UnexposedExpr type="char *" spelling="name" id="2400936650992"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2402410576463"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="strip 16" comment_scope_start="10935" comment_scope_end="10935">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_test" id="2403581820775"/>
			<DeclRefExpr type="int" spelling="expand_16" id="2403894033750"/>
			<DeclRefExpr type="int" spelling="do_background" id="2401504350429"/>
			<DeclRefExpr type="png_color_16" spelling="background" id="2400883043257"/>
			<DeclRefExpr type="double" spelling="bg" id="2402814996594"/>
			<UnexposedExpr type="int" spelling="expand_16" id="2402085300876"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401304498595"/>
			<UnexposedExpr type="double" spelling="bg" id="2400977891636"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Skip the non-alpha cases - there is no setting of a transparency colour at
    * present.
    *
    * TODO: incorrect; the palette case sets tRNS and, now RGB and gray do,
    * however the palette case fails miserably so is commented out below." comment_scope_start="10947" comment_scope_end="10955">
		<SYMBOLS>
			<CallExpr type="int" spelling="next_format" id="2402274391851"/>
			<DeclRefExpr type="int (png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2404228681977"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2404112292057"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2402326066752"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2401182789907"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402202671917"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401907156082"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2403017444649"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2403472783970"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2402118612670"/>
			<UnexposedExpr type="int (*)(png_bytep, png_bytep, unsigned int *, int, int)" spelling="next_format" id="2403216913182"/>
			<UnexposedExpr type="int" spelling="test_lbg_gamma_composition" id="2400183582619"/>
			<UnexposedExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2400085866501"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402798352236"/>
			<UnexposedExpr type="int" spelling="test_tRNS" id="2401163721906"/>
			<UnexposedExpr type="unsigned int" spelling="test_tRNS" id="2402040932767"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401582664812"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2400929753130"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2400333562742"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: FIXME" comment_scope_start="10956" comment_scope_end="10956"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: FIXME: this should work" comment_scope_start="10957" comment_scope_end="10963">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="i" id="2403742053926"/>
			<VarDecl type="unsigned int" spelling="j" id="2400357994179"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401012006540"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2403147169434"/>
			<UnexposedExpr type="int" spelling="colour_type" id="2402038696863"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2401971784263"/>
			<UnexposedExpr type="unsigned int" spelling="palette_number" id="2400650605640"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't skip the i==j case here - it's relevant." comment_scope_start="10964" comment_scope_end="10976">
		<SYMBOLS>
			<CallExpr type="void" spelling="gamma_composition_test" id="2403610706603"/>
			<CallExpr type="int" spelling="fail" id="2400116503334"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2400478090903"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403522210133"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400808775336"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2403060783212"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2403014740927"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2403634711562"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400149234104"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2400246018222"/>
			<DeclRefExpr type="void (png_modifier *, png_byte, png_byte, int, int, const double, const double, int, int, int)" spelling="gamma_composition_test" id="2401684781842"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403837905415"/>
			<DeclRefExpr type="png_byte" spelling="colour_type" id="2401947451513"/>
			<DeclRefExpr type="png_byte" spelling="bit_depth" id="2403010301190"/>
			<DeclRefExpr type="unsigned int" spelling="palette_number" id="2400842481164"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403434351963"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400661578745"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2402519624562"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400981369130"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2403984342723"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401367094008"/>
			<DeclRefExpr type="int" spelling="do_background" id="2400588365837"/>
			<DeclRefExpr type="int" spelling="expand_16" id="2403154256044"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401721650610"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403477888538"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400093531368"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402875134822"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2401175845874"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2403320881603"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2403114678700"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2402086204072"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2401011219854"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2401190651288"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403662921156"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2400873651402"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2400333789484"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401634764459"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_byte, png_byte, int, int, const double, const double, int, int, int)" spelling="gamma_composition_test" id="2400674137539"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401773742870"/>
			<UnexposedExpr type="png_byte" spelling="colour_type" id="2403589041570"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2400420370783"/>
			<UnexposedExpr type="int" spelling="palette_number" id="2400498947845"/>
			<UnexposedExpr type="unsigned int" spelling="palette_number" id="2401551673960"/>
			<UnexposedExpr type="int" spelling="interlace_type" id="2404107381552"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402847970060"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2401717274993"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403713859091"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2403613855927"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400883447244"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401696379755"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2403329832287"/>
			<UnexposedExpr type="int" spelling="use_input_precision" id="2403842679822"/>
			<UnexposedExpr type="unsigned int" spelling="use_input_precision" id="2403095741663"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401272621147"/>
			<UnexposedExpr type="int" spelling="do_background" id="2401519063129"/>
			<UnexposedExpr type="int" spelling="expand_16" id="2402602276922"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2401655738151"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404053241918"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="READ_BACKGROUND || READ_ALPHA_MODE" comment_scope_start="10979" comment_scope_end="10979"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Use -1 to catch tests that were not actually run" comment_scope_start="10984" comment_scope_end="10989">
		<SYMBOLS>
			<FunctionDecl type="void (png_modifier *)" spelling="init_gamma_errors" id="2400419332687"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400968920374"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401282039597"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2404239173627"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400982971927"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402547139302"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403885765448"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403478705219"/>
			<MemberRefExpr type="double" spelling="error_gray_2" id="2401355555388"/>
			<MemberRefExpr type="double" spelling="error_gray_4" id="2403076430583"/>
			<MemberRefExpr type="double" spelling="error_gray_8" id="2400024296217"/>
			<MemberRefExpr type="double" spelling="error_color_8" id="2402852309159"/>
			<MemberRefExpr type="double" spelling="error_indexed" id="2400323228167"/>
			<MemberRefExpr type="double" spelling="error_gray_16" id="2402961024645"/>
			<MemberRefExpr type="double" spelling="error_color_16" id="2402006560539"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404084693049"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400115995666"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403535040518"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403939774313"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401725008499"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400024031118"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400446662979"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="catch" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: remove this" comment_scope_start="11029" comment_scope_end="11036">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="calculations_use_input_precision" id="2401524481337"/>
			<VarDecl type="double" spelling="maxout8" id="2403748444479"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403470568831"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402840898562"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402263494291"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2400066471589"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403646854397"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400199089142"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2403076675366"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402346273216"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Save certain values for the temporary overrides below." comment_scope_start="11029" comment_scope_end="11036">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="calculations_use_input_precision" id="2401524481337"/>
			<VarDecl type="double" spelling="maxout8" id="2403748444479"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403470568831"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402840898562"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402263494291"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2400066471589"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403646854397"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400199089142"/>
			<UnexposedExpr type="double" spelling="maxout8" id="2403076675366"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402346273216"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="temporary" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First some arbitrary no-transform tests:" comment_scope_start="11037" comment_scope_end="11044">
		<SYMBOLS>
			<CallExpr type="void" spelling="perform_gamma_threshold_tests" id="2401035282974"/>
			<CallExpr type="int" spelling="fail" id="2403368228434"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400530378297"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403714729924"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_gamma_threshold_tests" id="2401133712116"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403138603145"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401188048366"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403005583241"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2402392840157"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403932835163"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2402368358591"/>
			<UnexposedExpr type="unsigned int" spelling="speed" id="2401338102853"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400271228809"/>
			<UnexposedExpr type="int" spelling="test_gamma_threshold" id="2402029720485"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_threshold" id="2400640658332"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403777072362"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_gamma_threshold_tests" id="2402218237365"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402530640062"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2402171977892"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403355335988"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now some real transforms." comment_scope_start="11046" comment_scope_end="11082">
		<SYMBOLS>
			<CallExpr type="int" spelling="fflush" id="2400973528339"/>
			<CallExpr type="int" spelling="printf" id="2401423593487"/>
			<CallExpr type="int" spelling="printf" id="2403134350394"/>
			<CallExpr type="int" spelling="printf" id="2402662490654"/>
			<CallExpr type="int" spelling="printf" id="2403234592496"/>
			<CallExpr type="int" spelling="printf" id="2400956677518"/>
			<CallExpr type="int" spelling="printf" id="2400721244940"/>
			<CallExpr type="int" spelling="printf" id="2403140200236"/>
			<CallExpr type="int" spelling="printf" id="2400846015851"/>
			<CallExpr type="int" spelling="printf" id="2401837345403"/>
			<CallExpr type="int" spelling="printf" id="2401087539779"/>
			<CallExpr type="int" spelling="printf" id="2403178529201"/>
			<CallExpr type="int" spelling="fflush" id="2402419121668"/>
			<CallExpr type="void" spelling="init_gamma_errors" id="2404088467116"/>
			<CallExpr type="void" spelling="perform_gamma_transform_tests" id="2402022225775"/>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2402392005364"/>
			<CallExpr type="int" spelling="fail" id="2401242892439"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400061808054"/>
			<DeclRefExpr type="int" spelling="summary" id="2401156121247"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2402766630945"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403246437420"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401470265722"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400392599728"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400687600393"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401310577774"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401909502234"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401623195823"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401825990321"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2402561477152"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2403921501377"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400760866208"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2403029427466"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2402273597170"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2402210891593"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="init_gamma_errors" id="2400173571859"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400713940026"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403618804984"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402901475709"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_gamma_transform_tests" id="2400666202001"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400640583816"/>
			<DeclRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401524727451"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403650143994"/>
			<DeclRefExpr type="int" spelling="summary" id="2402863568656"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2404151961422"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402911853604"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2400067647138"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400602269649"/>
			<StringLiteral type="char [33]" spelling="&quot;Gamma correction error summary\n\n&quot;" id="2400551935317"/>
			<StringLiteral type="char [60]" spelling="&quot;The printed value is the maximum error in the pixel values\n&quot;" id="2400500676310"/>
			<StringLiteral type="char [60]" spelling="&quot;calculated by the libpng gamma correction code.  The error\n&quot;" id="2400421379162"/>
			<StringLiteral type="char [58]" spelling="&quot;is calculated as the difference between the output pixel\n&quot;" id="2403765571040"/>
			<StringLiteral type="char [56]" spelling="&quot;value (always an integer) and the ideal value from the\n&quot;" id="2404270560457"/>
			<StringLiteral type="char [51]" spelling="&quot;libpng specification (typically not an integer).\n\n&quot;" id="2401384656706"/>
			<StringLiteral type="char [57]" spelling="&quot;Expect this value to be less than .5 for 8 bit formats,\n&quot;" id="2401944507681"/>
			<StringLiteral type="char [60]" spelling="&quot;less than 1 for formats with fewer than 8 bits and a small\n&quot;" id="2403419776358"/>
			<StringLiteral type="char [56]" spelling="&quot;number (typically less than 5) for the 16 bit formats.\n&quot;" id="2403002328545"/>
			<StringLiteral type="char [54]" spelling="&quot;For performance reasons the value for 16 bit formats\n&quot;" id="2403531555161"/>
			<StringLiteral type="char [55]" spelling="&quot;increases when the image file includes an sBIT chunk.\n&quot;" id="2400702947413"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2400850029605"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2401377164208"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403929940656"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402155833662"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_transform" id="2400130570792"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400304127109"/>
			<UnexposedExpr type="int" spelling="summary" id="2402948406901"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2403631103916"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402361482822"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400206616055"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2401464710618"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2401981148018"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2401909767902"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400701617429"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2402162007740"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2402509195130"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2401750397608"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400834298419"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2403986693836"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2403898303449"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2403006485961"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2401814657274"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="init_gamma_errors" id="2401708009672"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404076033342"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_expand16" id="2400795847956"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401382502857"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402712868187"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_gamma_transform_tests" id="2401376610399"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403083646345"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402064237079"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402046388133"/>
			<UnexposedExpr type="int" spelling="summary" id="2401148166709"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2403617020974"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403241716875"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2402476743462"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401538148578"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="real" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: remove this.  Necessary because the current libpng
       * implementation works in 8 bits:" comment_scope_start="11068" comment_scope_end="11077">
		<SYMBOLS>
			<CallExpr type="void" spelling="perform_gamma_transform_tests" id="2402022225775"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403618804984"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402901475709"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_gamma_transform_tests" id="2400666202001"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400640583816"/>
			<DeclRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401524727451"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403650143994"/>
			<DeclRefExpr type="int" spelling="summary" id="2402863568656"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2401377164208"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403929940656"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402155833662"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_expand16" id="2400795847956"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401382502857"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402712868187"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_gamma_transform_tests" id="2401376610399"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403083646345"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402064237079"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402046388133"/>
			<UnexposedExpr type="int" spelling="summary" id="2401148166709"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="who" comment_scope_start="11078" comment_scope_end="11078">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2402392005364"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2404151961422"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402911853604"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2403617020974"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403241716875"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="low bit depth" comment_scope_start="11078" comment_scope_end="11078">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2402392005364"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2404151961422"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402911853604"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2403617020974"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403241716875"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="indexed" comment_scope_start="11078" comment_scope_end="11078">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2402392005364"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2404151961422"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402911853604"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2403617020974"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403241716875"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The sbit tests produce much larger errors:" comment_scope_start="11084" comment_scope_end="11095">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_gamma_errors" id="2402090585756"/>
			<CallExpr type="void" spelling="perform_gamma_sbit_tests" id="2400232426405"/>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2403615315697"/>
			<CallExpr type="int" spelling="fail" id="2403607675021"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403550880817"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="init_gamma_errors" id="2400636417125"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402846205732"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_gamma_sbit_tests" id="2400022131839"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402943783785"/>
			<DeclRefExpr type="int" spelling="summary" id="2402533380263"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2402716268877"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400836068016"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402865874644"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2402062859113"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400148294859"/>
			<StringLiteral type="char [5]" spelling="&quot;sBIT&quot;" id="2403687979753"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2403507183869"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2400523947478"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_sbit" id="2401289921198"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401016369056"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="init_gamma_errors" id="2403184236842"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2403335337603"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_gamma_sbit_tests" id="2403968352291"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404084593558"/>
			<UnexposedExpr type="int" spelling="summary" id="2402300683893"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2402709257949"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400860180070"/>
			<UnexposedExpr type="unsigned int" spelling="sbitlow" id="2401771992859"/>
			<UnexposedExpr type="png_byte" spelling="sbitlow" id="2401187252509"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401132960277"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2402690974751"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401258622745"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="indexed" comment_scope_start="11091" comment_scope_end="11091">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2403615315697"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2402716268877"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400836068016"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402865874644"/>
			<StringLiteral type="char [5]" spelling="&quot;sBIT&quot;" id="2403687979753"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2400523947478"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2402709257949"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400860180070"/>
			<UnexposedExpr type="unsigned int" spelling="sbitlow" id="2401771992859"/>
			<UnexposedExpr type="png_byte" spelling="sbitlow" id="2401187252509"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401132960277"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Should be READ_16BIT_SUPPORTED" comment_scope_start="11097" comment_scope_end="11097"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The 16 to 8 bit strip operations:" comment_scope_start="11100" comment_scope_end="11115">
		<SYMBOLS>
			<CallExpr type="void" spelling="init_gamma_errors" id="2401695250011"/>
			<CallExpr type="void" spelling="perform_gamma_scale16_tests" id="2403051079193"/>
			<CallExpr type="int" spelling="fflush" id="2403931076218"/>
			<CallExpr type="int" spelling="printf" id="2402054715159"/>
			<CallExpr type="int" spelling="printf" id="2403220881952"/>
			<CallExpr type="int" spelling="printf" id="2401199795262"/>
			<CallExpr type="int" spelling="fflush" id="2402181780169"/>
			<CallExpr type="int" spelling="fail" id="2401374041548"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="init_gamma_errors" id="2402198852648"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403614113909"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_gamma_scale16_tests" id="2403724015172"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402340746986"/>
			<DeclRefExpr type="int" spelling="summary" id="2403103483233"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2400095015379"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401103367932"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400242572106"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2403257355048"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402455127374"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400076435203"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2401630472183"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2402512226798"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2401698610345"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401300604508"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400245780050"/>
			<StringLiteral type="char [47]" spelling="&quot;\nGamma correction with 16 to 8 bit reduction:\n&quot;" id="2403416275459"/>
			<StringLiteral type="char [21]" spelling="&quot; 16 bit gray:  %.5f\n&quot;" id="2404062826621"/>
			<StringLiteral type="char [21]" spelling="&quot; 16 bit color: %.5f\n&quot;" id="2403332271087"/>
			<MemberRefExpr type="double" spelling="error_gray_16" id="2400133231398"/>
			<MemberRefExpr type="double" spelling="error_color_16" id="2400814410026"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="init_gamma_errors" id="2403523156398"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400528026671"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_gamma_scale16_tests" id="2402810510070"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401911097444"/>
			<UnexposedExpr type="int" spelling="summary" id="2402245629058"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2403793107357"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400583184126"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2402475651099"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400273538995"/>
			<UnexposedExpr type="double" spelling="error_gray_16" id="2400913657948"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401579740527"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400399081932"/>
			<UnexposedExpr type="double" spelling="error_color_16" id="2401899926489"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404281825481"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2400993544646"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2402050897800"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2403352658458"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400623123427"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: remove this.  Necessary because the current libpng
       * implementation works in 8 bits:" comment_scope_start="11123" comment_scope_end="11130">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400023390850"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403456557400"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400160021312"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400772903300"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401286241097"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2402847580458"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_expand16" id="2400164425890"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401560337797"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401876905602"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402049065914"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="because the 16 bit background is smashed" comment_scope_start="11129" comment_scope_end="11129">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400160021312"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2402847580458"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402049065914"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="background"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="indexed" comment_scope_start="11138" comment_scope_end="11138">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2403493876472"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2403594728983"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402260893944"/>
			<StringLiteral type="char [11]" spelling="&quot;background&quot;" id="2401843359243"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2402777819074"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401456321398"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="TODO: remove this.  Necessary because the current libpng
       * implementation works in 8 bits:" comment_scope_start="11152" comment_scope_end="11165">
		<SYMBOLS>
			<CallExpr type="int" spelling="fail" id="2403682067594"/>
			<CallExpr type="void" spelling="perform_gamma_composition_tests" id="2402123050026"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400843744763"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402646002138"/>
			<DeclRefExpr type="int" spelling="do_background" id="2400224219176"/>
			<DeclRefExpr type="int" spelling="do_background" id="2403657591636"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401442322932"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402067966000"/>
			<DeclRefExpr type="int" spelling="do_background" id="2403543454031"/>
			<DeclRefExpr type="void (png_modifier *, int, int)" spelling="perform_gamma_composition_tests" id="2400035630396"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2400498331140"/>
			<DeclRefExpr type="int" spelling="do_background" id="2402980526101"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402551835142"/>
			<DeclRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401364000355"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2402140098517"/>
			<DeclRefExpr type="int" spelling="summary" id="2401831870690"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400310882543"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2401489001285"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2403405158656"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403440827133"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_expand16" id="2403549096584"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402507060008"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400371231078"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400289739302"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2400400784293"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2402994143139"/>
			<UnexposedExpr type="void (*)(png_modifier *, int, int)" spelling="perform_gamma_composition_tests" id="2401858941457"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401614034095"/>
			<UnexposedExpr type="int" spelling="do_background" id="2400124544472"/>
			<UnexposedExpr type="int" spelling="test_gamma_expand16" id="2403215382991"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_expand16" id="2402976719918"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2404238435822"/>
			<UnexposedExpr type="unsigned int" spelling="calculations_use_input_precision" id="2400030619268"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2401610101173"/>
			<UnexposedExpr type="int" spelling="summary" id="2404289028929"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="indexed" comment_scope_start="11166" comment_scope_end="11166">
		<SYMBOLS>
			<CallExpr type="void" spelling="summarize_gamma_errors" id="2401409764612"/>
			<DeclRefExpr type="void (png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2404042273057"/>
			<DeclRefExpr type="png_modifier *" spelling="pm" id="2403751217910"/>
			<StringLiteral type="char [11]" spelling="&quot;alpha mode&quot;" id="2401828195981"/>
			<UnexposedExpr type="void (*)(png_modifier *, png_const_charp, int, int)" spelling="summarize_gamma_errors" id="2401931477958"/>
			<UnexposedExpr type="png_modifier *" spelling="pm" id="2400906613564"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_GAMMA_SUPPORTED" comment_scope_start="11173" comment_scope_end="11173"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_SUPPORTED" comment_scope_start="11174" comment_scope_end="11174"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="INTERLACE MACRO VALIDATION" comment_scope_start="11176" comment_scope_end="11194">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="const png_byte [8][8]" spelling="adam7" id="2402889064370"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="macro" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is copied verbatim from the specification, it is simply the pass
 * number in which each pixel in each 8x8 tile appears.  The array must
 * be indexed adam7[y][x] and notice that the pass numbers are based at
 * 1, not 0 - the base libpng uses." comment_scope_start="11176" comment_scope_end="11194">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="const png_byte [8][8]" spelling="adam7" id="2402889064370"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This routine validates all the interlace support macros in png.h for
 * a variety of valid PNG widths and heights.  It uses a number of similarly
 * named internal routines that feed off the above array." comment_scope_start="11195" comment_scope_end="11242">
		<SYMBOLS>
			<FunctionDecl type="png_uint_32 (int)" spelling="png_pass_start_row" id="2400951367218"/>
			<FunctionDecl type="png_uint_32 (int)" spelling="png_pass_start_col" id="2400786542010"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="int" spelling="x" id="2401215019986"/>
			<VarDecl type="int" spelling="y" id="2400380345217"/>
			<VarDecl type="int" spelling="x" id="2402917900553"/>
			<VarDecl type="int" spelling="y" id="2402924312144"/>
			<VarDecl type="int" spelling="x" id="2400642760701"/>
			<VarDecl type="int" spelling="y" id="2403575244177"/>
			<VarDecl type="int" spelling="base" id="2402123579536"/>
			<VarDecl type="int" spelling="inc" id="2403313028094"/>
			<ParmDecl type="int" spelling="pass" id="2402647131471"/>
			<ParmDecl type="int" spelling="pass" id="2400014878975"/>
			<ParmDecl type="int" spelling="pass" id="2402426808019"/>
			<DeclRefExpr type="int" spelling="pass" id="2402466469366"/>
			<DeclRefExpr type="int" spelling="y" id="2402515238010"/>
			<DeclRefExpr type="int" spelling="y" id="2403333931908"/>
			<DeclRefExpr type="int" spelling="y" id="2401725993064"/>
			<DeclRefExpr type="int" spelling="x" id="2402507292076"/>
			<DeclRefExpr type="int" spelling="x" id="2400095798267"/>
			<DeclRefExpr type="int" spelling="x" id="2402766151409"/>
			<DeclRefExpr type="const png_byte [8][8]" spelling="adam7" id="2403881080288"/>
			<DeclRefExpr type="int" spelling="y" id="2404251136452"/>
			<DeclRefExpr type="int" spelling="x" id="2402817303011"/>
			<DeclRefExpr type="int" spelling="pass" id="2403032894102"/>
			<DeclRefExpr type="int" spelling="y" id="2403409591055"/>
			<DeclRefExpr type="int" spelling="pass" id="2401795339067"/>
			<DeclRefExpr type="int" spelling="x" id="2401086323749"/>
			<DeclRefExpr type="int" spelling="x" id="2402027493021"/>
			<DeclRefExpr type="int" spelling="x" id="2400221650425"/>
			<DeclRefExpr type="int" spelling="y" id="2401901802357"/>
			<DeclRefExpr type="int" spelling="y" id="2404084446216"/>
			<DeclRefExpr type="int" spelling="y" id="2401538844776"/>
			<DeclRefExpr type="const png_byte [8][8]" spelling="adam7" id="2400705581493"/>
			<DeclRefExpr type="int" spelling="y" id="2403866824472"/>
			<DeclRefExpr type="int" spelling="x" id="2403138650012"/>
			<DeclRefExpr type="int" spelling="pass" id="2400256000773"/>
			<DeclRefExpr type="int" spelling="x" id="2403297397957"/>
			<DeclRefExpr type="int" spelling="pass" id="2401212656656"/>
			<DeclRefExpr type="int" spelling="y" id="2400012856150"/>
			<DeclRefExpr type="int" spelling="y" id="2401544788130"/>
			<DeclRefExpr type="int" spelling="y" id="2403529187654"/>
			<DeclRefExpr type="int" spelling="x" id="2400933841365"/>
			<DeclRefExpr type="int" spelling="x" id="2401341413507"/>
			<DeclRefExpr type="int" spelling="x" id="2402479989447"/>
			<DeclRefExpr type="const png_byte [8][8]" spelling="adam7" id="2403832550093"/>
			<DeclRefExpr type="int" spelling="y" id="2401816309825"/>
			<DeclRefExpr type="int" spelling="x" id="2403183006090"/>
			<DeclRefExpr type="int" spelling="pass" id="2401038050463"/>
			<DeclRefExpr type="int" spelling="base" id="2401112338763"/>
			<DeclRefExpr type="int" spelling="base" id="2401435663602"/>
			<DeclRefExpr type="int" spelling="y" id="2400865050015"/>
			<DeclRefExpr type="int" spelling="base" id="2403680779567"/>
			<DeclRefExpr type="int" spelling="y" id="2400502424162"/>
			<DeclRefExpr type="int" spelling="inc" id="2401789883222"/>
			<DeclRefExpr type="int" spelling="y" id="2402649864927"/>
			<DeclRefExpr type="int" spelling="base" id="2403948393064"/>
			<DeclRefExpr type="int" spelling="base" id="2400101303808"/>
			<DeclRefExpr type="int" spelling="y" id="2400199021611"/>
			<DeclRefExpr type="int" spelling="inc" id="2402248980674"/>
			<DeclRefExpr type="int" spelling="inc" id="2403847473405"/>
			<DeclRefExpr type="int" spelling="y" id="2400128595374"/>
			<DeclRefExpr type="int" spelling="base" id="2400178411496"/>
			<DeclRefExpr type="int" spelling="base" id="2400871068671"/>
			<DeclRefExpr type="int" spelling="y" id="2403380990070"/>
			<DeclRefExpr type="int" spelling="inc" id="2400959666285"/>
			<DeclRefExpr type="int" spelling="y" id="2403597753291"/>
			<DeclRefExpr type="int" spelling="base" id="2401900373989"/>
			<UnexposedExpr type="int" spelling="y" id="2403305960688"/>
			<UnexposedExpr type="int" spelling="x" id="2403775273552"/>
			<UnexposedExpr type="const png_byte (*)[8]" spelling="adam7" id="2402300376200"/>
			<UnexposedExpr type="int" spelling="y" id="2402367462824"/>
			<UnexposedExpr type="int" spelling="x" id="2400706104697"/>
			<UnexposedExpr type="int" spelling="pass" id="2403360334278"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402032297538"/>
			<UnexposedExpr type="int" spelling="y" id="2401730511435"/>
			<UnexposedExpr type="int" spelling="x" id="2401840983671"/>
			<UnexposedExpr type="int" spelling="y" id="2403473360296"/>
			<UnexposedExpr type="const png_byte (*)[8]" spelling="adam7" id="2402594122175"/>
			<UnexposedExpr type="int" spelling="y" id="2402256281137"/>
			<UnexposedExpr type="int" spelling="x" id="2403751743898"/>
			<UnexposedExpr type="int" spelling="pass" id="2402919707671"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2402405022144"/>
			<UnexposedExpr type="int" spelling="x" id="2402762878340"/>
			<UnexposedExpr type="int" spelling="y" id="2401496775723"/>
			<UnexposedExpr type="int" spelling="x" id="2400444784620"/>
			<UnexposedExpr type="const png_byte (*)[8]" spelling="adam7" id="2402617649254"/>
			<UnexposedExpr type="int" spelling="y" id="2402475343934"/>
			<UnexposedExpr type="int" spelling="x" id="2402795651456"/>
			<UnexposedExpr type="int" spelling="pass" id="2404291139549"/>
			<UnexposedExpr type="int" spelling="base" id="2400443964012"/>
			<UnexposedExpr type="int" spelling="y" id="2402207059241"/>
			<UnexposedExpr type="int" spelling="base" id="2402055720648"/>
			<UnexposedExpr type="int" spelling="y" id="2401257523538"/>
			<UnexposedExpr type="int" spelling="inc" id="2404092944541"/>
			<UnexposedExpr type="int" spelling="y" id="2400852200506"/>
			<UnexposedExpr type="int" spelling="base" id="2401575951095"/>
			<UnexposedExpr type="int" spelling="y" id="2402947715831"/>
			<UnexposedExpr type="int" spelling="inc" id="2403578558680"/>
			<UnexposedExpr type="int" spelling="y" id="2403297416638"/>
			<UnexposedExpr type="int" spelling="base" id="2400228731543"/>
			<UnexposedExpr type="int" spelling="y" id="2400101413974"/>
			<UnexposedExpr type="int" spelling="inc" id="2400948312952"/>
			<UnexposedExpr type="int" spelling="y" id="2403924998327"/>
			<UnexposedExpr type="int" spelling="base" id="2400340518772"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validates" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - more than one 'inc' value!" comment_scope_start="11243" comment_scope_end="11243"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - no row in pass!" comment_scope_start="11248" comment_scope_end="11248">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="base" id="2400849526939"/>
			<UnexposedExpr type="int" spelling="base" id="2402549382588"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The shift is always 1, 2 or 3 - no pass has all the rows!" comment_scope_start="11250" comment_scope_end="11257">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="inc" id="2401111669595"/>
			<UnexposedExpr type="int" spelling="inc" id="2404001210059"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - unrecognized 'inc'" comment_scope_start="11259" comment_scope_end="11261">
		<SYMBOLS>
			<FunctionDecl type="int (int)" spelling="png_pass_row_shift" id="2401555548681"/>
			<DeclRefExpr type="int" spelling="inc" id="2402764552185"/>
			<UnexposedExpr type="int" spelling="inc" id="2403242547571"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - more than one 'inc' value!" comment_scope_start="11283" comment_scope_end="11283"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - no row in pass!" comment_scope_start="11288" comment_scope_end="11288">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="base" id="2401653346435"/>
			<UnexposedExpr type="int" spelling="base" id="2402977830446"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The shift is always 1, 2 or 3 - no pass has all the rows!" comment_scope_start="11290" comment_scope_end="11298">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="inc" id="2401025753320"/>
			<UnexposedExpr type="int" spelling="inc" id="2403692268895"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="pass 7 has all the columns" comment_scope_start="11293" comment_scope_end="11293"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error - unrecognized 'inc'" comment_scope_start="11300" comment_scope_end="11302">
		<SYMBOLS>
			<FunctionDecl type="int (int)" spelling="png_pass_col_shift" id="2403009085057"/>
			<DeclRefExpr type="int" spelling="inc" id="2403348955074"/>
			<UnexposedExpr type="int" spelling="inc" id="2401313011468"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="By examination of the array:" comment_scope_start="11307" comment_scope_end="11318">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="pass" id="2400540781827"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2401306130217"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2401295255917"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2403736137062"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2402261783207"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2400633013295"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2400677286612"/>
			<DeclRefExpr type="png_uint_32" spelling="yIn" id="2404179269224"/>
			<UnexposedExpr type="int" spelling="pass" id="2401528275533"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2401618871724"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2403222650502"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2401232652268"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2400114864119"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2401731097226"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2402810735522"/>
			<UnexposedExpr type="png_uint_32" spelling="yIn" id="2404204993747"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="bad pass number" comment_scope_start="11320" comment_scope_end="11320"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="By examination of the array:" comment_scope_start="11326" comment_scope_end="11337">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="pass" id="2403041305912"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2403911027181"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2402467589884"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2400379892916"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2402849400839"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2401271705633"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2402568300410"/>
			<DeclRefExpr type="png_uint_32" spelling="xIn" id="2403012008166"/>
			<UnexposedExpr type="int" spelling="pass" id="2404051730004"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2403132235210"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2400765533224"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2404173144733"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2403081370556"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2400638464470"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2402582044837"/>
			<UnexposedExpr type="png_uint_32" spelling="xIn" id="2402414554690"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="bad pass number" comment_scope_start="11339" comment_scope_end="11339"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Is row 'y' in pass 'pass'?" comment_scope_start="11345" comment_scope_end="11354">
		<SYMBOLS>
			<FunctionDecl type="int (png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2401928681740"/>
			<VarDecl type="int" spelling="x" id="2403976339572"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2400586737886"/>
			<DeclRefExpr type="int" spelling="pass" id="2404130446934"/>
			<DeclRefExpr type="int" spelling="x" id="2403142397045"/>
			<DeclRefExpr type="int" spelling="x" id="2402505742020"/>
			<DeclRefExpr type="int" spelling="x" id="2401248576326"/>
			<DeclRefExpr type="const png_byte [8][8]" spelling="adam7" id="2404277961524"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2403579282518"/>
			<DeclRefExpr type="int" spelling="x" id="2400235400327"/>
			<DeclRefExpr type="int" spelling="pass" id="2403459274983"/>
			<UnexposedExpr type="int" spelling="x" id="2401426993025"/>
			<UnexposedExpr type="const png_byte (*)[8]" spelling="adam7" id="2404076841104"/>
			<UnexposedExpr type="png_uint_32" spelling="y" id="2402824999659"/>
			<UnexposedExpr type="int" spelling="x" id="2401727909729"/>
			<UnexposedExpr type="int" spelling="pass" id="2400335092240"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Is column 'x' in pass 'pass'?" comment_scope_start="11359" comment_scope_end="11368">
		<SYMBOLS>
			<FunctionDecl type="int (png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2402753512578"/>
			<VarDecl type="int" spelling="y" id="2403730079114"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2403862334940"/>
			<DeclRefExpr type="int" spelling="pass" id="2400953946441"/>
			<DeclRefExpr type="int" spelling="y" id="2403036846390"/>
			<DeclRefExpr type="int" spelling="y" id="2401078600305"/>
			<DeclRefExpr type="int" spelling="y" id="2400341380713"/>
			<DeclRefExpr type="const png_byte [8][8]" spelling="adam7" id="2401034701347"/>
			<DeclRefExpr type="int" spelling="y" id="2401916970819"/>
			<DeclRefExpr type="png_uint_32" spelling="x" id="2403962002364"/>
			<DeclRefExpr type="int" spelling="pass" id="2402844646809"/>
			<UnexposedExpr type="int" spelling="y" id="2400671507127"/>
			<UnexposedExpr type="const png_byte (*)[8]" spelling="adam7" id="2403805623258"/>
			<UnexposedExpr type="int" spelling="y" id="2401518185923"/>
			<UnexposedExpr type="png_uint_32" spelling="x" id="2403419541112"/>
			<UnexposedExpr type="int" spelling="pass" id="2401094444774"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="i.e. break the 'x', column, loop." comment_scope_start="11387" comment_scope_end="11387"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="i.e. break the 'y', row, loop." comment_scope_start="11412" comment_scope_end="11412"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The macros to validate, first those that depend only on pass:
    *
    * PNG_PASS_START_ROW(pass)
    * PNG_PASS_START_COL(pass)
    * PNG_PASS_ROW_SHIFT(pass)
    * PNG_PASS_COL_SHIFT(pass)" comment_scope_start="11423" comment_scope_end="11467">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<VarDecl type="int" spelling="pass" id="2400258317771"/>
			<VarDecl type="png_uint_32" spelling="m" id="2401861852036"/>
			<VarDecl type="png_uint_32" spelling="f" id="2401071095263"/>
			<VarDecl type="png_uint_32" spelling="v" id="2401933851597"/>
			<CallExpr type="png_uint_32" spelling="png_pass_start_row" id="2404154569040"/>
			<CallExpr type="int" spelling="fprintf" id="2400738343806"/>
			<CallExpr type="void" spelling="exit" id="2402310556337"/>
			<CallExpr type="png_uint_32" spelling="png_pass_start_col" id="2403849380567"/>
			<CallExpr type="int" spelling="fprintf" id="2403665098433"/>
			<CallExpr type="void" spelling="exit" id="2400002228389"/>
			<CallExpr type="int" spelling="png_pass_row_shift" id="2403805289177"/>
			<CallExpr type="int" spelling="fprintf" id="2403155297777"/>
			<CallExpr type="void" spelling="exit" id="2400795323638"/>
			<CallExpr type="int" spelling="png_pass_col_shift" id="2400671188550"/>
			<CallExpr type="int" spelling="fprintf" id="2400884864252"/>
			<CallExpr type="void" spelling="exit" id="2401197522570"/>
			<DeclRefExpr type="int" spelling="pass" id="2400361037912"/>
			<DeclRefExpr type="int" spelling="pass" id="2402646722075"/>
			<DeclRefExpr type="int" spelling="pass" id="2403789038668"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400566018873"/>
			<DeclRefExpr type="int" spelling="pass" id="2402979099745"/>
			<DeclRefExpr type="int" spelling="pass" id="2403693424039"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402249259109"/>
			<DeclRefExpr type="png_uint_32 (int)" spelling="png_pass_start_row" id="2404029813565"/>
			<DeclRefExpr type="int" spelling="pass" id="2402943047160"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403968862914"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403778540107"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400203176662"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400315838115"/>
			<DeclRefExpr type="int" spelling="pass" id="2404052429747"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403079603702"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400101140796"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2404025026411"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401013569702"/>
			<DeclRefExpr type="int" spelling="pass" id="2400416402147"/>
			<DeclRefExpr type="int" spelling="pass" id="2403591517761"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400735336115"/>
			<DeclRefExpr type="png_uint_32 (int)" spelling="png_pass_start_col" id="2403758989332"/>
			<DeclRefExpr type="int" spelling="pass" id="2400727287967"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401570738851"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403542972936"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400971827433"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400602809084"/>
			<DeclRefExpr type="int" spelling="pass" id="2401269227307"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401250171191"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401818056448"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401025670207"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403073885953"/>
			<DeclRefExpr type="int" spelling="pass" id="2400008550848"/>
			<DeclRefExpr type="int" spelling="pass" id="2400376085842"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2404260326006"/>
			<DeclRefExpr type="int (int)" spelling="png_pass_row_shift" id="2400952632692"/>
			<DeclRefExpr type="int" spelling="pass" id="2401675857561"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401880031012"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403451416362"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403083798995"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403892386494"/>
			<DeclRefExpr type="int" spelling="pass" id="2402037505698"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403297285302"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402994041138"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2402217699990"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403680239865"/>
			<DeclRefExpr type="int" spelling="pass" id="2401425060234"/>
			<DeclRefExpr type="int" spelling="pass" id="2402945523014"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401040375703"/>
			<DeclRefExpr type="int (int)" spelling="png_pass_col_shift" id="2400530944053"/>
			<DeclRefExpr type="int" spelling="pass" id="2401398118795"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400348123983"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402414631659"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403157745607"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402331319951"/>
			<DeclRefExpr type="int" spelling="pass" id="2402553265633"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403772107768"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2404232434169"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403552192005"/>
			<StringLiteral type="char [35]" spelling="&quot;PNG_PASS_START_ROW(%d) = %u != %x\n&quot;" id="2403169257928"/>
			<StringLiteral type="char [35]" spelling="&quot;PNG_PASS_START_COL(%d) = %u != %x\n&quot;" id="2402690272041"/>
			<StringLiteral type="char [35]" spelling="&quot;PNG_PASS_ROW_SHIFT(%d) = %u != %x\n&quot;" id="2400283750560"/>
			<StringLiteral type="char [35]" spelling="&quot;PNG_PASS_COL_SHIFT(%d) = %u != %x\n&quot;" id="2401543006686"/>
			<UnexposedExpr type="int" spelling="pass" id="2400918564008"/>
			<UnexposedExpr type="png_uint_32 (*)(int)" spelling="png_pass_start_row" id="2400641635025"/>
			<UnexposedExpr type="int" spelling="pass" id="2401167251709"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400917216329"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400696665079"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403715484007"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402702484432"/>
			<UnexposedExpr type="int" spelling="pass" id="2403216814577"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400934788543"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401917562940"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403636260680"/>
			<UnexposedExpr type="png_uint_32 (*)(int)" spelling="png_pass_start_col" id="2402374900413"/>
			<UnexposedExpr type="int" spelling="pass" id="2404160528374"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402542888322"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402266213163"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401749277965"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404249378564"/>
			<UnexposedExpr type="int" spelling="pass" id="2402285234347"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402742045311"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400079958302"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403719944870"/>
			<UnexposedExpr type="png_uint_32" spelling="png_pass_row_shift" id="2402445113673"/>
			<UnexposedExpr type="int (*)(int)" spelling="png_pass_row_shift" id="2404161819498"/>
			<UnexposedExpr type="int" spelling="pass" id="2403076272778"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402075445841"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402220947159"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403002289505"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403748545215"/>
			<UnexposedExpr type="int" spelling="pass" id="2401118594759"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2403483120065"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401136108065"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2404051219893"/>
			<UnexposedExpr type="png_uint_32" spelling="png_pass_col_shift" id="2401186825874"/>
			<UnexposedExpr type="int (*)(int)" spelling="png_pass_col_shift" id="2404271272034"/>
			<UnexposedExpr type="int" spelling="pass" id="2402028537605"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402224343474"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401618240624"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402718712816"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401165862236"/>
			<UnexposedExpr type="int" spelling="pass" id="2400065591968"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400926901088"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403595230040"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2401509041275"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Macros that depend on the image or sub-image height too:
       *
       * PNG_PASS_ROWS(height, pass)
       * PNG_PASS_COLS(width, pass)
       * PNG_ROW_FROM_PASS_ROW(yIn, pass)
       * PNG_COL_FROM_PASS_COL(xIn, pass)
       * PNG_ROW_IN_INTERLACE_PASS(y, pass)
       * PNG_COL_IN_INTERLACE_PASS(x, pass)" comment_scope_start="11468" comment_scope_end="11561">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<CallExpr type="png_uint_32" spelling="png_pass_rows" id="2402868292116"/>
			<CallExpr type="png_uint_32" spelling="png_row_from_pass_row" id="2403061214389"/>
			<CallExpr type="int" spelling="fprintf" id="2401938213452"/>
			<CallExpr type="void" spelling="exit" id="2402223630397"/>
			<CallExpr type="png_uint_32" spelling="png_pass_cols" id="2400167232797"/>
			<CallExpr type="png_uint_32" spelling="png_col_from_pass_col" id="2403583221479"/>
			<CallExpr type="int" spelling="fprintf" id="2402935526224"/>
			<CallExpr type="void" spelling="exit" id="2401484254931"/>
			<CallExpr type="int" spelling="png_row_in_interlace_pass" id="2403296369458"/>
			<CallExpr type="int" spelling="fprintf" id="2400663204833"/>
			<CallExpr type="void" spelling="exit" id="2402501550967"/>
			<CallExpr type="int" spelling="png_col_in_interlace_pass" id="2403498279615"/>
			<CallExpr type="int" spelling="fprintf" id="2403964816292"/>
			<CallExpr type="void" spelling="exit" id="2403949906828"/>
			<CallExpr type="png_uint_32" spelling="png_pass_rows" id="2400460338423"/>
			<CallExpr type="int" spelling="fprintf" id="2402617620645"/>
			<CallExpr type="void" spelling="exit" id="2400483581845"/>
			<CallExpr type="png_uint_32" spelling="png_pass_cols" id="2400515180262"/>
			<CallExpr type="int" spelling="fprintf" id="2403667512818"/>
			<CallExpr type="void" spelling="exit" id="2400857220899"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400015486010"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403794144412"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_rows" id="2400076327273"/>
			<DeclRefExpr type="int" spelling="pass" id="2403931883416"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401575208283"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401606838282"/>
			<DeclRefExpr type="int" spelling="pass" id="2402142739578"/>
			<DeclRefExpr type="int" spelling="pass" id="2403652730348"/>
			<DeclRefExpr type="int" spelling="pass" id="2401456119522"/>
			<DeclRefExpr type="int" spelling="pass" id="2402959841407"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400220104858"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_row_from_pass_row" id="2403560869118"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400171665210"/>
			<DeclRefExpr type="int" spelling="pass" id="2403658294500"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401678071261"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400786774783"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403575938907"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403321528169"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403193906669"/>
			<DeclRefExpr type="int" spelling="pass" id="2404071856449"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403959800607"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402330649110"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400910949890"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400680624724"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_cols" id="2401613958314"/>
			<DeclRefExpr type="int" spelling="pass" id="2402158991714"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402794975574"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403189143546"/>
			<DeclRefExpr type="int" spelling="pass" id="2401460126853"/>
			<DeclRefExpr type="int" spelling="pass" id="2402571707122"/>
			<DeclRefExpr type="int" spelling="pass" id="2400224803156"/>
			<DeclRefExpr type="int" spelling="pass" id="2403365948374"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401979992213"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_col_from_pass_col" id="2402692047715"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404246309442"/>
			<DeclRefExpr type="int" spelling="pass" id="2402511097466"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404288454591"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401806142326"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2404213520016"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402465034138"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402680740559"/>
			<DeclRefExpr type="int" spelling="pass" id="2401819057623"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404044268569"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403819457890"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403106557959"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403348781299"/>
			<DeclRefExpr type="int" spelling="pass" id="2401122525065"/>
			<DeclRefExpr type="int" spelling="pass" id="2403805014646"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403670332687"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402111955215"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2400745274504"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403576980129"/>
			<DeclRefExpr type="int" spelling="pass" id="2402584927018"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401363015735"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400728816218"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403472502236"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403855921624"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400872887977"/>
			<DeclRefExpr type="int" spelling="pass" id="2401853341162"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400910152021"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401213444412"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401649158335"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402283887992"/>
			<DeclRefExpr type="int" spelling="pass" id="2401541898425"/>
			<DeclRefExpr type="int" spelling="pass" id="2402020699552"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401843125177"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401237188708"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2402168473730"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403994566918"/>
			<DeclRefExpr type="int" spelling="pass" id="2401510819235"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403136479918"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401489994710"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401273225520"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401289208070"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404180198440"/>
			<DeclRefExpr type="int" spelling="pass" id="2400899590899"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402915992338"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402255567751"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403333083654"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402853682158"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402373781426"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403338988947"/>
			<DeclRefExpr type="int" spelling="pass" id="2403673533190"/>
			<DeclRefExpr type="int" spelling="pass" id="2402691714904"/>
			<DeclRefExpr type="int" spelling="pass" id="2402518772671"/>
			<DeclRefExpr type="int" spelling="pass" id="2403798048619"/>
			<DeclRefExpr type="int" spelling="pass" id="2404274472231"/>
			<DeclRefExpr type="int" spelling="pass" id="2401154531981"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402235281703"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_rows" id="2403317869088"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400706191140"/>
			<DeclRefExpr type="int" spelling="pass" id="2402696158086"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403029973463"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402596873971"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400760997646"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2404102738619"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404053532823"/>
			<DeclRefExpr type="int" spelling="pass" id="2400745931463"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400878421187"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402701265260"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401264182161"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402185869561"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403417872705"/>
			<DeclRefExpr type="int" spelling="pass" id="2402270521440"/>
			<DeclRefExpr type="int" spelling="pass" id="2402645240234"/>
			<DeclRefExpr type="int" spelling="pass" id="2400966500110"/>
			<DeclRefExpr type="int" spelling="pass" id="2401171329119"/>
			<DeclRefExpr type="int" spelling="pass" id="2400942807828"/>
			<DeclRefExpr type="int" spelling="pass" id="2403574768652"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401965062708"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_cols" id="2403540830985"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400806600489"/>
			<DeclRefExpr type="int" spelling="pass" id="2401913921487"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400339147824"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2404068984048"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401960792917"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401352501078"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404105414798"/>
			<DeclRefExpr type="int" spelling="pass" id="2402680539322"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402881818651"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403622931739"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400883282985"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400514636493"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402304744595"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403313230249"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402910362292"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401399716078"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401299060734"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403632408273"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\n&quot;" id="2404049846372"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\n&quot;" id="2401730964300"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402440210628"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402850650535"/>
			<StringLiteral type="char [34]" spelling="&quot;PNG_PASS_ROWS(%u, %d) = %u != %x\n&quot;" id="2400882917264"/>
			<StringLiteral type="char [34]" spelling="&quot;PNG_PASS_COLS(%u, %d) = %u != %x\n&quot;" id="2401207160531"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402503509681"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_rows" id="2400328564458"/>
			<UnexposedExpr type="int" spelling="pass" id="2403256794608"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_row_from_pass_row" id="2401004097379"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401460792225"/>
			<UnexposedExpr type="int" spelling="pass" id="2402087175712"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401190582727"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400123246486"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401417419485"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403087022956"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403614603005"/>
			<UnexposedExpr type="int" spelling="pass" id="2401824193982"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402141335618"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400940719490"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402746927606"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402894697594"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_cols" id="2401533657230"/>
			<UnexposedExpr type="int" spelling="pass" id="2400635940557"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_col_from_pass_col" id="2400817931305"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401237582985"/>
			<UnexposedExpr type="int" spelling="pass" id="2403662090485"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2404177458968"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402124476528"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402691843043"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403796059588"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403535032029"/>
			<UnexposedExpr type="int" spelling="pass" id="2403075844502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400804925663"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403304649135"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402788752594"/>
			<UnexposedExpr type="png_uint_32" spelling="png_row_in_interlace_pass" id="2401611277012"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2401694378589"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402491681881"/>
			<UnexposedExpr type="int" spelling="pass" id="2404082581289"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401234042257"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401762496981"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403666298951"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403404169382"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403238328411"/>
			<UnexposedExpr type="int" spelling="pass" id="2402630147502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400955918818"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402239651477"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403846285537"/>
			<UnexposedExpr type="png_uint_32" spelling="png_col_in_interlace_pass" id="2401674927801"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2400653725321"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401050465054"/>
			<UnexposedExpr type="int" spelling="pass" id="2404087084247"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2403435476561"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402565386833"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403355952025"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401151185701"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402271687568"/>
			<UnexposedExpr type="int" spelling="pass" id="2400254981575"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402443376163"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403644669879"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400924704798"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_rows" id="2404086862690"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403198846590"/>
			<UnexposedExpr type="int" spelling="pass" id="2402843334656"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401988617997"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403773731265"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403923466069"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401765013761"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2404181569712"/>
			<UnexposedExpr type="int" spelling="pass" id="2404008496007"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402409900261"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403469471239"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400640806020"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_cols" id="2403632127323"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402016224221"/>
			<UnexposedExpr type="int" spelling="pass" id="2402703116559"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400428643653"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401670254329"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401515627280"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402460997387"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403912827954"/>
			<UnexposedExpr type="int" spelling="pass" id="2403763814563"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400513339963"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403691417680"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402780471955"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401221951196"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402577069457"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401511996060"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2400017631740"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402650454830"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="height" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="sub-image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The first two tests overflow if the pass row or column is outside
          * the possible range for a 32-bit result.  In fact the values should
          * never be outside the range for a 31-bit result, but checking for 32
          * bits here ensures that if an app uses a bogus pass row or column
          * (just so long as it fits in a 32 bit integer) it won't get a
          * possibly dangerous overflow." comment_scope_start="11479" comment_scope_end="11528">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="png_pass_rows" id="2402868292116"/>
			<CallExpr type="png_uint_32" spelling="png_row_from_pass_row" id="2403061214389"/>
			<CallExpr type="int" spelling="fprintf" id="2401938213452"/>
			<CallExpr type="void" spelling="exit" id="2402223630397"/>
			<CallExpr type="png_uint_32" spelling="png_pass_cols" id="2400167232797"/>
			<CallExpr type="png_uint_32" spelling="png_col_from_pass_col" id="2403583221479"/>
			<CallExpr type="int" spelling="fprintf" id="2402935526224"/>
			<CallExpr type="void" spelling="exit" id="2401484254931"/>
			<CallExpr type="int" spelling="png_row_in_interlace_pass" id="2403296369458"/>
			<CallExpr type="int" spelling="fprintf" id="2400663204833"/>
			<CallExpr type="void" spelling="exit" id="2402501550967"/>
			<CallExpr type="int" spelling="png_col_in_interlace_pass" id="2403498279615"/>
			<CallExpr type="int" spelling="fprintf" id="2403964816292"/>
			<CallExpr type="void" spelling="exit" id="2403949906828"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403794144412"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_rows" id="2400076327273"/>
			<DeclRefExpr type="int" spelling="pass" id="2403931883416"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401575208283"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401606838282"/>
			<DeclRefExpr type="int" spelling="pass" id="2402142739578"/>
			<DeclRefExpr type="int" spelling="pass" id="2403652730348"/>
			<DeclRefExpr type="int" spelling="pass" id="2401456119522"/>
			<DeclRefExpr type="int" spelling="pass" id="2402959841407"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400220104858"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_row_from_pass_row" id="2403560869118"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400171665210"/>
			<DeclRefExpr type="int" spelling="pass" id="2403658294500"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401678071261"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400786774783"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403575938907"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403321528169"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403193906669"/>
			<DeclRefExpr type="int" spelling="pass" id="2404071856449"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403959800607"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402330649110"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400910949890"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400680624724"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_cols" id="2401613958314"/>
			<DeclRefExpr type="int" spelling="pass" id="2402158991714"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402794975574"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403189143546"/>
			<DeclRefExpr type="int" spelling="pass" id="2401460126853"/>
			<DeclRefExpr type="int" spelling="pass" id="2402571707122"/>
			<DeclRefExpr type="int" spelling="pass" id="2400224803156"/>
			<DeclRefExpr type="int" spelling="pass" id="2403365948374"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401979992213"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_col_from_pass_col" id="2402692047715"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404246309442"/>
			<DeclRefExpr type="int" spelling="pass" id="2402511097466"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404288454591"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401806142326"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2404213520016"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402465034138"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402680740559"/>
			<DeclRefExpr type="int" spelling="pass" id="2401819057623"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404044268569"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403819457890"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403106557959"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403348781299"/>
			<DeclRefExpr type="int" spelling="pass" id="2401122525065"/>
			<DeclRefExpr type="int" spelling="pass" id="2403805014646"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403670332687"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402111955215"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2400745274504"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403576980129"/>
			<DeclRefExpr type="int" spelling="pass" id="2402584927018"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401363015735"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400728816218"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403472502236"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403855921624"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400872887977"/>
			<DeclRefExpr type="int" spelling="pass" id="2401853341162"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400910152021"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401213444412"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401649158335"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402283887992"/>
			<DeclRefExpr type="int" spelling="pass" id="2401541898425"/>
			<DeclRefExpr type="int" spelling="pass" id="2402020699552"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401843125177"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401237188708"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2402168473730"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403994566918"/>
			<DeclRefExpr type="int" spelling="pass" id="2401510819235"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403136479918"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401489994710"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401273225520"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401289208070"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404180198440"/>
			<DeclRefExpr type="int" spelling="pass" id="2400899590899"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402915992338"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402255567751"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403333083654"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\n&quot;" id="2404049846372"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\n&quot;" id="2401730964300"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402440210628"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402850650535"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402503509681"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_rows" id="2400328564458"/>
			<UnexposedExpr type="int" spelling="pass" id="2403256794608"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_row_from_pass_row" id="2401004097379"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401460792225"/>
			<UnexposedExpr type="int" spelling="pass" id="2402087175712"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401190582727"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400123246486"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401417419485"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403087022956"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403614603005"/>
			<UnexposedExpr type="int" spelling="pass" id="2401824193982"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402141335618"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400940719490"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402746927606"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402894697594"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_cols" id="2401533657230"/>
			<UnexposedExpr type="int" spelling="pass" id="2400635940557"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_col_from_pass_col" id="2400817931305"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401237582985"/>
			<UnexposedExpr type="int" spelling="pass" id="2403662090485"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2404177458968"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402124476528"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402691843043"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403796059588"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403535032029"/>
			<UnexposedExpr type="int" spelling="pass" id="2403075844502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400804925663"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403304649135"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402788752594"/>
			<UnexposedExpr type="png_uint_32" spelling="png_row_in_interlace_pass" id="2401611277012"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2401694378589"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402491681881"/>
			<UnexposedExpr type="int" spelling="pass" id="2404082581289"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401234042257"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401762496981"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403666298951"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403404169382"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403238328411"/>
			<UnexposedExpr type="int" spelling="pass" id="2402630147502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400955918818"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402239651477"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403846285537"/>
			<UnexposedExpr type="png_uint_32" spelling="png_col_in_interlace_pass" id="2401674927801"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2400653725321"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401050465054"/>
			<UnexposedExpr type="int" spelling="pass" id="2404087084247"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2403435476561"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402565386833"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403355952025"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401151185701"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402271687568"/>
			<UnexposedExpr type="int" spelling="pass" id="2400254981575"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402443376163"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403644669879"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400924704798"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="long" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="integer" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="app"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="First the base 0 stuff:" comment_scope_start="11479" comment_scope_end="11528">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="png_pass_rows" id="2402868292116"/>
			<CallExpr type="png_uint_32" spelling="png_row_from_pass_row" id="2403061214389"/>
			<CallExpr type="int" spelling="fprintf" id="2401938213452"/>
			<CallExpr type="void" spelling="exit" id="2402223630397"/>
			<CallExpr type="png_uint_32" spelling="png_pass_cols" id="2400167232797"/>
			<CallExpr type="png_uint_32" spelling="png_col_from_pass_col" id="2403583221479"/>
			<CallExpr type="int" spelling="fprintf" id="2402935526224"/>
			<CallExpr type="void" spelling="exit" id="2401484254931"/>
			<CallExpr type="int" spelling="png_row_in_interlace_pass" id="2403296369458"/>
			<CallExpr type="int" spelling="fprintf" id="2400663204833"/>
			<CallExpr type="void" spelling="exit" id="2402501550967"/>
			<CallExpr type="int" spelling="png_col_in_interlace_pass" id="2403498279615"/>
			<CallExpr type="int" spelling="fprintf" id="2403964816292"/>
			<CallExpr type="void" spelling="exit" id="2403949906828"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403794144412"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_rows" id="2400076327273"/>
			<DeclRefExpr type="int" spelling="pass" id="2403931883416"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401575208283"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401606838282"/>
			<DeclRefExpr type="int" spelling="pass" id="2402142739578"/>
			<DeclRefExpr type="int" spelling="pass" id="2403652730348"/>
			<DeclRefExpr type="int" spelling="pass" id="2401456119522"/>
			<DeclRefExpr type="int" spelling="pass" id="2402959841407"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400220104858"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_row_from_pass_row" id="2403560869118"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400171665210"/>
			<DeclRefExpr type="int" spelling="pass" id="2403658294500"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401678071261"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400786774783"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403575938907"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403321528169"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403193906669"/>
			<DeclRefExpr type="int" spelling="pass" id="2404071856449"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403959800607"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402330649110"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400910949890"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400680624724"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_cols" id="2401613958314"/>
			<DeclRefExpr type="int" spelling="pass" id="2402158991714"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402794975574"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403189143546"/>
			<DeclRefExpr type="int" spelling="pass" id="2401460126853"/>
			<DeclRefExpr type="int" spelling="pass" id="2402571707122"/>
			<DeclRefExpr type="int" spelling="pass" id="2400224803156"/>
			<DeclRefExpr type="int" spelling="pass" id="2403365948374"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401979992213"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_col_from_pass_col" id="2402692047715"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404246309442"/>
			<DeclRefExpr type="int" spelling="pass" id="2402511097466"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404288454591"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401806142326"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2404213520016"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402465034138"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402680740559"/>
			<DeclRefExpr type="int" spelling="pass" id="2401819057623"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2404044268569"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403819457890"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403106557959"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403348781299"/>
			<DeclRefExpr type="int" spelling="pass" id="2401122525065"/>
			<DeclRefExpr type="int" spelling="pass" id="2403805014646"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403670332687"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402111955215"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2400745274504"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403576980129"/>
			<DeclRefExpr type="int" spelling="pass" id="2402584927018"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2401363015735"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2400728816218"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403472502236"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403855921624"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400872887977"/>
			<DeclRefExpr type="int" spelling="pass" id="2401853341162"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400910152021"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401213444412"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401649158335"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402283887992"/>
			<DeclRefExpr type="int" spelling="pass" id="2401541898425"/>
			<DeclRefExpr type="int" spelling="pass" id="2402020699552"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401843125177"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401237188708"/>
			<DeclRefExpr type="int (png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2402168473730"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403994566918"/>
			<DeclRefExpr type="int" spelling="pass" id="2401510819235"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403136479918"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401489994710"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401273225520"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401289208070"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404180198440"/>
			<DeclRefExpr type="int" spelling="pass" id="2400899590899"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402915992338"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402255567751"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403333083654"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_ROW_FROM_PASS_ROW(%u, %d) = %u != %x\n&quot;" id="2404049846372"/>
			<StringLiteral type="char [42]" spelling="&quot;PNG_COL_FROM_PASS_COL(%u, %d) = %u != %x\n&quot;" id="2401730964300"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_ROW_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402440210628"/>
			<StringLiteral type="char [46]" spelling="&quot;PNG_COL_IN_INTERLACE_PASS(%u, %d) = %u != %x\n&quot;" id="2402850650535"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402503509681"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_rows" id="2400328564458"/>
			<UnexposedExpr type="int" spelling="pass" id="2403256794608"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_row_from_pass_row" id="2401004097379"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401460792225"/>
			<UnexposedExpr type="int" spelling="pass" id="2402087175712"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401190582727"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400123246486"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401417419485"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403087022956"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403614603005"/>
			<UnexposedExpr type="int" spelling="pass" id="2401824193982"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402141335618"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2400940719490"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402746927606"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402894697594"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_cols" id="2401533657230"/>
			<UnexposedExpr type="int" spelling="pass" id="2400635940557"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_col_from_pass_col" id="2400817931305"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401237582985"/>
			<UnexposedExpr type="int" spelling="pass" id="2403662090485"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2404177458968"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402124476528"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402691843043"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403796059588"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403535032029"/>
			<UnexposedExpr type="int" spelling="pass" id="2403075844502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400804925663"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403304649135"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402788752594"/>
			<UnexposedExpr type="png_uint_32" spelling="png_row_in_interlace_pass" id="2401611277012"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_row_in_interlace_pass" id="2401694378589"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402491681881"/>
			<UnexposedExpr type="int" spelling="pass" id="2404082581289"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401234042257"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401762496981"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403666298951"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403404169382"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403238328411"/>
			<UnexposedExpr type="int" spelling="pass" id="2402630147502"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400955918818"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402239651477"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403846285537"/>
			<UnexposedExpr type="png_uint_32" spelling="png_col_in_interlace_pass" id="2401674927801"/>
			<UnexposedExpr type="int (*)(png_uint_32, int)" spelling="png_col_in_interlace_pass" id="2400653725321"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401050465054"/>
			<UnexposedExpr type="int" spelling="pass" id="2404087084247"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2403435476561"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2402565386833"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403355952025"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401151185701"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402271687568"/>
			<UnexposedExpr type="int" spelling="pass" id="2400254981575"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402443376163"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403644669879"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400924704798"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Then the base 1 stuff:" comment_scope_start="11529" comment_scope_end="11548">
		<SYMBOLS>
			<CallExpr type="png_uint_32" spelling="png_pass_rows" id="2400460338423"/>
			<CallExpr type="int" spelling="fprintf" id="2402617620645"/>
			<CallExpr type="void" spelling="exit" id="2400483581845"/>
			<CallExpr type="png_uint_32" spelling="png_pass_cols" id="2400515180262"/>
			<CallExpr type="int" spelling="fprintf" id="2403667512818"/>
			<CallExpr type="void" spelling="exit" id="2400857220899"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402853682158"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402373781426"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403338988947"/>
			<DeclRefExpr type="int" spelling="pass" id="2403673533190"/>
			<DeclRefExpr type="int" spelling="pass" id="2402691714904"/>
			<DeclRefExpr type="int" spelling="pass" id="2402518772671"/>
			<DeclRefExpr type="int" spelling="pass" id="2403798048619"/>
			<DeclRefExpr type="int" spelling="pass" id="2404274472231"/>
			<DeclRefExpr type="int" spelling="pass" id="2401154531981"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402235281703"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_rows" id="2403317869088"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400706191140"/>
			<DeclRefExpr type="int" spelling="pass" id="2402696158086"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2403029973463"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402596873971"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400760997646"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2404102738619"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404053532823"/>
			<DeclRefExpr type="int" spelling="pass" id="2400745931463"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400878421187"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2402701265260"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401264182161"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402185869561"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403417872705"/>
			<DeclRefExpr type="int" spelling="pass" id="2402270521440"/>
			<DeclRefExpr type="int" spelling="pass" id="2402645240234"/>
			<DeclRefExpr type="int" spelling="pass" id="2400966500110"/>
			<DeclRefExpr type="int" spelling="pass" id="2401171329119"/>
			<DeclRefExpr type="int" spelling="pass" id="2400942807828"/>
			<DeclRefExpr type="int" spelling="pass" id="2403574768652"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2401965062708"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="png_pass_cols" id="2403540830985"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400806600489"/>
			<DeclRefExpr type="int" spelling="pass" id="2401913921487"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2400339147824"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2404068984048"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401960792917"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401352501078"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2404105414798"/>
			<DeclRefExpr type="int" spelling="pass" id="2402680539322"/>
			<DeclRefExpr type="png_uint_32" spelling="m" id="2402881818651"/>
			<DeclRefExpr type="png_uint_32" spelling="f" id="2403622931739"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400883282985"/>
			<StringLiteral type="char [34]" spelling="&quot;PNG_PASS_ROWS(%u, %d) = %u != %x\n&quot;" id="2400882917264"/>
			<StringLiteral type="char [34]" spelling="&quot;PNG_PASS_COLS(%u, %d) = %u != %x\n&quot;" id="2401207160531"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_rows" id="2404086862690"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403198846590"/>
			<UnexposedExpr type="int" spelling="pass" id="2402843334656"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2401988617997"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403773731265"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403923466069"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401765013761"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2404181569712"/>
			<UnexposedExpr type="int" spelling="pass" id="2404008496007"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2402409900261"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403469471239"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400640806020"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="png_pass_cols" id="2403632127323"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402016224221"/>
			<UnexposedExpr type="int" spelling="pass" id="2402703116559"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400428643653"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2401670254329"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2401515627280"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402460997387"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2403912827954"/>
			<UnexposedExpr type="int" spelling="pass" id="2403763814563"/>
			<UnexposedExpr type="png_uint_32" spelling="m" id="2400513339963"/>
			<UnexposedExpr type="png_uint_32" spelling="f" id="2403691417680"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2402780471955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Move to the next v - the stepping algorithm starts skipping
          * values above 1024." comment_scope_start="11549" comment_scope_end="11560">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2402846994731"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2400514636493"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402304744595"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403313230249"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2402910362292"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401399716078"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2401299060734"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2403632408273"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401221951196"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402577069457"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2401511996060"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2400017631740"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2402650454830"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="stepping" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="starts" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Test color encodings. These values are back-calculated from the published
 * chromaticities.  The values are accurate to about 14 decimal places; 15 are
 * given.  These values are much more accurate than the ones given in the spec,
 * which typically don't exceed 4 decimal places.  This allows testing of the
 * libpng code to its theoretical accuracy of 4 decimal places.  (If pngvalid
 * used the published errors the 'slack' permitted would have to be +/-.5E-4 or
 * more.)
 *
 * The png_modifier code assumes that encodings[0] is sRGB and treats it
 * specially: do not change the first entry in this list!" comment_scope_start="11565" comment_scope_end="11603">
		<SYMBOLS>
			<TypeRef type="color_encoding" spelling="color_encoding" id="2401716886356"/>
			<VarDecl type="const color_encoding [5]" spelling="test_encodings" id="2401042039739"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="srgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="sRGB: must be first in this list!" comment_scope_start="11578" comment_scope_end="11582"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gamma:" comment_scope_start="11579" comment_scope_end="11579"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="red:" comment_scope_start="11580" comment_scope_end="11580"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="green:" comment_scope_start="11581" comment_scope_end="11581"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="blue:" comment_scope_start="11582" comment_scope_end="11582"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Kodak ProPhoto (wide gamut)" comment_scope_start="11583" comment_scope_end="11587"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gamma:" comment_scope_start="11584" comment_scope_end="11584"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="approximate: uses 1.8 power law compared to sRGB 2.4" comment_scope_start="11584" comment_scope_end="11584"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="red:" comment_scope_start="11585" comment_scope_end="11585"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="green:" comment_scope_start="11586" comment_scope_end="11586"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="blue:" comment_scope_start="11587" comment_scope_end="11587"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Adobe RGB (1998)" comment_scope_start="11588" comment_scope_end="11592"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gamma:" comment_scope_start="11589" comment_scope_end="11589"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="red:" comment_scope_start="11590" comment_scope_end="11590"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="green:" comment_scope_start="11591" comment_scope_end="11591"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="blue:" comment_scope_start="11592" comment_scope_end="11592"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Adobe Wide Gamut RGB" comment_scope_start="11593" comment_scope_end="11597"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gamma:" comment_scope_start="11594" comment_scope_end="11594"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="red:" comment_scope_start="11595" comment_scope_end="11595"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="green:" comment_scope_start="11596" comment_scope_end="11596"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="blue:" comment_scope_start="11597" comment_scope_end="11597"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Fake encoding which selects just the green channel" comment_scope_start="11598" comment_scope_end="11602"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="gamma:" comment_scope_start="11599" comment_scope_end="11599"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="the 'Mac' gamma" comment_scope_start="11599" comment_scope_end="11599"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="red:" comment_scope_start="11600" comment_scope_end="11600"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="green:" comment_scope_start="11601" comment_scope_end="11601"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="blue:" comment_scope_start="11602" comment_scope_end="11602"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="signal handler
 *
 * This attempts to trap signals and escape without crashing.  It needs a
 * context pointer so that it can throw an exception (call longjmp) to recover
 * from the condition; this is handled by making the png_modifier used by 'main'
 * into a global variable." comment_scope_start="11605" comment_scope_end="11653">
		<SYMBOLS>
			<TypeRef type="png_modifier" spelling="png_modifier" id="2403560896734"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<VarDecl type="png_modifier" spelling="pm" id="2400530856427"/>
			<VarDecl type="size_t" spelling="pos" id="2403221501900"/>
			<VarDecl type="char [64]" spelling="msg" id="2400003556910"/>
			<ParmDecl type="int" spelling="signum" id="2403322161755"/>
			<CallExpr type="size_t" spelling="safecat" id="2403969931734"/>
			<CallExpr type="size_t" spelling="safecat" id="2403110111170"/>
			<CallExpr type="size_t" spelling="safecat" id="2401537802205"/>
			<CallExpr type="size_t" spelling="safecat" id="2401241454276"/>
			<CallExpr type="size_t" spelling="safecat" id="2402776685313"/>
			<CallExpr type="size_t" spelling="safecat" id="2402663418184"/>
			<CallExpr type="size_t" spelling="safecat" id="2401428605874"/>
			<CallExpr type="size_t" spelling="safecat" id="2401132727288"/>
			<CallExpr type="size_t" spelling="safecatn" id="2401861813738"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401236740387"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400447918994"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402115696109"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402322636156"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401955817455"/>
			<DeclRefExpr type="int" spelling="signum" id="2401830885958"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402005762829"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2400240708906"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401282611685"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400302763865"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400945081513"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401297535715"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403121034004"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402256592227"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401000024774"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402402565922"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401818410819"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402342476523"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401817084307"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2403151020111"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401262773686"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404026010312"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401905234158"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402657452303"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400375424999"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402961632477"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403113133093"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401952386821"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401116242206"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400388866791"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400893654027"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2402711275310"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402728702405"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2404080901118"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400926897111"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2400648489707"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403345021069"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402527282769"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402047826853"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2402335965272"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2404261582486"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2403061654016"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, int)" spelling="safecatn" id="2400235436495"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401725850845"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2401046171398"/>
			<DeclRefExpr type="size_t" spelling="pos" id="2401595481902"/>
			<DeclRefExpr type="int" spelling="signum" id="2401826646273"/>
			<StringLiteral type="char [16]" spelling="&quot;caught signal: &quot;" id="2402722482133"/>
			<StringLiteral type="char [6]" spelling="&quot;abort&quot;" id="2401331311758"/>
			<StringLiteral type="char [25]" spelling="&quot;floating point exception&quot;" id="2402647214341"/>
			<StringLiteral type="char [20]" spelling="&quot;illegal instruction&quot;" id="2402190982033"/>
			<StringLiteral type="char [10]" spelling="&quot;interrupt&quot;" id="2401213656496"/>
			<StringLiteral type="char [22]" spelling="&quot;invalid memory access&quot;" id="2400586071499"/>
			<StringLiteral type="char [20]" spelling="&quot;termination request&quot;" id="2400830394170"/>
			<StringLiteral type="char [9]" spelling="&quot;unknown &quot;" id="2400791349799"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403485775282"/>
			<UnexposedExpr type="char *" spelling="msg" id="2401194136114"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402107119944"/>
			<UnexposedExpr type="int" spelling="signum" id="2403738721335"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2404100458559"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400583844578"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402749023532"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400020545854"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400017335765"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400204711574"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403512418319"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402470112003"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403803256937"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402946354452"/>
			<UnexposedExpr type="char *" spelling="msg" id="2400042914647"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403969173818"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402278683489"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402439332247"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2401692752303"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401679258824"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403925551022"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2402336624854"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403527951886"/>
			<UnexposedExpr type="char *" spelling="msg" id="2402210443972"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2400383817003"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, int)" spelling="safecatn" id="2402637879686"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403400634871"/>
			<UnexposedExpr type="size_t" spelling="pos" id="2403700707843"/>
			<UnexposedExpr type="int" spelling="signum" id="2403301923686"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="signal" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="signals" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="signal handler" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="png_structp" comment_scope_start="11654" comment_scope_end="11654">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2402471689055"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2404170166394"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400738518955"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400432746913"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403688720294"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2402104891567"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2400907968602"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403238951121"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="error" comment_scope_start="11654" comment_scope_end="11654">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_log" id="2402471689055"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2404170166394"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400738518955"/>
			<DeclRefExpr type="char [64]" spelling="msg" id="2400432746913"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403688720294"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, png_const_charp, int)" spelling="store_log" id="2402104891567"/>
			<UnexposedExpr type="png_const_charp" spelling="msg" id="2400907968602"/>
			<UnexposedExpr type="char *" spelling="msg" id="2403238951121"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And finally throw an exception so we can keep going, unless this is
    * SIGTERM in which case stop now." comment_scope_start="11656" comment_scope_end="11665">
		<SYMBOLS>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2400505358992"/>
			<CallExpr type="void" spelling="longjmp" id="2402725470846"/>
			<DeclRefExpr type="int" spelling="signum" id="2401015840695"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401326764263"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2400017634386"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400251094189"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402695050891"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401431828881"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2403689957169"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400614129698"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403799648835"/>
			<MemberRefExpr type="struct png_store *volatile" spelling="etmp" id="2401250657031"/>
			<MemberRefExpr type="volatile struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="v" id="2402708995522"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400222038415"/>
			<UnexposedExpr type="int" spelling="signum" id="2400017052850"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2402319848059"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2400074687794"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401687166981"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401428613713"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="throw" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="main program" comment_scope_start="11671" comment_scope_end="12270">
		<SYMBOLS>
			<FunctionDecl type="int (int, char **)" spelling="main" id="2401062898446"/>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2400389850837"/>
			<TypeRef type="FILE" spelling="FILE" id="2401501990775"/>
			<VarDecl type="int" spelling="summary" id="2400968588192"/>
			<VarDecl type="int" spelling="memstats" id="2400947906712"/>
			<VarDecl type="const char *" spelling="touch" id="2402210844211"/>
			<VarDecl type="double [9]" spelling="gammas" id="2403078720860"/>
			<VarDecl type="size_t" spelling="cp" id="2402421705389"/>
			<VarDecl type="char [1024]" spelling="command" id="2400562380778"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2401050040806"/>
			<VarDecl type="int" spelling="catmore" id="2401671775515"/>
			<VarDecl type="const char *" spelling="arg" id="2404015756692"/>
			<VarDecl type="unsigned char" spelling="option" id="2404193167798"/>
			<VarDecl type="unsigned char" spelling="setting" id="2400680285679"/>
			<VarDecl type="jmp_buf *" spelling="exception__prev" id="2400532584749"/>
			<VarDecl type="jmp_buf" spelling="exception__env" id="2401390330030"/>
			<VarDecl type="FILE *" spelling="fsuccess" id="2402471882518"/>
			<VarDecl type="int" spelling="error" id="2403261731768"/>
			<ParmDecl type="int" spelling="argc" id="2402037229656"/>
			<ParmDecl type="char **" spelling="argv" id="2401027889016"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400500320946"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400323905188"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2402650367300"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400802412118"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2402050290502"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400950236685"/>
			<CallExpr type="void" spelling="modifier_init" id="2403279039414"/>
			<CallExpr type="void" spelling="store_ensure_image" id="2404151452451"/>
			<CallExpr type="size_t" spelling="safecat" id="2401794696714"/>
			<CallExpr type="size_t" spelling="safecat" id="2402601919016"/>
			<CallExpr type="size_t" spelling="safecat" id="2400048137590"/>
			<CallExpr type="int" spelling="strcmp" id="2404085467774"/>
			<CallExpr type="int" spelling="strcmp" id="2403800129171"/>
			<CallExpr type="int" spelling="strcmp" id="2401352642297"/>
			<CallExpr type="int" spelling="strcmp" id="2402705030818"/>
			<CallExpr type="int" spelling="strcmp" id="2400669422111"/>
			<CallExpr type="int" spelling="strcmp" id="2403914284268"/>
			<CallExpr type="int" spelling="strcmp" id="2401383962106"/>
			<CallExpr type="int" spelling="strcmp" id="2403932306594"/>
			<CallExpr type="int" spelling="strcmp" id="2404188495869"/>
			<CallExpr type="int" spelling="strcmp" id="2401834316496"/>
			<CallExpr type="int" spelling="strcmp" id="2404209665399"/>
			<CallExpr type="int" spelling="strcmp" id="2402200010551"/>
			<CallExpr type="int" spelling="strcmp" id="2401394227362"/>
			<CallExpr type="int" spelling="strcmp" id="2402933518363"/>
			<CallExpr type="int" spelling="strncmp" id="2404111986173"/>
			<CallExpr type="void" spelling="transform_disable" id="2400236133966"/>
			<CallExpr type="int" spelling="strncmp" id="2402864794530"/>
			<CallExpr type="void" spelling="transform_enable" id="2404058254984"/>
			<CallExpr type="int" spelling="strcmp" id="2401830319562"/>
			<CallExpr type="int" spelling="strcmp" id="2400409335588"/>
			<CallExpr type="int" spelling="strcmp" id="2400583579070"/>
			<CallExpr type="int" spelling="strcmp" id="2403834836104"/>
			<CallExpr type="int" spelling="strcmp" id="2403198804271"/>
			<CallExpr type="int" spelling="strcmp" id="2401460257267"/>
			<CallExpr type="int" spelling="strcmp" id="2403409297005"/>
			<CallExpr type="int" spelling="strcmp" id="2401513055366"/>
			<CallExpr type="int" spelling="strcmp" id="2401960927734"/>
			<CallExpr type="int" spelling="strcmp" id="2400310967833"/>
			<CallExpr type="int" spelling="strcmp" id="2400598197390"/>
			<CallExpr type="int" spelling="strcmp" id="2401549330975"/>
			<CallExpr type="int" spelling="strcmp" id="2401364083692"/>
			<CallExpr type="int" spelling="strcmp" id="2400189866724"/>
			<CallExpr type="int" spelling="strcmp" id="2403109752025"/>
			<CallExpr type="int" spelling="strcmp" id="2404044865920"/>
			<CallExpr type="int" spelling="strcmp" id="2400599152286"/>
			<CallExpr type="int" spelling="strcmp" id="2403970415645"/>
			<CallExpr type="int" spelling="strcmp" id="2401320012954"/>
			<CallExpr type="int" spelling="strcmp" id="2401590193003"/>
			<CallExpr type="int" spelling="strcmp" id="2402802411403"/>
			<CallExpr type="int" spelling="strcmp" id="2400025887516"/>
			<CallExpr type="int" spelling="strcmp" id="2404030558207"/>
			<CallExpr type="int" spelling="strcmp" id="2401573942994"/>
			<CallExpr type="int" spelling="strcmp" id="2404005934308"/>
			<CallExpr type="int" spelling="strcmp" id="2401352900737"/>
			<CallExpr type="int" spelling="strcmp" id="2402903404508"/>
			<CallExpr type="int" spelling="strcmp" id="2403645100137"/>
			<CallExpr type="int" spelling="strcmp" id="2402416265607"/>
			<CallExpr type="int" spelling="strcmp" id="2402589419028"/>
			<CallExpr type="int" spelling="strcmp" id="2401674352289"/>
			<CallExpr type="int" spelling="strcmp" id="2400848544270"/>
			<CallExpr type="int" spelling="atoi" id="2401456817143"/>
			<CallExpr type="int" spelling="strcmp" id="2400135601386"/>
			<CallExpr type="int" spelling="strncmp" id="2401482339333"/>
			<CallExpr type="int" spelling="strcmp" id="2403014520023"/>
			<CallExpr type="double" spelling="atof" id="2404208273800"/>
			<CallExpr type="int" spelling="strcmp" id="2401298609532"/>
			<CallExpr type="double" spelling="atof" id="2403377864883"/>
			<CallExpr type="int" spelling="strcmp" id="2401669563418"/>
			<CallExpr type="double" spelling="atof" id="2400420406515"/>
			<CallExpr type="int" spelling="strcmp" id="2400866533443"/>
			<CallExpr type="double" spelling="atof" id="2404106863796"/>
			<CallExpr type="int" spelling="strcmp" id="2403946249336"/>
			<CallExpr type="double" spelling="atof" id="2404194679825"/>
			<CallExpr type="int" spelling="strcmp" id="2402570047102"/>
			<CallExpr type="double" spelling="atof" id="2401855057381"/>
			<CallExpr type="int" spelling="strcmp" id="2403047311591"/>
			<CallExpr type="double" spelling="atof" id="2401854984789"/>
			<CallExpr type="int" spelling="strcmp" id="2403456008274"/>
			<CallExpr type="double" spelling="atof" id="2401881831904"/>
			<CallExpr type="int" spelling="fprintf" id="2403134384094"/>
			<CallExpr type="void" spelling="exit" id="2400992482071"/>
			<CallExpr type="int" spelling="strcmp" id="2404024923532"/>
			<CallExpr type="double" spelling="atof" id="2402677087884"/>
			<CallExpr type="int" spelling="strcmp" id="2401213250939"/>
			<CallExpr type="double" spelling="atof" id="2402413850281"/>
			<CallExpr type="int" spelling="strncmp" id="2401810178505"/>
			<CallExpr type="int" spelling="strncmp" id="2401261753032"/>
			<CallExpr type="int" spelling="fprintf" id="2400570222574"/>
			<CallExpr type="void" spelling="exit" id="2400214385450"/>
			<CallExpr type="int" spelling="strcmp" id="2403496439945"/>
			<CallExpr type="int" spelling="strcmp" id="2401436632809"/>
			<CallExpr type="int" spelling="fprintf" id="2400409559218"/>
			<CallExpr type="void" spelling="exit" id="2400201524295"/>
			<CallExpr type="int" spelling="fprintf" id="2402025801195"/>
			<CallExpr type="void" spelling="exit" id="2402267926487"/>
			<CallExpr type="size_t" spelling="safecat" id="2401774286354"/>
			<CallExpr type="size_t" spelling="safecat" id="2401349113448"/>
			<CallExpr type="int" spelling="_setjmp" id="2403870795334"/>
			<CallExpr type="void" spelling="make_transform_images" id="2402349656387"/>
			<CallExpr type="void" spelling="perform_interlace_macro_validation" id="2403017536417"/>
			<CallExpr type="void" spelling="perform_formatting_test" id="2403306796524"/>
			<CallExpr type="void" spelling="perform_standard_test" id="2400354180318"/>
			<CallExpr type="void" spelling="perform_error_test" id="2401934438024"/>
			<CallExpr type="void" spelling="make_size_images" id="2401348769963"/>
			<CallExpr type="void" spelling="perform_size_test" id="2401979676253"/>
			<CallExpr type="void" spelling="perform_transform_test" id="2400715356801"/>
			<CallExpr type="void" spelling="perform_gamma_test" id="2400967609415"/>
			<CallExpr type="int" spelling="fprintf" id="2400627119897"/>
			<CallExpr type="int" spelling="fprintf" id="2400234315261"/>
			<CallExpr type="int" spelling="fprintf" id="2403028805930"/>
			<CallExpr type="void" spelling="exit" id="2402436988656"/>
			<CallExpr type="int" spelling="printf" id="2403756129820"/>
			<CallExpr type="int" spelling="printf" id="2400358174940"/>
			<CallExpr type="void" spelling="store_delete" id="2403974909011"/>
			<CallExpr type="int" spelling="fprintf" id="2402567522569"/>
			<CallExpr type="int" spelling="fprintf" id="2403068297569"/>
			<CallExpr type="void" spelling="exit" id="2402019856985"/>
			<CallExpr type="FILE *" spelling="fopen" id="2400272624984"/>
			<CallExpr type="int" spelling="fprintf" id="2403089875003"/>
			<CallExpr type="int" spelling="fflush" id="2402102739413"/>
			<CallExpr type="int" spelling="ferror" id="2402571481767"/>
			<CallExpr type="int" spelling="fclose" id="2400700572578"/>
			<CallExpr type="int" spelling="fprintf" id="2403229736059"/>
			<CallExpr type="void" spelling="exit" id="2400913069117"/>
			<CallExpr type="int" spelling="fprintf" id="2403838153202"/>
			<CallExpr type="void" spelling="exit" id="2403874850436"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403800762284"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2403241125775"/>
			<DeclRefExpr type="int" spelling="summary" id="2401604589265"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2402821409129"/>
			<DeclRefExpr type="int" spelling="memstats" id="2404261796245"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2402684815112"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2404258094484"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2402626665319"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401975778353"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400299352269"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401775459209"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400591088376"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401702880058"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2401638189443"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2403329375798"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400464033153"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401475167863"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400054057842"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2400518218381"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_init" id="2400695230581"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402986997776"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2402543202508"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404269155614"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401674815315"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402364751452"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402303266716"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403708502144"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402559634297"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400732172046"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404165496629"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403816518240"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401704081078"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2403193389291"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401544919539"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2402236685354"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2402768015289"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400905267565"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403810339710"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400708041629"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402919364304"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400030889111"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402342465150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401686397534"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400238323559"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2403473205717"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402090134289"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2400485057565"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2400967321754"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404273409473"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401267688080"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401075780888"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403536504865"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402695057562"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403695747514"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401962008434"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401676578300"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400881286892"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402636051723"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401357772514"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401888243261"/>
			<DeclRefExpr type="int" spelling="argc" id="2403619749375"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401702936436"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401696337743"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402918507270"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402462301724"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401022366906"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400380098663"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403864426794"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403978015161"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403216010955"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400727256728"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401031910637"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402709104303"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401351652954"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400800217391"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400529608514"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403733260642"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400864855687"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401923162776"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403964647469"/>
			<DeclRefExpr type="int" spelling="summary" id="2400395630631"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400897604259"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403468276856"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401318710397"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400648910860"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402569717654"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401257435341"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400293436544"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400392737387"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402980414724"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400818852116"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400715862332"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401702965930"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401279784538"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402625890141"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400578391851"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403636185430"/>
			<DeclRefExpr type="int" spelling="summary" id="2403483274630"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400970875535"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400473958088"/>
			<DeclRefExpr type="int" spelling="memstats" id="2402709590885"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401900730188"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400288616085"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400496790594"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2404004820447"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400156976475"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402741210589"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400878457263"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400606850187"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401570616602"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402815484915"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403133042318"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403577043003"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401337279781"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400058536511"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404180798589"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402815639540"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402797981919"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401634714939"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2402907848701"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403074695846"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403774990107"/>
			<DeclRefExpr type="void (const char *)" spelling="transform_disable" id="2400128476424"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401004318726"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2400547759267"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400199898293"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402406673292"/>
			<DeclRefExpr type="void (const char *)" spelling="transform_enable" id="2402258886246"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402036874112"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400503735527"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402252996281"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402096198118"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400445666995"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403528260903"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402639016415"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403631418583"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404182150349"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404145420289"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400361760852"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403569110640"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400444927010"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403388991970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402534051655"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401294865473"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403009815893"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402720296958"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401145353730"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402735971792"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402925082670"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401930318398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401864240514"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401058514588"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403559499426"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401353319438"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402629151174"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401831133648"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403066644107"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402397811952"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400521506797"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402731485270"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403938653198"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401654237174"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400551702194"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400386072578"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402058108019"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400605660923"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400785227023"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401911967593"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402720298668"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403826420317"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400872088121"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402177338779"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402812751817"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400681530970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401837190055"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401356972282"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400093210972"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403030862412"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401202897712"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400522975741"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400237007908"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402745708741"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401664758315"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401015194413"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403375667981"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400650301333"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402216656248"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403988147097"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404129807929"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400083462794"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401143354761"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402215789124"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400466539663"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400528684835"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402960554901"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404150859445"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400431347970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401690309063"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400936768910"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403561599517"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401009603491"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402958753649"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402050189499"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403426170807"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400384045435"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401780215814"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403647601379"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403309843477"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402738088933"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403656397500"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403036469072"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400918025417"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400841058323"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400212887950"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401355421715"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401693400792"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400711189487"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403458201191"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403117116435"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401335798455"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401168098111"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402594390284"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403551030400"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403423077850"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402234934242"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401548347714"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400792757117"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403788074540"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403345464524"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401392539989"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401745661805"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401115359227"/>
			<DeclRefExpr type="char **" spelling="argv" id="2404064501798"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400187421881"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400801098647"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401149475174"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402370546674"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403341588377"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402486867705"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400598060670"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403008435362"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400383794225"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403993198842"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401962007390"/>
			<DeclRefExpr type="int" spelling="argc" id="2403681529122"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402837726168"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403973370836"/>
			<DeclRefExpr type="int" spelling="argc" id="2401545462800"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400290445467"/>
			<DeclRefExpr type="int (const char *)" spelling="atoi" id="2400561647223"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402604449476"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402330577384"/>
			<DeclRefExpr type="int" spelling="argc" id="2401068849376"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401638802040"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403892646418"/>
			<DeclRefExpr type="int" spelling="argc" id="2403036459334"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2403060659432"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402489479312"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402863126509"/>
			<DeclRefExpr type="int" spelling="argc" id="2400585720429"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2400260531557"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400829437727"/>
			<DeclRefExpr type="int" spelling="argc" id="2402118752632"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403174207782"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403905208996"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400460821447"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400731958116"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402697845129"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401294180000"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402890854957"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401710617692"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2403668944162"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403093442181"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400059705429"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402799997199"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400038193542"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2403534735282"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400203967787"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402014588626"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400687062660"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401658619239"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402453373829"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400974349854"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400605886903"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403308700323"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403578698553"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402555348975"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401736335533"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403691370018"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400122947523"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401429893437"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2401504232364"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401852192898"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400573983854"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403997024168"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403610714415"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400836778025"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402845745929"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400703607389"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403926632268"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402198400115"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2401207353337"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402252945459"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401633400627"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400533181352"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403402784765"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403523252228"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402773351752"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402645301778"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400496084153"/>
			<DeclRefExpr type="int" spelling="argc" id="2401702618034"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403952094950"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402225531848"/>
			<DeclRefExpr type="char **" spelling="argv" id="2404166246500"/>
			<DeclRefExpr type="int" spelling="catmore" id="2400161965520"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400595775775"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402168207741"/>
			<DeclRefExpr type="int" spelling="argc" id="2401550307150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402089306952"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400084015298"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400824452122"/>
			<DeclRefExpr type="int" spelling="catmore" id="2401527692021"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2402030780493"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401590048864"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400106157771"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2404018445619"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401404548693"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2403541552012"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402696426048"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400452439259"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402378166080"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400699628055"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2404025844766"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401847808160"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401448826419"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2403627741287"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401330848096"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400049998108"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401918330416"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401839595580"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402553502403"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401921818023"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402968820648"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402493550068"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2404123284263"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403751953465"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400457054173"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2404215788352"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401050987250"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402765421662"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2403548805467"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400820246029"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401582533257"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401576156328"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401777156444"/>
			<DeclRefExpr type="int" spelling="catmore" id="2403817098349"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400295457965"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402934923400"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2401741574562"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2401465800454"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401244902767"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402654235482"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402627693932"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403996273786"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2400824975926"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402000351029"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403649625850"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401565340162"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400455738317"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401262332081"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404056626930"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402337685086"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403941274398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401086622802"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401427649935"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400189987492"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400762667943"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404286048403"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400809214737"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401308937215"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402577597028"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401047595844"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402787741254"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404055627345"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401140685674"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402986950901"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402120653361"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403827610653"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402622910426"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403391146397"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402605128659"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404025984398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401796575131"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401848297376"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402466935000"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401189027718"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2403255277551"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2400832233051"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2401354869859"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2401710438873"/>
			<DeclRefExpr type="jmp_buf" spelling="exception__env" id="2404285729838"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="make_transform_images" id="2401965537450"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400057856869"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400689435408"/>
			<DeclRefExpr type="void (void)" spelling="perform_interlace_macro_validation" id="2403925183012"/>
			<DeclRefExpr type="void (png_store *)" spelling="perform_formatting_test" id="2402289357663"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401273938135"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_standard_test" id="2402917644446"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401482844019"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_error_test" id="2402456866632"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402598746075"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403998194048"/>
			<DeclRefExpr type="void (png_store *)" spelling="make_size_images" id="2403743693578"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400409500256"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_size_test" id="2400193160552"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401373462176"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400490916231"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_transform_test" id="2400739500085"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403309801264"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404000788358"/>
			<DeclRefExpr type="void (png_modifier *, int)" spelling="perform_gamma_test" id="2401078505831"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402032473453"/>
			<DeclRefExpr type="int" spelling="summary" id="2403655914818"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401695183359"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402674764524"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402181301099"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2402442777872"/>
			<DeclRefExpr type="jmp_buf *" spelling="exception__prev" id="2401185487386"/>
			<DeclRefExpr type="struct exception_context *" spelling="the_exception_context" id="2401187388070"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403133953100"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400871391516"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403904734191"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402421391738"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2403776892077"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401564170496"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401171896251"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400746128687"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401026424973"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403995631745"/>
			<DeclRefExpr type="int" spelling="summary" id="2401778368591"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2401078313057"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403259552426"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403562618820"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402153576130"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403241062366"/>
			<DeclRefExpr type="int" spelling="memstats" id="2402168858181"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2400739671315"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403151434908"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401439176573"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400819563525"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402208548357"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403650565014"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400706074057"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_delete" id="2403703714092"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401038447103"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401640132780"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400544988150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402475568011"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403918242594"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402931741724"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400254537798"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404164878653"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400284944753"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403399614225"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403090557931"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403046698875"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401340755519"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2401846948777"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2403634377065"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2404042691202"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2401361670877"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400608516344"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2401687544919"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2401129230575"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2403452345635"/>
			<DeclRefExpr type="int" spelling="error" id="2401004712997"/>
			<DeclRefExpr type="int (FILE *)" spelling="ferror" id="2400899046075"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2402084423512"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2402824902252"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2400228837615"/>
			<DeclRefExpr type="int" spelling="error" id="2403245765712"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400876940405"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400300474175"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2403859703881"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2402148543601"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402876096720"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401495762285"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2401324996161"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400730443202"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401128056773"/>
			<StringLiteral type="char [9]" spelling="&quot;pngvalid&quot;" id="2402317365564"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2401203219328"/>
			<StringLiteral type="char [3]" spelling="&quot;-v&quot;" id="2403554019238"/>
			<StringLiteral type="char [3]" spelling="&quot;-l&quot;" id="2400424192589"/>
			<StringLiteral type="char [3]" spelling="&quot;-q&quot;" id="2402257692382"/>
			<StringLiteral type="char [3]" spelling="&quot;-w&quot;" id="2404013159632"/>
			<StringLiteral type="char [9]" spelling="&quot;--strict&quot;" id="2401376254120"/>
			<StringLiteral type="char [11]" spelling="&quot;--nostrict&quot;" id="2401838260953"/>
			<StringLiteral type="char [8]" spelling="&quot;--speed&quot;" id="2400226475640"/>
			<StringLiteral type="char [9]" spelling="&quot;--memory&quot;" id="2402694315320"/>
			<StringLiteral type="char [7]" spelling="&quot;--size&quot;" id="2401863129035"/>
			<StringLiteral type="char [9]" spelling="&quot;--nosize&quot;" id="2402631426272"/>
			<StringLiteral type="char [11]" spelling="&quot;--standard&quot;" id="2404267525800"/>
			<StringLiteral type="char [13]" spelling="&quot;--nostandard&quot;" id="2400001651508"/>
			<StringLiteral type="char [12]" spelling="&quot;--transform&quot;" id="2400851571601"/>
			<StringLiteral type="char [14]" spelling="&quot;--notransform&quot;" id="2403402467491"/>
			<StringLiteral type="char [21]" spelling="&quot;--transform-disable=&quot;" id="2403239310951"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-disable&quot;" id="2400553862397"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-disable&quot;" id="2402049405756"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-enable=&quot;" id="2403420924881"/>
			<StringLiteral type="char [19]" spelling="&quot;--transform-enable&quot;" id="2402761249781"/>
			<StringLiteral type="char [19]" spelling="&quot;--transform-enable&quot;" id="2403039959085"/>
			<StringLiteral type="char [8]" spelling="&quot;--gamma&quot;" id="2403516589153"/>
			<StringLiteral type="char [10]" spelling="&quot;--nogamma&quot;" id="2402743276679"/>
			<StringLiteral type="char [18]" spelling="&quot;--gamma-threshold&quot;" id="2402037985250"/>
			<StringLiteral type="char [20]" spelling="&quot;--nogamma-threshold&quot;" id="2400717272895"/>
			<StringLiteral type="char [18]" spelling="&quot;--gamma-transform&quot;" id="2401257494659"/>
			<StringLiteral type="char [20]" spelling="&quot;--nogamma-transform&quot;" id="2402645915905"/>
			<StringLiteral type="char [13]" spelling="&quot;--gamma-sbit&quot;" id="2401155707840"/>
			<StringLiteral type="char [15]" spelling="&quot;--nogamma-sbit&quot;" id="2403428327382"/>
			<StringLiteral type="char [16]" spelling="&quot;--gamma-16-to-8&quot;" id="2401747984544"/>
			<StringLiteral type="char [18]" spelling="&quot;--nogamma-16-to-8&quot;" id="2402389722287"/>
			<StringLiteral type="char [19]" spelling="&quot;--gamma-background&quot;" id="2401376907209"/>
			<StringLiteral type="char [21]" spelling="&quot;--nogamma-background&quot;" id="2402163426780"/>
			<StringLiteral type="char [19]" spelling="&quot;--gamma-alpha-mode&quot;" id="2402348631543"/>
			<StringLiteral type="char [21]" spelling="&quot;--nogamma-alpha-mode&quot;" id="2404128430037"/>
			<StringLiteral type="char [11]" spelling="&quot;--expand16&quot;" id="2404156231763"/>
			<StringLiteral type="char [13]" spelling="&quot;--noexpand16&quot;" id="2400721634913"/>
			<StringLiteral type="char [17]" spelling="&quot;--low-depth-gray&quot;" id="2401448104678"/>
			<StringLiteral type="char [19]" spelling="&quot;--nolow-depth-gray&quot;" id="2402243693955"/>
			<StringLiteral type="char [7]" spelling="&quot;--tRNS&quot;" id="2400294619600"/>
			<StringLiteral type="char [9]" spelling="&quot;--notRNS&quot;" id="2401645578940"/>
			<StringLiteral type="char [14]" spelling="&quot;--more-gammas&quot;" id="2402951368034"/>
			<StringLiteral type="char [13]" spelling="&quot;--all-gammas&quot;" id="2403327472359"/>
			<StringLiteral type="char [19]" spelling="&quot;--progressive-read&quot;" id="2400681654335"/>
			<StringLiteral type="char [18]" spelling="&quot;--use-update-info&quot;" id="2403805215188"/>
			<StringLiteral type="char [12]" spelling="&quot;--interlace&quot;" id="2400692951989"/>
			<StringLiteral type="char [22]" spelling="&quot;--use-input-precision&quot;" id="2404046783988"/>
			<StringLiteral type="char [28]" spelling="&quot;--use-calculation-precision&quot;" id="2400865341615"/>
			<StringLiteral type="char [35]" spelling="&quot;--calculations-use-input-precision&quot;" id="2401375995996"/>
			<StringLiteral type="char [29]" spelling="&quot;--assume-16-bit-calculations&quot;" id="2401399283642"/>
			<StringLiteral type="char [32]" spelling="&quot;--calculations-follow-bit-depth&quot;" id="2404259887775"/>
			<StringLiteral type="char [13]" spelling="&quot;--exhaustive&quot;" id="2401887665535"/>
			<StringLiteral type="char [10]" spelling="&quot;--sbitlow&quot;" id="2404145422041"/>
			<StringLiteral type="char [8]" spelling="&quot;--touch&quot;" id="2403315566530"/>
			<StringLiteral type="char [6]" spelling="&quot;--max&quot;" id="2402274753003"/>
			<StringLiteral type="char [5]" spelling="&quot;abs8&quot;" id="2403113948378"/>
			<StringLiteral type="char [6]" spelling="&quot;abs16&quot;" id="2401308627742"/>
			<StringLiteral type="char [6]" spelling="&quot;calc8&quot;" id="2403481427348"/>
			<StringLiteral type="char [7]" spelling="&quot;calc16&quot;" id="2402121483825"/>
			<StringLiteral type="char [5]" spelling="&quot;out8&quot;" id="2404105593038"/>
			<StringLiteral type="char [6]" spelling="&quot;out16&quot;" id="2400620005815"/>
			<StringLiteral type="char [4]" spelling="&quot;pc8&quot;" id="2400480685861"/>
			<StringLiteral type="char [5]" spelling="&quot;pc16&quot;" id="2401420582302"/>
			<StringLiteral type="char [36]" spelling="&quot;pngvalid: %s: unknown 'max' option\n&quot;" id="2404087821562"/>
			<StringLiteral type="char [7]" spelling="&quot;--log8&quot;" id="2401516141425"/>
			<StringLiteral type="char [8]" spelling="&quot;--log16&quot;" id="2402896926944"/>
			<StringLiteral type="char [10]" spelling="&quot;--option=&quot;" id="2403607915226"/>
			<StringLiteral type="char [20]" spelling="&quot;max-inflate-window:&quot;" id="2401118951375"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid: %s: %s: unknown option\n&quot;" id="2400201513752"/>
			<StringLiteral type="char [4]" spelling="&quot;off&quot;" id="2401037824717"/>
			<StringLiteral type="char [3]" spelling="&quot;on&quot;" id="2401702866854"/>
			<StringLiteral type="char [55]" spelling="&quot;pngvalid: %s: %s: unknown setting (use 'on' or 'off')\n&quot;" id="2400770593476"/>
			<StringLiteral type="char [32]" spelling="&quot;pngvalid: %s: unknown argument\n&quot;" id="2402226517163"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2401330948221"/>
			<StringLiteral type="char [53]" spelling="&quot;pngvalid: test aborted (probably failed in cleanup)\n&quot;" id="2401467627848"/>
			<StringLiteral type="char [27]" spelling="&quot;pngvalid: first error: %s\n&quot;" id="2402870297887"/>
			<StringLiteral type="char [44]" spelling="&quot;pngvalid: run with -v to see what happened\n&quot;" id="2402700003201"/>
			<StringLiteral type="char [30]" spelling="&quot;%s: %s (%s point arithmetic)\n&quot;" id="2400044350385"/>
			<StringLiteral type="char [5]" spelling="&quot;FAIL&quot;" id="2401246804312"/>
			<StringLiteral type="char [5]" spelling="&quot;PASS&quot;" id="2404279728152"/>
			<StringLiteral type="char [9]" spelling="&quot;floating&quot;" id="2401703320355"/>
			<StringLiteral type="char [135]" spelling="&quot;Allocated memory statistics (in bytes):\n\tread  %lu maximum single, %lu peak, %lu total\n\twrite %lu maximum single, %lu peak, %lu total\n&quot;" id="2402896155114"/>
			<StringLiteral type="char [14]" spelling="&quot;pngvalid: %s\n&quot;" id="2400266228857"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid: %d errors, %d warnings\n&quot;" id="2402942917089"/>
			<StringLiteral type="char [3]" spelling="&quot;wt&quot;" id="2400462728230"/>
			<StringLiteral type="char [26]" spelling="&quot;PNG validation succeeded\n&quot;" id="2404110487971"/>
			<StringLiteral type="char [18]" spelling="&quot;%s: write failed\n&quot;" id="2400200610075"/>
			<StringLiteral type="char [17]" spelling="&quot;%s: open failed\n&quot;" id="2402032374586"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2402668002367"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403662624385"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401887576991"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402931347769"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403519458259"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2401846771583"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403734203634"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2403800380510"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2400849482678"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400566102172"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2402167370784"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2401177246481"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2403866202249"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2400981444610"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2404243489134"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2402086406007"/>
			<MemberRefExpr type="const color_encoding *" spelling="encodings" id="2400142782444"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2401893473645"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2403206023744"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2400507400831"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_sbit" id="2401001841744"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2403138189206"/>
			<MemberRefExpr type="double" spelling="maxabs8" id="2402950409589"/>
			<MemberRefExpr type="double" spelling="maxcalc8" id="2401341811527"/>
			<MemberRefExpr type="double" spelling="maxpc8" id="2403687348940"/>
			<MemberRefExpr type="double" spelling="maxout16" id="2400204741168"/>
			<MemberRefExpr type="double" spelling="maxabs16" id="2403995400727"/>
			<MemberRefExpr type="double" spelling="maxcalc16" id="2401810748918"/>
			<MemberRefExpr type="double" spelling="maxcalcG" id="2400127956826"/>
			<MemberRefExpr type="double" spelling="maxpc16" id="2400597544723"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2403487798981"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401800122353"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2403715728484"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2401163835750"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400742340203"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2402405770398"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402607146091"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403963541060"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2404013151767"/>
			<MemberRefExpr type="png_store" spelling="this" id="2404242744048"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2401161078895"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403096573046"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401504046470"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2403763689033"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2400556420602"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2402503602302"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2401466582734"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2403835299019"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2403197910656"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403846494352"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403010095622"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403275604182"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403716037100"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402848620470"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2401754050074"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2400543632823"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2401135782061"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2400615237190"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2404004517012"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2401972164125"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403136788412"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401321953559"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2403455584462"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2404163925041"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403523415524"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2402670693626"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2404265154967"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402183999224"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2402540550182"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2403653776798"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401050201678"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2404164499694"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2403735591381"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402403005498"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2400259190071"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2400539806230"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401852840324"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2400718144004"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2401246662166"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400661992295"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400242222620"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2400688587511"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2402923980679"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2401109860889"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2403943597065"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2402778269658"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2401873697190"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2402407079862"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2403864482024"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2402142934352"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2400091387903"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2402470309573"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2403539240713"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403958542862"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402278551551"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401451151314"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2400671050123"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400033138122"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401228417318"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2400088264082"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2402564784989"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2402742725470"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2400580774976"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2400111258483"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402213770547"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2403893849966"/>
			<MemberRefExpr type="unsigned int" spelling="test_exhaustive" id="2401383633932"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2401428358798"/>
			<MemberRefExpr type="double" spelling="maxabs8" id="2403750633633"/>
			<MemberRefExpr type="double" spelling="maxabs16" id="2401417135542"/>
			<MemberRefExpr type="double" spelling="maxcalc8" id="2403552409351"/>
			<MemberRefExpr type="double" spelling="maxcalc16" id="2403812012896"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2401040104029"/>
			<MemberRefExpr type="double" spelling="maxout16" id="2401909537520"/>
			<MemberRefExpr type="double" spelling="maxpc8" id="2400453763288"/>
			<MemberRefExpr type="double" spelling="maxpc16" id="2400533764607"/>
			<MemberRefExpr type="double" spelling="log8" id="2401664271895"/>
			<MemberRefExpr type="double" spelling="log16" id="2401884361948"/>
			<MemberRefExpr type="unsigned char" spelling="option" id="2400684182128"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2400203830616"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402916145625"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403055779598"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400177707855"/>
			<MemberRefExpr type="unsigned char" spelling="setting" id="2402935194795"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2401868777142"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402309456424"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403769387593"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400143467724"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2402404357398"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2401736969232"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2400868653197"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402898690277"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2404292084411"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2404241776398"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2400639331706"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400208103258"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400957998393"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2403697452681"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2403420475208"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2403928417203"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2401738079968"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2403657270650"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2403275285143"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2401566170182"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2403238651016"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2400615676316"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2401604988308"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2404018018871"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2403438706248"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402324446536"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2403665312191"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2401288289858"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2401130500676"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2403135465963"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2403424652292"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2402833278095"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2403837606466"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2400537689923"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2402184781481"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401706261671"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2400448678773"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403214057742"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2402106250716"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401546109096"/>
			<MemberRefExpr type="int" spelling="caught" id="2403518475338"/>
			<MemberRefExpr type="int" spelling="caught" id="2401112237856"/>
			<MemberRefExpr type="int" spelling="caught" id="2402908592790"/>
			<MemberRefExpr type="jmp_buf *" spelling="penv" id="2401122653941"/>
			<MemberRefExpr type="int" spelling="caught" id="2400373149063"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2400510976601"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400300654087"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2401605390083"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401339244555"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2401662266883"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403692607657"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2400044489305"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403670634708"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2404269001772"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402729489023"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2402749654654"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403630849398"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_max" id="2400568575107"/>
			<MemberRefExpr type="store_pool" spelling="read_memory_pool" id="2402433851103"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400935231095"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_limit" id="2401211602894"/>
			<MemberRefExpr type="store_pool" spelling="read_memory_pool" id="2401378724173"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400924235159"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_total" id="2403710211808"/>
			<MemberRefExpr type="store_pool" spelling="read_memory_pool" id="2403133578583"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403538385299"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_max" id="2400925406930"/>
			<MemberRefExpr type="store_pool" spelling="write_memory_pool" id="2402341562545"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403130565669"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_limit" id="2401039105762"/>
			<MemberRefExpr type="store_pool" spelling="write_memory_pool" id="2401358790119"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401699342690"/>
			<MemberRefExpr type="png_alloc_size_t" spelling="max_total" id="2401525540806"/>
			<MemberRefExpr type="store_pool" spelling="write_memory_pool" id="2401270777375"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400363575855"/>
			<MemberRefExpr type="png_store" spelling="this" id="2404015325048"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2401585369121"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402038703145"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402761570428"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400739540521"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2401366490810"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402579358082"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2402429441669"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403826696056"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2401386021240"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400251261410"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2400738736066"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403346331317"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2403066560876"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403044719176"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2404006413744"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2402508276350"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403283543148"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401992552588"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2400316956476"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401029081399"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403248595575"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2402753238536"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403857117650"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2403104051771"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2400491221903"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401773325788"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_init" id="2403612637361"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2400925028581"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401179483380"/>
			<UnexposedExpr type="char *" spelling="command" id="2401583360601"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2404028347966"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400643945381"/>
			<UnexposedExpr type="const color_encoding *" spelling="test_encodings" id="2400673994963"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401248096696"/>
			<UnexposedExpr type="char *" spelling="command" id="2403100890515"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2400663743850"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400283002179"/>
			<UnexposedExpr type="char *" spelling="command" id="2403118030272"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2402795843215"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402028219402"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403321730260"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403426319075"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401130316617"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402414020285"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401935509403"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400164593430"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403720610807"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402100521429"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400065416260"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401490255854"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400091712085"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401732064578"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403841605346"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2403033104891"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401034746947"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401635575352"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401170957327"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403248521946"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400991384101"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403077774849"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400045997635"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402490105933"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403651578103"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400334749414"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402422551923"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402158652747"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400259113329"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402937907052"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402533556439"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402232509785"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="transform_disable" id="2400523931054"/>
			<UnexposedExpr type="char **" spelling="argv" id="2404160728898"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402115605817"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402579595087"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="transform_enable" id="2401163708036"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400105421418"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400424630259"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401185289873"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401742202552"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401404263218"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401881302280"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401013468721"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403702130360"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403516902758"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400607498246"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401306266425"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400473472682"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403069597555"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402229361425"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400818723573"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402968732905"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400913439326"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402736095377"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401634513239"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403226127095"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402857364500"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404139196761"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400610016317"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403948945081"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400380171329"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403907716860"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403986238391"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404268906899"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403494127489"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401902279245"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401665813988"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403731614049"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402788865148"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402246915993"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400220225598"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401089411895"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401328635527"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403517755560"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403327102052"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403353207492"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401691888348"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401501001968"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400891057781"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401329046886"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402721448603"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2403661897620"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403810767881"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403223043478"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400622611824"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403445349575"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404210089962"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401266325354"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400508004977"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402944000227"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403041878349"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400204113193"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401353181134"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401997687319"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404060871515"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403112351637"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402669144749"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400967841384"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402208266647"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401512464150"/>
			<UnexposedExpr type="int" spelling="argc" id="2400734271295"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402429535936"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402596472047"/>
			<UnexposedExpr type="int (*)(const char *)" spelling="atoi" id="2403147861746"/>
			<UnexposedExpr type="int" spelling="argc" id="2400348806905"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401232587922"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401242371051"/>
			<UnexposedExpr type="int" spelling="argc" id="2401610946080"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402980240499"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401111799424"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403729238614"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401388958838"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2404283473129"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402771971169"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402198116785"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403922587815"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402071164551"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403644091060"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2402411886759"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404008149474"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401265235707"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403881601591"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402814747160"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400934022549"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2400780303548"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401967440892"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401020319322"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2402975340124"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401526148883"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403266175663"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403793927787"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402506882431"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401932260864"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403845688321"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402731456572"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404220237834"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402301540780"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403372227034"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401035970021"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402009754178"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2400643362471"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403823774514"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401798959110"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2404155595727"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2403726637917"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402165122696"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402709793707"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402840923729"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403499962782"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402775413696"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403376896092"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403923106961"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403792177873"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2401809282290"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404049235058"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2401656865348"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404080114796"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402689095745"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403147634726"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401604821942"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403175111737"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402421747188"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2404153988988"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403142833518"/>
			<UnexposedExpr type="int" spelling="noptions" id="2400755129962"/>
			<UnexposedExpr type="unsigned char" spelling="option" id="2400196024926"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403543840824"/>
			<UnexposedExpr type="unsigned char" spelling="setting" id="2400095983627"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2404162830699"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404274388993"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402421885292"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403592459610"/>
			<UnexposedExpr type="int" spelling="catmore" id="2403087835540"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402084888623"/>
			<UnexposedExpr type="char *" spelling="command" id="2400832620093"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2403048598858"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403502503713"/>
			<UnexposedExpr type="char *" spelling="command" id="2400086541183"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2402567942755"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400831979651"/>
			<UnexposedExpr type="int" spelling="test_standard" id="2400099308929"/>
			<UnexposedExpr type="unsigned int" spelling="test_standard" id="2403696652694"/>
			<UnexposedExpr type="int" spelling="test_size" id="2401712553808"/>
			<UnexposedExpr type="unsigned int" spelling="test_size" id="2403995833398"/>
			<UnexposedExpr type="int" spelling="test_transform" id="2403564299922"/>
			<UnexposedExpr type="unsigned int" spelling="test_transform" id="2400675406634"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2401909188341"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2401227509016"/>
			<UnexposedExpr type="int" spelling="test_gamma_threshold" id="2403216240835"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_threshold" id="2403387927977"/>
			<UnexposedExpr type="int" spelling="test_gamma_transform" id="2400271857091"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_transform" id="2403850017964"/>
			<UnexposedExpr type="int" spelling="test_gamma_sbit" id="2402944542602"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_sbit" id="2401942171015"/>
			<UnexposedExpr type="int" spelling="test_gamma_scale16" id="2403225964733"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_scale16" id="2401210919115"/>
			<UnexposedExpr type="int" spelling="test_gamma_background" id="2403647729272"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_background" id="2403404232440"/>
			<UnexposedExpr type="int" spelling="test_gamma_alpha_mode" id="2403571367724"/>
			<UnexposedExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2404257120034"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2403332189444"/>
			<UnexposedExpr type="jmp_buf *" spelling="penv" id="2404191676552"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401652565981"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2404103639774"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2401260315098"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="exception__env" id="2401560136242"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="make_transform_images" id="2402180402167"/>
			<UnexposedExpr type="unsigned int" spelling="test_standard" id="2400056583960"/>
			<UnexposedExpr type="void (*)(void)" spelling="perform_interlace_macro_validation" id="2402232494583"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="perform_formatting_test" id="2401925573235"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_standard_test" id="2401702812059"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_error_test" id="2403872899100"/>
			<UnexposedExpr type="unsigned int" spelling="test_size" id="2403633669741"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="make_size_images" id="2404222869645"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_size_test" id="2401855906303"/>
			<UnexposedExpr type="unsigned int" spelling="test_transform" id="2403698463078"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_transform_test" id="2401461029938"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2400520207202"/>
			<UnexposedExpr type="void (*)(png_modifier *, int)" spelling="perform_gamma_test" id="2401494108925"/>
			<UnexposedExpr type="int" spelling="summary" id="2401559204592"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401708968709"/>
			<UnexposedExpr type="int" spelling="caught" id="2401315901398"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2403238346529"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400356887973"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2401672317230"/>
			<UnexposedExpr type="jmp_buf *" spelling="exception__prev" id="2400133624480"/>
			<UnexposedExpr type="int" spelling="caught" id="2402454734150"/>
			<UnexposedExpr type="struct exception_context *" spelling="the_exception_context" id="2400293978566"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402544310036"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404224082296"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2401633106039"/>
			<UnexposedExpr type="char *" spelling="error" id="2402877695018"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2404072993701"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400169933825"/>
			<UnexposedExpr type="char *" spelling="error" id="2402297483577"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2404045278370"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400142512822"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400732523937"/>
			<UnexposedExpr type="int" spelling="summary" id="2404144978211"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2402217635956"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2400511901479"/>
			<UnexposedExpr type="int" spelling="treat_warnings_as_errors" id="2402354938487"/>
			<UnexposedExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402250378644"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2403184388144"/>
			<UnexposedExpr type="char *" spelling="command" id="2402385788483"/>
			<UnexposedExpr type="int" spelling="memstats" id="2402758221670"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2400721532767"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_max" id="2401035547875"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_limit" id="2401502709653"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_total" id="2403365815462"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_max" id="2403912880476"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_limit" id="2404103960406"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="max_total" id="2403629397973"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_delete" id="2403638654258"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2403716723838"/>
			<UnexposedExpr type="int" spelling="treat_warnings_as_errors" id="2403047715484"/>
			<UnexposedExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2403453947499"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2403362932144"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2401878935550"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2400246551380"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402793811497"/>
			<UnexposedExpr type="char *" spelling="error" id="2401397610572"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403389933553"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400614438766"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2400225707333"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2402072995277"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400717671803"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403790439826"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2400147462299"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403805394469"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402292490903"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402423165522"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402333867262"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2400684300171"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2403456083041"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="ferror" id="2401525224506"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2401327633232"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2400530920447"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402395891538"/>
			<UnexposedExpr type="int" spelling="error" id="2402537911950"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403708709056"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402511129364"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2400534824790"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400461865474"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2400238511741"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402852613940"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403519560816"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400959254682"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2403364444247"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Print the error summary at the end" comment_scope_start="11674" comment_scope_end="11674">
		<SYMBOLS>
			<VarDecl type="int" spelling="summary" id="2400968588192"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Print memory statistics at the end" comment_scope_start="11675" comment_scope_end="11675">
		<SYMBOLS>
			<VarDecl type="int" spelling="memstats" id="2400947906712"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Create the given output file on success:" comment_scope_start="11677" comment_scope_end="11679">
		<SYMBOLS>
			<VarDecl type="const char *" spelling="touch" id="2402210844211"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="create" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is an array of standard gamma values (believe it or not I've seen
    * every one of these mentioned somewhere.)
    *
    * In the following list the most useful values are first!" comment_scope_start="11680" comment_scope_end="11687">
		<SYMBOLS>
			<VarDecl type="double [9]" spelling="gammas" id="2403078720860"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This records the command and arguments:" comment_scope_start="11688" comment_scope_end="11697">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2402256417992"/>
			<TypeRef type="struct exception_context" spelling="struct exception_context" id="2402965186987"/>
			<VarDecl type="size_t" spelling="cp" id="2402421705389"/>
			<VarDecl type="char [1024]" spelling="command" id="2400562380778"/>
			<VarDecl type="struct exception_context *" spelling="the_exception_context" id="2401050040806"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403800762284"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2403241125775"/>
			<DeclRefExpr type="int" spelling="summary" id="2401604589265"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2402821409129"/>
			<DeclRefExpr type="int" spelling="memstats" id="2404261796245"/>
			<DeclRefExpr type="const void *volatile" spelling="make_volatile_for_gnu" id="2402684815112"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2404258094484"/>
			<MemberRefExpr type="struct exception_context" spelling="exception_context" id="2402668002367"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403662624385"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Add appropriate signal handlers, just the ANSI specified ones:" comment_scope_start="11698" comment_scope_end="11706">
		<SYMBOLS>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400500320946"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400323905188"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2402650367300"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400802412118"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2402050290502"/>
			<CallExpr type="__sighandler_t" spelling="signal" id="2400950236685"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2402626665319"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401975778353"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400299352269"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401775459209"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400591088376"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401702880058"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2401638189443"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2403329375798"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400464033153"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2401475167863"/>
			<DeclRefExpr type="__sighandler_t (int, __sighandler_t)" spelling="signal" id="2400054057842"/>
			<DeclRefExpr type="void (int)" spelling="signal_handler" id="2400518218381"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2404006413744"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2402508276350"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403283543148"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401992552588"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2400316956476"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401029081399"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403248595575"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2402753238536"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2403857117650"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2403104051771"/>
			<UnexposedExpr type="__sighandler_t (*)(int, __sighandler_t)" spelling="signal" id="2400491221903"/>
			<UnexposedExpr type="void (*)(int)" spelling="signal_handler" id="2401773325788"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="signal" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Only required to enable FP exceptions on platforms where they start off
    * disabled; this is not necessary but if it is not done pngvalid will likely
    * end up ignoring FP conditions that other platforms fault." comment_scope_start="11707" comment_scope_end="11715">
		<SYMBOLS>
			<CallExpr type="void" spelling="modifier_init" id="2403279039414"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="modifier_init" id="2400695230581"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402986997776"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="modifier_init" id="2403612637361"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Preallocate the image buffer, because we know how big it needs to be,
    * note that, for testing purposes, it is deliberately mis-aligned by tag
    * bytes either side.  All rows have an additional five bytes of padding for
    * overwrite checking." comment_scope_start="11716" comment_scope_end="11722">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_ensure_image" id="2404151452451"/>
			<DeclRefExpr type="void (png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2402543202508"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404269155614"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401887576991"/>
			<UnexposedExpr type="void (*)(png_store *, png_const_structp, int, size_t, png_uint_32)" spelling="store_ensure_image" id="2400925028581"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="padding"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Don't give argv[0], it's normally some horrible libtool string:" comment_scope_start="11723" comment_scope_end="11725">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2401794696714"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401674815315"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402364751452"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402303266716"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403708502144"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402559634297"/>
			<StringLiteral type="char [9]" spelling="&quot;pngvalid&quot;" id="2402317365564"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401179483380"/>
			<UnexposedExpr type="char *" spelling="command" id="2401583360601"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2404028347966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Default to error on warning:" comment_scope_start="11726" comment_scope_end="11728">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400732172046"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402931347769"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403519458259"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Default assume_16_bit_calculations appropriately; this tells the checking
    * code that 16-bit arithmetic is used for 8-bit samples when it would make a
    * difference." comment_scope_start="11729" comment_scope_end="11734">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404165496629"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2401846771583"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="samples" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Currently 16 bit expansion happens at the end of the pipeline, so the
    * calculations are done in the input bit depth not the output.
    *
    * TODO: fix this" comment_scope_start="11735" comment_scope_end="11741">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403816518240"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2403734203634"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="expansion" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Store the test gammas" comment_scope_start="11742" comment_scope_end="11744">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401704081078"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2403193389291"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401544919539"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2402236685354"/>
			<DeclRefExpr type="double [9]" spelling="gammas" id="2402768015289"/>
			<MemberRefExpr type="double *" spelling="gammas" id="2403800380510"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2400849482678"/>
			<UnexposedExpr type="double *" spelling="gammas" id="2400643945381"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="default to off" comment_scope_start="11745" comment_scope_end="11745">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400905267565"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400566102172"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Low bit depth gray images don't do well in the gamma tests, until
    * this is fixed turn them off for some gamma cases:" comment_scope_start="11747" comment_scope_end="11758">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403810339710"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400708041629"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402919364304"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400030889111"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402342465150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401686397534"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2402167370784"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2401177246481"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2403866202249"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2400981444610"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2404243489134"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2402086406007"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="gray"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="gamma"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="And the test encodings" comment_scope_start="11759" comment_scope_end="11763">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400238323559"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2403473205717"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402090134289"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2400485057565"/>
			<DeclRefExpr type="const color_encoding [5]" spelling="test_encodings" id="2400967321754"/>
			<MemberRefExpr type="const color_encoding *" spelling="encodings" id="2400142782444"/>
			<MemberRefExpr type="unsigned int" spelling="nencodings" id="2401893473645"/>
			<UnexposedExpr type="const color_encoding *" spelling="test_encodings" id="2400673994963"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="because libpng doesn't do sBIT below 8!" comment_scope_start="11764" comment_scope_end="11764">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404273409473"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2403206023744"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="The following allows results to pass if they correspond to anything in the
    * transformed range [input-.5,input+.5]; this is is required because of the
    * way libpng treates the 16_TO_8 flag when building the gamma tables in
    * releases up to 1.6.0.
    *
    * TODO: review this" comment_scope_start="11769" comment_scope_end="11776">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401267688080"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_16to8" id="2400507400831"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="because libpng now rounds sBIT" comment_scope_start="11777" comment_scope_end="11777">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401075780888"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision_sbit" id="2401001841744"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Some default values (set the behavior for 'make check' here).
    * These values simply control the maximum error permitted in the gamma
    * transformations.  The practical limits for human perception are described
    * below (the setting for maxpc16), however for 8 bit encodings it isn't
    * possible to meet the accepted capabilities of human vision - i.e. 8 bit
    * images can never be good enough, regardless of encoding." comment_scope_start="11779" comment_scope_end="11785"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Arithmetic error in *encoded* value" comment_scope_start="11786" comment_scope_end="11786">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403536504865"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2403138189206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1/20000" comment_scope_start="11787" comment_scope_end="11787">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402695057562"/>
			<MemberRefExpr type="double" spelling="maxabs8" id="2402950409589"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="+/-1 in 8 bits for compose errors" comment_scope_start="11788" comment_scope_end="11788">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403695747514"/>
			<MemberRefExpr type="double" spelling="maxcalc8" id="2401341811527"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="I.e., .499% fractional error" comment_scope_start="11789" comment_scope_end="11789">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401962008434"/>
			<MemberRefExpr type="double" spelling="maxpc8" id="2403687348940"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error in *encoded* value" comment_scope_start="11790" comment_scope_end="11790">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401676578300"/>
			<MemberRefExpr type="double" spelling="maxout16" id="2400204741168"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="1/20000" comment_scope_start="11791" comment_scope_end="11791">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400881286892"/>
			<MemberRefExpr type="double" spelling="maxabs16" id="2403995400727"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="+/-1 in 16 bits for compose errors" comment_scope_start="11792" comment_scope_end="11792">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402636051723"/>
			<MemberRefExpr type="double" spelling="maxcalc16" id="2401810748918"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compose" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: this is a reasonable perceptual limit. We assume that humans can
    * perceive light level differences of 1% over a 100:1 range, so we need to
    * maintain 1 in 10000 accuracy (in linear light space), which is what the
    * following guarantees.  It also allows significantly higher errors at
    * higher 16 bit values, which is important for performance.  The actual
    * maximum 16 bit error is about +/-1.9 in the fixed point implementation but
    * this is only allowed for values &gt;38149 by the following:" comment_scope_start="11799" comment_scope_end="11806"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="I.e., 1/200% - 1/20000" comment_scope_start="11807" comment_scope_end="11807">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401888243261"/>
			<MemberRefExpr type="double" spelling="maxpc16" id="2400597544723"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Now parse the command line options." comment_scope_start="11809" comment_scope_end="12100">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2402199267622"/>
			<VarDecl type="int" spelling="catmore" id="2401671775515"/>
			<VarDecl type="const char *" spelling="arg" id="2404015756692"/>
			<VarDecl type="unsigned char" spelling="option" id="2404193167798"/>
			<VarDecl type="unsigned char" spelling="setting" id="2400680285679"/>
			<CallExpr type="size_t" spelling="safecat" id="2402601919016"/>
			<CallExpr type="size_t" spelling="safecat" id="2400048137590"/>
			<CallExpr type="int" spelling="strcmp" id="2404085467774"/>
			<CallExpr type="int" spelling="strcmp" id="2403800129171"/>
			<CallExpr type="int" spelling="strcmp" id="2401352642297"/>
			<CallExpr type="int" spelling="strcmp" id="2402705030818"/>
			<CallExpr type="int" spelling="strcmp" id="2400669422111"/>
			<CallExpr type="int" spelling="strcmp" id="2403914284268"/>
			<CallExpr type="int" spelling="strcmp" id="2401383962106"/>
			<CallExpr type="int" spelling="strcmp" id="2403932306594"/>
			<CallExpr type="int" spelling="strcmp" id="2404188495869"/>
			<CallExpr type="int" spelling="strcmp" id="2401834316496"/>
			<CallExpr type="int" spelling="strcmp" id="2404209665399"/>
			<CallExpr type="int" spelling="strcmp" id="2402200010551"/>
			<CallExpr type="int" spelling="strcmp" id="2401394227362"/>
			<CallExpr type="int" spelling="strcmp" id="2402933518363"/>
			<CallExpr type="int" spelling="strncmp" id="2404111986173"/>
			<CallExpr type="void" spelling="transform_disable" id="2400236133966"/>
			<CallExpr type="int" spelling="strncmp" id="2402864794530"/>
			<CallExpr type="void" spelling="transform_enable" id="2404058254984"/>
			<CallExpr type="int" spelling="strcmp" id="2401830319562"/>
			<CallExpr type="int" spelling="strcmp" id="2400409335588"/>
			<CallExpr type="int" spelling="strcmp" id="2400583579070"/>
			<CallExpr type="int" spelling="strcmp" id="2403834836104"/>
			<CallExpr type="int" spelling="strcmp" id="2403198804271"/>
			<CallExpr type="int" spelling="strcmp" id="2401460257267"/>
			<CallExpr type="int" spelling="strcmp" id="2403409297005"/>
			<CallExpr type="int" spelling="strcmp" id="2401513055366"/>
			<CallExpr type="int" spelling="strcmp" id="2401960927734"/>
			<CallExpr type="int" spelling="strcmp" id="2400310967833"/>
			<CallExpr type="int" spelling="strcmp" id="2400598197390"/>
			<CallExpr type="int" spelling="strcmp" id="2401549330975"/>
			<CallExpr type="int" spelling="strcmp" id="2401364083692"/>
			<CallExpr type="int" spelling="strcmp" id="2400189866724"/>
			<CallExpr type="int" spelling="strcmp" id="2403109752025"/>
			<CallExpr type="int" spelling="strcmp" id="2404044865920"/>
			<CallExpr type="int" spelling="strcmp" id="2400599152286"/>
			<CallExpr type="int" spelling="strcmp" id="2403970415645"/>
			<CallExpr type="int" spelling="strcmp" id="2401320012954"/>
			<CallExpr type="int" spelling="strcmp" id="2401590193003"/>
			<CallExpr type="int" spelling="strcmp" id="2402802411403"/>
			<CallExpr type="int" spelling="strcmp" id="2400025887516"/>
			<CallExpr type="int" spelling="strcmp" id="2404030558207"/>
			<CallExpr type="int" spelling="strcmp" id="2401573942994"/>
			<CallExpr type="int" spelling="strcmp" id="2404005934308"/>
			<CallExpr type="int" spelling="strcmp" id="2401352900737"/>
			<CallExpr type="int" spelling="strcmp" id="2402903404508"/>
			<CallExpr type="int" spelling="strcmp" id="2403645100137"/>
			<CallExpr type="int" spelling="strcmp" id="2402416265607"/>
			<CallExpr type="int" spelling="strcmp" id="2402589419028"/>
			<CallExpr type="int" spelling="strcmp" id="2401674352289"/>
			<CallExpr type="int" spelling="strcmp" id="2400848544270"/>
			<CallExpr type="int" spelling="atoi" id="2401456817143"/>
			<CallExpr type="int" spelling="strcmp" id="2400135601386"/>
			<CallExpr type="int" spelling="strncmp" id="2401482339333"/>
			<CallExpr type="int" spelling="strcmp" id="2403014520023"/>
			<CallExpr type="double" spelling="atof" id="2404208273800"/>
			<CallExpr type="int" spelling="strcmp" id="2401298609532"/>
			<CallExpr type="double" spelling="atof" id="2403377864883"/>
			<CallExpr type="int" spelling="strcmp" id="2401669563418"/>
			<CallExpr type="double" spelling="atof" id="2400420406515"/>
			<CallExpr type="int" spelling="strcmp" id="2400866533443"/>
			<CallExpr type="double" spelling="atof" id="2404106863796"/>
			<CallExpr type="int" spelling="strcmp" id="2403946249336"/>
			<CallExpr type="double" spelling="atof" id="2404194679825"/>
			<CallExpr type="int" spelling="strcmp" id="2402570047102"/>
			<CallExpr type="double" spelling="atof" id="2401855057381"/>
			<CallExpr type="int" spelling="strcmp" id="2403047311591"/>
			<CallExpr type="double" spelling="atof" id="2401854984789"/>
			<CallExpr type="int" spelling="strcmp" id="2403456008274"/>
			<CallExpr type="double" spelling="atof" id="2401881831904"/>
			<CallExpr type="int" spelling="fprintf" id="2403134384094"/>
			<CallExpr type="void" spelling="exit" id="2400992482071"/>
			<CallExpr type="int" spelling="strcmp" id="2404024923532"/>
			<CallExpr type="double" spelling="atof" id="2402677087884"/>
			<CallExpr type="int" spelling="strcmp" id="2401213250939"/>
			<CallExpr type="double" spelling="atof" id="2402413850281"/>
			<CallExpr type="int" spelling="strncmp" id="2401810178505"/>
			<CallExpr type="int" spelling="strncmp" id="2401261753032"/>
			<CallExpr type="int" spelling="fprintf" id="2400570222574"/>
			<CallExpr type="void" spelling="exit" id="2400214385450"/>
			<CallExpr type="int" spelling="strcmp" id="2403496439945"/>
			<CallExpr type="int" spelling="strcmp" id="2401436632809"/>
			<CallExpr type="int" spelling="fprintf" id="2400409559218"/>
			<CallExpr type="void" spelling="exit" id="2400201524295"/>
			<CallExpr type="int" spelling="fprintf" id="2402025801195"/>
			<CallExpr type="void" spelling="exit" id="2402267926487"/>
			<CallExpr type="size_t" spelling="safecat" id="2401774286354"/>
			<CallExpr type="size_t" spelling="safecat" id="2401349113448"/>
			<DeclRefExpr type="int" spelling="argc" id="2403619749375"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401702936436"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401696337743"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402918507270"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402462301724"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401022366906"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400380098663"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403864426794"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403978015161"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403216010955"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400727256728"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401031910637"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402709104303"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401351652954"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400800217391"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400529608514"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403733260642"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400864855687"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401923162776"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403964647469"/>
			<DeclRefExpr type="int" spelling="summary" id="2400395630631"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400897604259"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403468276856"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401318710397"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400648910860"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402569717654"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401257435341"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400293436544"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400392737387"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402980414724"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400818852116"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400715862332"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401702965930"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401279784538"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402625890141"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400578391851"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403636185430"/>
			<DeclRefExpr type="int" spelling="summary" id="2403483274630"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400970875535"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400473958088"/>
			<DeclRefExpr type="int" spelling="memstats" id="2402709590885"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401900730188"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400288616085"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400496790594"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2404004820447"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400156976475"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402741210589"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400878457263"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400606850187"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401570616602"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402815484915"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403133042318"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403577043003"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401337279781"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400058536511"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404180798589"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402815639540"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402797981919"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401634714939"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2402907848701"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403074695846"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403774990107"/>
			<DeclRefExpr type="void (const char *)" spelling="transform_disable" id="2400128476424"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401004318726"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2400547759267"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400199898293"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402406673292"/>
			<DeclRefExpr type="void (const char *)" spelling="transform_enable" id="2402258886246"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402036874112"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400503735527"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402252996281"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402096198118"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400445666995"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403528260903"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402639016415"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403631418583"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404182150349"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404145420289"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400361760852"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403569110640"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400444927010"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403388991970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402534051655"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401294865473"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403009815893"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402720296958"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401145353730"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402735971792"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402925082670"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401930318398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401864240514"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401058514588"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403559499426"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401353319438"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402629151174"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401831133648"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403066644107"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402397811952"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400521506797"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402731485270"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403938653198"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401654237174"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400551702194"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400386072578"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402058108019"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400605660923"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400785227023"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401911967593"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402720298668"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403826420317"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400872088121"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402177338779"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402812751817"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400681530970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401837190055"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401356972282"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400093210972"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403030862412"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401202897712"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400522975741"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400237007908"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402745708741"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401664758315"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401015194413"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403375667981"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400650301333"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402216656248"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403988147097"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404129807929"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400083462794"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401143354761"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402215789124"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400466539663"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400528684835"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402960554901"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404150859445"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400431347970"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401690309063"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400936768910"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403561599517"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401009603491"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402958753649"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402050189499"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403426170807"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400384045435"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401780215814"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403647601379"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403309843477"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402738088933"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403656397500"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403036469072"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400918025417"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400841058323"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400212887950"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401355421715"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401693400792"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400711189487"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403458201191"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403117116435"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401335798455"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401168098111"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402594390284"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403551030400"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403423077850"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402234934242"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401548347714"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400792757117"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403788074540"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403345464524"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401392539989"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401745661805"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401115359227"/>
			<DeclRefExpr type="char **" spelling="argv" id="2404064501798"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400187421881"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400801098647"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401149475174"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402370546674"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403341588377"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402486867705"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400598060670"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403008435362"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400383794225"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403993198842"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401962007390"/>
			<DeclRefExpr type="int" spelling="argc" id="2403681529122"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402837726168"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403973370836"/>
			<DeclRefExpr type="int" spelling="argc" id="2401545462800"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400290445467"/>
			<DeclRefExpr type="int (const char *)" spelling="atoi" id="2400561647223"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402604449476"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402330577384"/>
			<DeclRefExpr type="int" spelling="argc" id="2401068849376"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401638802040"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403892646418"/>
			<DeclRefExpr type="int" spelling="argc" id="2403036459334"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2403060659432"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402489479312"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402863126509"/>
			<DeclRefExpr type="int" spelling="argc" id="2400585720429"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2400260531557"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400829437727"/>
			<DeclRefExpr type="int" spelling="argc" id="2402118752632"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403174207782"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403905208996"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400460821447"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400731958116"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402697845129"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401294180000"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402890854957"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401710617692"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2403668944162"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403093442181"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400059705429"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402799997199"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400038193542"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2403534735282"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400203967787"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402014588626"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400687062660"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401658619239"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402453373829"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400974349854"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400605886903"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403308700323"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403578698553"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402555348975"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401736335533"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2403691370018"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400122947523"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401429893437"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2401504232364"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401852192898"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400573983854"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403997024168"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403610714415"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400836778025"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402845745929"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400703607389"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403926632268"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402198400115"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2401207353337"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402252945459"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2401633400627"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400533181352"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403402784765"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2403523252228"/>
			<DeclRefExpr type="int" spelling="catmore" id="2402773351752"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402645301778"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400496084153"/>
			<DeclRefExpr type="int" spelling="argc" id="2401702618034"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403952094950"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2402225531848"/>
			<DeclRefExpr type="char **" spelling="argv" id="2404166246500"/>
			<DeclRefExpr type="int" spelling="catmore" id="2400161965520"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400595775775"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402168207741"/>
			<DeclRefExpr type="int" spelling="argc" id="2401550307150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402089306952"/>
			<DeclRefExpr type="double (const char *)" spelling="atof" id="2400084015298"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400824452122"/>
			<DeclRefExpr type="int" spelling="catmore" id="2401527692021"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2402030780493"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401590048864"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400106157771"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2404018445619"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401404548693"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2403541552012"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402696426048"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400452439259"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402378166080"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400699628055"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2404025844766"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401847808160"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401448826419"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2403627741287"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401330848096"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400049998108"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401918330416"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401839595580"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402553502403"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401921818023"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402968820648"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402493550068"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2404123284263"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403751953465"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400457054173"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2404215788352"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401050987250"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402765421662"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2403548805467"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400820246029"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401582533257"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401576156328"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401777156444"/>
			<DeclRefExpr type="int" spelling="catmore" id="2403817098349"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400295457965"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402934923400"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2401741574562"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2401465800454"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401244902767"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402654235482"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2402627693932"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403996273786"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2400824975926"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2402000351029"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403649625850"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2401203219328"/>
			<StringLiteral type="char [3]" spelling="&quot;-v&quot;" id="2403554019238"/>
			<StringLiteral type="char [3]" spelling="&quot;-l&quot;" id="2400424192589"/>
			<StringLiteral type="char [3]" spelling="&quot;-q&quot;" id="2402257692382"/>
			<StringLiteral type="char [3]" spelling="&quot;-w&quot;" id="2404013159632"/>
			<StringLiteral type="char [9]" spelling="&quot;--strict&quot;" id="2401376254120"/>
			<StringLiteral type="char [11]" spelling="&quot;--nostrict&quot;" id="2401838260953"/>
			<StringLiteral type="char [8]" spelling="&quot;--speed&quot;" id="2400226475640"/>
			<StringLiteral type="char [9]" spelling="&quot;--memory&quot;" id="2402694315320"/>
			<StringLiteral type="char [7]" spelling="&quot;--size&quot;" id="2401863129035"/>
			<StringLiteral type="char [9]" spelling="&quot;--nosize&quot;" id="2402631426272"/>
			<StringLiteral type="char [11]" spelling="&quot;--standard&quot;" id="2404267525800"/>
			<StringLiteral type="char [13]" spelling="&quot;--nostandard&quot;" id="2400001651508"/>
			<StringLiteral type="char [12]" spelling="&quot;--transform&quot;" id="2400851571601"/>
			<StringLiteral type="char [14]" spelling="&quot;--notransform&quot;" id="2403402467491"/>
			<StringLiteral type="char [21]" spelling="&quot;--transform-disable=&quot;" id="2403239310951"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-disable&quot;" id="2400553862397"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-disable&quot;" id="2402049405756"/>
			<StringLiteral type="char [20]" spelling="&quot;--transform-enable=&quot;" id="2403420924881"/>
			<StringLiteral type="char [19]" spelling="&quot;--transform-enable&quot;" id="2402761249781"/>
			<StringLiteral type="char [19]" spelling="&quot;--transform-enable&quot;" id="2403039959085"/>
			<StringLiteral type="char [8]" spelling="&quot;--gamma&quot;" id="2403516589153"/>
			<StringLiteral type="char [10]" spelling="&quot;--nogamma&quot;" id="2402743276679"/>
			<StringLiteral type="char [18]" spelling="&quot;--gamma-threshold&quot;" id="2402037985250"/>
			<StringLiteral type="char [20]" spelling="&quot;--nogamma-threshold&quot;" id="2400717272895"/>
			<StringLiteral type="char [18]" spelling="&quot;--gamma-transform&quot;" id="2401257494659"/>
			<StringLiteral type="char [20]" spelling="&quot;--nogamma-transform&quot;" id="2402645915905"/>
			<StringLiteral type="char [13]" spelling="&quot;--gamma-sbit&quot;" id="2401155707840"/>
			<StringLiteral type="char [15]" spelling="&quot;--nogamma-sbit&quot;" id="2403428327382"/>
			<StringLiteral type="char [16]" spelling="&quot;--gamma-16-to-8&quot;" id="2401747984544"/>
			<StringLiteral type="char [18]" spelling="&quot;--nogamma-16-to-8&quot;" id="2402389722287"/>
			<StringLiteral type="char [19]" spelling="&quot;--gamma-background&quot;" id="2401376907209"/>
			<StringLiteral type="char [21]" spelling="&quot;--nogamma-background&quot;" id="2402163426780"/>
			<StringLiteral type="char [19]" spelling="&quot;--gamma-alpha-mode&quot;" id="2402348631543"/>
			<StringLiteral type="char [21]" spelling="&quot;--nogamma-alpha-mode&quot;" id="2404128430037"/>
			<StringLiteral type="char [11]" spelling="&quot;--expand16&quot;" id="2404156231763"/>
			<StringLiteral type="char [13]" spelling="&quot;--noexpand16&quot;" id="2400721634913"/>
			<StringLiteral type="char [17]" spelling="&quot;--low-depth-gray&quot;" id="2401448104678"/>
			<StringLiteral type="char [19]" spelling="&quot;--nolow-depth-gray&quot;" id="2402243693955"/>
			<StringLiteral type="char [7]" spelling="&quot;--tRNS&quot;" id="2400294619600"/>
			<StringLiteral type="char [9]" spelling="&quot;--notRNS&quot;" id="2401645578940"/>
			<StringLiteral type="char [14]" spelling="&quot;--more-gammas&quot;" id="2402951368034"/>
			<StringLiteral type="char [13]" spelling="&quot;--all-gammas&quot;" id="2403327472359"/>
			<StringLiteral type="char [19]" spelling="&quot;--progressive-read&quot;" id="2400681654335"/>
			<StringLiteral type="char [18]" spelling="&quot;--use-update-info&quot;" id="2403805215188"/>
			<StringLiteral type="char [12]" spelling="&quot;--interlace&quot;" id="2400692951989"/>
			<StringLiteral type="char [22]" spelling="&quot;--use-input-precision&quot;" id="2404046783988"/>
			<StringLiteral type="char [28]" spelling="&quot;--use-calculation-precision&quot;" id="2400865341615"/>
			<StringLiteral type="char [35]" spelling="&quot;--calculations-use-input-precision&quot;" id="2401375995996"/>
			<StringLiteral type="char [29]" spelling="&quot;--assume-16-bit-calculations&quot;" id="2401399283642"/>
			<StringLiteral type="char [32]" spelling="&quot;--calculations-follow-bit-depth&quot;" id="2404259887775"/>
			<StringLiteral type="char [13]" spelling="&quot;--exhaustive&quot;" id="2401887665535"/>
			<StringLiteral type="char [10]" spelling="&quot;--sbitlow&quot;" id="2404145422041"/>
			<StringLiteral type="char [8]" spelling="&quot;--touch&quot;" id="2403315566530"/>
			<StringLiteral type="char [6]" spelling="&quot;--max&quot;" id="2402274753003"/>
			<StringLiteral type="char [5]" spelling="&quot;abs8&quot;" id="2403113948378"/>
			<StringLiteral type="char [6]" spelling="&quot;abs16&quot;" id="2401308627742"/>
			<StringLiteral type="char [6]" spelling="&quot;calc8&quot;" id="2403481427348"/>
			<StringLiteral type="char [7]" spelling="&quot;calc16&quot;" id="2402121483825"/>
			<StringLiteral type="char [5]" spelling="&quot;out8&quot;" id="2404105593038"/>
			<StringLiteral type="char [6]" spelling="&quot;out16&quot;" id="2400620005815"/>
			<StringLiteral type="char [4]" spelling="&quot;pc8&quot;" id="2400480685861"/>
			<StringLiteral type="char [5]" spelling="&quot;pc16&quot;" id="2401420582302"/>
			<StringLiteral type="char [36]" spelling="&quot;pngvalid: %s: unknown 'max' option\n&quot;" id="2404087821562"/>
			<StringLiteral type="char [7]" spelling="&quot;--log8&quot;" id="2401516141425"/>
			<StringLiteral type="char [8]" spelling="&quot;--log16&quot;" id="2402896926944"/>
			<StringLiteral type="char [10]" spelling="&quot;--option=&quot;" id="2403607915226"/>
			<StringLiteral type="char [20]" spelling="&quot;max-inflate-window:&quot;" id="2401118951375"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid: %s: %s: unknown option\n&quot;" id="2400201513752"/>
			<StringLiteral type="char [4]" spelling="&quot;off&quot;" id="2401037824717"/>
			<StringLiteral type="char [3]" spelling="&quot;on&quot;" id="2401702866854"/>
			<StringLiteral type="char [55]" spelling="&quot;pngvalid: %s: %s: unknown setting (use 'on' or 'off')\n&quot;" id="2400770593476"/>
			<StringLiteral type="char [32]" spelling="&quot;pngvalid: %s: unknown argument\n&quot;" id="2402226517163"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2401330948221"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2403487798981"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401800122353"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2403715728484"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2401163835750"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400742340203"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2402405770398"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402607146091"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403963541060"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2404013151767"/>
			<MemberRefExpr type="png_store" spelling="this" id="2404242744048"/>
			<MemberRefExpr type="unsigned int" spelling="speed" id="2401161078895"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403096573046"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401504046470"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2403763689033"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2400556420602"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2402503602302"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2401466582734"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2403835299019"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2403197910656"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403846494352"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403010095622"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403275604182"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2403716037100"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402848620470"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2401754050074"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2400543632823"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2401135782061"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2400615237190"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2404004517012"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2401972164125"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403136788412"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401321953559"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2403455584462"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2404163925041"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403523415524"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2402670693626"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2404265154967"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402183999224"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2402540550182"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2403653776798"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401050201678"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2404164499694"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2403735591381"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402403005498"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2400259190071"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2400539806230"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2401852840324"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2400718144004"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2401246662166"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400661992295"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_expand16" id="2400242222620"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2400688587511"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2402923980679"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2401109860889"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2403943597065"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2402778269658"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg" id="2401873697190"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_threshold" id="2402407079862"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_transform" id="2403864482024"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_sbit" id="2402142934352"/>
			<MemberRefExpr type="unsigned int" spelling="test_lbg_gamma_composition" id="2400091387903"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2402470309573"/>
			<MemberRefExpr type="unsigned int" spelling="test_tRNS" id="2403539240713"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2403958542862"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402278551551"/>
			<MemberRefExpr type="unsigned int" spelling="ngammas" id="2401451151314"/>
			<MemberRefExpr type="unsigned int" spelling="progressive" id="2400671050123"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400033138122"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401228417318"/>
			<MemberRefExpr type="int" spelling="interlace_type" id="2400088264082"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2402564784989"/>
			<MemberRefExpr type="unsigned int" spelling="use_input_precision" id="2402742725470"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2400580774976"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2400111258483"/>
			<MemberRefExpr type="unsigned int" spelling="calculations_use_input_precision" id="2402213770547"/>
			<MemberRefExpr type="unsigned int" spelling="assume_16_bit_calculations" id="2403893849966"/>
			<MemberRefExpr type="unsigned int" spelling="test_exhaustive" id="2401383633932"/>
			<MemberRefExpr type="png_byte" spelling="sbitlow" id="2401428358798"/>
			<MemberRefExpr type="double" spelling="maxabs8" id="2403750633633"/>
			<MemberRefExpr type="double" spelling="maxabs16" id="2401417135542"/>
			<MemberRefExpr type="double" spelling="maxcalc8" id="2403552409351"/>
			<MemberRefExpr type="double" spelling="maxcalc16" id="2403812012896"/>
			<MemberRefExpr type="double" spelling="maxout8" id="2401040104029"/>
			<MemberRefExpr type="double" spelling="maxout16" id="2401909537520"/>
			<MemberRefExpr type="double" spelling="maxpc8" id="2400453763288"/>
			<MemberRefExpr type="double" spelling="maxpc16" id="2400533764607"/>
			<MemberRefExpr type="double" spelling="log8" id="2401664271895"/>
			<MemberRefExpr type="double" spelling="log16" id="2401884361948"/>
			<MemberRefExpr type="unsigned char" spelling="option" id="2400684182128"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2400203830616"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402916145625"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403055779598"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400177707855"/>
			<MemberRefExpr type="unsigned char" spelling="setting" id="2402935194795"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2401868777142"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402309456424"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403769387593"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400143467724"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401248096696"/>
			<UnexposedExpr type="char *" spelling="command" id="2403100890515"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2400663743850"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400283002179"/>
			<UnexposedExpr type="char *" spelling="command" id="2403118030272"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2402795843215"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402028219402"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403321730260"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403426319075"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401130316617"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402414020285"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401935509403"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400164593430"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403720610807"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402100521429"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400065416260"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401490255854"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400091712085"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401732064578"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403841605346"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2403033104891"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401034746947"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401635575352"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401170957327"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403248521946"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400991384101"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403077774849"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400045997635"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402490105933"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403651578103"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400334749414"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402422551923"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402158652747"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400259113329"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402937907052"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402533556439"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402232509785"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="transform_disable" id="2400523931054"/>
			<UnexposedExpr type="char **" spelling="argv" id="2404160728898"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402115605817"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402579595087"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="transform_enable" id="2401163708036"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400105421418"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400424630259"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401185289873"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401742202552"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401404263218"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401881302280"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401013468721"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403702130360"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403516902758"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400607498246"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401306266425"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400473472682"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403069597555"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402229361425"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400818723573"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402968732905"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400913439326"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402736095377"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401634513239"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403226127095"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402857364500"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404139196761"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400610016317"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403948945081"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400380171329"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403907716860"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403986238391"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404268906899"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403494127489"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401902279245"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401665813988"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403731614049"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402788865148"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402246915993"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400220225598"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401089411895"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401328635527"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403517755560"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403327102052"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403353207492"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401691888348"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401501001968"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400891057781"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401329046886"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402721448603"/>
			<UnexposedExpr type="unsigned int" spelling="ngammas" id="2403661897620"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403810767881"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403223043478"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400622611824"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403445349575"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404210089962"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401266325354"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400508004977"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402944000227"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403041878349"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400204113193"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401353181134"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401997687319"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404060871515"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403112351637"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402669144749"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400967841384"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402208266647"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401512464150"/>
			<UnexposedExpr type="int" spelling="argc" id="2400734271295"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402429535936"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402596472047"/>
			<UnexposedExpr type="int (*)(const char *)" spelling="atoi" id="2403147861746"/>
			<UnexposedExpr type="int" spelling="argc" id="2400348806905"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401232587922"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401242371051"/>
			<UnexposedExpr type="int" spelling="argc" id="2401610946080"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402980240499"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401111799424"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403729238614"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401388958838"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2404283473129"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402771971169"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402198116785"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403922587815"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402071164551"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403644091060"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2402411886759"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404008149474"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401265235707"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403881601591"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402814747160"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400934022549"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2400780303548"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401967440892"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401020319322"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2402975340124"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401526148883"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403266175663"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403793927787"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402506882431"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401932260864"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2403845688321"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402731456572"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404220237834"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402301540780"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403372227034"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2401035970021"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402009754178"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2400643362471"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403823774514"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401798959110"/>
			<UnexposedExpr type="double (*)(const char *)" spelling="atof" id="2404155595727"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2403726637917"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402165122696"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402709793707"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402840923729"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403499962782"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402775413696"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403376896092"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403923106961"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403792177873"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2401809282290"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404049235058"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2401656865348"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404080114796"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402689095745"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403147634726"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401604821942"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403175111737"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402421747188"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2404153988988"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403142833518"/>
			<UnexposedExpr type="int" spelling="noptions" id="2400755129962"/>
			<UnexposedExpr type="unsigned char" spelling="option" id="2400196024926"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403543840824"/>
			<UnexposedExpr type="unsigned char" spelling="setting" id="2400095983627"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2404162830699"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2404274388993"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402421885292"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2403592459610"/>
			<UnexposedExpr type="int" spelling="catmore" id="2403087835540"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2402084888623"/>
			<UnexposedExpr type="char *" spelling="command" id="2400832620093"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2403048598858"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2403502503713"/>
			<UnexposedExpr type="char *" spelling="command" id="2400086541183"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2402567942755"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400831979651"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Set if the argument has an argument." comment_scope_start="11812" comment_scope_end="11812">
		<SYMBOLS>
			<VarDecl type="int" spelling="catmore" id="2401671775515"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Record each argument for posterity:" comment_scope_start="11814" comment_scope_end="11828">
		<SYMBOLS>
			<CallExpr type="size_t" spelling="safecat" id="2402601919016"/>
			<CallExpr type="size_t" spelling="safecat" id="2400048137590"/>
			<CallExpr type="int" spelling="strcmp" id="2404085467774"/>
			<CallExpr type="int" spelling="strcmp" id="2403800129171"/>
			<CallExpr type="int" spelling="strcmp" id="2401352642297"/>
			<CallExpr type="int" spelling="strcmp" id="2402705030818"/>
			<CallExpr type="int" spelling="strcmp" id="2400669422111"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401702936436"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2401696337743"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402918507270"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2402462301724"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2401022366906"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400380098663"/>
			<DeclRefExpr type="size_t (char *, size_t, size_t, const char *)" spelling="safecat" id="2403864426794"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403978015161"/>
			<DeclRefExpr type="char [1024]" spelling="command" id="2403216010955"/>
			<DeclRefExpr type="size_t" spelling="cp" id="2400727256728"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401031910637"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402709104303"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401351652954"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400800217391"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400529608514"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403733260642"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400864855687"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401923162776"/>
			<DeclRefExpr type="char **" spelling="argv" id="2403964647469"/>
			<DeclRefExpr type="int" spelling="summary" id="2400395630631"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400897604259"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403468276856"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401318710397"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400648910860"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2402569717654"/>
			<DeclRefExpr type="char **" spelling="argv" id="2401257435341"/>
			<StringLiteral type="char [2]" spelling="&quot; &quot;" id="2401203219328"/>
			<StringLiteral type="char [3]" spelling="&quot;-v&quot;" id="2403554019238"/>
			<StringLiteral type="char [3]" spelling="&quot;-l&quot;" id="2400424192589"/>
			<StringLiteral type="char [3]" spelling="&quot;-q&quot;" id="2402257692382"/>
			<StringLiteral type="char [3]" spelling="&quot;-w&quot;" id="2404013159632"/>
			<StringLiteral type="char [9]" spelling="&quot;--strict&quot;" id="2401376254120"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2403487798981"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401800122353"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2403715728484"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2401163835750"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400742340203"/>
			<MemberRefExpr type="unsigned int" spelling="log" id="2402405770398"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2401248096696"/>
			<UnexposedExpr type="char *" spelling="command" id="2403100890515"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2400663743850"/>
			<UnexposedExpr type="size_t (*)(char *, size_t, size_t, const char *)" spelling="safecat" id="2400283002179"/>
			<UnexposedExpr type="char *" spelling="command" id="2403118030272"/>
			<UnexposedExpr type="size_t" spelling="cp" id="2402795843215"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402028219402"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403321730260"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2403426319075"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401130316617"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402414020285"/>
			<UnexposedExpr type="char **" spelling="argv" id="2401935509403"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2400164593430"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403720610807"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2402100521429"/>
			<UnexposedExpr type="char **" spelling="argv" id="2400065416260"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="NOTE: this is the default!" comment_scope_start="11829" comment_scope_end="11829">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400293436544"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402607146091"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403963541060"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_TRANSFORMS_SUPPORTED" comment_scope_start="11873" comment_scope_end="11873"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Just do two gamma tests here (2.2 and linear) for speed:" comment_scope_start="11877" comment_scope_end="11882">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402096198118"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400445666995"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403528260903"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402639016415"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403631418583"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402848620470"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2401754050074"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2400543632823"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2401135782061"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2400615237190"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="composition" comment_scope_start="11883" comment_scope_end="11883">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404182150349"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2404004517012"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="composition" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Can call multiple times" comment_scope_start="11960" comment_scope_end="11960">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402594390284"/>
			<MemberRefExpr type="int" spelling="use_update_info" id="2401228417318"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!CAN_WRITE_INTERLACE" comment_scope_start="11966" comment_scope_end="11966"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="!CAN_WRITE_INTERLACE" comment_scope_start="11969" comment_scope_end="11969"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Syntax of the argument is &lt;option&gt;:{on|off}" comment_scope_start="12043" comment_scope_end="12086">
		<SYMBOLS>
			<VarDecl type="const char *" spelling="arg" id="2404015756692"/>
			<VarDecl type="unsigned char" spelling="option" id="2404193167798"/>
			<VarDecl type="unsigned char" spelling="setting" id="2400680285679"/>
			<CallExpr type="int" spelling="strncmp" id="2401261753032"/>
			<CallExpr type="int" spelling="fprintf" id="2400570222574"/>
			<CallExpr type="void" spelling="exit" id="2400214385450"/>
			<CallExpr type="int" spelling="strcmp" id="2403496439945"/>
			<CallExpr type="int" spelling="strcmp" id="2401436632809"/>
			<CallExpr type="int" spelling="fprintf" id="2400409559218"/>
			<CallExpr type="void" spelling="exit" id="2400201524295"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400106157771"/>
			<DeclRefExpr type="int (const char *, const char *, unsigned long)" spelling="strncmp" id="2404018445619"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401404548693"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2403541552012"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402696426048"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400452439259"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2402378166080"/>
			<DeclRefExpr type="char **" spelling="argv" id="2400699628055"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2404025844766"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401847808160"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2401448826419"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2403627741287"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401330848096"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2400049998108"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2401918330416"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2401839595580"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402553502403"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401921818023"/>
			<DeclRefExpr type="char **" spelling="argv" id="2402968820648"/>
			<DeclRefExpr type="const char *" spelling="arg" id="2402493550068"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2404123284263"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403751953465"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400457054173"/>
			<DeclRefExpr type="unsigned char" spelling="option" id="2404215788352"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401050987250"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402765421662"/>
			<DeclRefExpr type="unsigned char" spelling="setting" id="2403548805467"/>
			<StringLiteral type="char [20]" spelling="&quot;max-inflate-window:&quot;" id="2401118951375"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid: %s: %s: unknown option\n&quot;" id="2400201513752"/>
			<StringLiteral type="char [4]" spelling="&quot;off&quot;" id="2401037824717"/>
			<StringLiteral type="char [3]" spelling="&quot;on&quot;" id="2401702866854"/>
			<StringLiteral type="char [55]" spelling="&quot;pngvalid: %s: %s: unknown setting (use 'on' or 'off')\n&quot;" id="2400770593476"/>
			<MemberRefExpr type="unsigned char" spelling="option" id="2400684182128"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2400203830616"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402916145625"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403055779598"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400177707855"/>
			<MemberRefExpr type="unsigned char" spelling="setting" id="2402935194795"/>
			<MemberRefExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2401868777142"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402309456424"/>
			<MemberRefExpr type="int" spelling="noptions" id="2403769387593"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400143467724"/>
			<UnexposedExpr type="char **" spelling="argv" id="2402709793707"/>
			<UnexposedExpr type="int (*)(const char *, const char *, unsigned long)" spelling="strncmp" id="2402840923729"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403499962782"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402775413696"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2403376896092"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403923106961"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2403792177873"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2401809282290"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404049235058"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2401656865348"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2404080114796"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402689095745"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403147634726"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2401604821942"/>
			<UnexposedExpr type="char **" spelling="argv" id="2403175111737"/>
			<UnexposedExpr type="const char *" spelling="arg" id="2402421747188"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2404153988988"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403142833518"/>
			<UnexposedExpr type="int" spelling="noptions" id="2400755129962"/>
			<UnexposedExpr type="unsigned char" spelling="option" id="2400196024926"/>
			<UnexposedExpr type="struct (anonymous struct at /home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" spelling="options" id="2403543840824"/>
			<UnexposedExpr type="unsigned char" spelling="setting" id="2400095983627"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="argument" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_SET_OPTION_SUPPORTED" comment_scope_start="12087" comment_scope_end="12087"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="consumed an extra *argv" comment_scope_start="12095" comment_scope_end="12095">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="catmore" id="2403817098349"/>
			<UnexposedExpr type="int" spelling="catmore" id="2403087835540"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="If pngvalid is run with no arguments default to a reasonable set of the
    * tests." comment_scope_start="12102" comment_scope_end="12107">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401565340162"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400455738317"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401262332081"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404056626930"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2402404357398"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2401736969232"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2400868653197"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2402898690277"/>
			<UnexposedExpr type="int" spelling="test_standard" id="2400099308929"/>
			<UnexposedExpr type="unsigned int" spelling="test_standard" id="2403696652694"/>
			<UnexposedExpr type="int" spelling="test_size" id="2401712553808"/>
			<UnexposedExpr type="unsigned int" spelling="test_size" id="2403995833398"/>
			<UnexposedExpr type="int" spelling="test_transform" id="2403564299922"/>
			<UnexposedExpr type="unsigned int" spelling="test_transform" id="2400675406634"/>
			<UnexposedExpr type="unsigned int" spelling="ngamma_tests" id="2401909188341"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="arguments" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make this do all the tests done in the test shell scripts with the same
       * parameters, where possible.  The limitation is that all the progressive
       * read and interlace stuff has to be done in separate runs, so only the
       * basic 'standard' and 'size' tests are done." comment_scope_start="12108" comment_scope_end="12117">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402337685086"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403941274398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401086622802"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401427649935"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2404292084411"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2404241776398"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2400639331706"/>
			<MemberRefExpr type="unsigned int" spelling="ngamma_tests" id="2400208103258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="shell" type=" 'Common Sorting/ Searching/ Traversal Algorithms"/>
			<POGRAM_DOMAIN word="parameters" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="progressive"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Nothing to test so turn everything off:" comment_scope_start="12134" comment_scope_end="12141">
		<SYMBOLS>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403391146397"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402605128659"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404025984398"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401796575131"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401848297376"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402466935000"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_threshold" id="2403665312191"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_transform" id="2401288289858"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_sbit" id="2401130500676"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_scale16" id="2403135465963"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_background" id="2403424652292"/>
			<MemberRefExpr type="unsigned int" spelling="test_gamma_alpha_mode" id="2402833278095"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Make useful base images" comment_scope_start="12145" comment_scope_end="12147">
		<SYMBOLS>
			<CallExpr type="void" spelling="make_transform_images" id="2402349656387"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="make_transform_images" id="2401965537450"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400057856869"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="make_transform_images" id="2402180402167"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="base" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Perform the standard and gamma tests." comment_scope_start="12148" comment_scope_end="12157">
		<SYMBOLS>
			<CallExpr type="void" spelling="perform_interlace_macro_validation" id="2403017536417"/>
			<CallExpr type="void" spelling="perform_formatting_test" id="2403306796524"/>
			<CallExpr type="void" spelling="perform_standard_test" id="2400354180318"/>
			<CallExpr type="void" spelling="perform_error_test" id="2401934438024"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400689435408"/>
			<DeclRefExpr type="void (void)" spelling="perform_interlace_macro_validation" id="2403925183012"/>
			<DeclRefExpr type="void (png_store *)" spelling="perform_formatting_test" id="2402289357663"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401273938135"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_standard_test" id="2402917644446"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401482844019"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_error_test" id="2402456866632"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402598746075"/>
			<MemberRefExpr type="unsigned int" spelling="test_standard" id="2402184781481"/>
			<MemberRefExpr type="png_store" spelling="this" id="2401706261671"/>
			<UnexposedExpr type="unsigned int" spelling="test_standard" id="2400056583960"/>
			<UnexposedExpr type="void (*)(void)" spelling="perform_interlace_macro_validation" id="2402232494583"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="perform_formatting_test" id="2401925573235"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_standard_test" id="2401702812059"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_error_test" id="2403872899100"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Various oddly sized images:" comment_scope_start="12159" comment_scope_end="12166">
		<SYMBOLS>
			<CallExpr type="void" spelling="make_size_images" id="2401348769963"/>
			<CallExpr type="void" spelling="perform_size_test" id="2401979676253"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403998194048"/>
			<DeclRefExpr type="void (png_store *)" spelling="make_size_images" id="2403743693578"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400409500256"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_size_test" id="2400193160552"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401373462176"/>
			<MemberRefExpr type="unsigned int" spelling="test_size" id="2400448678773"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403214057742"/>
			<UnexposedExpr type="unsigned int" spelling="test_size" id="2403633669741"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="make_size_images" id="2404222869645"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_size_test" id="2401855906303"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Combinatorial transforms:" comment_scope_start="12169" comment_scope_end="12171">
		<SYMBOLS>
			<CallExpr type="void" spelling="perform_transform_test" id="2400715356801"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400490916231"/>
			<DeclRefExpr type="void (png_modifier *)" spelling="perform_transform_test" id="2400739500085"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403309801264"/>
			<MemberRefExpr type="unsigned int" spelling="test_transform" id="2402106250716"/>
			<UnexposedExpr type="unsigned int" spelling="test_transform" id="2403698463078"/>
			<UnexposedExpr type="void (*)(png_modifier *)" spelling="perform_transform_test" id="2401461029938"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="PNG_READ_TRANSFORMS_SUPPORTED" comment_scope_start="12172" comment_scope_end="12172"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Do this here to provoke memory corruption errors in memory not directly
    * allocated by libpng - not a complete test, but better than nothing." comment_scope_start="12220" comment_scope_end="12224">
		<SYMBOLS>
			<CallExpr type="void" spelling="store_delete" id="2403974909011"/>
			<DeclRefExpr type="void (png_store *)" spelling="store_delete" id="2403703714092"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401038447103"/>
			<MemberRefExpr type="png_store" spelling="this" id="2404015325048"/>
			<UnexposedExpr type="void (*)(png_store *)" spelling="store_delete" id="2403638654258"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="complete" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Error exit if there are any errors, and maybe if there are any
    * warnings." comment_scope_start="12225" comment_scope_end="12239">
		<SYMBOLS>
			<CallExpr type="int" spelling="fprintf" id="2402567522569"/>
			<CallExpr type="int" spelling="fprintf" id="2403068297569"/>
			<CallExpr type="void" spelling="exit" id="2402019856985"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2401640132780"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2400544988150"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2402475568011"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403918242594"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402931741724"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400254537798"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2404164878653"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400284944753"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2403399614225"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403090557931"/>
			<DeclRefExpr type="png_modifier" spelling="pm" id="2403046698875"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2401340755519"/>
			<StringLiteral type="char [14]" spelling="&quot;pngvalid: %s\n&quot;" id="2400266228857"/>
			<StringLiteral type="char [34]" spelling="&quot;pngvalid: %d errors, %d warnings\n&quot;" id="2402942917089"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2401585369121"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402038703145"/>
			<MemberRefExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2402761570428"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400739540521"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2401366490810"/>
			<MemberRefExpr type="png_store" spelling="this" id="2402579358082"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2402429441669"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403826696056"/>
			<MemberRefExpr type="char [256]" spelling="error" id="2401386021240"/>
			<MemberRefExpr type="png_store" spelling="this" id="2400251261410"/>
			<MemberRefExpr type="int" spelling="nerrors" id="2400738736066"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403346331317"/>
			<MemberRefExpr type="int" spelling="nwarnings" id="2403066560876"/>
			<MemberRefExpr type="png_store" spelling="this" id="2403044719176"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2403716723838"/>
			<UnexposedExpr type="int" spelling="treat_warnings_as_errors" id="2403047715484"/>
			<UnexposedExpr type="unsigned int" spelling="treat_warnings_as_errors" id="2403453947499"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2403362932144"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2401878935550"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2400246551380"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402793811497"/>
			<UnexposedExpr type="char *" spelling="error" id="2401397610572"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403389933553"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2400614438766"/>
			<UnexposedExpr type="int" spelling="nerrors" id="2400225707333"/>
			<UnexposedExpr type="int" spelling="nwarnings" id="2402072995277"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400717671803"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="exit" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="Success case." comment_scope_start="12240" comment_scope_end="12264">
		<SYMBOLS>
			<TypeRef type="FILE" spelling="FILE" id="2401501990775"/>
			<VarDecl type="FILE *" spelling="fsuccess" id="2402471882518"/>
			<VarDecl type="int" spelling="error" id="2403261731768"/>
			<CallExpr type="FILE *" spelling="fopen" id="2400272624984"/>
			<CallExpr type="int" spelling="fprintf" id="2403089875003"/>
			<CallExpr type="int" spelling="fflush" id="2402102739413"/>
			<CallExpr type="int" spelling="ferror" id="2402571481767"/>
			<CallExpr type="int" spelling="fclose" id="2400700572578"/>
			<CallExpr type="int" spelling="fprintf" id="2403229736059"/>
			<CallExpr type="void" spelling="exit" id="2400913069117"/>
			<CallExpr type="int" spelling="fprintf" id="2403838153202"/>
			<CallExpr type="void" spelling="exit" id="2403874850436"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2401846948777"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2403634377065"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2404042691202"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2401361670877"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400608516344"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2401687544919"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2401129230575"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2403452345635"/>
			<DeclRefExpr type="int" spelling="error" id="2401004712997"/>
			<DeclRefExpr type="int (FILE *)" spelling="ferror" id="2400899046075"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2402084423512"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2402824902252"/>
			<DeclRefExpr type="FILE *" spelling="fsuccess" id="2400228837615"/>
			<DeclRefExpr type="int" spelling="error" id="2403245765712"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2400876940405"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2400300474175"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2403859703881"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2402148543601"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2402876096720"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2401495762285"/>
			<DeclRefExpr type="const char *" spelling="touch" id="2401324996161"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2400730443202"/>
			<StringLiteral type="char [3]" spelling="&quot;wt&quot;" id="2400462728230"/>
			<StringLiteral type="char [26]" spelling="&quot;PNG validation succeeded\n&quot;" id="2404110487971"/>
			<StringLiteral type="char [18]" spelling="&quot;%s: write failed\n&quot;" id="2400200610075"/>
			<StringLiteral type="char [17]" spelling="&quot;%s: open failed\n&quot;" id="2402032374586"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403790439826"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2400147462299"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403805394469"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402292490903"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2402423165522"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402333867262"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2400684300171"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2403456083041"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="ferror" id="2401525224506"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2401327633232"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2400530920447"/>
			<UnexposedExpr type="FILE *" spelling="fsuccess" id="2402395891538"/>
			<UnexposedExpr type="int" spelling="error" id="2402537911950"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2403708709056"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402511129364"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2400534824790"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400461865474"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2400238511741"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2402852613940"/>
			<UnexposedExpr type="const char *" spelling="touch" id="2403519560816"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2400959254682"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="This is required because some very minimal configurations do not use it:" comment_scope_start="12266" comment_scope_end="12270">
		<SYMBOLS>
			<FunctionDecl type="int (int, char **)" spelling="main" id="2401062898446"/>
			<DeclRefExpr type="int (png_modifier *)" spelling="fail" id="2401128056773"/>
			<UnexposedExpr type="int (*)(png_modifier *)" spelling="fail" id="2403364444247"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="write or low level APIs not supported" comment_scope_start="12271" comment_scope_end="12271"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngvalid.c" comment_text="So the test is skipped:" comment_scope_start="12276" comment_scope_end="12278">
		<SYMBOLS>
			<macroExpansion type="" spelling="SKIP" id="2400265043395"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
</COMMENTS>
