<?xml version="1.0" ?>
<COMMENTS project_name="libpng" project_path="/home/dewang/smartKT/SmartKT/kgg/projects/libpng">
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Define the following to use this test against your installed libpng, rather
 * than the one being built here:" comment_scope_start="27" comment_scope_end="36">
		<SYMBOLS>
			<inclusionDirective type="" spelling="../../png.h" id="2000889989100"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="because png.h did *not* include this" comment_scope_start="37" comment_scope_end="37">
		<SYMBOLS>
			<inclusionDirective type="" spelling="setjmp.h" id="2003679830126"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="1.6.1 added support for the configure test harness, which uses 77 to indicate
 * a skipped test, in earlier versions we need to succeed on a skipped test, so:" comment_scope_start="40" comment_scope_end="49">
		<SYMBOLS>
			<macroDefinition type="" spelling="SKIP" id="2003537719518"/>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2004287548190"/>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2003247861151"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="READ_PNG and WRITE_PNG were not defined, so:" comment_scope_start="50" comment_scope_end="53"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="SEQUENTIAL_READ" comment_scope_start="54" comment_scope_end="54"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="WRITE" comment_scope_start="57" comment_scope_end="57"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="INFO_IMAGE" comment_scope_start="58" comment_scope_end="58"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="pre 1.7.0" comment_scope_start="59" comment_scope_end="59"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="If a transform is valid on both read and write this implies that if the
 * transform is applied to read it must also be applied on write to produce
 * meaningful data.  This is because these transforms when performed on read
 * produce data with a memory format that does not correspond to a PNG format.
 *
 * Most of these transforms are invertible; after applying the transform on
 * write the result is the original PNG data that would have would have been
 * read if no transform were applied.
 *
 * The exception is _SHIFT, which destroys the low order bits marked as not
 * significant in a PNG with the sBIT chunk.
 *
 * The following table lists, for each transform, the conditions under which it
 * is expected to do anything.  Conditions are defined as follows:
 *
 * 1) Color mask bits required - simply a mask to AND with color_type; one of
 *    these must be present for the transform to fire, except that 0 means
 *    'always'.
 * 2) Color mask bits which must be absent - another mask - none of these must
 *    be present.
 * 3) Bit depths - a mask of component bit depths for the transform to fire.
 * 4) 'read' - the transform works in png_read_png.
 * 5) 'write' - the transform works in png_write_png.
 * 6) PNG_INFO_chunk; a mask of the chunks that must be present for the
 *    transform to fire.  All must be present - the requirement is that
 *    png_get_valid() &amp; mask == mask, so if mask is 0 there is no requirement.
 *
 * The condition refers to the original image state - if multiple transforms are
 * used together it is possible to cause a transform that wouldn't fire on the
 * original image to fire." comment_scope_start="62" comment_scope_end="119">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="name" id="2003613908343"/>
			<FieldDecl type="int" spelling="transform" id="2003421778776"/>
			<FieldDecl type="png_uint_32" spelling="valid_chunks" id="2002928242308"/>
			<FieldDecl type="png_byte" spelling="color_mask_required" id="2001475818527"/>
			<FieldDecl type="png_byte" spelling="color_mask_absent" id="2003996839399"/>
			<FieldDecl type="png_byte" spelling="bit_depths" id="2000544856623"/>
			<FieldDecl type="png_byte" spelling="when" id="2001948678436"/>
			<FieldDecl type="png_byte" spelling="tested" id="2002847770343"/>
			<StructDecl type="struct transform_info" spelling="transform_info" id="2002623545916"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="invertible" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="absent = gray, no alpha" comment_scope_start="107" comment_scope_end="107"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="i.e. true-color depths" comment_scope_start="113" comment_scope_end="113"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="the transform was tested somewhere" comment_scope_start="118" comment_scope_end="118">
		<SYMBOLS>
			<FieldDecl type="png_byte" spelling="tested" id="2002847770343"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="List ALL the PNG_TRANSFORM_ macros here.  Check for support using the READ
    * macros; even if the transform is supported on write it cannot be tested
    * without the read support." comment_scope_start="121" comment_scope_end="128"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!tested" comment_scope_start="128" comment_scope_end="128"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="drops the bottom 8 bits when bit depth is 16" comment_scope_start="132" comment_scope_end="135">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;STRIP_ALPHA&quot;" id="2000343680410"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="removes the alpha channel if present" comment_scope_start="136" comment_scope_end="144">
		<SYMBOLS>
			<StringLiteral type="char [8]" spelling="&quot;PACKING&quot;" id="2000147407870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="unpacks low-bit-depth components into 1 byte per component on read,
       * reverses this on write." comment_scope_start="145" comment_scope_end="155">
		<SYMBOLS>
			<StringLiteral type="char [9]" spelling="&quot;PACKSWAP&quot;" id="2004058772170"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="reverses the order of low-bit-depth components packed into a byte" comment_scope_start="156" comment_scope_end="159">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2002655930022"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands PLTE PNG files to RGB (no tRNS) or RGBA (tRNS) *
       * Note that the 'EXPAND' transform does lots of different things:" comment_scope_start="160" comment_scope_end="162">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2000903002342"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands grayscale PNG files to RGB, or RGBA" comment_scope_start="163" comment_scope_end="164">
		<SYMBOLS>
			<StringLiteral type="char [7]" spelling="&quot;EXPAND&quot;" id="2001842040802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="rgba"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands the tRNS chunk in files without alpha" comment_scope_start="165" comment_scope_end="173">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;INVERT_MONO&quot;" id="2002521271138"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="alpha"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="converts gray-scale components to 1..0 from 0..1" comment_scope_start="174" comment_scope_end="182">
		<SYMBOLS>
			<StringLiteral type="char [6]" spelling="&quot;SHIFT&quot;" id="2003588620692"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="converts" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="reduces component values to the original range based on the sBIT chunk,
       * this is only partially reversible - the low bits are lost and cannot be
       * recovered on write.  In fact write code replicates the bits to generate
       * new low-order bits." comment_scope_start="183" comment_scope_end="195">
		<SYMBOLS>
			<StringLiteral type="char [4]" spelling="&quot;BGR&quot;" id="2000198003333"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reduces" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="reverses the rgb component values of true-color pixels" comment_scope_start="196" comment_scope_end="204">
		<SYMBOLS>
			<StringLiteral type="char [11]" spelling="&quot;SWAP_ALPHA&quot;" id="2001210120114"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="rgb"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="swaps the alpha channel of RGBA or GA pixels to the front - ARGB or
       * AG, on write reverses the process." comment_scope_start="205" comment_scope_end="215">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;SWAP_ENDIAN&quot;" id="2000143946993"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="front" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="rgba"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="argb"/>
			<PROBLEM_DOMAIN word="ag"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="byte-swaps 16-bit component values" comment_scope_start="216" comment_scope_end="224">
		<SYMBOLS>
			<StringLiteral type="char [13]" spelling="&quot;INVERT_ALPHA&quot;" id="2000522193927"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="converts an alpha channel from 0..1 to 1..0" comment_scope_start="225" comment_scope_end="227"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="'A' for a filler!" comment_scope_start="228" comment_scope_end="228">
		<SYMBOLS>
			<StringLiteral type="char [20]" spelling="&quot;STRIP_FILLER_BEFORE&quot;" id="2002942913299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="on write skips a leading filler channel; testing requires data with a
       * filler channel so this is produced from RGBA or GA images by removing
       * the 'alpha' flag from the color type in place." comment_scope_start="229" comment_scope_end="233">
		<SYMBOLS>
			<StringLiteral type="char [19]" spelling="&quot;STRIP_FILLER_AFTER&quot;" id="2002025258406"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="removing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
			<PROBLEM_DOMAIN word="rgba"/>
			<PROBLEM_DOMAIN word="ga"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="alpha"/>
			<PROBLEM_DOMAIN word="color"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="on write strips a trailing filler channel" comment_scope_start="234" comment_scope_end="237">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;GRAY_TO_RGB&quot;" id="2001789985106"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="filler"/>
			<PROBLEM_DOMAIN word="channel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands grayscale images to RGB, also causes the palette part of
       * 'EXPAND' to happen.  Low bit depth grayscale images are expanded to
       * 8-bits per component and no attempt is made to convert the image to a
       * palette image.  While this transform is partially reversible
       * png_write_png does not currently support this." comment_scope_start="238" comment_scope_end="244">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;GRAY_TO_RGB&quot;" id="2003389829841"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expand" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The 'palette' side effect mentioned above; a bit bogus but this is the
       * way the libpng code works." comment_scope_start="245" comment_scope_end="250">
		<SYMBOLS>
			<StringLiteral type="char [10]" spelling="&quot;EXPAND_16&quot;" id="2003425647076"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="expands images to 16-bits per component, as a side effect expands
       * palette images to RGB and expands the tRNS chunk if present, so it can
       * modify 16-bit per component images as well:" comment_scope_start="251" comment_scope_end="255">
		<SYMBOLS>
			<StringLiteral type="char [10]" spelling="&quot;EXPAND_16&quot;" id="2000289927761"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modify" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="palette"/>
			<PROBLEM_DOMAIN word="images"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="side effect of EXPAND_16 - expands the tRNS chunk in an RGB or G 16-bit
       * image." comment_scope_start="256" comment_scope_end="261">
		<SYMBOLS>
			<StringLiteral type="char [9]" spelling="&quot;SCALE_16&quot;" id="2003030236708"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="expands" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="rgb"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="scales 16-bit components to 8-bits." comment_scope_start="262" comment_scope_end="268">
		<SYMBOLS>
			<VarDecl type="struct transform_info [21]" spelling="transform_info" id="2001596320230"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="name" comment_scope_start="265" comment_scope_end="265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!tested" comment_scope_start="265" comment_scope_end="265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some combinations of options that should be reversible are not; these cases
 * are bugs." comment_scope_start="273" comment_scope_end="280">
		<SYMBOLS>
			<VarDecl type="int [1][2]" spelling="known_bad_combos" id="2001289720134"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bugs" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="problem, antidote" comment_scope_start="278" comment_scope_end="278"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="antidote" comment_scope_start="279" comment_scope_end="279"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="non-zero if more than one set bit" comment_scope_start="285" comment_scope_end="285">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="transforms" id="2003524436286"/>
			<DeclRefExpr type="int" spelling="transforms" id="2001198163540"/>
			<UnexposedExpr type="int" spelling="transforms" id="2000293239636"/>
			<UnexposedExpr type="int" spelling="transforms" id="2003934354293"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="lowest set bit" comment_scope_start="291" comment_scope_end="291">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="transforms" id="2000507007875"/>
			<DeclRefExpr type="int" spelling="transforms" id="2001633462138"/>
			<UnexposedExpr type="int" spelling="transforms" id="2002771354586"/>
			<UnexposedExpr type="int" spelling="transforms" id="2003779334423"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="combo is ok" comment_scope_start="308" comment_scope_end="308"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The name, if 't' has multiple bits set the name of the lowest set bit is
    * returned." comment_scope_start="313" comment_scope_end="327">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="t" id="2003364352028"/>
			<DeclRefExpr type="int" spelling="t" id="2002093639140"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003369409993"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000890582116"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003038059600"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000963445369"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004228140884"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001887813546"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003112452268"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000605266982"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001092692039"/>
			<DeclRefExpr type="int" spelling="t" id="2001724502748"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000552349967"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003583128420"/>
			<VarDecl type="unsigned int" spelling="i" id="2001882948148"/>
			<FunctionDecl type="const char *(int)" spelling="transform_name" id="2002515251689"/>
			<StringLiteral type="char [18]" spelling="&quot;invalid transform&quot;" id="2001695045886"/>
			<MemberRefExpr type="const char *" spelling="name" id="2002457566253"/>
			<MemberRefExpr type="int" spelling="transform" id="2001321166093"/>
			<MemberRefExpr type="const char *" spelling="name" id="2001226577326"/>
			<UnexposedExpr type="int" spelling="t" id="2001953005248"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2003259325192"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000722202403"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001660579584"/>
			<UnexposedExpr type="const char *" spelling="name" id="2000027610806"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002170870874"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002441375286"/>
			<UnexposedExpr type="int" spelling="transform" id="2003672024392"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000830650726"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002956041286"/>
			<UnexposedExpr type="int" spelling="t" id="2003519532224"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003289668147"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003096351787"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000614036177"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="first set bit" comment_scope_start="319" comment_scope_end="319">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="t" id="2003364352028"/>
			<DeclRefExpr type="int" spelling="t" id="2002093639140"/>
			<UnexposedExpr type="int" spelling="t" id="2001953005248"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Variables calculated by validate_T below and used to record all the supported
 * transforms.  Need (unsigned int) here because of the places where these
 * values are used (unsigned compares in the 'exhaustive' iterator.)" comment_scope_start="329" comment_scope_end="336">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="read_transforms" id="2002738520732"/>
			<VarDecl type="unsigned int" spelling="write_transforms" id="2001855220934"/>
			<VarDecl type="unsigned int" spelling="rw_transforms" id="2000039581173"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="iterator" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Validate the above table - this just builds the above values" comment_scope_start="337" comment_scope_end="357">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000892683545"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002030998879"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002229743978"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003241147913"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002475927705"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000390402507"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004003484306"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001683335027"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000803422178"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2001796814661"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001955645209"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000235982993"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001338134333"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002087387226"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2001731214336"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002333249429"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003727054106"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2003870343591"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2004011028286"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2002176004124"/>
			<VarDecl type="unsigned int" spelling="i" id="2002732574175"/>
			<FunctionDecl type="void (void)" spelling="validate_T" id="2003649116205"/>
			<MemberRefExpr type="const char *" spelling="name" id="2003140424733"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000936326730"/>
			<MemberRefExpr type="int" spelling="transform" id="2001413895329"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2002359519179"/>
			<MemberRefExpr type="int" spelling="transform" id="2000900675114"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2000397606536"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001102985477"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003827478006"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002609266782"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002204858127"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003892601850"/>
			<UnexposedExpr type="int" spelling="when" id="2003388847363"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2003540222798"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003475520332"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003424011201"/>
			<UnexposedExpr type="unsigned int" spelling="transform" id="2001713587429"/>
			<UnexposedExpr type="int" spelling="transform" id="2000724467455"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002800903436"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001771535249"/>
			<UnexposedExpr type="int" spelling="when" id="2003753826547"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2003797744435"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000830832333"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001214414498"/>
			<UnexposedExpr type="unsigned int" spelling="transform" id="2000245154697"/>
			<UnexposedExpr type="int" spelling="transform" id="2002149868547"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000848919158"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000029090655"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001459774212"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2003744102400"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Reversible transforms are those which are supported on both read and
    * write." comment_scope_start="353" comment_scope_end="357">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2003870343591"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2004011028286"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2002176004124"/>
			<FunctionDecl type="void (void)" spelling="validate_T" id="2003649116205"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001459774212"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2003744102400"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="FILE DATA HANDLING
 *    The original file is cached in memory.  During write the output file is
 *    written to memory.
 *
 *    In both cases the file data is held in a linked list of buffers - not all
 *    of these are in use at any time." comment_scope_start="359" comment_scope_end="370"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="next buffer in list" comment_scope_start="371" comment_scope_end="371">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="next" id="2000164043064"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="the actual buffer" comment_scope_start="372" comment_scope_end="372">
		<SYMBOLS>
			<FieldDecl type="png_byte [1024]" spelling="buffer" id="2000972258181"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="last buffer in use" comment_scope_start="377" comment_scope_end="377">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="last" id="2003243507848"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="bytes in the last buffer" comment_scope_start="378" comment_scope_end="378">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="end_count" id="2002516058181"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="current buffer being read" comment_scope_start="379" comment_scope_end="379">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list *" spelling="current" id="2002899879635"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="count of bytes read from current" comment_scope_start="380" comment_scope_end="380">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="read_count" id="2002218481247"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="the very first buffer" comment_scope_start="381" comment_scope_end="381">
		<SYMBOLS>
			<FieldDecl type="struct buffer_list" spelling="first" id="2001283556759"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Call this only once for a given buffer" comment_scope_start="386" comment_scope_end="391">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002888649462"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2001333102648"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2000528898181"/>
			<FunctionDecl type="void (struct buffer *)" spelling="buffer_init" id="2002314133732"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2002278374786"/>
			<MemberRefExpr type="struct buffer_list" spelling="first" id="2003236391386"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2001552289090"/>
			<MemberRefExpr type="struct buffer_list *" spelling="current" id="2000963979655"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001798085841"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001665287746"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2004231101008"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="required by POSIX 1003.1" comment_scope_start="429" comment_scope_end="429"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="required by ANSI-C" comment_scope_start="432" comment_scope_end="432"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used from libpng callbacks to get the current buffer" comment_scope_start="436" comment_scope_end="439">
		<SYMBOLS>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_io_ptr" id="2002336884099"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001872172172"/>
			<CallExpr type="png_voidp" spelling="png_get_io_ptr" id="2002271979341"/>
			<FunctionDecl type="struct buffer *(png_structp)" spelling="get_buffer" id="2000200499399"/>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_io_ptr" id="2001092850216"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2000677221735"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000422995538"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2001062218366"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Load a buffer from a file; does the equivalent of buffer_start_write.  On a
 * read error returns an errno value, else returns 0." comment_scope_start="458" comment_scope_end="468">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2001533810190"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2001196901202"/>
			<VarDecl type="size_t" spelling="count" id="2002938892038"/>
			<ParmDecl type="struct buffer *" spelling="buffer" id="2002941638872"/>
			<ParmDecl type="FILE *" spelling="fp" id="2002728712022"/>
			<MemberRefExpr type="struct buffer_list" spelling="first" id="2001859722197"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000383167003"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2001062218366"/>
			<TypeRef type="FILE" spelling="FILE" id="2000842825884"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="load" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="size" comment_scope_start="469" comment_scope_end="469">
		<SYMBOLS>
			<DeclRefExpr type="unsigned long (void *, unsigned long, unsigned long, FILE *)" spelling="fread" id="2003078776867"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002247806612"/>
			<DeclRefExpr type="size_t" spelling="count" id="2000244671850"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2002606784835"/>
			<UnexposedExpr type="unsigned long (*)(void *, unsigned long, unsigned long, FILE *)" spelling="fread" id="2003908535297"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2003348347859"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002589845247"/>
			<UnexposedExpr type="size_t" spelling="count" id="2001520694996"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="fread failed - probably end of file" comment_scope_start="493" comment_scope_end="493"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="no error" comment_scope_start="499" comment_scope_end="499"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some kind of funky error; errno should be non-zero" comment_scope_start="502" comment_scope_end="504">
		<SYMBOLS>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2000372573293"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2003953468381"/>
			<CallExpr type="int *" spelling="__errno_location" id="2000173089136"/>
			<CallExpr type="int *" spelling="__errno_location" id="2002341584677"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2002914060186"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2001918226802"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="This structure is used to control the test of a single file." comment_scope_start="508" comment_scope_end="524">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="VERBOSE" id="2000188053068"/>
			<EnumConstantDecl type="int" spelling="INFORMATION" id="2003901225643"/>
			<EnumConstantDecl type="int" spelling="WARNINGS" id="2003777278462"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_WARNING" id="2002823359358"/>
			<EnumConstantDecl type="int" spelling="APP_WARNING" id="2002732606461"/>
			<EnumConstantDecl type="int" spelling="ERRORS" id="2000324549551"/>
			<EnumConstantDecl type="int" spelling="APP_FAIL" id="2002060029515"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_ERROR" id="2002466777817"/>
			<EnumConstantDecl type="int" spelling="LIBPNG_BUG" id="2000463027360"/>
			<EnumConstantDecl type="int" spelling="APP_ERROR" id="2003924750847"/>
			<EnumConstantDecl type="int" spelling="QUIET" id="2001369840959"/>
			<EnumConstantDecl type="int" spelling="USER_ERROR" id="2001134787251"/>
			<EnumConstantDecl type="int" spelling="INTERNAL_ERROR" id="2002317602079"/>
			<TypedefDecl type="error_level" spelling="error_level" id="2000793457349"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="switches on all messages" comment_scope_start="511" comment_scope_end="511">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="VERBOSE" id="2000188053068"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="switches on warnings" comment_scope_start="513" comment_scope_end="513">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="WARNINGS" id="2003777278462"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="just errors" comment_scope_start="516" comment_scope_end="516">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="ERRORS" id="2000324549551"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="continuable error - no need to longjmp" comment_scope_start="517" comment_scope_end="517">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="APP_FAIL" id="2002060029515"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="this and higher cause a longjmp" comment_scope_start="518" comment_scope_end="518">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="LIBPNG_ERROR" id="2002466777817"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="erroneous behavior in libpng" comment_scope_start="519" comment_scope_end="519">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="LIBPNG_BUG" id="2000463027360"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="such as out-of-memory in a callback" comment_scope_start="520" comment_scope_end="520">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="APP_ERROR" id="2003924750847"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="no normal messages" comment_scope_start="521" comment_scope_end="521">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="QUIET" id="2001369840959"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="such as file-not-found" comment_scope_start="522" comment_scope_end="522">
		<SYMBOLS>
			<EnumConstantDecl type="int" spelling="USER_ERROR" id="2001134787251"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="where the level is in 'options'" comment_scope_start="525" comment_scope_end="525"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Test all combinations of active options" comment_scope_start="527" comment_scope_end="527"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Fail on warnings as well as errors" comment_scope_start="528" comment_scope_end="528"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log pass/fail to stdout" comment_scope_start="529" comment_scope_end="529"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Continue on APP_FAIL errors" comment_scope_start="530" comment_scope_end="530"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Skip over known bugs" comment_scope_start="531" comment_scope_end="531"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log skipped bugs" comment_scope_start="532" comment_scope_end="532"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Attempt to deduce bad combos" comment_scope_start="533" comment_scope_end="533"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="List combos by name" comment_scope_start="534" comment_scope_end="534"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Result masks apply to the result bits in the 'results' field below; these
 * bits are simple 1U&lt;&lt;error_level.  A pass requires either nothing worse than
 * warnings (--relaxes) or nothing worse than information (--strict)" comment_scope_start="536" comment_scope_end="544"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Where to go to on error" comment_scope_start="545" comment_scope_end="545">
		<SYMBOLS>
			<FieldDecl type="jmp_buf" spelling="error_return" id="2003648296011"/>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2002211248992"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The name of the original file" comment_scope_start="547" comment_scope_end="547">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="filename" id="2002474539883"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Operation being performed" comment_scope_start="548" comment_scope_end="548">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="operation" id="2001850229781"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Transform used in operation" comment_scope_start="549" comment_scope_end="549">
		<SYMBOLS>
			<FieldDecl type="int" spelling="transforms" id="2004177113202"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="See display_log below" comment_scope_start="550" comment_scope_end="550">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="options" id="2000729442014"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="A mask of errors seen" comment_scope_start="551" comment_scope_end="551">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="results" id="2004028886779"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="used on the original read" comment_scope_start="554" comment_scope_end="554">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="original_pp" id="2000936417569"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="set by the original read" comment_scope_start="555" comment_scope_end="555">
		<SYMBOLS>
			<FieldDecl type="png_infop" spelling="original_ip" id="2002716304879"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2000149518124"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="of the original rows:" comment_scope_start="557" comment_scope_end="557">
		<SYMBOLS>
			<FieldDecl type="size_t" spelling="original_rowbytes" id="2002781748664"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="from the original read" comment_scope_start="558" comment_scope_end="558">
		<SYMBOLS>
			<FieldDecl type="png_bytepp" spelling="original_rows" id="2004294521778"/>
			<TypeRef type="png_bytepp" spelling="png_bytepp" id="2002443218734"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Original chunks valid" comment_scope_start="560" comment_scope_end="562">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="chunks" id="2003293361464"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Original IHDR information" comment_scope_start="563" comment_scope_end="571">
		<SYMBOLS>
			<FieldDecl type="png_uint_32" spelling="width" id="2002852755908"/>
			<FieldDecl type="png_uint_32" spelling="height" id="2003419436091"/>
			<FieldDecl type="int" spelling="bit_depth" id="2003192724183"/>
			<FieldDecl type="int" spelling="color_type" id="2003083590925"/>
			<FieldDecl type="int" spelling="interlace_method" id="2004123823970"/>
			<FieldDecl type="int" spelling="compression_method" id="2003268677663"/>
			<FieldDecl type="int" spelling="filter_method" id="2004134531434"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Derived information for the original image." comment_scope_start="572" comment_scope_end="572"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms that do something on read" comment_scope_start="573" comment_scope_end="573">
		<SYMBOLS>
			<FieldDecl type="int" spelling="active_transforms" id="2002637968147"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms that should do nothing" comment_scope_start="574" comment_scope_end="574">
		<SYMBOLS>
			<FieldDecl type="int" spelling="ignored_transforms" id="2000260738322"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used on a read, both the original read and when validating a written
    * image." comment_scope_start="576" comment_scope_end="582">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="read_pp" id="2003743844608"/>
			<FieldDecl type="png_infop" spelling="read_ip" id="2000795589168"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2000149518124"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="validating" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Used to write a new image (the original info_ptr is used)" comment_scope_start="583" comment_scope_end="584">
		<SYMBOLS>
			<FieldDecl type="png_structp" spelling="write_pp" id="2001384562587"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="where the file gets written" comment_scope_start="585" comment_scope_end="585">
		<SYMBOLS>
			<FieldDecl type="struct buffer" spelling="written_file" id="2000562405377"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2001062218366"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Data read from the original file" comment_scope_start="588" comment_scope_end="588">
		<SYMBOLS>
			<FieldDecl type="struct buffer" spelling="original_file" id="2002739454742"/>
			<TypeRef type="struct buffer" spelling="struct buffer" id="2001062218366"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Call this only once right at the start to initialize the control
    * structure, the (struct buffer) lists are maintained across calls - the
    * memory is not freed." comment_scope_start="593" comment_scope_end="613">
		<SYMBOLS>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2001038768670"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001984481204"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002362473633"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002114287972"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2004069874128"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002934058749"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003646542903"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002165747486"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000612280561"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000896614377"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001388945452"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001176799984"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_init" id="2003023821742"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003537934486"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001807458594"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_init" id="2000355934654"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003746794840"/>
			<CallExpr type="void *" spelling="memset" id="2002809306432"/>
			<CallExpr type="void" spelling="buffer_init" id="2003651618474"/>
			<CallExpr type="void" spelling="buffer_init" id="2002817694924"/>
			<FunctionDecl type="void (struct display *)" spelling="display_init" id="2002029648132"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000909690698"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003236837421"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2000862475579"/>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2000858284437"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2004167030249"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2001708556134"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000903965478"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002197143261"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2000032924813"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2003028945719"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2001069711971"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2001646124343"/>
			<UnexposedExpr type="void *" spelling="dp" id="2000516308128"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002183276193"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000476657191"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000029842524"/>
			<UnexposedExpr type="png_uint_32" spelling="WARNINGS" id="2003182727803"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002688081544"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001376642298"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004146293877"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000391218696"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000652407086"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001127975839"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004154928326"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_init" id="2000400348451"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001946346269"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000212682483"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_init" id="2001120555750"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001637738044"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="freed" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="default to !verbose, !quiet" comment_scope_start="599" comment_scope_end="599">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002114287972"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2004069874128"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000909690698"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000029842524"/>
			<UnexposedExpr type="png_uint_32" spelling="WARNINGS" id="2003182727803"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="default" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="leave the filename for error detection" comment_scope_start="644" comment_scope_end="644"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="reset for next time" comment_scope_start="645" comment_scope_end="645">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000856325977"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2002431902280"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000887196377"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Release any memory held in the display." comment_scope_start="651" comment_scope_end="657">
		<SYMBOLS>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_destroy" id="2003970769273"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002589819079"/>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_destroy" id="2002548991007"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000600849084"/>
			<CallExpr type="void" spelling="buffer_destroy" id="2002371789988"/>
			<CallExpr type="void" spelling="buffer_destroy" id="2003973665839"/>
			<FunctionDecl type="void (struct display *)" spelling="display_destroy" id="2003037714278"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2000280135098"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2001037959823"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_destroy" id="2000210268368"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002765264738"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_destroy" id="2004008354468"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002060658794"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The display pointer is always stored in the png_struct error pointer" comment_scope_start="661" comment_scope_end="672">
		<SYMBOLS>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_error_ptr" id="2003544063781"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003610778987"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001224366604"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002739423964"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2001214413791"/>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2003084985387"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001358230742"/>
			<VarDecl type="struct display *" spelling="dp" id="2004149255516"/>
			<CallExpr type="png_voidp" spelling="png_get_error_ptr" id="2003815676146"/>
			<CallExpr type="int" spelling="fprintf" id="2003880750286"/>
			<CallExpr type="void" spelling="exit" id="2003813464159"/>
			<FunctionDecl type="struct display *(png_structp)" spelling="get_dp" id="2001039360905"/>
			<StringLiteral type="char [39]" spelling="&quot;pngimage: internal error (no display)\n&quot;" id="2002531772154"/>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_error_ptr" id="2002512751646"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2001115812159"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002816829956"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001977456497"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2002882765384"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002881919897"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2004246668206"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004021326380"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="prevents a crash" comment_scope_start="668" comment_scope_end="668">
		<SYMBOLS>
			<DeclRefExpr type="void (int) __attribute__((noreturn))" spelling="exit" id="2003084985387"/>
			<CallExpr type="void" spelling="exit" id="2003813464159"/>
			<UnexposedExpr type="void (*)(int) __attribute__((noreturn))" spelling="exit" id="2004246668206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="error handling" comment_scope_start="674" comment_scope_end="676"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Required to quiet GNUC warnings when the compiler sees a stdarg function
    * that calls one of the stdio v APIs." comment_scope_start="677" comment_scope_end="684">
		<SYMBOLS>
			<ParmDecl type="struct display *" spelling="dp" id="2002316135212"/>
			<ParmDecl type="error_level" spelling="level" id="2002618975665"/>
			<ParmDecl type="const char *" spelling="fmt" id="2003806260521"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
			<TypeRef type="error_level" spelling="error_level" id="2001659004078"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="'level' is as above, fmt is a stdio style format string.  This routine
    * does not return if level is above LIBPNG_WARNING" comment_scope_start="685" comment_scope_end="767">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002897854976"/>
			<DeclRefExpr type="error_level" spelling="level" id="2003877331885"/>
			<DeclRefExpr type="error_level" spelling="level" id="2000948797063"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003600901776"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002042306974"/>
			<DeclRefExpr type="int" spelling="INFORMATION" id="2004272430250"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000907543471"/>
			<DeclRefExpr type="int" spelling="LIBPNG_WARNING" id="2003746284384"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2003467726791"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2001740646995"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2001576515837"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2000339211722"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000435469405"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2000382113518"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000141651449"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2001824485090"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2001617008247"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2003140132999"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2001993318534"/>
			<DeclRefExpr type="int" spelling="USER_ERROR" id="2001705525638"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2001338044782"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2000547223911"/>
			<DeclRefExpr type="int" spelling="VERBOSE" id="2003979454896"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2003467538859"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002930121804"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2001565522824"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2003543122934"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2000625759616"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2002683793568"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001128918273"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002552870634"/>
			<DeclRefExpr type="const char *" spelling="lp" id="2000106996610"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003243715239"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004218905224"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001755537117"/>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2003670661000"/>
			<DeclRefExpr type="int" spelling="tr" id="2000808454531"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004056701812"/>
			<DeclRefExpr type="int" spelling="tr" id="2000335795182"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2000126346784"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2000845130217"/>
			<DeclRefExpr type="int" spelling="trx" id="2002862470896"/>
			<DeclRefExpr type="int" spelling="trx" id="2001984299919"/>
			<DeclRefExpr type="int" spelling="trx" id="2004106935722"/>
			<DeclRefExpr type="int" spelling="trx" id="2000263746050"/>
			<DeclRefExpr type="int" spelling="start" id="2001011384543"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2001454703840"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003815904823"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2000714444275"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2004256903507"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2002716898779"/>
			<DeclRefExpr type="int" spelling="trz" id="2001270221614"/>
			<DeclRefExpr type="int" spelling="start" id="2002923022936"/>
			<DeclRefExpr type="int" spelling="trx" id="2002359854300"/>
			<DeclRefExpr type="int" spelling="trz" id="2002846357780"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2003146039661"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003803131961"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002482357825"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003117289168"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2002685541132"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2001780601547"/>
			<DeclRefExpr type="int" spelling="tr" id="2001820249888"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2001054241051"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2000040324261"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2001809261930"/>
			<DeclRefExpr type="int" spelling="tr" id="2003150854513"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2004287553386"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2002185010236"/>
			<DeclRefExpr type="&lt;builtin fn type&gt;" spelling="__builtin_va_start" id="2002618607035"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2003172263759"/>
			<DeclRefExpr type="const char *" spelling="fmt" id="2001729476201"/>
			<DeclRefExpr type="int (FILE *, const char *, struct __va_list_tag *)" spelling="vfprintf" id="2001335578036"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2003062894348"/>
			<DeclRefExpr type="const char *" spelling="fmt" id="2001266012814"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2003026538332"/>
			<DeclRefExpr type="&lt;builtin fn type&gt;" spelling="__builtin_va_end" id="2000916398330"/>
			<DeclRefExpr type="va_list" spelling="ap" id="2000526936002"/>
			<DeclRefExpr type="int (int, FILE *)" spelling="fputc" id="2001988443059"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2001452064920"/>
			<DeclRefExpr type="error_level" spelling="level" id="2002379000505"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002392858350"/>
			<DeclRefExpr type="error_level" spelling="level" id="2003695642018"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002202368485"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002571108954"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001943043478"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003338917048"/>
			<DeclRefExpr type="error_level" spelling="level" id="2000186137663"/>
			<VarDecl type="const char *" spelling="lp" id="2001724722047"/>
			<VarDecl type="va_list" spelling="ap" id="2002082479176"/>
			<VarDecl type="int" spelling="tr" id="2001113293363"/>
			<VarDecl type="int" spelling="trx" id="2003422211865"/>
			<VarDecl type="int" spelling="start" id="2001395289473"/>
			<VarDecl type="int" spelling="trz" id="2000137272093"/>
			<CallExpr type="int" spelling="fprintf" id="2002284919642"/>
			<CallExpr type="int" spelling="is_combo" id="2004003030916"/>
			<CallExpr type="int" spelling="fprintf" id="2003862965943"/>
			<CallExpr type="int" spelling="fprintf" id="2001549999772"/>
			<CallExpr type="int" spelling="fprintf" id="2000967629175"/>
			<CallExpr type="const char *" spelling="transform_name" id="2001490204803"/>
			<CallExpr type="int" spelling="fprintf" id="2001049445141"/>
			<CallExpr type="int" spelling="fprintf" id="2000684714141"/>
			<CallExpr type="int" spelling="fprintf" id="2003566774870"/>
			<CallExpr type="int" spelling="fprintf" id="2000072130531"/>
			<CallExpr type="const char *" spelling="transform_name" id="2001691136304"/>
			<CallExpr type="int" spelling="fprintf" id="2003364950951"/>
			<CallExpr type="void" spelling="__builtin_va_start" id="2000871500394"/>
			<CallExpr type="int" spelling="vfprintf" id="2001267478457"/>
			<CallExpr type="void" spelling="__builtin_va_end" id="2003956734534"/>
			<CallExpr type="int" spelling="fputc" id="2002864911814"/>
			<CallExpr type="void" spelling="longjmp" id="2000224165892"/>
			<FunctionDecl type="void (struct __va_list_tag *, ...)" spelling="__builtin_va_start" id="2002786977876"/>
			<FunctionDecl type="void (struct __va_list_tag *)" spelling="__builtin_va_end" id="2003218651956"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000275500675"/>
			<StringLiteral type="char [12]" spelling="&quot;information&quot;" id="2002296001906"/>
			<StringLiteral type="char [16]" spelling="&quot;warning(libpng)&quot;" id="2001631972021"/>
			<StringLiteral type="char [18]" spelling="&quot;warning(pngimage)&quot;" id="2001473167897"/>
			<StringLiteral type="char [19]" spelling="&quot;error(continuable)&quot;" id="2002197069538"/>
			<StringLiteral type="char [14]" spelling="&quot;error(libpng)&quot;" id="2003648912028"/>
			<StringLiteral type="char [12]" spelling="&quot;bug(libpng)&quot;" id="2004095185528"/>
			<StringLiteral type="char [16]" spelling="&quot;error(pngimage)&quot;" id="2001736098102"/>
			<StringLiteral type="char [12]" spelling="&quot;error(user)&quot;" id="2003949191461"/>
			<StringLiteral type="char [14]" spelling="&quot;bug(pngimage)&quot;" id="2001258539850"/>
			<StringLiteral type="char [11]" spelling="&quot;%s: %s: %s&quot;" id="2003049572491"/>
			<StringLiteral type="char [8]" spelling="&quot;&lt;stdin&gt;&quot;" id="2002466810886"/>
			<StringLiteral type="char [2]" spelling="&quot;(&quot;" id="2000376790389"/>
			<StringLiteral type="char [2]" spelling="&quot;+&quot;" id="2004276951823"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2002571213158"/>
			<StringLiteral type="char [2]" spelling="&quot;-&quot;" id="2000725502379"/>
			<StringLiteral type="char [2]" spelling="&quot;)&quot;" id="2000658603090"/>
			<StringLiteral type="char [7]" spelling="&quot;(0x%x)&quot;" id="2002968693928"/>
			<StringLiteral type="char [5]" spelling="&quot;(%s)&quot;" id="2001165026700"/>
			<StringLiteral type="char [3]" spelling="&quot;: &quot;" id="2002555313996"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2001644101383"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003167795541"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001651345612"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2002878714302"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2000815526267"/>
			<MemberRefExpr type="int" spelling="transforms" id="2001342683015"/>
			<MemberRefExpr type="int" spelling="transforms" id="2003295195394"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001111679835"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002816332236"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000006256397"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001706523678"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2003166136109"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002949813439"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2000166883252"/>
			<UnexposedExpr type="error_level" spelling="level" id="2001601254860"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001739997988"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002284612007"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2001443501039"/>
			<UnexposedExpr type="error_level" spelling="level" id="2000799484112"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2000006512286"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002657528981"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2004208780133"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001293658139"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001354257169"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002998267410"/>
			<UnexposedExpr type="const char *" spelling="lp" id="2000800931369"/>
			<UnexposedExpr type="const char *" spelling="operation" id="2004081015086"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002028590732"/>
			<UnexposedExpr type="int" spelling="transforms" id="2001161843113"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003543577811"/>
			<UnexposedExpr type="int" spelling="transforms" id="2002201809748"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003229552594"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2000844549834"/>
			<UnexposedExpr type="int" spelling="tr" id="2002046763410"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2002782941889"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002648581999"/>
			<UnexposedExpr type="int" spelling="tr" id="2003712474531"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003350103266"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001693448211"/>
			<UnexposedExpr type="int" spelling="trx" id="2001621513537"/>
			<UnexposedExpr type="int" spelling="trx" id="2003873775332"/>
			<UnexposedExpr type="int" spelling="trx" id="2000353603728"/>
			<UnexposedExpr type="int" spelling="trx" id="2003581988952"/>
			<UnexposedExpr type="int" spelling="start" id="2001125909358"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2000633942146"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2000929651922"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003211967214"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002640886151"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2001036868574"/>
			<UnexposedExpr type="int" spelling="trz" id="2000752604162"/>
			<UnexposedExpr type="int" spelling="trz" id="2000353028016"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2004148787726"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2003575989778"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2000989219728"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2003619265821"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2004013134181"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2003250209688"/>
			<UnexposedExpr type="int" spelling="tr" id="2003283931528"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2000091562789"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002429363783"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2003168232599"/>
			<UnexposedExpr type="int" spelling="tr" id="2003630610692"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2003349339532"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001653927226"/>
			<UnexposedExpr type="void (*)(struct __va_list_tag *, ...)" spelling="__builtin_va_start" id="2000699275741"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2000555094483"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, struct __va_list_tag *)" spelling="vfprintf" id="2001067595811"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2002717722890"/>
			<UnexposedExpr type="const char *" spelling="fmt" id="2001344645993"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2001210171407"/>
			<UnexposedExpr type="void (*)(struct __va_list_tag *)" spelling="__builtin_va_end" id="2000013172944"/>
			<UnexposedExpr type="struct __va_list_tag *" spelling="ap" id="2000894887786"/>
			<UnexposedExpr type="int (*)(int, FILE *)" spelling="fputc" id="2000712421545"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2001920339426"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002585280249"/>
			<UnexposedExpr type="error_level" spelling="level" id="2003075940818"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001946269531"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2000105491516"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002819946211"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2002968715329"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001283943007"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003459176252"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2003387093339"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2001753578574"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001596166465"/>
			<UnexposedExpr type="int" spelling="level" id="2004084147820"/>
			<UnexposedExpr type="error_level" spelling="level" id="2001437198880"/>
			<TypeRef type="error_level" spelling="error_level" id="2001659004078"/>
			<TypeRef type="va_list" spelling="va_list" id="2000971484244"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="level" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="level" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="anything unexpected is an internal error:" comment_scope_start="707" comment_scope_end="707">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2000547223911"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="else do not output any message" comment_scope_start="762" comment_scope_end="767">
		<SYMBOLS>
			<DeclRefExpr type="error_level" spelling="level" id="2002379000505"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002392858350"/>
			<DeclRefExpr type="error_level" spelling="level" id="2003695642018"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002202368485"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002571108954"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001943043478"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003338917048"/>
			<DeclRefExpr type="error_level" spelling="level" id="2000186137663"/>
			<CallExpr type="void" spelling="longjmp" id="2000224165892"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000275500675"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002816332236"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000006256397"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002585280249"/>
			<UnexposedExpr type="error_level" spelling="level" id="2003075940818"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001946269531"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2000105491516"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002819946211"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2002968715329"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001283943007"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003459176252"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2003387093339"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2001753578574"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001596166465"/>
			<UnexposedExpr type="int" spelling="level" id="2004084147820"/>
			<UnexposedExpr type="error_level" spelling="level" id="2001437198880"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Errors cause this routine to exit to the fail code" comment_scope_start="762" comment_scope_end="767">
		<SYMBOLS>
			<DeclRefExpr type="error_level" spelling="level" id="2002379000505"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002392858350"/>
			<DeclRefExpr type="error_level" spelling="level" id="2003695642018"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2002202368485"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002571108954"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2001943043478"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003338917048"/>
			<DeclRefExpr type="error_level" spelling="level" id="2000186137663"/>
			<CallExpr type="void" spelling="longjmp" id="2000224165892"/>
			<FunctionDecl type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000275500675"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002816332236"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000006256397"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2002585280249"/>
			<UnexposedExpr type="error_level" spelling="level" id="2003075940818"/>
			<UnexposedExpr type="unsigned int" spelling="APP_FAIL" id="2001946269531"/>
			<UnexposedExpr type="unsigned int" spelling="level" id="2000105491516"/>
			<UnexposedExpr type="error_level" spelling="level" id="2002819946211"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2002968715329"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001283943007"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003459176252"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2003387093339"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2001753578574"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001596166465"/>
			<UnexposedExpr type="int" spelling="level" id="2004084147820"/>
			<UnexposedExpr type="error_level" spelling="level" id="2001437198880"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="exit" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="error handler callbacks for libpng" comment_scope_start="769" comment_scope_end="785">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001076056971"/>
			<DeclRefExpr type="struct display *(png_structp)" spelling="get_dp" id="2002237722581"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2000941272874"/>
			<DeclRefExpr type="int" spelling="LIBPNG_WARNING" id="2003109313451"/>
			<DeclRefExpr type="png_const_charp" spelling="warning" id="2004211067022"/>
			<DeclRefExpr type="struct display *(png_structp)" spelling="get_dp" id="2001160266949"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003338913514"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001711787434"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001321705267"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2001949586873"/>
			<DeclRefExpr type="png_const_charp" spelling="error" id="2000286705152"/>
			<VarDecl type="struct display *" spelling="dp" id="2003869881727"/>
			<CallExpr type="void" spelling="display_log" id="2002513334333"/>
			<CallExpr type="struct display *" spelling="get_dp" id="2000198899638"/>
			<CallExpr type="struct display *" spelling="get_dp" id="2000378932797"/>
			<CallExpr type="void" spelling="display_log" id="2003093060309"/>
			<ParmDecl type="png_structp" spelling="pp" id="2002900438290"/>
			<ParmDecl type="png_const_charp" spelling="warning" id="2004105506199"/>
			<ParmDecl type="png_structp" spelling="pp" id="2003264190097"/>
			<ParmDecl type="png_const_charp" spelling="error" id="2003053173011"/>
			<ParmDecl type="struct display *" spelling="dp" id="2003665316846"/>
			<ParmDecl type="const char *" spelling="filename" id="2004293802607"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="display_warning" id="2002994654861"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="display_error" id="2003671921771"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2000025295382"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2001113609825"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2004075038937"/>
			<UnexposedExpr type="struct display *(*)(png_structp)" spelling="get_dp" id="2001237169032"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003661435859"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_WARNING" id="2003614172085"/>
			<UnexposedExpr type="png_const_charp" spelling="warning" id="2000961842949"/>
			<UnexposedExpr type="struct display *(*)(png_structp)" spelling="get_dp" id="2001001579404"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000914492509"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2004064213389"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000365354748"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2003552572886"/>
			<UnexposedExpr type="png_const_charp" spelling="error" id="2002154376886"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2002629596513"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2002629596513"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Does the initial cache of the file." comment_scope_start="786" comment_scope_end="809">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003537055451"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2003936895753"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2002351302693"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2002309123016"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2002579837471"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2002405069959"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2002031100438"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001339417812"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003667813868"/>
			<DeclRefExpr type="int" spelling="USER_ERROR" id="2002084192731"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2003391968168"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2000515228863"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2000736832553"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdin" id="2002917927078"/>
			<DeclRefExpr type="int" spelling="ret" id="2001287117431"/>
			<DeclRefExpr type="int (struct buffer *, FILE *)" spelling="buffer_from_file" id="2003641970124"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003437377909"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2001272137233"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2000662391002"/>
			<DeclRefExpr type="FILE *" spelling="fp" id="2001418021536"/>
			<DeclRefExpr type="int" spelling="ret" id="2001437419050"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003587577068"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003264214895"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2000762909971"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2001807831533"/>
			<DeclRefExpr type="int" spelling="ret" id="2003438674338"/>
			<VarDecl type="FILE *" spelling="fp" id="2003250654220"/>
			<VarDecl type="int" spelling="ret" id="2003833586862"/>
			<CallExpr type="FILE *" spelling="fopen" id="2000158440077"/>
			<CallExpr type="void" spelling="display_log" id="2003161170129"/>
			<CallExpr type="char *" spelling="strerror" id="2002566454989"/>
			<CallExpr type="int *" spelling="__errno_location" id="2002051508579"/>
			<CallExpr type="int" spelling="buffer_from_file" id="2003190286750"/>
			<CallExpr type="int" spelling="fclose" id="2002002379071"/>
			<CallExpr type="void" spelling="display_log" id="2000551687751"/>
			<CallExpr type="char *" spelling="strerror" id="2001575954260"/>
			<FunctionDecl type="void (struct display *, const char *)" spelling="display_cache_file" id="2004245494576"/>
			<StringLiteral type="char [3]" spelling="&quot;rb&quot;" id="2002471953376"/>
			<StringLiteral type="char [16]" spelling="&quot;open failed: %s&quot;" id="2001537448535"/>
			<StringLiteral type="char [16]" spelling="&quot;read failed: %s&quot;" id="2002497293575"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001517029449"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2000029832700"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000909657709"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001477577502"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001652573527"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2001552198085"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001999611084"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2001017306327"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001573398394"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003357195783"/>
			<UnexposedExpr type="error_level" spelling="USER_ERROR" id="2001628068274"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2003653396031"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2002903608016"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdin" id="2000177578271"/>
			<UnexposedExpr type="int (*)(struct buffer *, FILE *)" spelling="buffer_from_file" id="2002585627366"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002364402917"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2002902420790"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2000738893850"/>
			<UnexposedExpr type="FILE *" spelling="fp" id="2003252572801"/>
			<UnexposedExpr type="int" spelling="ret" id="2000866556280"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003872148837"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001759022617"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2001588938467"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2002838150094"/>
			<UnexposedExpr type="int" spelling="ret" id="2002725044698"/>
			<TypeRef type="FILE" spelling="FILE" id="2000842825884"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="827" comment_scope_end="829"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Move to the next buffer:" comment_scope_start="833" comment_scope_end="835">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2004181216084"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002395968470"/>
			<DeclRefExpr type="size_t" spelling="read_count" id="2003976421342"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2003629700405"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2002020840280"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003129397769"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Avoid update outside the loop" comment_scope_start="836" comment_scope_end="836">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2002118369952"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003848679782"/>
			<MemberRefExpr type="struct buffer_list *" spelling="current" id="2001521597984"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2003589476686"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002040707341"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="And do a sanity check (the EOF case is caught above)" comment_scope_start="838" comment_scope_end="844">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2000126618040"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000326719957"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000441877278"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2002125673470"/>
			<CallExpr type="void" spelling="display_log" id="2002008613300"/>
			<StringLiteral type="char [20]" spelling="&quot;damaged buffer list&quot;" id="2003327696334"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000366517010"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002192061610"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002163993018"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000870877762"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="caught" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="842" comment_scope_end="844"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="This cleans out any previous read and sets operation and transforms to
    * empty." comment_scope_start="873" comment_scope_end="877">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_read" id="2003599483343"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003930400243"/>
			<CallExpr type="void" spelling="display_clean_read" id="2000724067366"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_read" id="2003367312269"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003816570332"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="else this is a verify and do not overwrite info" comment_scope_start="878" comment_scope_end="878">
		<SYMBOLS>
			<DeclRefExpr type="const char *" spelling="operation" id="2001837000808"/>
			<UnexposedExpr type="const char *" spelling="operation" id="2000028180886"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The png_read_png API requires us to make the info struct, but it does the
    * call to png_read_info." comment_scope_start="889" comment_scope_end="896">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001095811526"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2004235348523"/>
			<DeclRefExpr type="png_infop (png_const_structrp)" spelling="png_create_info_struct" id="2000640716298"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002128690132"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000857449496"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003624819117"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003333623460"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2000770797631"/>
			<CallExpr type="png_infop" spelling="png_create_info_struct" id="2000779649671"/>
			<CallExpr type="void" spelling="display_log" id="2001361053679"/>
			<StringLiteral type="char [29]" spelling="&quot;failed to create info struct&quot;" id="2001969194138"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2004163802257"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001991987504"/>
			<UnexposedExpr type="png_infop (*)(png_const_structrp)" spelling="png_create_info_struct" id="2002825986950"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002637817347"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000813883828"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2003176051110"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003439954189"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004088530489"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2003768664681"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Remove the user limits, if any" comment_scope_start="897" comment_scope_end="900">
		<SYMBOLS>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2002176373101"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003236909759"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2002967143605"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2003410813820"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002448149740"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Set the IO handling" comment_scope_start="901" comment_scope_end="904">
		<SYMBOLS>
			<DeclRefExpr type="void (struct buffer *)" spelling="buffer_start_read" id="2003166725322"/>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2001087172559"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2002582766923"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002007341450"/>
			<DeclRefExpr type="struct buffer *" spelling="bp" id="2002797267640"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_function" id="2000803822938"/>
			<CallExpr type="void" spelling="buffer_start_read" id="2004291331070"/>
			<CallExpr type="void" spelling="png_set_read_fn" id="2000095239803"/>
			<UnexposedExpr type="void (*)(struct buffer *)" spelling="buffer_start_read" id="2000886418894"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2001200452459"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2003271393033"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001194641527"/>
			<UnexposedExpr type="png_voidp" spelling="bp" id="2001766603739"/>
			<UnexposedExpr type="struct buffer *" spelling="bp" id="2002483191952"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_function" id="2003102156842"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="params" comment_scope_start="905" comment_scope_end="905">
		<SYMBOLS>
			<DeclRefExpr type="void (png_structrp, png_inforp, int, png_voidp)" spelling="png_read_png" id="2004203820280"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2003370048150"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2003777625062"/>
			<DeclRefExpr type="int" spelling="transforms" id="2002324663069"/>
			<CallExpr type="void" spelling="png_read_png" id="2002695827163"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, int, png_voidp)" spelling="png_read_png" id="2003592823381"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001519490077"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2002006486403"/>
			<UnexposedExpr type="int" spelling="transforms" id="2002370263297"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="crazy debugging" comment_scope_start="907" comment_scope_end="907"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="called once after the first read to update all the info, original_pp and
    * original_ip must have been filled in." comment_scope_start="926" comment_scope_end="997">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002034323841"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001934501905"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003134735154"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003483038361"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001747674225"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001347975906"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000578337549"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001880019281"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001816002347"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000463054724"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003705451213"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002538404347"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2002541284356"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002811481872"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002757764646"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001576447857"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000508756039"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001209287683"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000613413661"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003751284536"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2002043422873"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001620107027"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002792179511"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004163601335"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002595483471"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000789904579"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2003224973612"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003453041995"/>
			<DeclRefExpr type="png_bytepp (png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2001338088970"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2004123400225"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002472966707"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002707379931"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003616470112"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001362721403"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004228848428"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2004269496167"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2000467883576"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001835564393"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001810699965"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003723784612"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001796940894"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004212745668"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002808763810"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001194231201"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001615443433"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003747312035"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004263921522"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004158042616"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000669290482"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002619435695"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001638498042"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000553647009"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001888004403"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000861802651"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000609404834"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002288718929"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000307052235"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002782657900"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004256199925"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001569869224"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001209239041"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001995153771"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003809329361"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000150921639"/>
			<DeclRefExpr type="png_uint_32" spelling="chunks" id="2003374492429"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001427617403"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000272105001"/>
			<DeclRefExpr type="int" spelling="ct" id="2002536634006"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004092918896"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003219231731"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003883656242"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004141437331"/>
			<DeclRefExpr type="int" spelling="ct" id="2001121141774"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001656590432"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001441532059"/>
			<DeclRefExpr type="int" spelling="bd" id="2004210730752"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002788984354"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001491148190"/>
			<DeclRefExpr type="int" spelling="active" id="2002497071888"/>
			<DeclRefExpr type="int" spelling="transform" id="2000564130798"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001009876177"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003790261118"/>
			<DeclRefExpr type="int" spelling="inactive" id="2003580981268"/>
			<DeclRefExpr type="int" spelling="transform" id="2002216560139"/>
			<DeclRefExpr type="int" spelling="inactive" id="2001425697590"/>
			<DeclRefExpr type="int" spelling="active" id="2000316952471"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003882098303"/>
			<DeclRefExpr type="int" spelling="active" id="2000193725487"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004063628398"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000698440439"/>
			<VarDecl type="png_structp" spelling="pp" id="2001223551533"/>
			<VarDecl type="png_infop" spelling="ip" id="2000061321251"/>
			<VarDecl type="png_uint_32" spelling="chunks" id="2004152397990"/>
			<VarDecl type="int" spelling="active" id="2000740993863"/>
			<VarDecl type="int" spelling="inactive" id="2002424907606"/>
			<VarDecl type="int" spelling="ct" id="2003451177043"/>
			<VarDecl type="int" spelling="bd" id="2002653305738"/>
			<VarDecl type="unsigned int" spelling="i" id="2002129601445"/>
			<VarDecl type="int" spelling="transform" id="2002689508503"/>
			<CallExpr type="void" spelling="read_png" id="2002868858087"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2001788756235"/>
			<CallExpr type="void" spelling="display_log" id="2001750234297"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2002591791611"/>
			<CallExpr type="void" spelling="display_log" id="2000124780756"/>
			<CallExpr type="png_bytepp" spelling="png_get_rows" id="2001752635296"/>
			<CallExpr type="void" spelling="display_log" id="2002609607115"/>
			<CallExpr type="png_uint_32" spelling="png_get_IHDR" id="2003994638875"/>
			<CallExpr type="void" spelling="display_log" id="2001230483128"/>
			<FunctionDecl type="void (struct display *)" spelling="update_display" id="2000590031003"/>
			<StringLiteral type="char [14]" spelling="&quot;original read&quot;" id="2003622127465"/>
			<StringLiteral type="char [28]" spelling="&quot;png_get_rowbytes returned 0&quot;" id="2000918118688"/>
			<StringLiteral type="char [35]" spelling="&quot;png_read_png did not set IDAT flag&quot;" id="2003769039554"/>
			<StringLiteral type="char [40]" spelling="&quot;png_read_png did not create row buffers&quot;" id="2000776551800"/>
			<StringLiteral type="char [20]" spelling="&quot;png_get_IHDR failed&quot;" id="2002932778491"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2001752962707"/>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2003430506505"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000061168673"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2002265753276"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2002915493540"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2001639223835"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002474335629"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2000972540682"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002046106693"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2002490078547"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003798783281"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2004154260953"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2001594000076"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2000075898683"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2004174809781"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2003612136971"/>
			<MemberRefExpr type="int" spelling="color_type" id="2003224126148"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2002513607654"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2001575355137"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2001717788369"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003014795351"/>
			<MemberRefExpr type="int" spelling="color_type" id="2000506526683"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2002816611063"/>
			<MemberRefExpr type="const char *" spelling="name" id="2004278606304"/>
			<MemberRefExpr type="int" spelling="transform" id="2003366176498"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2001244116588"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002488125559"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2000186938663"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2003775782205"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_absent" id="2002926618336"/>
			<MemberRefExpr type="png_byte" spelling="bit_depths" id="2001857857755"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000084651881"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2001535462552"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2000470740234"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2003437963462"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000977906227"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001225411949"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001296365849"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000733849827"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2002519984136"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002582876498"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002936148437"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003048797705"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002117051308"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001197995275"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000861256986"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001891150250"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2000589292685"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002552985025"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001421834822"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001881669814"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2003183001356"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2002839389251"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002683311086"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003270789910"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000616737924"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001171624501"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001065422200"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2003840435958"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003023624288"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002687191389"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2002225251064"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2002329129046"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2001620338347"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000398382347"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000256357209"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004066515494"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2003736263225"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002966778004"/>
			<UnexposedExpr type="png_bytepp (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2003185796000"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003782054442"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2000566878462"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2003628083685"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2004100699240"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2001149358182"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001426057472"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002835726381"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003819262109"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2000540422925"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2004053013762"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003612804043"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2003171456629"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001447933638"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000977319982"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001639117590"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002833400748"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000094208472"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002685418459"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002033142193"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001818194121"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003640150174"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001978903692"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001102947600"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2002039948349"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000219478580"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003435310472"/>
			<UnexposedExpr type="int" spelling="color_type" id="2004213506921"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004074843155"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000226640371"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001744677440"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2001647700301"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001033228653"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001910185143"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003541165427"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002331725071"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2004176435799"/>
			<UnexposedExpr type="int" spelling="transform" id="2001221150181"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003029552607"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001928209054"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2004131424693"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002139459286"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003865195574"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2003249966112"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002097517184"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003824991441"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2003672385416"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2003409920782"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2000694685907"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003569084935"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000545682104"/>
			<UnexposedExpr type="int" spelling="ct" id="2001815800859"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2003747414335"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2000132699397"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003584099301"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002807274524"/>
			<UnexposedExpr type="int" spelling="color_mask_absent" id="2001607569080"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_absent" id="2003360840427"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000605516321"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002612613226"/>
			<UnexposedExpr type="int" spelling="ct" id="2003796707538"/>
			<UnexposedExpr type="int" spelling="bit_depths" id="2001723581115"/>
			<UnexposedExpr type="png_byte" spelling="bit_depths" id="2003840290704"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002014936013"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002020013417"/>
			<UnexposedExpr type="int" spelling="bd" id="2002075824642"/>
			<UnexposedExpr type="int" spelling="when" id="2002314399958"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2002420597076"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002707023238"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001640489939"/>
			<UnexposedExpr type="int" spelling="transform" id="2000873998438"/>
			<UnexposedExpr type="int" spelling="when" id="2001361010059"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2000507238738"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000307593291"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000181428548"/>
			<UnexposedExpr type="int" spelling="transform" id="2002131775435"/>
			<UnexposedExpr type="int" spelling="active" id="2000848651779"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004101765209"/>
			<UnexposedExpr type="int" spelling="active" id="2001944075184"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000135775682"/>
			<UnexposedExpr type="int" spelling="inactive" id="2003453266561"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2000853477821"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2000149518124"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Now perform the initial read with a 0 transform." comment_scope_start="933" comment_scope_end="933"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="no transform" comment_scope_start="934" comment_scope_end="934">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002034323841"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001934501905"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003134735154"/>
			<CallExpr type="void" spelling="read_png" id="2002868858087"/>
			<StringLiteral type="char [14]" spelling="&quot;original read&quot;" id="2003622127465"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2001752962707"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000977906227"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001225411949"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001296365849"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Move the result to the 'original' fields" comment_scope_start="936" comment_scope_end="944">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003483038361"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001747674225"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001347975906"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000578337549"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001880019281"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001816002347"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000463054724"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003705451213"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002538404347"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2002541284356"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2002811481872"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002757764646"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001576447857"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000508756039"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001209287683"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2000613413661"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003751284536"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2002043422873"/>
			<DeclRefExpr type="png_structp" spelling="pp" id="2001620107027"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2002792179511"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2001788756235"/>
			<CallExpr type="void" spelling="display_log" id="2001750234297"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2002591791611"/>
			<StringLiteral type="char [28]" spelling="&quot;png_get_rowbytes returned 0&quot;" id="2000918118688"/>
			<MemberRefExpr type="png_structp" spelling="original_pp" id="2003430506505"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2000061168673"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2002265753276"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2002915493540"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2001639223835"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2002474335629"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2000972540682"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002046106693"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2002490078547"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000733849827"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2002519984136"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002582876498"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002936148437"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003048797705"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002117051308"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001197995275"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000861256986"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001891150250"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2000589292685"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2002552985025"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2001421834822"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2001881669814"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2003183001356"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2002839389251"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002683311086"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003270789910"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000616737924"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001171624501"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001065422200"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2003840435958"/>
			<UnexposedExpr type="const png_struct *" spelling="pp" id="2003023624288"/>
			<UnexposedExpr type="png_structp" spelling="pp" id="2002687191389"/>
			<UnexposedExpr type="const png_info *" spelling="ip" id="2002225251064"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2002329129046"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="set by png_read_png" comment_scope_start="945" comment_scope_end="945">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004163601335"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003798783281"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2001620338347"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000398382347"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="'active' transforms are discovered based on the original image format;
    * running one active transform can activate others.  At present the code
    * does not attempt to determine the closure." comment_scope_start="957" comment_scope_end="996">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000669290482"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002619435695"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001638498042"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000553647009"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001888004403"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000861802651"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000609404834"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002288718929"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2000307052235"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2002782657900"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004256199925"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001569869224"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001209239041"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001995153771"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003809329361"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000150921639"/>
			<DeclRefExpr type="png_uint_32" spelling="chunks" id="2003374492429"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001427617403"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2000272105001"/>
			<DeclRefExpr type="int" spelling="ct" id="2002536634006"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2004092918896"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003219231731"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2003883656242"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2004141437331"/>
			<DeclRefExpr type="int" spelling="ct" id="2001121141774"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001656590432"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001441532059"/>
			<DeclRefExpr type="int" spelling="bd" id="2004210730752"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2002788984354"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2001491148190"/>
			<DeclRefExpr type="int" spelling="active" id="2002497071888"/>
			<DeclRefExpr type="int" spelling="transform" id="2000564130798"/>
			<DeclRefExpr type="struct transform_info [21]" spelling="transform_info" id="2001009876177"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2003790261118"/>
			<DeclRefExpr type="int" spelling="inactive" id="2003580981268"/>
			<DeclRefExpr type="int" spelling="transform" id="2002216560139"/>
			<DeclRefExpr type="int" spelling="inactive" id="2001425697590"/>
			<DeclRefExpr type="int" spelling="active" id="2000316952471"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003882098303"/>
			<DeclRefExpr type="int" spelling="active" id="2000193725487"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004063628398"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000698440439"/>
			<VarDecl type="png_uint_32" spelling="chunks" id="2004152397990"/>
			<VarDecl type="int" spelling="active" id="2000740993863"/>
			<VarDecl type="int" spelling="inactive" id="2002424907606"/>
			<VarDecl type="int" spelling="ct" id="2003451177043"/>
			<VarDecl type="int" spelling="bd" id="2002653305738"/>
			<VarDecl type="unsigned int" spelling="i" id="2002129601445"/>
			<VarDecl type="int" spelling="transform" id="2002689508503"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2003014795351"/>
			<MemberRefExpr type="int" spelling="color_type" id="2000506526683"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2002816611063"/>
			<MemberRefExpr type="const char *" spelling="name" id="2004278606304"/>
			<MemberRefExpr type="int" spelling="transform" id="2003366176498"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2001244116588"/>
			<MemberRefExpr type="png_uint_32" spelling="valid_chunks" id="2002488125559"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2000186938663"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_required" id="2003775782205"/>
			<MemberRefExpr type="png_byte" spelling="color_mask_absent" id="2002926618336"/>
			<MemberRefExpr type="png_byte" spelling="bit_depths" id="2001857857755"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2000084651881"/>
			<MemberRefExpr type="png_byte" spelling="when" id="2001535462552"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2000470740234"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2003437963462"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2000219478580"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003435310472"/>
			<UnexposedExpr type="int" spelling="color_type" id="2004213506921"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004074843155"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000226640371"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001744677440"/>
			<UnexposedExpr type="unsigned long" spelling="i" id="2001647700301"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001033228653"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2001910185143"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003541165427"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002331725071"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2004176435799"/>
			<UnexposedExpr type="int" spelling="transform" id="2001221150181"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003029552607"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001928209054"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2004131424693"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002139459286"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003865195574"/>
			<UnexposedExpr type="png_uint_32" spelling="valid_chunks" id="2003249966112"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002097517184"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2003824991441"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2003672385416"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2003409920782"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2000694685907"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003569084935"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000545682104"/>
			<UnexposedExpr type="int" spelling="ct" id="2001815800859"/>
			<UnexposedExpr type="int" spelling="color_mask_required" id="2003747414335"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_required" id="2000132699397"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2003584099301"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002807274524"/>
			<UnexposedExpr type="int" spelling="color_mask_absent" id="2001607569080"/>
			<UnexposedExpr type="png_byte" spelling="color_mask_absent" id="2003360840427"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000605516321"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002612613226"/>
			<UnexposedExpr type="int" spelling="ct" id="2003796707538"/>
			<UnexposedExpr type="int" spelling="bit_depths" id="2001723581115"/>
			<UnexposedExpr type="png_byte" spelling="bit_depths" id="2003840290704"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002014936013"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2002020013417"/>
			<UnexposedExpr type="int" spelling="bd" id="2002075824642"/>
			<UnexposedExpr type="int" spelling="when" id="2002314399958"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2002420597076"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2002707023238"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2001640489939"/>
			<UnexposedExpr type="int" spelling="transform" id="2000873998438"/>
			<UnexposedExpr type="int" spelling="when" id="2001361010059"/>
			<UnexposedExpr type="png_byte" spelling="when" id="2000507238738"/>
			<UnexposedExpr type="struct transform_info *" spelling="transform_info" id="2000307593291"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2000181428548"/>
			<UnexposedExpr type="int" spelling="transform" id="2002131775435"/>
			<UnexposedExpr type="int" spelling="active" id="2000848651779"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004101765209"/>
			<UnexposedExpr type="int" spelling="active" id="2001944075184"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000135775682"/>
			<UnexposedExpr type="int" spelling="inactive" id="2003453266561"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="determine" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Some transforms appear multiple times in the table; the 'active' status
       * is the logical OR of these and the inactive status must be adjusted to
       * take this into account." comment_scope_start="988" comment_scope_end="994">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="inactive" id="2001425697590"/>
			<DeclRefExpr type="int" spelling="active" id="2000316952471"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003882098303"/>
			<DeclRefExpr type="int" spelling="active" id="2000193725487"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2000470740234"/>
			<UnexposedExpr type="int" spelling="active" id="2000848651779"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004101765209"/>
			<UnexposedExpr type="int" spelling="active" id="2001944075184"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="excluding write-only transforms" comment_scope_start="995" comment_scope_end="995">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004063628398"/>
			<DeclRefExpr type="int" spelling="inactive" id="2000698440439"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2003437963462"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000135775682"/>
			<UnexposedExpr type="int" spelling="inactive" id="2003453266561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Compare the png_info from read_ip with original_info" comment_scope_start="1002" comment_scope_end="1016">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2000874214627"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001662620016"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002975570327"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2000680052644"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002084574646"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001133390816"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002294916293"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2003532719073"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2003988865196"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2003059760980"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000186110042"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000424276718"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2002035834624"/>
			<VarDecl type="size_t" spelling="rowbytes" id="2001312103320"/>
			<VarDecl type="png_uint_32" spelling="width" id="2002337490752"/>
			<VarDecl type="png_uint_32" spelling="height" id="2001047366352"/>
			<VarDecl type="int" spelling="bit_depth" id="2001000154569"/>
			<VarDecl type="int" spelling="color_type" id="2000532298463"/>
			<VarDecl type="int" spelling="interlace_method" id="2001479775876"/>
			<VarDecl type="int" spelling="compression_method" id="2000946906812"/>
			<VarDecl type="int" spelling="filter_method" id="2001219444477"/>
			<VarDecl type="const char *" spelling="e" id="2002635296887"/>
			<CallExpr type="png_uint_32" spelling="png_get_IHDR" id="2002801474528"/>
			<CallExpr type="void" spelling="display_log" id="2001598493666"/>
			<StringLiteral type="char [20]" spelling="&quot;png_get_IHDR failed&quot;" id="2001430558979"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003838129295"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2001108030514"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32 *, png_uint_32 *, int *, int *, int *, int *, int *)" spelling="png_get_IHDR" id="2001468104823"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2003784465847"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2001490898621"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002844597389"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2001942811683"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001456737371"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002497820784"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001127755677"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003100924695"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2003405929252"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2002494117907"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The IHDR should be identical:" comment_scope_start="1017" comment_scope_end="1025">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2001174470614"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002844409570"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000595191938"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001203125857"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003592005256"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001327151402"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2001518143372"/>
			<DeclRefExpr type="const char *" spelling="e" id="2002560394762"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2002945034082"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002017889175"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003659073572"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002491983920"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2002341544275"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002240254482"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2004012264172"/>
			<DeclRefExpr type="const char *" spelling="e" id="2001275280780"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2003926068230"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002752880995"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002596385291"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000827952064"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2000874845041"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002909499407"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001886115085"/>
			<DeclRefExpr type="const char *" spelling="e" id="2000145593901"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002285404641"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002716743893"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001670656564"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003847570088"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2000967954174"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001234783628"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002337587303"/>
			<DeclRefExpr type="const char *" spelling="e" id="2003269210688"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2000249913006"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001693620446"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003969677643"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000309940804"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2002690602300"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001762986107"/>
			<DeclRefExpr type="int" spelling="interlace_method" id="2003582270413"/>
			<DeclRefExpr type="const char *" spelling="e" id="2000206763596"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2000657402689"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003838512625"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003443381683"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002942628538"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2001997159778"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000239928546"/>
			<DeclRefExpr type="int" spelling="compression_method" id="2001227173968"/>
			<DeclRefExpr type="const char *" spelling="e" id="2003540991627"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2003453782114"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002878714849"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002911405536"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003368857301"/>
			<DeclRefExpr type="int" spelling="APP_WARNING" id="2003123108658"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001041316359"/>
			<DeclRefExpr type="int" spelling="filter_method" id="2003599345081"/>
			<DeclRefExpr type="const char *" spelling="e" id="2000919141363"/>
			<CallExpr type="void" spelling="display_log" id="2002503732725"/>
			<CallExpr type="void" spelling="display_log" id="2002880428835"/>
			<CallExpr type="void" spelling="display_log" id="2000783251580"/>
			<CallExpr type="void" spelling="display_log" id="2004031389573"/>
			<CallExpr type="void" spelling="display_log" id="2003205227801"/>
			<CallExpr type="void" spelling="display_log" id="2002416100673"/>
			<CallExpr type="void" spelling="display_log" id="2000707914969"/>
			<StringLiteral type="char [31]" spelling="&quot;IHDR width(%lu) changed to %lu&quot;" id="2001049554659"/>
			<StringLiteral type="char [6]" spelling="&quot;width&quot;" id="2002096168583"/>
			<StringLiteral type="char [32]" spelling="&quot;IHDR height(%lu) changed to %lu&quot;" id="2000590924359"/>
			<StringLiteral type="char [7]" spelling="&quot;height&quot;" id="2003055769768"/>
			<StringLiteral type="char [35]" spelling="&quot;IHDR bit_depth(%lu) changed to %lu&quot;" id="2002122587129"/>
			<StringLiteral type="char [10]" spelling="&quot;bit_depth&quot;" id="2001369844694"/>
			<StringLiteral type="char [36]" spelling="&quot;IHDR color_type(%lu) changed to %lu&quot;" id="2000652301275"/>
			<StringLiteral type="char [11]" spelling="&quot;color_type&quot;" id="2000264957766"/>
			<StringLiteral type="char [42]" spelling="&quot;IHDR interlace_method(%lu) changed to %lu&quot;" id="2003265786605"/>
			<StringLiteral type="char [17]" spelling="&quot;interlace_method&quot;" id="2002720498204"/>
			<StringLiteral type="char [44]" spelling="&quot;IHDR compression_method(%lu) changed to %lu&quot;" id="2000214742168"/>
			<StringLiteral type="char [19]" spelling="&quot;compression_method&quot;" id="2002039033218"/>
			<StringLiteral type="char [39]" spelling="&quot;IHDR filter_method(%lu) changed to %lu&quot;" id="2001810244657"/>
			<StringLiteral type="char [14]" spelling="&quot;filter_method&quot;" id="2001722067961"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2003269019482"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2000829045208"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2001824333729"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2004047470009"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2003443848441"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2001652259743"/>
			<MemberRefExpr type="int" spelling="color_type" id="2003257178120"/>
			<MemberRefExpr type="int" spelling="color_type" id="2004229490274"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2001007600709"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2003453783887"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2003428030397"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2001789752522"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2001657477452"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2001790890860"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2000669270302"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2000163142870"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000395402462"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002281426730"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000805980046"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2004081183179"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2004277520981"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000183517399"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001834960906"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2000690669954"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2001747303817"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000785653024"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002332334925"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000397379348"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2001550406588"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2001641554298"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003923117802"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2003516541705"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001927576859"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000327648274"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002765876379"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000829687487"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002516502379"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2002134459876"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000145774039"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002479422651"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001960849594"/>
			<UnexposedExpr type="int" spelling="color_type" id="2002191678121"/>
			<UnexposedExpr type="int" spelling="color_type" id="2001360284139"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001615688351"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002184357162"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002712523407"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2003388639955"/>
			<UnexposedExpr type="int" spelling="color_type" id="2002904046286"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001562668419"/>
			<UnexposedExpr type="int" spelling="color_type" id="2004135284539"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2001083076833"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2000835052633"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000733581966"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000756959457"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002825213874"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2001049505900"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2001800309611"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000429651623"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2000468752202"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2000664612770"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2003734275017"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002091180643"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002879882493"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001990688829"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2003830253849"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2000097135111"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001019817150"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2003185129051"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2002950525605"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2002453446979"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000106878481"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002817977823"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001784038088"/>
			<UnexposedExpr type="error_level" spelling="APP_WARNING" id="2004240298815"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2002248662988"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004266037411"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2000497697141"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="'e' remains set to the name of the last thing changed:" comment_scope_start="1026" comment_scope_end="1029">
		<SYMBOLS>
			<DeclRefExpr type="const char *" spelling="e" id="2000115175502"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000634313636"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001664051273"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2003732778833"/>
			<DeclRefExpr type="const char *" spelling="e" id="2002975549155"/>
			<CallExpr type="void" spelling="display_log" id="2003326312223"/>
			<StringLiteral type="char [18]" spelling="&quot;IHDR changed (%s)&quot;" id="2001296580327"/>
			<UnexposedExpr type="const char *" spelling="e" id="2000384040004"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003366090187"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000967195195"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002306080135"/>
			<UnexposedExpr type="const char *" spelling="e" id="2003356759844"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="All the chunks from the original PNG should be preserved in the output PNG
    * because the PNG format has not been changed." comment_scope_start="1030" comment_scope_end="1040">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2004210169981"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004029418610"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002629875186"/>
			<DeclRefExpr type="unsigned long" spelling="chunks" id="2003129181971"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002491793577"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002610811882"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003181652152"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2004223440705"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000294295194"/>
			<DeclRefExpr type="unsigned long" spelling="chunks" id="2001436593399"/>
			<VarDecl type="unsigned long" spelling="chunks" id="2001682266235"/>
			<CallExpr type="png_uint_32" spelling="png_get_valid" id="2003686753107"/>
			<CallExpr type="void" spelling="display_log" id="2003783218446"/>
			<StringLiteral type="char [39]" spelling="&quot;PNG chunks changed from 0x%lx to 0x%lx&quot;" id="2002581392013"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2004085812093"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2004013434167"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2001185084278"/>
			<MemberRefExpr type="png_uint_32" spelling="chunks" id="2001294373036"/>
			<UnexposedExpr type="unsigned long" spelling="png_get_valid" id="2002008293675"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp, png_uint_32)" spelling="png_get_valid" id="2000763487453"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2000896121049"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2000235362734"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001551822440"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2002521358179"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2003278969234"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003843284720"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2000523733518"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2002093634210"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2002056702211"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002085007338"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002839108807"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002810205508"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2001443281872"/>
			<UnexposedExpr type="png_uint_32" spelling="chunks" id="2003845061619"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003439641202"/>
			<UnexposedExpr type="unsigned long" spelling="chunks" id="2004253272451"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="rowbytes should be the same" comment_scope_start="1042" comment_scope_end="1044">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2001916471222"/>
			<DeclRefExpr type="size_t (png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2000673257517"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000276524958"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001566954064"/>
			<CallExpr type="size_t" spelling="png_get_rowbytes" id="2001086059452"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003380479877"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003878807403"/>
			<UnexposedExpr type="size_t (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rowbytes" id="2002109522308"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2002239588295"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2002249937507"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003341972919"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2000646323930"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001441911268"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003030678486"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTE: on 64-bit systems this may trash the top bits of rowbytes,
    * which could lead to weird error messages." comment_scope_start="1045" comment_scope_end="1051">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2004219593083"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004200811608"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003668837445"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000026784177"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2002426837644"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000007304362"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2002219152381"/>
			<CallExpr type="void" spelling="display_log" id="2002029239079"/>
			<StringLiteral type="char [37]" spelling="&quot;PNG rowbytes changed from %lu to %lu&quot;" id="2002346966225"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2002779877930"/>
			<MemberRefExpr type="size_t" spelling="original_rowbytes" id="2003798306609"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2002827686630"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2004230751483"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003527285066"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002225069550"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002906317386"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002724770246"/>
			<UnexposedExpr type="size_t" spelling="original_rowbytes" id="2002845191968"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002243475561"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2003983808461"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The rows should be the same too, unless the applied transforms includes
    * the shift transform, in which case low bits may have been lost." comment_scope_start="1052" comment_scope_end="1271">
		<SYMBOLS>
			<DeclRefExpr type="png_bytepp (png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2002163105472"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003308464875"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000453600136"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000639846054"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001425594203"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002754410255"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2002458513042"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003145601423"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2002110120461"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000421441083"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002075848191"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004245295299"/>
			<DeclRefExpr type="int" spelling="applied_transforms" id="2001709814961"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002097098941"/>
			<DeclRefExpr type="int" spelling="color_type" id="2001438787679"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001268132381"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003050176154"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2004204914103"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001020398414"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2002420887616"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003115868484"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001693092352"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001266889499"/>
			<DeclRefExpr type="int (const void *, const void *, unsigned long)" spelling="memcmp" id="2004142811496"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2003404383709"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2001080357548"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000181711162"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2004242290728"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002688621882"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2002346336559"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000493514711"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003693863881"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000953712919"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2000500233596"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001212549284"/>
			<DeclRefExpr type="size_t" spelling="x" id="2001173519823"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000061186993"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2001480671245"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003343633755"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2002081264552"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003469862260"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2003371301089"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003534755913"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003918107210"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000474059075"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002066858079"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000648891910"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2002880712446"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000848162823"/>
			<DeclRefExpr type="size_t" spelling="x" id="2004225500723"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001120986517"/>
			<DeclRefExpr type="size_t" spelling="x" id="2004091279117"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2000484488781"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002489742540"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001124496043"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001118880424"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002621958745"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001653667401"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2002028097862"/>
			<DeclRefExpr type="int" spelling="color_type" id="2003776642265"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001302536570"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003402601239"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002477441672"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000494360848"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002110555963"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002449912264"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001399364862"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003718446444"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001619496860"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000317917265"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000778590489"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001197983201"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000624649159"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000638785784"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003482409702"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002699504015"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003820471626"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001328978159"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000430032209"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003179042173"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002964999269"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001066083262"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002983108243"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001663098726"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000400863456"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001316622161"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003360566415"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2004133151902"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000784171503"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002266233989"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2001015316241"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002216856958"/>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2001173697822"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002152283334"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003334787956"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000070019027"/>
			<DeclRefExpr type="int" spelling="b" id="2003710050972"/>
			<DeclRefExpr type="int" spelling="b" id="2001414654719"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003555609348"/>
			<DeclRefExpr type="int" spelling="b" id="2000285013552"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000035214796"/>
			<DeclRefExpr type="int" spelling="b" id="2000572760557"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000088662496"/>
			<DeclRefExpr type="int" spelling="b" id="2000871795026"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001141687276"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2004284628183"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003306483586"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2001185761387"/>
			<DeclRefExpr type="int" spelling="b" id="2002444616746"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003587196522"/>
			<DeclRefExpr type="int" spelling="b" id="2000403239608"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002370941628"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002323866188"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002132211844"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001207801801"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000104226105"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001905093452"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2003257636369"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001571723025"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002185096108"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002308064712"/>
			<DeclRefExpr type="int" spelling="b" id="2002363946280"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000080402659"/>
			<DeclRefExpr type="int" spelling="b" id="2003475093471"/>
			<DeclRefExpr type="int" spelling="b" id="2003155168852"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002679807977"/>
			<DeclRefExpr type="int" spelling="b" id="2001913105651"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000757087164"/>
			<DeclRefExpr type="int" spelling="b" id="2002641727269"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2001711282194"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001623648913"/>
			<DeclRefExpr type="int" spelling="b" id="2004122955341"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2001212822098"/>
			<DeclRefExpr type="int" spelling="b" id="2003738085587"/>
			<DeclRefExpr type="int" spelling="b" id="2001527092143"/>
			<DeclRefExpr type="int" spelling="bpp" id="2004072876228"/>
			<DeclRefExpr type="int" spelling="b" id="2002159841405"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000152057032"/>
			<DeclRefExpr type="int" spelling="b" id="2003493867893"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002645173915"/>
			<DeclRefExpr type="int" spelling="b" id="2000624797238"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003054428011"/>
			<DeclRefExpr type="int" spelling="b" id="2001706978944"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002154513636"/>
			<DeclRefExpr type="int" spelling="b" id="2000469488555"/>
			<DeclRefExpr type="int" spelling="b" id="2001495700830"/>
			<DeclRefExpr type="int" spelling="b" id="2001701176312"/>
			<DeclRefExpr type="int" spelling="b" id="2004111106029"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002400393064"/>
			<DeclRefExpr type="int" spelling="b" id="2002791610432"/>
			<DeclRefExpr type="int" spelling="b" id="2001177978963"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000385426329"/>
			<DeclRefExpr type="int" spelling="b" id="2004122290753"/>
			<DeclRefExpr type="int" spelling="b" id="2000393804898"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001056581532"/>
			<DeclRefExpr type="int" spelling="b" id="2004072268484"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001231704190"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001900431959"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004114225048"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001693150659"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002516836833"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003711107339"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000744138744"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002484798554"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003241943821"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000601503329"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003912972106"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001367546406"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000377840991"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001658769070"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000362780746"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003701577609"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000822640300"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003371825084"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2001263702612"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2002311206829"/>
			<DeclRefExpr type="png_bytepp" spelling="rows" id="2001390879360"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2001736566880"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001800270093"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2000879781045"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2002997401780"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2004136381482"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2002070182643"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003625658543"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2004286911678"/>
			<DeclRefExpr type="int" spelling="b" id="2000141321565"/>
			<DeclRefExpr type="int" spelling="b" id="2003107889583"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000641103875"/>
			<DeclRefExpr type="int" spelling="b" id="2003017851425"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2000838949958"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002540163239"/>
			<DeclRefExpr type="int" spelling="b" id="2001945235700"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2001323387774"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002676374135"/>
			<DeclRefExpr type="int" spelling="b" id="2003860437341"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003910613938"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000506484273"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001381833815"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2000965488648"/>
			<DeclRefExpr type="int" spelling="b" id="2004094131430"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003768862545"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2003871792289"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2003850221111"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002413444602"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2000694968720"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002305632987"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000075386352"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2004196180123"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002602281201"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001709367557"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2001157076109"/>
			<DeclRefExpr type="unsigned long" spelling="x" id="2001509775971"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2003363790292"/>
			<VarDecl type="png_bytepp" spelling="rows" id="2000627054262"/>
			<VarDecl type="unsigned int" spelling="mask" id="2002783731218"/>
			<VarDecl type="unsigned long" spelling="y" id="2001551413666"/>
			<VarDecl type="png_bytep" spelling="row" id="2002543104770"/>
			<VarDecl type="png_bytep" spelling="orig" id="2004171661406"/>
			<VarDecl type="size_t" spelling="x" id="2000079933026"/>
			<VarDecl type="unsigned long" spelling="y" id="2001689740742"/>
			<VarDecl type="int" spelling="bpp" id="2003435432139"/>
			<VarDecl type="png_byte [8]" spelling="sig_bits" id="2002510643113"/>
			<VarDecl type="png_color_8p" spelling="sBIT" id="2001826044577"/>
			<VarDecl type="int" spelling="b" id="2000088355346"/>
			<VarDecl type="int" spelling="b" id="2000796447786"/>
			<VarDecl type="unsigned int" spelling="sig" id="2003078553710"/>
			<VarDecl type="png_bytep" spelling="row" id="2002388861963"/>
			<VarDecl type="png_bytep" spelling="orig" id="2000961799499"/>
			<VarDecl type="unsigned long" spelling="x" id="2001220257253"/>
			<VarDecl type="int" spelling="b" id="2004126190900"/>
			<CallExpr type="png_bytepp" spelling="png_get_rows" id="2004082892814"/>
			<CallExpr type="void" spelling="display_log" id="2001825899101"/>
			<CallExpr type="int" spelling="memcmp" id="2001727636644"/>
			<CallExpr type="void" spelling="display_log" id="2002599709406"/>
			<CallExpr type="png_uint_32" spelling="png_get_sBIT" id="2000325651812"/>
			<CallExpr type="void" spelling="display_log" id="2003412280571"/>
			<CallExpr type="void" spelling="display_log" id="2002963516408"/>
			<CallExpr type="void *" spelling="memset" id="2001547695866"/>
			<CallExpr type="void" spelling="display_log" id="2004214532469"/>
			<CallExpr type="void" spelling="display_log" id="2000646745340"/>
			<CallExpr type="void" spelling="display_log" id="2002921322177"/>
			<CallExpr type="void" spelling="display_log" id="2002816141165"/>
			<CallExpr type="void" spelling="display_log" id="2001340823459"/>
			<CallExpr type="void" spelling="display_log" id="2001473113673"/>
			<StringLiteral type="char [27]" spelling="&quot;png_get_rows returned NULL&quot;" id="2000187154157"/>
			<StringLiteral type="char [39]" spelling="&quot;byte(%lu,%lu) changed 0x%.2x -&gt; 0x%.2x&quot;" id="2001152207711"/>
			<StringLiteral type="char [43]" spelling="&quot;active shift transform but no sBIT in file&quot;" id="2003309163228"/>
			<StringLiteral type="char [23]" spelling="&quot;invalid colour type %d&quot;" id="2001595846873"/>
			<StringLiteral type="char [57]" spelling="&quot;invalid sBIT[%u]  value %d returned for PNG bit depth %d&quot;" id="2003095850603"/>
			<StringLiteral type="char [32]" spelling="&quot;invalid bpp %u for bit_depth %u&quot;" id="2003017261213"/>
			<StringLiteral type="char [21]" spelling="&quot;invalid bit depth %d&quot;" id="2003416242688"/>
			<StringLiteral type="char [30]" spelling="&quot;mask calculation error %u, %u&quot;" id="2001648744111"/>
			<StringLiteral type="char [53]" spelling="&quot;significant bits at (%lu[%u],%lu) changed %.2x-&gt;%.2x&quot;" id="2000478077260"/>
			<StringLiteral type="char [43]" spelling="&quot;significant bits at (%lu[end],%lu) changed&quot;" id="2002732782379"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2003080273748"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000519385035"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2000650978019"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2001671918686"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2001667910077"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000111331540"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2003796275735"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2003548070182"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2003455228237"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2002156467007"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2002175798574"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2004085558469"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2003016416136"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2000782105116"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2001838167350"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2000434318989"/>
			<MemberRefExpr type="png_bytepp" spelling="original_rows" id="2001966150641"/>
			<UnexposedExpr type="png_bytepp (*)(png_const_structrp, png_const_inforp)" spelling="png_get_rows" id="2002312105790"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2000869095254"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2000729432442"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001638296327"/>
			<UnexposedExpr type="const png_info *" spelling="read_ip" id="2001939968910"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2001337242187"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003181159191"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000886993858"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2001510067240"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001611588508"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001700997071"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2002969299085"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001562458439"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004218842723"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2003011936388"/>
			<UnexposedExpr type="int" spelling="applied_transforms" id="2003963481547"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2003565127209"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003593599888"/>
			<UnexposedExpr type="int" spelling="color_type" id="2002500432991"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2004157434125"/>
			<UnexposedExpr type="unsigned long" spelling="height" id="2002543416801"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2000749944593"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2000447166031"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2003143352098"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2001088859892"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002859625667"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2001138910402"/>
			<UnexposedExpr type="int (*)(const void *, const void *, unsigned long)" spelling="memcmp" id="2002288845419"/>
			<UnexposedExpr type="const void *" spelling="row" id="2003242508092"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2002162913962"/>
			<UnexposedExpr type="const void *" spelling="orig" id="2004265069909"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2004291276770"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2002807378297"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000736851447"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000194960765"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2001285408925"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2002043148072"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002026482891"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2000173873473"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2003551097162"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2001826863380"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002247675844"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000874435913"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2003069142608"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001993950757"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2003324793583"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001335313197"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000047105189"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004106709506"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2001995206339"/>
			<UnexposedExpr type="size_t" spelling="x" id="2000942889076"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2002793860314"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001975143662"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002327033121"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2002345659929"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001929669215"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2001720055438"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2003123227749"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2004096068246"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002062459654"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002977103756"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002489910399"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000454910577"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002437785914"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000767803841"/>
			<UnexposedExpr type="int" spelling="color_type" id="2001573028930"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001656224951"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2000726099300"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001045521366"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000786678094"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003559895525"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2002433445951"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003094191133"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001240010888"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2000678911504"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000210905636"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000890738927"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000059946222"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2001834971458"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003608155250"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001047852255"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2001755840973"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001241199248"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003704917008"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2001999005986"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002433500741"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001227517631"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001667364992"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2000236825899"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000116769644"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003745444475"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2004253054681"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000400841062"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003358689925"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2000589428581"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001464675165"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000024570902"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2003195710553"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002831088121"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002808958680"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2004253564354"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001922591013"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2001780582803"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000807707049"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2003229749758"/>
			<UnexposedExpr type="void *" spelling="sig_bits" id="2000637991700"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003965831546"/>
			<UnexposedExpr type="int" spelling="b" id="2002141523040"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001501112381"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000507394851"/>
			<UnexposedExpr type="int" spelling="b" id="2003266425404"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001073338600"/>
			<UnexposedExpr type="int" spelling="b" id="2003327048647"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003552188620"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002419379757"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000304046928"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2001537393118"/>
			<UnexposedExpr type="int" spelling="b" id="2000534340889"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002236766898"/>
			<UnexposedExpr type="int" spelling="b" id="2002961291912"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001490403174"/>
			<UnexposedExpr type="int" spelling="bpp" id="2002898934362"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001091254955"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000881557281"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002998083751"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000448234045"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2002984264572"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000783661002"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002776276779"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000399678049"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000076024196"/>
			<UnexposedExpr type="int" spelling="b" id="2002848603102"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003799454432"/>
			<UnexposedExpr type="int" spelling="b" id="2000543400282"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000781566754"/>
			<UnexposedExpr type="int" spelling="b" id="2000806499390"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2000144260288"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002842837193"/>
			<UnexposedExpr type="int" spelling="b" id="2000483458459"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2000813185247"/>
			<UnexposedExpr type="int" spelling="b" id="2000006192858"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001239194292"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002311681249"/>
			<UnexposedExpr type="int" spelling="b" id="2003532884889"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000504052229"/>
			<UnexposedExpr type="int" spelling="b" id="2003208320231"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001719669677"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001693160192"/>
			<UnexposedExpr type="int" spelling="b" id="2003802657769"/>
			<UnexposedExpr type="int" spelling="b" id="2003530135294"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000439064367"/>
			<UnexposedExpr type="int" spelling="b" id="2002056860393"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000818221379"/>
			<UnexposedExpr type="int" spelling="b" id="2003837177361"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001880633937"/>
			<UnexposedExpr type="int" spelling="b" id="2003488945509"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003590144697"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001075622438"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2000813121190"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002069644864"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000942449914"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2001367241807"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001289459707"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001538858922"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002796858279"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000344164063"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001618889007"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000470984736"/>
			<UnexposedExpr type="int" spelling="bpp" id="2003026827072"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002266069536"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2000470271613"/>
			<UnexposedExpr type="unsigned long" spelling="height" id="2004062368481"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2004071483107"/>
			<UnexposedExpr type="png_bytepp" spelling="rows" id="2002028413331"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2003536898399"/>
			<UnexposedExpr type="png_bytepp" spelling="original_rows" id="2000681993682"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000637462799"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2003219144063"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2000863118270"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001655127907"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2001658326602"/>
			<UnexposedExpr type="int" spelling="b" id="2001943444346"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001938079255"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000127319679"/>
			<UnexposedExpr type="int" spelling="b" id="2003171002264"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003504669350"/>
			<UnexposedExpr type="int" spelling="b" id="2000158633146"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2001225696849"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003629044442"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2001324272632"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2000227237651"/>
			<UnexposedExpr type="int" spelling="b" id="2000261805335"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2002007546445"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2000302026930"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2001105152506"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000993032415"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2002450459236"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2000211888247"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001036898141"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2003297244471"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003760434809"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000537589340"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2000633350813"/>
			<UnexposedExpr type="unsigned long" spelling="x" id="2002266748314"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2001291561053"/>
			<TypeRef type="png_bytepp" spelling="png_bytepp" id="2002443218734"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2000579168571"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2000579168571"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_color_8p" spelling="png_color_8p" id="2002006165941"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2000579168571"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2000579168571"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="includes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="mask (if not zero) for the final byte" comment_scope_start="1057" comment_scope_end="1057">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="mask" id="2002783731218"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Need the stray bits at the end, this depends only on the low bits
          * of the image width; overflow does not matter.  If the width is an
          * exact multiple of 8 bits this gives a mask of 0, not 0xff." comment_scope_start="1061" comment_scope_end="1066">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2001425594203"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002754410255"/>
			<DeclRefExpr type="png_uint_32" spelling="width" id="2002458513042"/>
			<UnexposedExpr type="unsigned int" spelling="bit_depth" id="2001510067240"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001611588508"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001700997071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Find the first error" comment_scope_start="1090" comment_scope_end="1097">
		<SYMBOLS>
			<DeclRefExpr type="size_t" spelling="x" id="2001173519823"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000061186993"/>
			<DeclRefExpr type="size_t" spelling="rowbytes" id="2001480671245"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003343633755"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2002081264552"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003469862260"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2003371301089"/>
			<DeclRefExpr type="size_t" spelling="x" id="2003534755913"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003918107210"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000474059075"/>
			<DeclRefExpr type="int" spelling="APP_FAIL" id="2002066858079"/>
			<DeclRefExpr type="size_t" spelling="x" id="2000648891910"/>
			<DeclRefExpr type="unsigned long" spelling="y" id="2002880712446"/>
			<DeclRefExpr type="png_bytep" spelling="orig" id="2000848162823"/>
			<DeclRefExpr type="size_t" spelling="x" id="2004225500723"/>
			<DeclRefExpr type="png_bytep" spelling="row" id="2001120986517"/>
			<DeclRefExpr type="size_t" spelling="x" id="2004091279117"/>
			<CallExpr type="void" spelling="display_log" id="2002599709406"/>
			<StringLiteral type="char [39]" spelling="&quot;byte(%lu,%lu) changed 0x%.2x -&gt; 0x%.2x&quot;" id="2001152207711"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002247675844"/>
			<UnexposedExpr type="size_t" spelling="rowbytes" id="2000874435913"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2003069142608"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001993950757"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2003324793583"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001335313197"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000047105189"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004106709506"/>
			<UnexposedExpr type="error_level" spelling="APP_FAIL" id="2001995206339"/>
			<UnexposedExpr type="size_t" spelling="x" id="2000942889076"/>
			<UnexposedExpr type="unsigned long" spelling="y" id="2002793860314"/>
			<UnexposedExpr type="png_bytep" spelling="orig" id="2001975143662"/>
			<UnexposedExpr type="size_t" spelling="x" id="2002327033121"/>
			<UnexposedExpr type="png_bytep" spelling="row" id="2002345659929"/>
			<UnexposedExpr type="size_t" spelling="x" id="2001929669215"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="don't keep reporting failed rows on 'continue'" comment_scope_start="1098" comment_scope_end="1098"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="bits-per-pixel then bytes-per-pixel" comment_scope_start="1107" comment_scope_end="1107">
		<SYMBOLS>
			<VarDecl type="int" spelling="bpp" id="2003435432139"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="components are up to 8 bytes in size" comment_scope_start="1108" comment_scope_end="1146">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2000484488781"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002489742540"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001124496043"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001118880424"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002621958745"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001653667401"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2002028097862"/>
			<DeclRefExpr type="int" spelling="color_type" id="2003776642265"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001302536570"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003402601239"/>
			<DeclRefExpr type="int" spelling="bpp" id="2002477441672"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000494360848"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002110555963"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002449912264"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001399364862"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003718446444"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001619496860"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2000317917265"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000778590489"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001197983201"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000624649159"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2000638785784"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003482409702"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2002699504015"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003820471626"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001328978159"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000430032209"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2003179042173"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002964999269"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001066083262"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002983108243"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001663098726"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000400863456"/>
			<DeclRefExpr type="png_color_8p" spelling="sBIT" id="2001316622161"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003360566415"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2004133151902"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000784171503"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002266233989"/>
			<DeclRefExpr type="int" spelling="LIBPNG_ERROR" id="2001015316241"/>
			<DeclRefExpr type="int" spelling="color_type" id="2002216856958"/>
			<VarDecl type="png_byte [8]" spelling="sig_bits" id="2002510643113"/>
			<VarDecl type="png_color_8p" spelling="sBIT" id="2001826044577"/>
			<CallExpr type="png_uint_32" spelling="png_get_sBIT" id="2000325651812"/>
			<CallExpr type="void" spelling="display_log" id="2003412280571"/>
			<CallExpr type="void" spelling="display_log" id="2002963516408"/>
			<StringLiteral type="char [43]" spelling="&quot;active shift transform but no sBIT in file&quot;" id="2003309163228"/>
			<StringLiteral type="char [23]" spelling="&quot;invalid colour type %d&quot;" id="2001595846873"/>
			<MemberRefExpr type="png_structp" spelling="read_pp" id="2001667910077"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2000111331540"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2003796275735"/>
			<MemberRefExpr type="png_byte" spelling="gray" id="2003548070182"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2003455228237"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2002156467007"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2002175798574"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2004085558469"/>
			<MemberRefExpr type="png_byte" spelling="red" id="2003016416136"/>
			<MemberRefExpr type="png_byte" spelling="green" id="2000782105116"/>
			<MemberRefExpr type="png_byte" spelling="blue" id="2001838167350"/>
			<MemberRefExpr type="png_byte" spelling="alpha" id="2000434318989"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_inforp, png_color_8p *)" spelling="png_get_sBIT" id="2001720055438"/>
			<UnexposedExpr type="const png_struct *" spelling="read_pp" id="2003123227749"/>
			<UnexposedExpr type="png_structp" spelling="read_pp" id="2004096068246"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002062459654"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002977103756"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002489910399"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000454910577"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002437785914"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000767803841"/>
			<UnexposedExpr type="int" spelling="color_type" id="2001573028930"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001656224951"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2000726099300"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001045521366"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000786678094"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003559895525"/>
			<UnexposedExpr type="png_byte" spelling="gray" id="2002433445951"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003094191133"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001240010888"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2000678911504"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000210905636"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2000890738927"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000059946222"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2001834971458"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2003608155250"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001047852255"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2001755840973"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001241199248"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003704917008"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2001999005986"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002433500741"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2001227517631"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001667364992"/>
			<UnexposedExpr type="png_byte" spelling="red" id="2000236825899"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000116769644"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003745444475"/>
			<UnexposedExpr type="png_byte" spelling="green" id="2004253054681"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2000400841062"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003358689925"/>
			<UnexposedExpr type="png_byte" spelling="blue" id="2000589428581"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2001464675165"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000024570902"/>
			<UnexposedExpr type="png_byte" spelling="alpha" id="2003195710553"/>
			<UnexposedExpr type="png_color_8p" spelling="sBIT" id="2002831088121"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002808958680"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2004253564354"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001922591013"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_ERROR" id="2001780582803"/>
			<UnexposedExpr type="int" spelling="color_type" id="2000807707049"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
			<TypeRef type="png_color_8p" spelling="png_color_8p" id="2002006165941"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="NOTREACHED" comment_scope_start="1147" comment_scope_end="1151">
		<SYMBOLS>
			<DeclRefExpr type="void *(void *, int, unsigned long)" spelling="memset" id="2001173697822"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002152283334"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003334787956"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000070019027"/>
			<CallExpr type="void *" spelling="memset" id="2001547695866"/>
			<UnexposedExpr type="void *(*)(void *, int, unsigned long)" spelling="memset" id="2003229749758"/>
			<UnexposedExpr type="void *" spelling="sig_bits" id="2000637991700"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2003965831546"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="libpng should catch this; if not there is a security issue
                * because an app (like this one) may overflow an array. In fact
                * libpng doesn't catch this at present." comment_scope_start="1158" comment_scope_end="1161"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!palette" comment_scope_start="1162" comment_scope_end="1162">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000035214796"/>
			<DeclRefExpr type="int" spelling="b" id="2000572760557"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000088662496"/>
			<DeclRefExpr type="int" spelling="b" id="2000871795026"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001141687276"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000507394851"/>
			<UnexposedExpr type="int" spelling="b" id="2003266425404"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001073338600"/>
			<UnexposedExpr type="int" spelling="b" id="2003327048647"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003552188620"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="palette"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="sanity check; this is a grayscale PNG; something is wrong in the
             * code above." comment_scope_start="1171" comment_scope_end="1176">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2000104226105"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001905093452"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2003257636369"/>
			<DeclRefExpr type="int" spelling="bpp" id="2001571723025"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2002185096108"/>
			<CallExpr type="void" spelling="display_log" id="2000646745340"/>
			<StringLiteral type="char [32]" spelling="&quot;invalid bpp %u for bit_depth %u&quot;" id="2003017261213"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002998083751"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000448234045"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2002984264572"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000783661002"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002776276779"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="grayscale"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Two bytes per component, big-endian" comment_scope_start="1182" comment_scope_end="1182"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="big-endian" comment_scope_start="1188" comment_scope_end="1188">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001623648913"/>
			<DeclRefExpr type="int" spelling="b" id="2004122955341"/>
			<DeclRefExpr type="unsigned int" spelling="sig" id="2001212822098"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2002842837193"/>
			<UnexposedExpr type="int" spelling="b" id="2000483458459"/>
			<UnexposedExpr type="unsigned int" spelling="sig" id="2000813185247"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="One byte per component" comment_scope_start="1192" comment_scope_end="1192"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="allowed, but dumb" comment_scope_start="1197" comment_scope_end="1197"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1" comment_scope_start="1198" comment_scope_end="1201">
		<SYMBOLS>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003054428011"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001719669677"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Replicate 4 times" comment_scope_start="1202" comment_scope_end="1202"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1 or 2" comment_scope_start="1203" comment_scope_end="1209">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="b" id="2001706978944"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002154513636"/>
			<DeclRefExpr type="int" spelling="b" id="2000469488555"/>
			<DeclRefExpr type="int" spelling="b" id="2001495700830"/>
			<DeclRefExpr type="int" spelling="b" id="2001701176312"/>
			<DeclRefExpr type="int" spelling="b" id="2004111106029"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2002400393064"/>
			<DeclRefExpr type="int" spelling="b" id="2002791610432"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001693160192"/>
			<UnexposedExpr type="int" spelling="b" id="2003802657769"/>
			<UnexposedExpr type="int" spelling="b" id="2003530135294"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000439064367"/>
			<UnexposedExpr type="int" spelling="b" id="2002056860393"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Replicate twice" comment_scope_start="1210" comment_scope_end="1210"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Value is 1, 2, 3 or 4" comment_scope_start="1211" comment_scope_end="1220">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="b" id="2001177978963"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2000385426329"/>
			<DeclRefExpr type="int" spelling="b" id="2004122290753"/>
			<DeclRefExpr type="int" spelling="b" id="2000393804898"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2001056581532"/>
			<DeclRefExpr type="int" spelling="b" id="2004072268484"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001231704190"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001900431959"/>
			<DeclRefExpr type="int" spelling="LIBPNG_BUG" id="2004114225048"/>
			<DeclRefExpr type="int" spelling="bit_depth" id="2001693150659"/>
			<CallExpr type="void" spelling="display_log" id="2002921322177"/>
			<StringLiteral type="char [21]" spelling="&quot;invalid bit depth %d&quot;" id="2003416242688"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2000818221379"/>
			<UnexposedExpr type="int" spelling="b" id="2003837177361"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001880633937"/>
			<UnexposedExpr type="int" spelling="b" id="2003488945509"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003590144697"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001075622438"/>
			<UnexposedExpr type="error_level" spelling="LIBPNG_BUG" id="2000813121190"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2002069644864"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2003368231722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Convert bpp to bytes; this gives '1' for low-bit depth grayscale,
          * where there are multiple pixels per byte." comment_scope_start="1222" comment_scope_end="1226">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="bpp" id="2002516836833"/>
			<DeclRefExpr type="int" spelling="bpp" id="2003711107339"/>
			<UnexposedExpr type="int" spelling="bpp" id="2000942449914"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="convert" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="depth"/>
			<PROBLEM_DOMAIN word="grayscale"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The mask can be combined with sig_bits[0]" comment_scope_start="1227" comment_scope_end="1235">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2000744138744"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2002484798554"/>
			<DeclRefExpr type="png_byte [8]" spelling="sig_bits" id="2003241943821"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000601503329"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003912972106"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001367546406"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000377840991"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001658769070"/>
			<DeclRefExpr type="int" spelling="bpp" id="2000362780746"/>
			<DeclRefExpr type="unsigned int" spelling="mask" id="2003701577609"/>
			<CallExpr type="void" spelling="display_log" id="2002816141165"/>
			<StringLiteral type="char [30]" spelling="&quot;mask calculation error %u, %u&quot;" id="2001648744111"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2001367241807"/>
			<UnexposedExpr type="png_byte *" spelling="sig_bits" id="2001289459707"/>
			<UnexposedExpr type="int" spelling="bpp" id="2001538858922"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002796858279"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2000344164063"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001618889007"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2000470984736"/>
			<UnexposedExpr type="int" spelling="bpp" id="2003026827072"/>
			<UnexposedExpr type="unsigned int" spelling="mask" id="2002266069536"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="for y" comment_scope_start="1265" comment_scope_end="1265"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!sBIT" comment_scope_start="1267" comment_scope_end="1267"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!sBIT" comment_scope_start="1270" comment_scope_end="1270"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="compare succeeded" comment_scope_start="1273" comment_scope_end="1273"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Generic write function used both from the write callback provided to
    * libpng and from the generic read code." comment_scope_start="1280" comment_scope_end="1320">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002365208112"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2004020390422"/>
			<DeclRefExpr type="size_t" spelling="size" id="2004032997526"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001308848572"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2004112910505"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001626197931"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003540245569"/>
			<DeclRefExpr type="struct buffer_list *(struct buffer_list *)" spelling="buffer_extend" id="2002404604643"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003431457619"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001885435370"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003648528100"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001991377390"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2001795284414"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001835563612"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002801110221"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002151143840"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003407538382"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2000157612412"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2002765866537"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002607822433"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2002906072877"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000671902740"/>
			<DeclRefExpr type="size_t" spelling="size" id="2000759196053"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2003880134946"/>
			<DeclRefExpr type="size_t" spelling="size" id="2003342029376"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2003598703059"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002804831593"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001301430198"/>
			<DeclRefExpr type="png_bytep" spelling="data" id="2004032741080"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000556080842"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001743687253"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2000556988511"/>
			<DeclRefExpr type="size_t" spelling="size" id="2002772243499"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2001568951274"/>
			<DeclRefExpr type="png_bytep" spelling="data" id="2003656928844"/>
			<DeclRefExpr type="size_t" spelling="avail" id="2003111686123"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002321880109"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2003296879505"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2000015160589"/>
			<VarDecl type="size_t" spelling="end_count" id="2003187444674"/>
			<VarDecl type="size_t" spelling="avail" id="2001690963871"/>
			<CallExpr type="struct buffer_list *" spelling="buffer_extend" id="2000544222295"/>
			<CallExpr type="void" spelling="display_log" id="2003161142499"/>
			<CallExpr type="void *" spelling="memcpy" id="2004015735417"/>
			<FunctionDecl type="void (struct display *, struct buffer *, png_bytep, size_t)" spelling="buffer_write" id="2004240718438"/>
			<StringLiteral type="char [26]" spelling="&quot;out of memory saving file&quot;" id="2003959717505"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2002167803576"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2004127464996"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2002607829021"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2003612590378"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2002378223320"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2004207711728"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2001733262369"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2000534400054"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2001453582962"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001275310064"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000021835195"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2004178282959"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001926480474"/>
			<UnexposedExpr type="size_t" spelling="size" id="2000604813005"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2001251615878"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003821187166"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2002051724912"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000629512619"/>
			<UnexposedExpr type="struct buffer_list *(*)(struct buffer_list *)" spelling="buffer_extend" id="2002482015627"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2004283153564"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001949989644"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002655160134"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001216987927"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002790964977"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2001817961510"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001580865514"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001384907455"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002641578666"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002885565613"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2002242501450"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2001749767360"/>
			<UnexposedExpr type="size_t" spelling="size" id="2002368178855"/>
			<UnexposedExpr type="size_t" spelling="size" id="2000473816742"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2000141197654"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2004184025869"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001769313114"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2003924444252"/>
			<UnexposedExpr type="const void *" spelling="data" id="2002949052471"/>
			<UnexposedExpr type="png_bytep" spelling="data" id="2001274735449"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2003318375071"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2003951330324"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2001763195905"/>
			<UnexposedExpr type="size_t" spelling="avail" id="2002526314635"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000300899594"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2003334739931"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Write the data into the buffer, adding buffers as required" comment_scope_start="1284" comment_scope_end="1304">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002365208112"/>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2004020390422"/>
			<DeclRefExpr type="size_t" spelling="size" id="2004032997526"/>
			<DeclRefExpr type="size_t" spelling="end_count" id="2001308848572"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2004112910505"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001626197931"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003540245569"/>
			<DeclRefExpr type="struct buffer_list *(struct buffer_list *)" spelling="buffer_extend" id="2002404604643"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003431457619"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001885435370"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2003648528100"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001991377390"/>
			<DeclRefExpr type="int" spelling="APP_ERROR" id="2001795284414"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2001835563612"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2002801110221"/>
			<VarDecl type="struct buffer_list *" spelling="last" id="2000015160589"/>
			<VarDecl type="size_t" spelling="end_count" id="2003187444674"/>
			<VarDecl type="size_t" spelling="avail" id="2001690963871"/>
			<CallExpr type="struct buffer_list *" spelling="buffer_extend" id="2000544222295"/>
			<CallExpr type="void" spelling="display_log" id="2003161142499"/>
			<StringLiteral type="char [26]" spelling="&quot;out of memory saving file&quot;" id="2003959717505"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2002167803576"/>
			<MemberRefExpr type="size_t" spelling="end_count" id="2004127464996"/>
			<MemberRefExpr type="png_byte [1024]" spelling="buffer" id="2002607829021"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2003612590378"/>
			<MemberRefExpr type="struct buffer_list *" spelling="next" id="2002378223320"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001275310064"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2000021835195"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2004178282959"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001926480474"/>
			<UnexposedExpr type="size_t" spelling="size" id="2000604813005"/>
			<UnexposedExpr type="size_t" spelling="end_count" id="2001251615878"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2003821187166"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2002051724912"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2000629512619"/>
			<UnexposedExpr type="struct buffer_list *(*)(struct buffer_list *)" spelling="buffer_extend" id="2002482015627"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2004283153564"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001949989644"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002655160134"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001216987927"/>
			<UnexposedExpr type="error_level" spelling="APP_ERROR" id="2002790964977"/>
			<UnexposedExpr type="struct buffer_list *" spelling="next" id="2001817961510"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2001580865514"/>
			<TypeRef type="struct buffer_list" spelling="struct buffer_list" id="2003852214225"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
			<TypeRef type="size_t" spelling="size_t" id="2003828691996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="avoid the need to rewrite every time" comment_scope_start="1305" comment_scope_end="1305">
		<SYMBOLS>
			<DeclRefExpr type="struct buffer *" spelling="buffer" id="2002151143840"/>
			<DeclRefExpr type="struct buffer_list *" spelling="last" id="2003407538382"/>
			<MemberRefExpr type="struct buffer_list *" spelling="last" id="2004207711728"/>
			<UnexposedExpr type="struct buffer *" spelling="buffer" id="2001384907455"/>
			<UnexposedExpr type="struct buffer_list *" spelling="last" id="2002641578666"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="safety" comment_scope_start="1331" comment_scope_end="1331">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_write" id="2000118975701"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000081743525"/>
			<CallExpr type="void" spelling="display_clean_write" id="2002309373088"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_write" id="2001794557214"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000772432466"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="flush" comment_scope_start="1344" comment_scope_end="1344">
		<SYMBOLS>
			<CallExpr type="void" spelling="png_set_write_fn" id="2000855607913"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Remove the user limits, if any" comment_scope_start="1347" comment_scope_end="1350">
		<SYMBOLS>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2003001652432"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003998039685"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2000803855911"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2002060802221"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2003932647573"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2003220932408"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001079819794"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Certain transforms require the png_info to be zapped to allow the
    * transform to work correctly." comment_scope_start="1351" comment_scope_end="1367">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="transforms" id="2001082621889"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000394653767"/>
			<DeclRefExpr type="int" spelling="transforms" id="2000981058358"/>
			<DeclRefExpr type="int" spelling="ct" id="2003843385271"/>
			<DeclRefExpr type="void (png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2002353767041"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003882896610"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2000189666852"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004166793637"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002197497455"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004277043575"/>
			<DeclRefExpr type="int" spelling="ct" id="2000313379994"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003018668111"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003221238142"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000707473979"/>
			<VarDecl type="int" spelling="ct" id="2003494720450"/>
			<CallExpr type="void" spelling="png_set_IHDR" id="2004181063879"/>
			<MemberRefExpr type="int" spelling="color_type" id="2002846933430"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2000924457241"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2003984882170"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2001322562171"/>
			<MemberRefExpr type="int" spelling="bit_depth" id="2001164047210"/>
			<MemberRefExpr type="int" spelling="interlace_method" id="2003486980583"/>
			<MemberRefExpr type="int" spelling="compression_method" id="2001734966439"/>
			<MemberRefExpr type="int" spelling="filter_method" id="2000329696254"/>
			<UnexposedExpr type="int" spelling="transforms" id="2000067385422"/>
			<UnexposedExpr type="int" spelling="color_type" id="2002135326646"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000140379822"/>
			<UnexposedExpr type="int" spelling="transforms" id="2003237286682"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_inforp, png_uint_32, png_uint_32, int, int, int, int, int)" spelling="png_set_IHDR" id="2000147912063"/>
			<UnexposedExpr type="const png_struct *" spelling="write_pp" id="2002801957139"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2000696236908"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000835303962"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2002028895568"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2001918324630"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002459667829"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2004278754058"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003931902897"/>
			<UnexposedExpr type="int" spelling="bit_depth" id="2003788745394"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000029948064"/>
			<UnexposedExpr type="int" spelling="ct" id="2000476654302"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2000879714404"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002298604880"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2001876795284"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002661155836"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2000680852580"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001620080111"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="params" comment_scope_start="1368" comment_scope_end="1368">
		<SYMBOLS>
			<DeclRefExpr type="void (png_structrp, png_inforp, int, png_voidp)" spelling="png_write_png" id="2003918921196"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000038043850"/>
			<DeclRefExpr type="png_infop" spelling="ip" id="2001749074871"/>
			<DeclRefExpr type="int" spelling="transforms" id="2003912371382"/>
			<CallExpr type="void" spelling="png_write_png" id="2000712128413"/>
			<MemberRefExpr type="png_structp" spelling="write_pp" id="2002492808652"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp, int, png_voidp)" spelling="png_write_png" id="2000841279012"/>
			<UnexposedExpr type="png_structp" spelling="write_pp" id="2000932341817"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004108188185"/>
			<UnexposedExpr type="png_infop" spelling="ip" id="2000848288170"/>
			<UnexposedExpr type="int" spelling="transforms" id="2004029234870"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Clean it on the way out - if control returns to the caller then the
    * written_file contains the required data." comment_scope_start="1370" comment_scope_end="1374">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *)" spelling="display_clean_write" id="2000993473784"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000212241546"/>
			<CallExpr type="void" spelling="display_clean_write" id="2002027684399"/>
			<FunctionDecl type="void (struct display *, png_infop, int)" spelling="write_png" id="2000898074549"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_clean_write" id="2000750745615"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002185407991"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="WRITE_PNG" comment_scope_start="1375" comment_scope_end="1375"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Helper to test for a bad combo and log it if it is skipped" comment_scope_start="1379" comment_scope_end="1411">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000731453811"/>
			<DeclRefExpr type="int (int)" spelling="is_bad_combo" id="2003753904014"/>
			<DeclRefExpr type="int" spelling="tr" id="2003691807787"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001567087124"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001046852401"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003565034013"/>
			<DeclRefExpr type="int" spelling="tr" id="2002801032414"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2003058682729"/>
			<DeclRefExpr type="int" spelling="tr" id="2001823520918"/>
			<DeclRefExpr type="int" spelling="tr" id="2001285724094"/>
			<DeclRefExpr type="int" spelling="next" id="2002881526981"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2003289506124"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2000727310519"/>
			<DeclRefExpr type="int" spelling="next" id="2002429078979"/>
			<DeclRefExpr type="int" spelling="tr" id="2002416600381"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2004075454688"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2000987339797"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2001926454040"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003165672692"/>
			<DeclRefExpr type="int" spelling="INFORMATION" id="2001797529479"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001340121869"/>
			<DeclRefExpr type="int" spelling="tr" id="2003124301899"/>
			<VarDecl type="int" spelling="next" id="2000166625115"/>
			<CallExpr type="int" spelling="is_bad_combo" id="2002759985827"/>
			<CallExpr type="int" spelling="printf" id="2001598813077"/>
			<CallExpr type="int" spelling="first_transform" id="2003722697053"/>
			<CallExpr type="int" spelling="printf" id="2004111787681"/>
			<CallExpr type="const char *" spelling="transform_name" id="2000974230368"/>
			<CallExpr type="int" spelling="putchar" id="2001620427056"/>
			<CallExpr type="int" spelling="putchar" id="2000756335273"/>
			<CallExpr type="void" spelling="display_log" id="2000605520161"/>
			<FunctionDecl type="int (struct display *, int)" spelling="skip_transform" id="2003561378609"/>
			<StringLiteral type="char [21]" spelling="&quot;SKIP: %s transforms &quot;" id="2001515804429"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2000782329504"/>
			<StringLiteral type="char [33]" spelling="&quot;%s: skipped known bad combo 0x%x&quot;" id="2002979912177"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002418498826"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001982558453"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001238258829"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2000365463284"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000967637891"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000727978054"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_bad_combo" id="2000104512884"/>
			<UnexposedExpr type="int" spelling="tr" id="2003930860929"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000130818790"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001395068632"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001750745443"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2004037830279"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002144871665"/>
			<UnexposedExpr type="int" spelling="tr" id="2003070080349"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2001770657957"/>
			<UnexposedExpr type="int" spelling="tr" id="2001804885358"/>
			<UnexposedExpr type="int" spelling="next" id="2003093822452"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001168564763"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2000023247554"/>
			<UnexposedExpr type="int" spelling="next" id="2002403604247"/>
			<UnexposedExpr type="int" spelling="tr" id="2000601322266"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2002874077637"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2001705207463"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2003076655660"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001576421750"/>
			<UnexposedExpr type="error_level" spelling="INFORMATION" id="2000444454049"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002357709833"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003998306625"/>
			<UnexposedExpr type="int" spelling="tr" id="2002247293237"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Log this to stdout if logging is on, otherwise just do an information
       * display_log." comment_scope_start="1383" comment_scope_end="1401">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001567087124"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2001046852401"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003565034013"/>
			<DeclRefExpr type="int" spelling="tr" id="2002801032414"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2003058682729"/>
			<DeclRefExpr type="int" spelling="tr" id="2001823520918"/>
			<DeclRefExpr type="int" spelling="tr" id="2001285724094"/>
			<DeclRefExpr type="int" spelling="next" id="2002881526981"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2003289506124"/>
			<DeclRefExpr type="const char *(int)" spelling="transform_name" id="2000727310519"/>
			<DeclRefExpr type="int" spelling="next" id="2002429078979"/>
			<DeclRefExpr type="int" spelling="tr" id="2002416600381"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2004075454688"/>
			<DeclRefExpr type="int (int)" spelling="putchar" id="2000987339797"/>
			<VarDecl type="int" spelling="next" id="2000166625115"/>
			<CallExpr type="int" spelling="printf" id="2001598813077"/>
			<CallExpr type="int" spelling="first_transform" id="2003722697053"/>
			<CallExpr type="int" spelling="printf" id="2004111787681"/>
			<CallExpr type="const char *" spelling="transform_name" id="2000974230368"/>
			<CallExpr type="int" spelling="putchar" id="2001620427056"/>
			<CallExpr type="int" spelling="putchar" id="2000756335273"/>
			<StringLiteral type="char [21]" spelling="&quot;SKIP: %s transforms &quot;" id="2001515804429"/>
			<StringLiteral type="char [3]" spelling="&quot;%s&quot;" id="2000782329504"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001982558453"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001238258829"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000130818790"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001395068632"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001750745443"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2004037830279"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002144871665"/>
			<UnexposedExpr type="int" spelling="tr" id="2003070080349"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2001770657957"/>
			<UnexposedExpr type="int" spelling="tr" id="2001804885358"/>
			<UnexposedExpr type="int" spelling="next" id="2003093822452"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001168564763"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="transform_name" id="2000023247554"/>
			<UnexposedExpr type="int" spelling="next" id="2002403604247"/>
			<UnexposedExpr type="int" spelling="tr" id="2000601322266"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2002874077637"/>
			<UnexposedExpr type="int (*)(int)" spelling="putchar" id="2001705207463"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="log" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip" comment_scope_start="1407" comment_scope_end="1407"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="don't skip" comment_scope_start="1410" comment_scope_end="1410"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="First cache the file and update the display original file
    * information for the new file." comment_scope_start="1416" comment_scope_end="1423">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003490665641"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001914393790"/>
			<DeclRefExpr type="void (struct display *, const char *)" spelling="display_cache_file" id="2001737373498"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001284104158"/>
			<DeclRefExpr type="const char *" spelling="filename" id="2001198690422"/>
			<DeclRefExpr type="void (struct display *)" spelling="update_display" id="2002718568733"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003919218327"/>
			<CallExpr type="void" spelling="display_cache_file" id="2000581986984"/>
			<CallExpr type="void" spelling="update_display" id="2003465691667"/>
			<StringLiteral type="char [11]" spelling="&quot;cache file&quot;" id="2003097395463"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2002057374642"/>
			<MemberRefExpr type="int" spelling="transforms" id="2000763657181"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002122744799"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003585993246"/>
			<UnexposedExpr type="void (*)(struct display *, const char *)" spelling="display_cache_file" id="2003025567054"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001002297405"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2004274794856"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="update_display" id="2003252392314"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002378415499"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="First test: if there are options that should be ignored for this file
    * verify that they really are ignored." comment_scope_start="1424" comment_scope_end="1435">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000012547867"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2001866183033"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002472110561"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003142317026"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000520763221"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2003355239594"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003452954762"/>
			<CallExpr type="void" spelling="read_png" id="2003431647495"/>
			<CallExpr type="int" spelling="compare_read" id="2001718926662"/>
			<StringLiteral type="char [19]" spelling="&quot;ignored transforms&quot;" id="2002611163983"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2002128218848"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2002985355348"/>
			<MemberRefExpr type="int" spelling="ignored_transforms" id="2000960497344"/>
			<UnexposedExpr type="int" spelling="ignored_transforms" id="2001217612900"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000468266625"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000660553780"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003007934431"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003256428864"/>
			<UnexposedExpr type="int" spelling="ignored_transforms" id="2002935950244"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001507710574"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2003607364466"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000002368253"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="The result should be identical to the original_rows" comment_scope_start="1432" comment_scope_end="1432"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms applied" comment_scope_start="1433" comment_scope_end="1433">
		<SYMBOLS>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2003355239594"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003452954762"/>
			<CallExpr type="int" spelling="compare_read" id="2001718926662"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2003607364466"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000002368253"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="no point testing more" comment_scope_start="1434" comment_scope_end="1434"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Second test: write the original PNG data out to a new file (to test the
    * write side) then read the result back in and make sure that it hasn't
    * changed." comment_scope_start="1438" comment_scope_end="1442">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004263557106"/>
			<StringLiteral type="char [6]" spelling="&quot;write&quot;" id="2003623049331"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2004220618276"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000759554605"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms" comment_scope_start="1443" comment_scope_end="1443">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2002566768459"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000397975624"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004227298102"/>
			<CallExpr type="void" spelling="write_png" id="2000852858331"/>
			<MemberRefExpr type="png_infop" spelling="original_ip" id="2003862203372"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2001118401813"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000021845443"/>
			<UnexposedExpr type="png_infop" spelling="original_ip" id="2002537922403"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003744495403"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms" comment_scope_start="1444" comment_scope_end="1444">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2001717912289"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003638208013"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000283301487"/>
			<CallExpr type="void" spelling="read_png" id="2002794675772"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2003259986874"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2004084431743"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002206850618"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000519510757"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="transforms applied" comment_scope_start="1445" comment_scope_end="1445">
		<SYMBOLS>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2000097507897"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001812283085"/>
			<CallExpr type="int" spelling="compare_read" id="2002053715747"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2003191382624"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003390212758"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Third test: the active options.  Test each in turn, or, with the
    * EXHAUSTIVE option, test all possible combinations." comment_scope_start="1449" comment_scope_end="1562">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002455075757"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000443172269"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000664430937"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001426310740"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2002797181041"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001347607390"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004163411966"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001280279269"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000326198562"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2003287620172"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003591061859"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003456787441"/>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2001861362117"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001250786631"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002125384720"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001532055686"/>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2001235285022"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004085789792"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002359391940"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2001221054412"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000198201037"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000270965840"/>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2001265716824"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001632601066"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001663312029"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002359872686"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2004038798810"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000347617276"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2000056392318"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003611040234"/>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000820406211"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001603261653"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000787535745"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003432116670"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000275882359"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000608982843"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003866230129"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002386872400"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001341834445"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001463576185"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000568150816"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2000047894609"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="skip_transform" id="2000057937866"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001971567816"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001499510671"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000006820938"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003976912071"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002566251162"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2003035864528"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2004102515827"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002437486159"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001710833909"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000382849603"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001302771718"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2004092158466"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2004108429184"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2002133063415"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002076226846"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000543250974"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2002626218592"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003090303736"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001940407178"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000376410885"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000933348219"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2003755297155"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2000804007263"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2003155388651"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2003669087383"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2002800573534"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000533528377"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001752479304"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000730542624"/>
			<LabelRef type="" spelling="combo" id="2001691719241"/>
			<LabelRef type="" spelling="combo" id="2001691719241"/>
			<VarDecl type="unsigned int" spelling="active" id="2001330082044"/>
			<VarDecl type="int" spelling="exhaustive" id="2000958001288"/>
			<VarDecl type="unsigned int" spelling="current" id="2000425291438"/>
			<VarDecl type="unsigned int" spelling="bad_transforms" id="2000264758414"/>
			<VarDecl type="unsigned int" spelling="bad_combo" id="2001071039421"/>
			<VarDecl type="unsigned int" spelling="bad_combo_list" id="2002692254069"/>
			<VarDecl type="unsigned int" spelling="next" id="2000890302817"/>
			<CallExpr type="int" spelling="first_transform" id="2000501837455"/>
			<CallExpr type="void" spelling="read_png" id="2003006349342"/>
			<CallExpr type="void" spelling="write_png" id="2004040101802"/>
			<CallExpr type="void" spelling="read_png" id="2004168815201"/>
			<CallExpr type="int" spelling="compare_read" id="2001505359045"/>
			<CallExpr type="int" spelling="is_combo" id="2003152969315"/>
			<CallExpr type="int" spelling="skip_transform" id="2000828926343"/>
			<CallExpr type="void" spelling="__assert_fail" id="2002988145777"/>
			<CallExpr type="int" spelling="first_transform" id="2000138570195"/>
			<CallExpr type="int" spelling="printf" id="2003431138724"/>
			<CallExpr type="int" spelling="printf" id="2003776383559"/>
			<LabelStmt type="" spelling="combo" id="2003938413166"/>
			<LabelStmt type="" spelling="combo" id="2003938413166"/>
			<StringLiteral type="char [18]" spelling="&quot;active transforms&quot;" id="2001884649706"/>
			<StringLiteral type="char [22]" spelling="&quot;reversible transforms&quot;" id="2001242828768"/>
			<StringLiteral type="char [33]" spelling="&quot;(next &amp; read_transforms) == next&quot;" id="2001016045401"/>
			<StringLiteral type="char [77]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c&quot;" id="2001979072849"/>
			<StringLiteral type="const char [51]" spelling="&quot;void test_one_file(struct display *, const char *)&quot;" id="2003878315247"/>
			<StringLiteral type="char [46]" spelling="&quot;%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n&quot;" id="2003022980916"/>
			<StringLiteral type="char [27]" spelling="&quot;%s: no %sbad combos found\n&quot;" id="2000601139662"/>
			<StringLiteral type="char [12]" spelling="&quot;additional &quot;" id="2000920790088"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2000557980187"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2001609214684"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001505980537"/>
			<MemberRefExpr type="struct buffer" spelling="original_file" id="2003488339253"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2000864600617"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003167983164"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2003046746001"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003664130282"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003959085560"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2000051388051"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000671907430"/>
			<UnexposedExpr type="unsigned int" spelling="active_transforms" id="2000725938976"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2001466446147"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000514424137"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001572552579"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002829881068"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2002410778217"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2000766545582"/>
			<UnexposedExpr type="int" spelling="active" id="2003801204475"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2002579993569"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2000030820277"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001228818446"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004116133451"/>
			<UnexposedExpr type="int" spelling="current" id="2001880322765"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001427255074"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003897006962"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2002991939305"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001382543306"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001118020258"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2004160637448"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002038863469"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002251520131"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003214710399"/>
			<UnexposedExpr type="int" spelling="current" id="2000450854651"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2000440248341"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2003352295375"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002016348741"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000619778640"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2000999429267"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002858558720"/>
			<UnexposedExpr type="int" spelling="current" id="2002745349287"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001276189386"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2001230613929"/>
			<UnexposedExpr type="int" spelling="current" id="2000808014627"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002278813727"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003548973363"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003647324064"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2000888671813"/>
			<UnexposedExpr type="int" spelling="exhaustive" id="2000158437007"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002297059411"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001358472699"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001564454654"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003146376356"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001694805282"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002553487174"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2002822000687"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000554252621"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2002007457059"/>
			<UnexposedExpr type="unsigned int" spelling="bad_transforms" id="2000661901818"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="skip_transform" id="2000053647936"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002861247486"/>
			<UnexposedExpr type="int" spelling="next" id="2001945981470"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001862863584"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001350459759"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001854959889"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2004080417000"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000589483567"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002791936783"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003684685830"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001863236828"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003124514820"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2000338366011"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2001061190711"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2000117637600"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2001441710167"/>
			<UnexposedExpr type="int" spelling="active" id="2000269938342"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000755965688"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001294632659"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000253056098"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003622460420"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2003257495349"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002275309881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004003679437"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000927067616"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2004069361055"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2000053528891"/>
			<UnexposedExpr type="unsigned int" spelling="rw_transforms" id="2004185782123"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2003969405083"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2004263132868"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002077602322"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002170478278"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000129733816"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003633413206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="third" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Use unsigned int here because the code below to increment through all
       * the possibilities exhaustively has to use a compare and that must be
       * unsigned, because some transforms are negative on a 16-bit system." comment_scope_start="1453" comment_scope_end="1460">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002455075757"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000443172269"/>
			<DeclRefExpr type="int (int)" spelling="first_transform" id="2000664430937"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001426310740"/>
			<VarDecl type="unsigned int" spelling="active" id="2001330082044"/>
			<VarDecl type="int" spelling="exhaustive" id="2000958001288"/>
			<VarDecl type="unsigned int" spelling="current" id="2000425291438"/>
			<VarDecl type="unsigned int" spelling="bad_transforms" id="2000264758414"/>
			<CallExpr type="int" spelling="first_transform" id="2000501837455"/>
			<MemberRefExpr type="int" spelling="active_transforms" id="2001609214684"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001505980537"/>
			<UnexposedExpr type="unsigned int" spelling="active_transforms" id="2000725938976"/>
			<UnexposedExpr type="int" spelling="active_transforms" id="2001466446147"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000514424137"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001572552579"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002829881068"/>
			<UnexposedExpr type="unsigned int" spelling="first_transform" id="2002410778217"/>
			<UnexposedExpr type="int (*)(int)" spelling="first_transform" id="2000766545582"/>
			<UnexposedExpr type="int" spelling="active" id="2003801204475"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2002579993569"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="int" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="increment" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="compare" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="negative" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="bitwise AND of failing transforms" comment_scope_start="1461" comment_scope_end="1461">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="bad_combo" id="2001071039421"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="bitwise OR of failures" comment_scope_start="1462" comment_scope_end="1462">
		<SYMBOLS>
			<VarDecl type="unsigned int" spelling="bad_combo_list" id="2002692254069"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="If this involved any irreversible transformations then if we write
          * it out with just the reversible transformations and read it in again
          * with the same transforms we should get the same thing.  At present
          * this isn't done - it just seems like a waste of time and it would
          * require two sets of read png_struct/png_info.
          *
          * If there were no irreversible transformations then if we write it
          * out and read it back in again (without the reversible transforms)
          * we should get back to the place where we started." comment_scope_start="1468" comment_scope_end="1480">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000326198562"/>
			<DeclRefExpr type="unsigned int" spelling="write_transforms" id="2003287620172"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2003591061859"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003897006962"/>
			<UnexposedExpr type="unsigned int" spelling="write_transforms" id="2002991939305"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001382543306"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="All transforms reversible: write the PNG with the transformations
             * reversed, then read it back in with no transformations.  The
             * result should be the same as the original apart from the loss of
             * low order bits because of the SHIFT/sBIT transform." comment_scope_start="1481" comment_scope_end="1488">
		<SYMBOLS>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003456787441"/>
			<DeclRefExpr type="void (struct display *, png_infop, int)" spelling="write_png" id="2001861362117"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001250786631"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002125384720"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001532055686"/>
			<CallExpr type="void" spelling="write_png" id="2004040101802"/>
			<StringLiteral type="char [22]" spelling="&quot;reversible transforms&quot;" id="2001242828768"/>
			<MemberRefExpr type="const char *" spelling="operation" id="2000864600617"/>
			<MemberRefExpr type="png_infop" spelling="read_ip" id="2003167983164"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001118020258"/>
			<UnexposedExpr type="void (*)(struct display *, png_infop, int)" spelling="write_png" id="2004160637448"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002038863469"/>
			<UnexposedExpr type="png_infop" spelling="read_ip" id="2002251520131"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003214710399"/>
			<UnexposedExpr type="int" spelling="current" id="2000450854651"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2000440248341"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="And if this is read back in, because all the transformations were
             * reversible, the result should be the same." comment_scope_start="1489" comment_scope_end="1492">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2001235285022"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004085789792"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2002359391940"/>
			<CallExpr type="void" spelling="read_png" id="2004168815201"/>
			<MemberRefExpr type="struct buffer" spelling="written_file" id="2003046746001"/>
			<UnexposedExpr type="void (*)(struct display *, struct buffer *, const char *, int)" spelling="read_png" id="2003352295375"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002016348741"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000619778640"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="for the SHIFT/sBIT transform" comment_scope_start="1493" comment_scope_end="1493">
		<SYMBOLS>
			<DeclRefExpr type="int (struct display *, int)" spelling="compare_read" id="2001221054412"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000198201037"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000270965840"/>
			<CallExpr type="int" spelling="compare_read" id="2001505359045"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="compare_read" id="2000999429267"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002858558720"/>
			<UnexposedExpr type="int" spelling="current" id="2002745349287"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2001276189386"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="sbit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="This set of transforms failed.  If a single bit is set - if
                * there is just one transform - don't include this in further
                * 'exhaustive' tests.  Notice that each transform is tested on
                * its own before testing combos in the exhaustive case." comment_scope_start="1495" comment_scope_end="1504">
		<SYMBOLS>
			<DeclRefExpr type="int (int)" spelling="is_combo" id="2001265716824"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001632601066"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001663312029"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002359872686"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2004038798810"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000347617276"/>
			<CallExpr type="int" spelling="is_combo" id="2003152969315"/>
			<UnexposedExpr type="int (*)(int)" spelling="is_combo" id="2001230613929"/>
			<UnexposedExpr type="int" spelling="current" id="2000808014627"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002278813727"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003548973363"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2003647324064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="include" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Now move to the next transform" comment_scope_start="1512" comment_scope_end="1533">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000820406211"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2001603261653"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000787535745"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003432116670"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000275882359"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000608982843"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003866230129"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2002386872400"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001341834445"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001463576185"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000568150816"/>
			<DeclRefExpr type="unsigned int" spelling="bad_transforms" id="2000047894609"/>
			<DeclRefExpr type="int (struct display *, int)" spelling="skip_transform" id="2000057937866"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001971567816"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001499510671"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000006820938"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003976912071"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002566251162"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2003035864528"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2004102515827"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2002437486159"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001710833909"/>
			<DeclRefExpr type="unsigned int" spelling="current" id="2000382849603"/>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001302771718"/>
			<LabelRef type="" spelling="combo" id="2001691719241"/>
			<VarDecl type="unsigned int" spelling="next" id="2000890302817"/>
			<CallExpr type="int" spelling="skip_transform" id="2000828926343"/>
			<CallExpr type="void" spelling="__assert_fail" id="2002988145777"/>
			<StringLiteral type="char [33]" spelling="&quot;(next &amp; read_transforms) == next&quot;" id="2001016045401"/>
			<StringLiteral type="char [77]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c&quot;" id="2001979072849"/>
			<StringLiteral type="const char [51]" spelling="&quot;void test_one_file(struct display *, const char *)&quot;" id="2003878315247"/>
			<UnexposedExpr type="int" spelling="exhaustive" id="2000158437007"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002297059411"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001358472699"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001564454654"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003146376356"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001694805282"/>
			<UnexposedExpr type="unsigned int" spelling="current" id="2002553487174"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2002822000687"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000554252621"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2002007457059"/>
			<UnexposedExpr type="unsigned int" spelling="bad_transforms" id="2000661901818"/>
			<UnexposedExpr type="int (*)(struct display *, int)" spelling="skip_transform" id="2000053647936"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002861247486"/>
			<UnexposedExpr type="int" spelling="next" id="2001945981470"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001862863584"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001350459759"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001854959889"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2004080417000"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2000589483567"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2002791936783"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003684685830"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2001863236828"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2003124514820"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="all combinations" comment_scope_start="1513" comment_scope_end="1513">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="exhaustive" id="2000820406211"/>
			<UnexposedExpr type="int" spelling="exhaustive" id="2000158437007"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Everything tested" comment_scope_start="1519" comment_scope_end="1519">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="next" id="2000787535745"/>
			<DeclRefExpr type="unsigned int" spelling="read_transforms" id="2003432116670"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2001358472699"/>
			<UnexposedExpr type="unsigned int" spelling="read_transforms" id="2001564454654"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip known bad combos if the relevant option is set; skip
                * combos involving known bad single transforms in all cases." comment_scope_start="1523" comment_scope_end="1525"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="skip cases that do nothing" comment_scope_start="1527" comment_scope_end="1527">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="next" id="2001341834445"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2001463576185"/>
			<UnexposedExpr type="unsigned int" spelling="next" id="2002822000687"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000554252621"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="one at a time" comment_scope_start="1535" comment_scope_end="1535"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="bad_combos identifies the combos that occur in all failing cases;
          * bad_combo_list identifies transforms that do not prevent the
          * failure." comment_scope_start="1549" comment_scope_end="1561">
		<SYMBOLS>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2001940407178"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000376410885"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000933348219"/>
			<DeclRefExpr type="unsigned int" spelling="active" id="2003755297155"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo" id="2000804007263"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2003155388651"/>
			<DeclRefExpr type="unsigned int" spelling="rw_transforms" id="2003669087383"/>
			<DeclRefExpr type="unsigned int" spelling="bad_combo_list" id="2002800573534"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000533528377"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001752479304"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2000730542624"/>
			<CallExpr type="int" spelling="printf" id="2003431138724"/>
			<CallExpr type="int" spelling="printf" id="2003776383559"/>
			<LabelStmt type="" spelling="combo" id="2003938413166"/>
			<LabelStmt type="" spelling="combo" id="2003938413166"/>
			<StringLiteral type="char [46]" spelling="&quot;%s[0x%x]: PROBLEM: 0x%x[0x%x] ANTIDOTE: 0x%x\n&quot;" id="2003022980916"/>
			<StringLiteral type="char [27]" spelling="&quot;%s: no %sbad combos found\n&quot;" id="2000601139662"/>
			<StringLiteral type="char [12]" spelling="&quot;additional &quot;" id="2000920790088"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2000557980187"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2003959085560"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2000051388051"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000671907430"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2003622460420"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2003257495349"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002275309881"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2004003679437"/>
			<UnexposedExpr type="unsigned int" spelling="active" id="2000927067616"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo" id="2004069361055"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2000053528891"/>
			<UnexposedExpr type="unsigned int" spelling="rw_transforms" id="2004185782123"/>
			<UnexposedExpr type="unsigned int" spelling="bad_combo_list" id="2003969405083"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2004263132868"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2002077602322"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2002170478278"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000129733816"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003633413206"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Exists solely to isolate the setjmp clobbers" comment_scope_start="1567" comment_scope_end="1581">
		<SYMBOLS>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2000267617419"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2001614167221"/>
			<DeclRefExpr type="int" spelling="ret" id="2000787852736"/>
			<DeclRefExpr type="void (struct display *, const char *)" spelling="test_one_file" id="2003284738806"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2004107658537"/>
			<DeclRefExpr type="const char *" spelling="file" id="2003901560073"/>
			<DeclRefExpr type="int" spelling="ret" id="2000467056636"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2003765360544"/>
			<DeclRefExpr type="void (struct display *, error_level, const char *, ...)" spelling="display_log" id="2002399114751"/>
			<DeclRefExpr type="struct display *" spelling="dp" id="2003886855923"/>
			<DeclRefExpr type="int" spelling="INTERNAL_ERROR" id="2001161595560"/>
			<DeclRefExpr type="int" spelling="ret" id="2003325218152"/>
			<DeclRefExpr type="int" spelling="ret" id="2003237685851"/>
			<VarDecl type="int" spelling="ret" id="2002194006667"/>
			<CallExpr type="int" spelling="_setjmp" id="2002041857235"/>
			<CallExpr type="void" spelling="test_one_file" id="2003721954103"/>
			<CallExpr type="void" spelling="display_log" id="2003152398412"/>
			<FunctionDecl type="int (struct display *, const char *)" spelling="do_test" id="2002017020226"/>
			<StringLiteral type="char [26]" spelling="&quot;unexpected return code %d&quot;" id="2000507822089"/>
			<MemberRefExpr type="jmp_buf" spelling="error_return" id="2000684192299"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2000179319680"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="error_return" id="2000225219029"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2000195346958"/>
			<UnexposedExpr type="int" spelling="ret" id="2002766587834"/>
			<UnexposedExpr type="void (*)(struct display *, const char *)" spelling="test_one_file" id="2001176119851"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2001362613437"/>
			<UnexposedExpr type="const char *" spelling="file" id="2001746217773"/>
			<UnexposedExpr type="int" spelling="ret" id="2001799983671"/>
			<UnexposedExpr type="void (*)(struct display *, error_level, const char *, ...)" spelling="display_log" id="2002196837028"/>
			<UnexposedExpr type="struct display *" spelling="dp" id="2003612075024"/>
			<UnexposedExpr type="error_level" spelling="INTERNAL_ERROR" id="2002141265779"/>
			<UnexposedExpr type="int" spelling="ret" id="2001804762561"/>
			<UnexposedExpr type="int" spelling="ret" id="2003541699401"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="shouldn't longjmp on warnings" comment_scope_start="1577" comment_scope_end="1577">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="ret" id="2000467056636"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2003765360544"/>
			<UnexposedExpr type="int" spelling="ret" id="2001799983671"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="For each file on the command line test it with a range of transforms" comment_scope_start="1586" comment_scope_end="1622">
		<SYMBOLS>
			<DeclRefExpr type="void (void)" spelling="validate_T" id="2000523147098"/>
			<DeclRefExpr type="void (struct display *)" spelling="display_init" id="2002984558858"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003817076101"/>
			<DeclRefExpr type="int" spelling="option_end" id="2002073159937"/>
			<DeclRefExpr type="int" spelling="option_end" id="2001085339983"/>
			<DeclRefExpr type="int" spelling="argc" id="2001171829704"/>
			<DeclRefExpr type="int" spelling="option_end" id="2001032400608"/>
			<DeclRefExpr type="char **" spelling="argv" id="2001137658766"/>
			<DeclRefExpr type="int" spelling="option_end" id="2001153449420"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2004067209559"/>
			<DeclRefExpr type="const char *" spelling="name" id="2001337228048"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001986553414"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003648785676"/>
			<DeclRefExpr type="int" spelling="VERBOSE" id="2004034847567"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2001937464578"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002356911407"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001219894600"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002594743812"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2001370625503"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2002832822798"/>
			<DeclRefExpr type="const char *" spelling="name" id="2003561521026"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000382874869"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002486757598"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2000052008408"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2001960143776"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002549238901"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002762955267"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003500483559"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2000084641576"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2003789528406"/>
			<DeclRefExpr type="const char *" spelling="name" id="2000367961397"/>
			<DeclRefExpr type="struct display" spelling="d" id="2004182683501"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2003250072918"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002301230226"/>
			<DeclRefExpr type="struct display" spelling="d" id="2002895449159"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2003138076331"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002913638662"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003795715743"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2000907195975"/>
			<DeclRefExpr type="const char *" spelling="name" id="2002557081168"/>
			<DeclRefExpr type="struct display" spelling="d" id="2003344669420"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2003649843156"/>
			<DeclRefExpr type="const char *" spelling="name" id="2000310735311"/>
			<VarDecl type="int" spelling="option_end" id="2003832884839"/>
			<VarDecl type="int" spelling="ilog" id="2004054557569"/>
			<VarDecl type="struct display" spelling="d" id="2000231441830"/>
			<VarDecl type="const char *" spelling="name" id="2003370337716"/>
			<CallExpr type="void" spelling="validate_T" id="2004037015620"/>
			<CallExpr type="void" spelling="display_init" id="2002345817291"/>
			<CallExpr type="int" spelling="strcmp" id="2003025671827"/>
			<CallExpr type="int" spelling="strcmp" id="2003501495998"/>
			<CallExpr type="int" spelling="strcmp" id="2003978623237"/>
			<CallExpr type="int" spelling="strcmp" id="2002174964793"/>
			<CallExpr type="int" spelling="strcmp" id="2001523873401"/>
			<CallExpr type="int" spelling="strcmp" id="2002528439186"/>
			<CallExpr type="int" spelling="strcmp" id="2003488051772"/>
			<CallExpr type="int" spelling="strcmp" id="2002703090446"/>
			<CallExpr type="int" spelling="strcmp" id="2002516042681"/>
			<StringLiteral type="char [10]" spelling="&quot;--verbose&quot;" id="2001674688872"/>
			<StringLiteral type="char [11]" spelling="&quot;--warnings&quot;" id="2000768892866"/>
			<StringLiteral type="char [9]" spelling="&quot;--errors&quot;" id="2000574940421"/>
			<StringLiteral type="char [8]" spelling="&quot;--quiet&quot;" id="2001736506844"/>
			<StringLiteral type="char [13]" spelling="&quot;--exhaustive&quot;" id="2002749737301"/>
			<StringLiteral type="char [7]" spelling="&quot;--fast&quot;" id="2003033373956"/>
			<StringLiteral type="char [9]" spelling="&quot;--strict&quot;" id="2002816861949"/>
			<StringLiteral type="char [10]" spelling="&quot;--relaxed&quot;" id="2003439030589"/>
			<StringLiteral type="char [6]" spelling="&quot;--log&quot;" id="2003576834343"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000447543934"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003659636980"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003137619177"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2004271306642"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000539428369"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001713124945"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000167526228"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002950845320"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2001597628614"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003144252808"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2000106744010"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2003828807006"/>
			<UnexposedExpr type="void (*)(void)" spelling="validate_T" id="2002212136441"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_init" id="2000283075971"/>
			<UnexposedExpr type="int" spelling="option_end" id="2001780941076"/>
			<UnexposedExpr type="int" spelling="argc" id="2000179138672"/>
			<UnexposedExpr type="char **" spelling="argv" id="2003759038652"/>
			<UnexposedExpr type="int" spelling="option_end" id="2000082489835"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000177892353"/>
			<UnexposedExpr type="const char *" spelling="name" id="2004049119139"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2003427207710"/>
			<UnexposedExpr type="unsigned int" spelling="VERBOSE" id="2001718990571"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2003107437824"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002886194469"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2002865931169"/>
			<UnexposedExpr type="unsigned int" spelling="WARNINGS" id="2000007288712"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2001906847430"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002672676372"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2002546618802"/>
			<UnexposedExpr type="unsigned int" spelling="ERRORS" id="2001856697628"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2000567920799"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003948198805"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2001016712719"/>
			<UnexposedExpr type="unsigned int" spelling="QUIET" id="2002199842563"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2002732026191"/>
			<UnexposedExpr type="const char *" spelling="name" id="2001451556037"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2002190046275"/>
			<UnexposedExpr type="const char *" spelling="name" id="2000279106222"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2004156248504"/>
			<UnexposedExpr type="const char *" spelling="name" id="2004179738251"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2001441798099"/>
			<UnexposedExpr type="const char *" spelling="name" id="2002182703793"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2003235695693"/>
			<UnexposedExpr type="const char *" spelling="name" id="2003610846358"/>
			<TypeRef type="struct display" spelling="struct display" id="2000785789912"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="prevent display" comment_scope_start="1623" comment_scope_end="1623">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="ilog" id="2001497879326"/>
			<DeclRefExpr type="int" spelling="option_end" id="2000964759792"/>
			<UnexposedExpr type="int" spelling="option_end" id="2002236223650"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="display" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Not an option" comment_scope_start="1667" comment_scope_end="1667"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="abort on user or internal error" comment_scope_start="1679" comment_scope_end="1679">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="ret" id="2000775923087"/>
			<DeclRefExpr type="int" spelling="QUIET" id="2001648982661"/>
			<UnexposedExpr type="int" spelling="ret" id="2004229535444"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="abort" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Here on any return, including failures, except user/internal issues" comment_scope_start="1683" comment_scope_end="1704">
		<SYMBOLS>
			<DeclRefExpr type="struct display" spelling="d" id="2002232677315"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001008490378"/>
			<DeclRefExpr type="int" spelling="WARNINGS" id="2003032312579"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000179647940"/>
			<DeclRefExpr type="int" spelling="ERRORS" id="2003587845767"/>
			<DeclRefExpr type="int" spelling="pass" id="2002599131186"/>
			<DeclRefExpr type="int" spelling="errors" id="2001768087794"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000268523353"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000676985415"/>
			<DeclRefExpr type="int" spelling="pass" id="2000441893067"/>
			<DeclRefExpr type="int" spelling="j" id="2002659548182"/>
			<DeclRefExpr type="int" spelling="j" id="2000284776225"/>
			<DeclRefExpr type="int" spelling="option_end" id="2004081781183"/>
			<DeclRefExpr type="int" spelling="j" id="2003824703906"/>
			<DeclRefExpr type="int" spelling="j" id="2002501996307"/>
			<DeclRefExpr type="int" spelling="ilog" id="2001027706040"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2004056847151"/>
			<DeclRefExpr type="char **" spelling="argv" id="2003233350345"/>
			<DeclRefExpr type="int" spelling="j" id="2001693114012"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2000026676549"/>
			<DeclRefExpr type="struct display" spelling="d" id="2000618427702"/>
			<VarDecl type="int" spelling="pass" id="2002476603310"/>
			<VarDecl type="int" spelling="j" id="2002715385002"/>
			<CallExpr type="int" spelling="printf" id="2004168199812"/>
			<CallExpr type="int" spelling="printf" id="2003945798754"/>
			<CallExpr type="int" spelling="printf" id="2002645947082"/>
			<StringLiteral type="char [14]" spelling="&quot;%s: pngimage &quot;" id="2002327529326"/>
			<StringLiteral type="char [5]" spelling="&quot;PASS&quot;" id="2002573809882"/>
			<StringLiteral type="char [5]" spelling="&quot;FAIL&quot;" id="2003818243347"/>
			<StringLiteral type="char [4]" spelling="&quot;%s &quot;" id="2002048958074"/>
			<StringLiteral type="char [4]" spelling="&quot;%s\n&quot;" id="2000175772049"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002454457244"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2002451238779"/>
			<MemberRefExpr type="png_uint_32" spelling="results" id="2002260781580"/>
			<MemberRefExpr type="png_uint_32" spelling="options" id="2002169687686"/>
			<MemberRefExpr type="const char *" spelling="filename" id="2001205089639"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2002916036826"/>
			<UnexposedExpr type="int" spelling="pass" id="2002089966571"/>
			<UnexposedExpr type="png_uint_32" spelling="options" id="2000561914285"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2002924322343"/>
			<UnexposedExpr type="int" spelling="pass" id="2000852992902"/>
			<UnexposedExpr type="int" spelling="j" id="2003721693571"/>
			<UnexposedExpr type="int" spelling="option_end" id="2002459925158"/>
			<UnexposedExpr type="int" spelling="j" id="2000078063784"/>
			<UnexposedExpr type="int" spelling="ilog" id="2001356851565"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2001510155019"/>
			<UnexposedExpr type="char **" spelling="argv" id="2003718423284"/>
			<UnexposedExpr type="int" spelling="j" id="2000812439873"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2004245022473"/>
			<UnexposedExpr type="const char *" spelling="filename" id="2001281079679"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="Release allocated memory" comment_scope_start="1709" comment_scope_end="1713">
		<SYMBOLS>
			<DeclRefExpr type="void (struct display *)" spelling="display_destroy" id="2002840453784"/>
			<DeclRefExpr type="struct display" spelling="d" id="2001989919855"/>
			<DeclRefExpr type="int" spelling="errors" id="2000000917408"/>
			<CallExpr type="void" spelling="display_destroy" id="2003244257279"/>
			<UnexposedExpr type="void (*)(struct display *)" spelling="display_destroy" id="2000196004833"/>
			<UnexposedExpr type="int" spelling="errors" id="2003241998878"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocated" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="memory" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/libtests/pngimage.c" comment_text="!READ_PNG" comment_scope_start="1715" comment_scope_end="1715"/>
</COMMENTS>
