<?xml version="1.0" ?>
<COMMENTS project_name="libpng" project_path="/home/dewang/smartKT/SmartKT/kgg/projects/libpng">
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is used to fix the error:
    *
    * pngfix.c:
    * In function 'zlib_advance':
    * pngfix.c:181:13: error: assuming signed overflow does not
    *   occur when simplifying conditional to constant [-Werror=strict-overflow]" comment_scope_start="24" comment_scope_end="37">
		<SYMBOLS>
			<macroDefinition type="" spelling="FIX_GCC" id="2300765660167"/>
			<macroDefinition type="" spelling="PROGRAM_NAME" id="2300013177561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="signed" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="constant" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Define the following to use this program against your installed libpng,
 * rather than the one being built here:" comment_scope_start="38" comment_scope_end="46">
		<SYMBOLS>
			<inclusionDirective type="" spelling="../../png.h" id="2301335936346"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="1.6.3" comment_scope_start="47" comment_scope_end="47">
		<SYMBOLS>
			<macroExpansion type="" spelling="PNG_LIBPNG_VER" id="2304095791886"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="zlib.h defines the structure z_stream, an instance of which is included
 * in this structure and is required for decompressing the LZ compressed
 * data in PNG files." comment_scope_start="58" comment_scope_end="62"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="We must ensure that zlib uses 'const' in declarations." comment_scope_start="63" comment_scope_end="67"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="zlib.h sometimes #defines const to nothing, undo this." comment_scope_start="68" comment_scope_end="71"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="zlib.h has mediocre z_const use before 1.2.6, this stuff is for compatibility
 * with older builds." comment_scope_start="72" comment_scope_end="88"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Copied from pngpriv.h" comment_scope_start="89" comment_scope_end="101"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="__cplusplus" comment_scope_start="102" comment_scope_end="102"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunk tags (copied from pngpriv.h)" comment_scope_start="105" comment_scope_end="109"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Constants for known chunk types." comment_scope_start="110" comment_scope_end="116"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="registered, not defined" comment_scope_start="117" comment_scope_end="117"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="deprecated" comment_scope_start="120" comment_scope_end="120"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The 8-byte signature as a pair of 32-bit quantities" comment_scope_start="139" comment_scope_end="142"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Is the chunk critical?" comment_scope_start="143" comment_scope_end="145"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Is it safe to copy?" comment_scope_start="146" comment_scope_end="148"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Fix ups for builds with limited read support" comment_scope_start="149" comment_scope_end="153"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="******************************** UTILITIES *********************************" comment_scope_start="154" comment_scope_end="160"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="UNREACHED is a value to cause an assert to fail. Because of the way the
 * assert macro is written the string &quot;UNREACHED&quot; is produced in the error
 * message." comment_scope_start="154" comment_scope_end="160"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="80-bit number handling - a PNG image can be up to (2^31-1)x(2^31-1) 8-byte
 * (16-bit RGBA) pixels in size; that's less than 2^65 bytes or 2^68 bits, so
 * arithmetic of 80-bit numbers is sufficient.  This representation uses an
 * arbitrary length array of png_uint_16 digits (0..65535).  The representation
 * is little endian.
 *
 * The arithmetic functions take zero to two uarb values together with the
 * number of digits in those values and write the result to the given uarb
 * (always the first argument) returning the number of digits in the result.
 * If the result is negative the return value is also negative (this would
 * normally be an error)." comment_scope_start="161" comment_scope_end="172"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="A 'unum' is an array of these" comment_scope_start="173" comment_scope_end="173">
		<SYMBOLS>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypedefDecl type="udigit" spelling="udigit" id="2300573501818"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IMPORTANT: only apply this to an array, applied to a pointer the result
    * will typically be '2', which is not useful." comment_scope_start="178" comment_scope_end="183">
		<SYMBOLS>
			<TypeRef type="uarb" spelling="uarb" id="2300010901556"/>
			<TypeRef type="png_alloc_size_t" spelling="png_alloc_size_t" id="2304272242568"/>
			<ParmDecl type="uarb" spelling="result" id="2300960763416"/>
			<ParmDecl type="png_alloc_size_t" spelling="val" id="2302558258289"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set (initialize) 'result' to 'val'.  The size required for 'result' must
    * be determined by the caller from a knowledge of the maximum for 'val'." comment_scope_start="184" comment_scope_end="197">
		<SYMBOLS>
			<UnexposedExpr type="png_alloc_size_t" spelling="val" id="2301238337982"/>
			<UnexposedExpr type="uarb" spelling="result" id="2300022232255"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="val" id="2300784583736"/>
			<UnexposedExpr type="int" spelling="ndigits" id="2303052320146"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<VarDecl type="int" spelling="ndigits" id="2303787971621"/>
			<FunctionDecl type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2302986504260"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="val" id="2303287127297"/>
			<DeclRefExpr type="uarb" spelling="result" id="2302640729363"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2303189943575"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="val" id="2303858019825"/>
			<DeclRefExpr type="png_alloc_size_t" spelling="val" id="2301254014825"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2301147473146"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="determined" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="maximum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Copy a uarb, may reduce the digit count" comment_scope_start="201" comment_scope_end="210">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="d" id="2300839662977"/>
			<UnexposedExpr type="int" spelling="idigits" id="2303101051622"/>
			<UnexposedExpr type="uarb" spelling="to" id="2302698917424"/>
			<UnexposedExpr type="int" spelling="d" id="2302300482498"/>
			<UnexposedExpr type="uarb" spelling="from" id="2300048373622"/>
			<UnexposedExpr type="int" spelling="d" id="2300051466673"/>
			<UnexposedExpr type="int" spelling="d" id="2301024213678"/>
			<UnexposedExpr type="int" spelling="odigits" id="2303482993375"/>
			<VarDecl type="int" spelling="d" id="2300375407960"/>
			<VarDecl type="int" spelling="odigits" id="2300071736792"/>
			<FunctionDecl type="int (uarb, uarb, int)" spelling="uarb_copy" id="2302106071312"/>
			<DeclRefExpr type="int" spelling="d" id="2302765046744"/>
			<DeclRefExpr type="int" spelling="odigits" id="2304188610713"/>
			<DeclRefExpr type="int" spelling="d" id="2301058226101"/>
			<DeclRefExpr type="int" spelling="idigits" id="2301008025268"/>
			<DeclRefExpr type="int" spelling="d" id="2300301139487"/>
			<DeclRefExpr type="uarb" spelling="to" id="2300641363479"/>
			<DeclRefExpr type="int" spelling="d" id="2301338066339"/>
			<DeclRefExpr type="uarb" spelling="from" id="2303898139803"/>
			<DeclRefExpr type="int" spelling="d" id="2302770642218"/>
			<DeclRefExpr type="int" spelling="odigits" id="2301122963422"/>
			<DeclRefExpr type="int" spelling="d" id="2303520893075"/>
			<DeclRefExpr type="int" spelling="odigits" id="2300637700710"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reduce" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is a signed 32-bit add, except that to avoid overflow the value added
    * or subtracted must be no more than 2^31-65536.  A negative result
    * indicates a negative number (which is an error below).  The size of
    * 'num' should be max(in_digits+1,2) for arbitrary 'add' but can be just
    * in_digits+1 if add is known to be in the range -65535..65535." comment_scope_start="214" comment_scope_end="250">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="out_digits" id="2304115447525"/>
			<UnexposedExpr type="int" spelling="in_digits" id="2301387821553"/>
			<UnexposedExpr type="uarb" spelling="num" id="2300804930785"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303905381923"/>
			<UnexposedExpr type="uarb" spelling="num" id="2304068018961"/>
			<UnexposedExpr type="png_int_32" spelling="add" id="2300933676636"/>
			<UnexposedExpr type="png_int_32" spelling="add" id="2302929252293"/>
			<UnexposedExpr type="png_int_32" spelling="add" id="2301067465453"/>
			<UnexposedExpr type="uarb" spelling="num" id="2302977835841"/>
			<UnexposedExpr type="png_int_32" spelling="add" id="2302890390406"/>
			<UnexposedExpr type="png_int_32" spelling="add" id="2300082942231"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2302232939891"/>
			<UnexposedExpr type="uarb" spelling="num" id="2303162679295"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2302033846205"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2302824941044"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2301876286688"/>
			<UnexposedExpr type="uarb" spelling="num" id="2303468863844"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2302484243808"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303653319709"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<VarDecl type="volatile int" spelling="out_digits" id="2304116399711"/>
			<FunctionDecl type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2302838752636"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2301883141116"/>
			<DeclRefExpr type="int" spelling="in_digits" id="2301527764779"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2303945314100"/>
			<DeclRefExpr type="uarb" spelling="num" id="2302810483199"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2300569658030"/>
			<DeclRefExpr type="uarb" spelling="num" id="2303923744308"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2303653927370"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2303726767459"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2302596398869"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2304119028079"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2301083639540"/>
			<DeclRefExpr type="uarb" spelling="num" id="2300884033395"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2301902992216"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2300029159494"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2301623391348"/>
			<DeclRefExpr type="png_int_32" spelling="add" id="2303383181784"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2300701732929"/>
			<DeclRefExpr type="uarb" spelling="num" id="2302387428351"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2303473933724"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2300283166679"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2303042791064"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2302835562881"/>
			<DeclRefExpr type="uarb" spelling="num" id="2303519726768"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2300488246115"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2300819962441"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2302403710405"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="signed" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="subtracted" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="negative" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="negative" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="max" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="may be 0" comment_scope_start="240" comment_scope_end="240">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="out_digits" id="2302824941044"/>
			<DeclRefExpr type="volatile int" spelling="out_digits" id="2303042791064"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="negative result" comment_scope_start="243" comment_scope_end="243"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="As above but this works with any 32-bit value and only does 'add'" comment_scope_start="254" comment_scope_end="263">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="in_digits" id="2301959129976"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301566374628"/>
			<UnexposedExpr type="uarb" spelling="num" id="2302229030613"/>
			<UnexposedExpr type="int" spelling="in_digits" id="2300350159198"/>
			<UnexposedExpr type="png_uint_32" spelling="add" id="2302100230403"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2303580802954"/>
			<UnexposedExpr type="uarb" spelling="num" id="2304190940166"/>
			<UnexposedExpr type="int" spelling="in_digits" id="2303547035209"/>
			<UnexposedExpr type="png_uint_32" spelling="add" id="2303739748156"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2302305673413"/>
			<UnexposedExpr type="uarb" spelling="num" id="2303674212220"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="add" id="2302990056351"/>
			<UnexposedExpr type="png_uint_32" spelling="add" id="2304082472378"/>
			<CallExpr type="int" spelling="uarb_inc" id="2300000424819"/>
			<CallExpr type="int" spelling="uarb_inc" id="2303321917777"/>
			<CallExpr type="int" spelling="uarb_set" id="2302445563869"/>
			<FunctionDecl type="int (uarb, int, png_uint_32)" spelling="uarb_add32" id="2300088733152"/>
			<DeclRefExpr type="int" spelling="in_digits" id="2302577683517"/>
			<DeclRefExpr type="int" spelling="in_digits" id="2300328451716"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2301443056680"/>
			<DeclRefExpr type="uarb" spelling="num" id="2300782192684"/>
			<DeclRefExpr type="int" spelling="in_digits" id="2302690970932"/>
			<DeclRefExpr type="png_uint_32" spelling="add" id="2301512305649"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2301684574170"/>
			<DeclRefExpr type="uarb" spelling="num" id="2303202331880"/>
			<DeclRefExpr type="int" spelling="in_digits" id="2300895995077"/>
			<DeclRefExpr type="png_uint_32" spelling="add" id="2300441355632"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2302967170131"/>
			<DeclRefExpr type="uarb" spelling="num" id="2301326433049"/>
			<DeclRefExpr type="png_uint_32" spelling="add" id="2304202207931"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Primitive one-digit multiply - 'val' must be 0..65535. Note that this
    * primitive is a multiply and accumulate - the result of *num * val is added
    * to *acc.
    *
    * This is a one-digit multiply, so the product may be up to one digit longer
    * than 'num', however the add to 'acc' means that the caller must ensure
    * that 'acc' is at least one digit longer than this *and* at least one digit
    * longer than the current length of 'acc'.  (Or the caller must otherwise
    * ensure 'adigits' is adequate from knowledge of the values.)" comment_scope_start="268" comment_scope_end="308">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="val" id="2302914931905"/>
			<UnexposedExpr type="png_uint_16" spelling="val" id="2303335835663"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2300503059894"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303537985053"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2304189668915"/>
			<UnexposedExpr type="png_uint_32" spelling="carry" id="2300868524012"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2301060701468"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2302808087396"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2302387574728"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300561185028"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303631995831"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2302414169929"/>
			<UnexposedExpr type="uarb" spelling="num" id="2300307867642"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2301381054167"/>
			<UnexposedExpr type="unsigned int" spelling="val" id="2303285234526"/>
			<UnexposedExpr type="png_uint_16" spelling="val" id="2301284248080"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2303653455500"/>
			<UnexposedExpr type="png_uint_32" spelling="carry" id="2302721233630"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300367497972"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2300059698158"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300987001802"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2302048567312"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<VarDecl type="png_uint_32" spelling="carry" id="2304220401592"/>
			<VarDecl type="int" spelling="out_digits" id="2300201153423"/>
			<FunctionDecl type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2303703924017"/>
			<DeclRefExpr type="png_uint_16" spelling="val" id="2303213041719"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2302706010280"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301626074566"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2300221283948"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2303833410323"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2302545969106"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303165314443"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2300218632714"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2302120099597"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303132978601"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2302735802248"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2300316271586"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2304285869227"/>
			<DeclRefExpr type="uarb" spelling="num" id="2300296266607"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301734588369"/>
			<DeclRefExpr type="png_uint_16" spelling="val" id="2301881422164"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2300588832782"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303139681727"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2302438966271"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2300406223468"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301832620994"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300698111339"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303310790221"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303545717486"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="multiply" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="multiply" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="added" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="multiply" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The digits in *acc, *num and val are in the range 0..65535, so the
    * result below is at most (65535*65535)+2*65635 = 65535*(65535+2), which is
    * exactly 0xffffffff." comment_scope_start="279" comment_scope_end="305">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="val" id="2302914931905"/>
			<UnexposedExpr type="png_uint_16" spelling="val" id="2303335835663"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2300503059894"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303537985053"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2304189668915"/>
			<UnexposedExpr type="png_uint_32" spelling="carry" id="2300868524012"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2301060701468"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2302808087396"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2302387574728"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300561185028"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2303631995831"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2302414169929"/>
			<UnexposedExpr type="uarb" spelling="num" id="2300307867642"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2301381054167"/>
			<UnexposedExpr type="unsigned int" spelling="val" id="2303285234526"/>
			<UnexposedExpr type="png_uint_16" spelling="val" id="2301284248080"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2303653455500"/>
			<UnexposedExpr type="png_uint_32" spelling="carry" id="2302721233630"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300367497972"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2300059698158"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300987001802"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<VarDecl type="png_uint_32" spelling="carry" id="2304220401592"/>
			<VarDecl type="int" spelling="out_digits" id="2300201153423"/>
			<DeclRefExpr type="png_uint_16" spelling="val" id="2303213041719"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2302706010280"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301626074566"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2300221283948"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2303833410323"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2302545969106"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303165314443"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2300218632714"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2302120099597"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303132978601"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2302735802248"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2300316271586"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2304285869227"/>
			<DeclRefExpr type="uarb" spelling="num" id="2300296266607"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301734588369"/>
			<DeclRefExpr type="png_uint_16" spelling="val" id="2301881422164"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2300588832782"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303139681727"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2302438966271"/>
			<DeclRefExpr type="png_uint_32" spelling="carry" id="2300406223468"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301832620994"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300698111339"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303310790221"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Else the product is 0" comment_scope_start="283" comment_scope_end="283">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="val" id="2302914931905"/>
			<UnexposedExpr type="png_uint_16" spelling="val" id="2303335835663"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2300503059894"/>
			<DeclRefExpr type="png_uint_16" spelling="val" id="2303213041719"/>
			<DeclRefExpr type="volatile int" spelling="n_digits" id="2302706010280"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="So carry is 0 and all the input digits have been consumed. This means
       * that it is possible to skip any remaining digits in acc." comment_scope_start="300" comment_scope_end="305">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="out_digits" id="2300367497972"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2300059698158"/>
			<UnexposedExpr type="int" spelling="out_digits" id="2300987001802"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2301832620994"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300698111339"/>
			<DeclRefExpr type="int" spelling="out_digits" id="2303310790221"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="carry" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="calculate acc += num * val, 'val' may be any 32-bit value, 'acc' and 'num'
    * may be any value, returns the number of digits in 'acc'." comment_scope_start="312" comment_scope_end="331">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="n_digits" id="2304190450078"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2303474960870"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2300372110232"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2301251738405"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2300533870467"/>
			<UnexposedExpr type="uarb" spelling="num" id="2303685116591"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2301838703565"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2304215361778"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2301312612986"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2300456072523"/>
			<UnexposedExpr type="uarb" spelling="acc" id="2300950467602"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2302581003480"/>
			<UnexposedExpr type="uarb" spelling="num" id="2302084013157"/>
			<UnexposedExpr type="int" spelling="n_digits" id="2300342918919"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2302189242245"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2302194564091"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2303826791629"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301104751441"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2303165750747"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2301158184483"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2302381217512"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302019458892"/>
			<StringLiteral type="char [13]" spelling="&quot;a_digits &gt; 0&quot;" id="2303491893599"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302496151561"/>
			<StringLiteral type="const char [51]" spelling="&quot;int uarb_mult32(uarb, int, uarb, int, png_uint_32)&quot;" id="2301140689242"/>
			<FunctionDecl type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2302346268240"/>
			<DeclRefExpr type="int" spelling="n_digits" id="2301041447094"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2300255820951"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2304157274300"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2302991426406"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2303527017031"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300784940866"/>
			<DeclRefExpr type="uarb" spelling="num" id="2302242029223"/>
			<DeclRefExpr type="int" spelling="n_digits" id="2302605486100"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2300846868341"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2301473246567"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2303010800988"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303784219533"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2303967288923"/>
			<DeclRefExpr type="uarb" spelling="acc" id="2302678992319"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303606303495"/>
			<DeclRefExpr type="uarb" spelling="num" id="2301137953668"/>
			<DeclRefExpr type="int" spelling="n_digits" id="2301356218651"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2300727547005"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303924741083"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300414963855"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304107187622"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2302453111806"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Because n_digits and val are &gt;0 the following must be true:" comment_scope_start="326" comment_scope_end="328">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="a_digits" id="2302194564091"/>
			<UnexposedExpr type="int" spelling="a_digits" id="2303826791629"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301104751441"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302019458892"/>
			<StringLiteral type="char [13]" spelling="&quot;a_digits &gt; 0&quot;" id="2303491893599"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302496151561"/>
			<StringLiteral type="const char [51]" spelling="&quot;int uarb_mult32(uarb, int, uarb, int, png_uint_32)&quot;" id="2301140689242"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2303924741083"/>
			<DeclRefExpr type="int" spelling="a_digits" id="2300414963855"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304107187622"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Shift inout right by right_shift bits, right_shift must be in the range
    * 1..15" comment_scope_start="335" comment_scope_end="359">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ndigits" id="2301126078352"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2301481778022"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2303029306387"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2301690899407"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2301131420054"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300007145855"/>
			<UnexposedExpr type="int" spelling="carry" id="2302704006566"/>
			<UnexposedExpr type="png_uint_16" spelling="carry" id="2303887749311"/>
			<UnexposedExpr type="uarb" spelling="inout" id="2302862181598"/>
			<UnexposedExpr type="int" spelling="i" id="2301672913508"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2300390956956"/>
			<UnexposedExpr type="uarb" spelling="inout" id="2303704458514"/>
			<UnexposedExpr type="int" spelling="i" id="2302794482818"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2301148884022"/>
			<UnexposedExpr type="uarb" spelling="inout" id="2302847708375"/>
			<UnexposedExpr type="int" spelling="i" id="2300379354179"/>
			<UnexposedExpr type="png_uint_16" spelling="temp" id="2303404291933"/>
			<UnexposedExpr type="int" spelling="i" id="2300500448795"/>
			<UnexposedExpr type="int" spelling="ndigits" id="2303341946071"/>
			<UnexposedExpr type="int" spelling="temp" id="2301536828571"/>
			<UnexposedExpr type="png_uint_16" spelling="temp" id="2302964042408"/>
			<UnexposedExpr type="int" spelling="i" id="2300710469659"/>
			<UnexposedExpr type="int" spelling="ndigits" id="2300937561357"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303990255186"/>
			<StringLiteral type="char [38]" spelling="&quot;right_shift &gt;= 1 &amp;&amp; right_shift &lt;= 15&quot;" id="2302090392896"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300821348469"/>
			<StringLiteral type="const char [40]" spelling="&quot;int uarb_shift(uarb, int, unsigned int)&quot;" id="2303011046536"/>
			<VarDecl type="volatile int" spelling="i" id="2303816491023"/>
			<VarDecl type="png_uint_16" spelling="carry" id="2302466664607"/>
			<VarDecl type="png_uint_16" spelling="temp" id="2301481828883"/>
			<FunctionDecl type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2303548885155"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2303151184336"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2300889689571"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2301541835004"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2302377948689"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2302974645709"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302465203368"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301081801015"/>
			<DeclRefExpr type="png_uint_16" spelling="carry" id="2303778237586"/>
			<DeclRefExpr type="uarb" spelling="inout" id="2302436344727"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2302641740856"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2302917914388"/>
			<DeclRefExpr type="png_uint_16" spelling="carry" id="2303734522561"/>
			<DeclRefExpr type="uarb" spelling="inout" id="2301931774812"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301741854553"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2301696669618"/>
			<DeclRefExpr type="uarb" spelling="inout" id="2303089578394"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301885980881"/>
			<DeclRefExpr type="png_uint_16" spelling="temp" id="2300291481352"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301912588084"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2300598077743"/>
			<DeclRefExpr type="png_uint_16" spelling="temp" id="2301048269608"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2301255362239"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2303546311816"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2303032145498"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Bottom bits to top bits of carry" comment_scope_start="348" comment_scope_end="352">
		<SYMBOLS>
			<UnexposedExpr type="uarb" spelling="inout" id="2303704458514"/>
			<UnexposedExpr type="int" spelling="i" id="2302794482818"/>
			<UnexposedExpr type="unsigned int" spelling="right_shift" id="2301148884022"/>
			<UnexposedExpr type="uarb" spelling="inout" id="2302847708375"/>
			<UnexposedExpr type="int" spelling="i" id="2300379354179"/>
			<UnexposedExpr type="png_uint_16" spelling="temp" id="2303404291933"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<DeclRefExpr type="png_uint_16" spelling="carry" id="2303734522561"/>
			<DeclRefExpr type="uarb" spelling="inout" id="2301931774812"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301741854553"/>
			<DeclRefExpr type="unsigned int" spelling="right_shift" id="2301696669618"/>
			<DeclRefExpr type="uarb" spelling="inout" id="2303089578394"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301885980881"/>
			<DeclRefExpr type="png_uint_16" spelling="temp" id="2300291481352"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="carry" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The shift may reduce ndigits" comment_scope_start="353" comment_scope_end="356">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="i" id="2300500448795"/>
			<UnexposedExpr type="int" spelling="ndigits" id="2303341946071"/>
			<UnexposedExpr type="int" spelling="temp" id="2301536828571"/>
			<UnexposedExpr type="png_uint_16" spelling="temp" id="2302964042408"/>
			<UnexposedExpr type="int" spelling="i" id="2300710469659"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2301912588084"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2300598077743"/>
			<DeclRefExpr type="png_uint_16" spelling="temp" id="2301048269608"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2301255362239"/>
			<DeclRefExpr type="volatile int" spelling="i" id="2303546311816"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reduce" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return -1/0/+1 according as a&lt;b/a==b/a&gt;b" comment_scope_start="363" comment_scope_end="379">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="adigits" id="2302079497739"/>
			<UnexposedExpr type="int" spelling="bdigits" id="2303359297682"/>
			<UnexposedExpr type="int" spelling="adigits" id="2301374397882"/>
			<UnexposedExpr type="int" spelling="bdigits" id="2303975553398"/>
			<UnexposedExpr type="uarb" spelling="a" id="2301608623864"/>
			<UnexposedExpr type="int" spelling="adigits" id="2303560845446"/>
			<UnexposedExpr type="uarb" spelling="b" id="2300859039122"/>
			<UnexposedExpr type="int" spelling="adigits" id="2304124712881"/>
			<UnexposedExpr type="uarb" spelling="a" id="2302276217735"/>
			<UnexposedExpr type="int" spelling="adigits" id="2300349252843"/>
			<UnexposedExpr type="uarb" spelling="b" id="2300138552920"/>
			<UnexposedExpr type="int" spelling="adigits" id="2303073117866"/>
			<FunctionDecl type="int (uarb, int, uarb, int)" spelling="uarb_cmp" id="2303441997749"/>
			<DeclRefExpr type="int" spelling="adigits" id="2303817063304"/>
			<DeclRefExpr type="int" spelling="bdigits" id="2300731846225"/>
			<DeclRefExpr type="int" spelling="adigits" id="2304175784914"/>
			<DeclRefExpr type="int" spelling="bdigits" id="2300280887923"/>
			<DeclRefExpr type="int" spelling="adigits" id="2300940431140"/>
			<DeclRefExpr type="uarb" spelling="a" id="2301168498415"/>
			<DeclRefExpr type="int" spelling="adigits" id="2302460931845"/>
			<DeclRefExpr type="uarb" spelling="b" id="2302676542070"/>
			<DeclRefExpr type="int" spelling="adigits" id="2302310970741"/>
			<DeclRefExpr type="uarb" spelling="a" id="2302914547126"/>
			<DeclRefExpr type="int" spelling="adigits" id="2303981704300"/>
			<DeclRefExpr type="uarb" spelling="b" id="2303492963491"/>
			<DeclRefExpr type="int" spelling="adigits" id="2301034062050"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="UNUSED" comment_scope_start="381" comment_scope_end="381"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return true if the uarb is equal to 'val'" comment_scope_start="384" comment_scope_end="393"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Print 'num' as a hexadecimal number (easier than decimal!)" comment_scope_start="398" comment_scope_end="411">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="digits" id="2304182864374"/>
			<UnexposedExpr type="uarb" spelling="num" id="2300093675442"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2302749726019"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2300731755340"/>
			<UnexposedExpr type="uarb" spelling="num" id="2301388038901"/>
			<UnexposedExpr type="int" spelling="digits" id="2301904725086"/>
			<UnexposedExpr type="int" spelling="digits" id="2302994561857"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301356161012"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2300193855399"/>
			<UnexposedExpr type="uarb" spelling="num" id="2302380013850"/>
			<UnexposedExpr type="int" spelling="digits" id="2302028129846"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303518707955"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303669832155"/>
			<CallExpr type="int" spelling="fprintf" id="2303273544020"/>
			<CallExpr type="int" spelling="fprintf" id="2304093316577"/>
			<CallExpr type="int" spelling="fputs" id="2301801677689"/>
			<StringLiteral type="char [5]" spelling="&quot;0x%x&quot;" id="2303651818484"/>
			<StringLiteral type="char [5]" spelling="&quot;%.4x&quot;" id="2303922247186"/>
			<StringLiteral type="char [4]" spelling="&quot;0x0&quot;" id="2300622756182"/>
			<FunctionDecl type="void (uarb, int, FILE *)" spelling="uarb_printx" id="2300316103476"/>
			<DeclRefExpr type="int" spelling="digits" id="2301375557287"/>
			<DeclRefExpr type="uarb" spelling="num" id="2300237969294"/>
			<DeclRefExpr type="int" spelling="digits" id="2300091453469"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302241443505"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2303942994988"/>
			<DeclRefExpr type="uarb" spelling="num" id="2304163238627"/>
			<DeclRefExpr type="int" spelling="digits" id="2301761696271"/>
			<DeclRefExpr type="int" spelling="digits" id="2301950368971"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2301094098434"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2303400776852"/>
			<DeclRefExpr type="uarb" spelling="num" id="2302335856486"/>
			<DeclRefExpr type="int" spelling="digits" id="2301806708948"/>
			<DeclRefExpr type="int" spelling="digits" id="2301277526579"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304162668526"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2303468243306"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="hexadecimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="the number is 0" comment_scope_start="409" comment_scope_end="409">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="digits" id="2302028129846"/>
			<DeclRefExpr type="int" spelling="digits" id="2301277526579"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Prints 'num' as a decimal if it will fit in an unsigned long, else as a
    * hexadecimal number.  Notice that the results vary for images over 4GByte
    * in a system dependent way, and the hexadecimal form doesn't work very well
    * in awk script input.
    *
    *
    * TODO: write uarb_div10" comment_scope_start="415" comment_scope_end="436">
		<SYMBOLS>
			<UnexposedExpr type="unsigned long" spelling="digits" id="2303694406818"/>
			<UnexposedExpr type="int" spelling="digits" id="2301823746413"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_printx" id="2301176985416"/>
			<UnexposedExpr type="uarb" spelling="num" id="2302101495233"/>
			<UnexposedExpr type="int" spelling="digits" id="2301624500129"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2301724961559"/>
			<UnexposedExpr type="int" spelling="digits" id="2303423049452"/>
			<UnexposedExpr type="unsigned long" spelling="n" id="2301168755722"/>
			<UnexposedExpr type="uarb" spelling="num" id="2304237382465"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2300814468319"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303664501594"/>
			<UnexposedExpr type="unsigned long" spelling="n" id="2303761732274"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<CallExpr type="void" spelling="uarb_printx" id="2303339044245"/>
			<CallExpr type="int" spelling="fprintf" id="2302321176821"/>
			<StringLiteral type="char [4]" spelling="&quot;%lu&quot;" id="2303028973186"/>
			<VarDecl type="unsigned long" spelling="n" id="2302947101766"/>
			<FunctionDecl type="void (uarb, int, FILE *)" spelling="uarb_print" id="2300569239309"/>
			<DeclRefExpr type="int" spelling="digits" id="2302266084691"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_printx" id="2300842744209"/>
			<DeclRefExpr type="uarb" spelling="num" id="2301582029824"/>
			<DeclRefExpr type="int" spelling="digits" id="2300586826908"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2303338410865"/>
			<DeclRefExpr type="int" spelling="digits" id="2303407011514"/>
			<DeclRefExpr type="unsigned long" spelling="n" id="2303465756327"/>
			<DeclRefExpr type="unsigned long" spelling="n" id="2302063081581"/>
			<DeclRefExpr type="uarb" spelling="num" id="2301821733804"/>
			<DeclRefExpr type="int" spelling="digits" id="2303822400749"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302924432835"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2300841107251"/>
			<DeclRefExpr type="unsigned long" spelling="n" id="2302322042757"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="prints" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="decimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="unsigned" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="long" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="hexadecimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="hexadecimal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="images"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Generate random bytes.  This uses a boring repeatable algorithm and it
 * is implemented here so that it gives the same set of numbers on every
 * architecture.  It's a linear congruential generator (Knuth or Sedgewick
 * &quot;Algorithms&quot;) but it comes from the 'feedback taps' table in Horowitz and
 * Hill, &quot;The Art of Electronics&quot; (Pseudo-Random Bit Sequences and Noise
 * Generation.)
 *
 * (Copied from contrib/libtests/pngvalid.c)" comment_scope_start="438" comment_scope_end="452">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 *" spelling="seed" id="2303956161638"/>
			<UnexposedExpr type="png_uint_32 *" spelling="seed" id="2302613118218"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2303313601081"/>
			<VarDecl type="png_uint_32" spelling="u0" id="2302033338148"/>
			<VarDecl type="png_uint_32" spelling="u1" id="2301824383991"/>
			<VarDecl type="png_bytep" spelling="bytes" id="2302386278200"/>
			<DeclRefExpr type="png_uint_32 *" spelling="seed" id="2302038207524"/>
			<DeclRefExpr type="png_uint_32 *" spelling="seed" id="2303597162330"/>
			<DeclRefExpr type="void *" spelling="pv" id="2302773208051"/>
			<ParmDecl type="png_uint_32 *" spelling="seed" id="2301534653749"/>
			<ParmDecl type="void *" spelling="pv" id="2301887398141"/>
			<ParmDecl type="size_t" spelling="size" id="2301425351794"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="numbers" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linear" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generation" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="There are thirty-three bits; the next bit in the sequence is bit-33 XOR
    * bit-20.  The top 1 bit is in u1, the bottom 32 are in u0." comment_scope_start="453" comment_scope_end="458">
		<SYMBOLS>
			<UnexposedExpr type="size_t" spelling="i" id="2302945959062"/>
			<UnexposedExpr type="size_t" spelling="size" id="2303983718541"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<VarDecl type="size_t" spelling="i" id="2303742201731"/>
			<DeclRefExpr type="size_t" spelling="i" id="2302760924224"/>
			<DeclRefExpr type="size_t" spelling="i" id="2302215794248"/>
			<DeclRefExpr type="size_t" spelling="size" id="2301245074395"/>
			<DeclRefExpr type="size_t" spelling="i" id="2301448952005"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="xor" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="First generate 8 new bits then shift them in at the end." comment_scope_start="459" comment_scope_end="466">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2300742319426"/>
			<UnexposedExpr type="png_uint_32" spelling="u1" id="2301342462354"/>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2300798876081"/>
			<UnexposedExpr type="png_uint_32" spelling="u0" id="2303304387972"/>
			<UnexposedExpr type="png_uint_32" spelling="u" id="2303640967160"/>
			<UnexposedExpr type="png_uint_32" spelling="u" id="2304103491809"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<VarDecl type="png_uint_32" spelling="u" id="2301288707834"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2300139180501"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2302535314301"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2302625860723"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2303520696378"/>
			<DeclRefExpr type="png_uint_32" spelling="u1" id="2300851500758"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2301358146956"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2303073924117"/>
			<DeclRefExpr type="png_uint_32" spelling="u0" id="2303499708439"/>
			<DeclRefExpr type="png_uint_32" spelling="u" id="2304049388488"/>
			<DeclRefExpr type="png_bytep" spelling="bytes" id="2301295798755"/>
			<DeclRefExpr type="png_uint_32" spelling="u" id="2303991184167"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="generate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Clear an object to a random value." comment_scope_start="472" comment_scope_end="481">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_uint_32 *, void *, size_t)" spelling="make_random_bytes" id="2302356518265"/>
			<UnexposedExpr type="png_uint_32 *" spelling="clear_seed" id="2302024656430"/>
			<UnexposedExpr type="void *" spelling="pv" id="2302402228539"/>
			<UnexposedExpr type="size_t" spelling="size" id="2301678024090"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="make_random_bytes" id="2303676594606"/>
			<VarDecl type="png_uint_32 [2]" spelling="clear_seed" id="2301820881744"/>
			<FunctionDecl type="void (void *, size_t)" spelling="clear" id="2300806481016"/>
			<DeclRefExpr type="void (png_uint_32 *, void *, size_t)" spelling="make_random_bytes" id="2303855755913"/>
			<DeclRefExpr type="png_uint_32 [2]" spelling="clear_seed" id="2303673119542"/>
			<DeclRefExpr type="void *" spelling="pv" id="2304013787987"/>
			<DeclRefExpr type="size_t" spelling="size" id="2303598127619"/>
			<ParmDecl type="void *" spelling="pv" id="2302734318952"/>
			<ParmDecl type="size_t" spelling="size" id="2304033853299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="clear" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="object" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Copied from unreleased 1.7 code.
 *
 * CRC checking uses a local pre-built implementation of the Ethernet CRC32.
 * This is to avoid a function call to the zlib DLL and to optimize the
 * byte-by-byte case." comment_scope_start="482" comment_scope_end="542">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32 [256]" spelling="crc_table" id="2301544214796"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The CRC calculated here *IS* conditioned, the corresponding value used by
 * zlib and the result value is obtained by XORing with CRC_INIT, which is also
 * the first value that must be passed in (for the first byte) to crc_one_byte." comment_scope_start="544" comment_scope_end="558">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 *" spelling="crc_table" id="2303848033397"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2302032952636"/>
			<UnexposedExpr type="unsigned int" spelling="b" id="2303488299054"/>
			<UnexposedExpr type="int" spelling="b" id="2302304867798"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300062182498"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2301774622563"/>
			<DeclRefExpr type="png_uint_32 [256]" spelling="crc_table" id="2303582876944"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2300106571830"/>
			<DeclRefExpr type="int" spelling="b" id="2301168777854"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2304263273979"/>
			<ParmDecl type="png_uint_32" spelling="crc" id="2304064918782"/>
			<ParmDecl type="int" spelling="b" id="2301762741793"/>
			<ParmDecl type="png_uint_32" spelling="value" id="2300585155591"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is an alternative to the algorithm used in zlib, which requires four
    * separate tables to parallelize the four byte operations, it only works for
    * a CRC of the first four bytes of the stream, but this is what happens in
    * the parser below where length+chunk-name is read and chunk-name used to
    * initialize the CRC.  Notice that the calculation here avoids repeated
    * conditioning (xor with 0xffffffff) by storing the conditioned value." comment_scope_start="559" comment_scope_end="571">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 *" spelling="crc_table" id="2302217285832"/>
			<UnexposedExpr type="png_uint_32" spelling="value" id="2301040657107"/>
			<UnexposedExpr type="png_uint_32 *" spelling="crc_table" id="2300683861328"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300439006255"/>
			<UnexposedExpr type="png_uint_32" spelling="value" id="2300670427280"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2303511414481"/>
			<UnexposedExpr type="png_uint_32 *" spelling="crc_table" id="2303650932785"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2301502153347"/>
			<UnexposedExpr type="png_uint_32" spelling="value" id="2301716897780"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2303364944593"/>
			<UnexposedExpr type="png_uint_32 *" spelling="crc_table" id="2302610399952"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300083248946"/>
			<UnexposedExpr type="png_uint_32" spelling="value" id="2303917520165"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2302018621288"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="crc" id="2300676821000"/>
			<FunctionDecl type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301481470244"/>
			<DeclRefExpr type="png_uint_32 [256]" spelling="crc_table" id="2301885463763"/>
			<DeclRefExpr type="png_uint_32" spelling="value" id="2303900787443"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2302961983205"/>
			<DeclRefExpr type="png_uint_32 [256]" spelling="crc_table" id="2302512795055"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2301863326500"/>
			<DeclRefExpr type="png_uint_32" spelling="value" id="2300712654499"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2304150817872"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2300202011150"/>
			<DeclRefExpr type="png_uint_32 [256]" spelling="crc_table" id="2300105966757"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2302860587617"/>
			<DeclRefExpr type="png_uint_32" spelling="value" id="2301291335907"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2302847000617"/>
			<DeclRefExpr type="png_uint_32 [256]" spelling="crc_table" id="2303898142194"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2300240263688"/>
			<DeclRefExpr type="png_uint_32" spelling="value" id="2300962290140"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2300335998891"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="separate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="parser" type=" 'Divide and Conquer/ Greedy Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="xor" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Bit whacking approach to chunk name validation that is intended to avoid
    * branches.  The cost is that it uses a lot of 32-bit constants, which might
    * be bad on some architectures." comment_scope_start="575" comment_scope_end="602">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2300619528923"/>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2303423718510"/>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2301889873148"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2301705444379"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="t" id="2304266732321"/>
			<FunctionDecl type="int (png_uint_32)" spelling="chunk_type_valid" id="2303898591446"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2303426134331"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2303043171473"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301678868601"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2304207284849"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2300591102624"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301324100804"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2300027817027"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2300525557561"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301888687661"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2301120448448"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="branches" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Remove bit 5 from all but the reserved byte; this means every
    * 8-bit unit must be in the range 65-90 to be valid.  So bit 5
    * must be zero, bit 6 must be set and bit 7 zero." comment_scope_start="582" comment_scope_end="588">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2300619528923"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2303426134331"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2303043171473"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301678868601"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="every" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="unit"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Subtract 65 for each 8-bit quantity, this must not overflow
    * and each byte must then be in the range 0-25." comment_scope_start="589" comment_scope_end="594">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2303423718510"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2304207284849"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2300591102624"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301324100804"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="subtract" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Subtract 26, handling the overflow which should set the top
    * three bits of each byte." comment_scope_start="595" comment_scope_end="602">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="c" id="2301889873148"/>
			<UnexposedExpr type="png_uint_32" spelling="t" id="2301705444379"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="int (png_uint_32)" spelling="chunk_type_valid" id="2303898591446"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2300027817027"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2300525557561"/>
			<DeclRefExpr type="png_uint_32" spelling="c" id="2301888687661"/>
			<DeclRefExpr type="png_uint_32" spelling="t" id="2301120448448"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="subtract" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="*************************** CONTROL INFORMATION ****************************" comment_scope_start="604" comment_scope_end="612"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Information about a sequence of IDAT chunks, the chunks have been re-synced
 * using sync_stream below and the new lengths are recorded here.  Because the
 * number of chunks is unlimited this is handled using a linked list of these
 * structures." comment_scope_start="604" comment_scope_end="612"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Linked list" comment_scope_start="613" comment_scope_end="613">
		<SYMBOLS>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="struct IDAT_list *" spelling="next" id="2302247421429"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="linked" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="linked list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Actual length of the array below" comment_scope_start="614" comment_scope_end="614">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="length" id="2302457893231"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Number of entries that are valid" comment_scope_start="615" comment_scope_end="615">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="count" id="2300076632144"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return the size in bytes of an IDAT_list of the given length." comment_scope_start="631" comment_scope_end="638">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300640411104"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2301281908749"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301278444653"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300995794375"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303735856890"/>
			<UnexposedExpr type="unsigned long" spelling="length" id="2301621812640"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2302247902042"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304199113758"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303391845053"/>
			<FunctionDecl type="size_t (struct IDAT_list *, unsigned int)" spelling="IDAT_list_size" id="2302933480141"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301326853383"/>
			<DeclRefExpr type="unsigned int" spelling="length" id="2301848411688"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301285797092"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300349516645"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301178014613"/>
			<DeclRefExpr type="unsigned int" spelling="length" id="2304087097240"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303867311342"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2301864097889"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2302913198206"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2304198616018"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Use the previous cached value if available." comment_scope_start="660" comment_scope_end="664">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2301960373756"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="tail" id="2300494614237"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300652899093"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<VarDecl type="struct IDAT_list *" spelling="next" id="2300054871219"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="tail" id="2300489426818"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="next" id="2300260370038"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2303760204660"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Insert a new, malloc'ed, block of IDAT information buffers, this
       * one twice as large as the previous one:" comment_scope_start="665" comment_scope_end="669">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="length" id="2302186424607"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="tail" id="2302407835374"/>
			<VarDecl type="unsigned int" spelling="length" id="2302363748032"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="tail" id="2300922749823"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2300776001664"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="insert" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="arithmetic overflow" comment_scope_start="670" comment_scope_end="670">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="length" id="2300861951120"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2301047488695"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="tail" id="2304098558503"/>
			<DeclRefExpr type="unsigned int" spelling="length" id="2304052941297"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="tail" id="2301282080836"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2301996880389"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The caller must handle this:" comment_scope_start="676" comment_scope_end="683">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300401965028"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302284246336"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2301320799308"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2303036871891"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="tail" id="2300142408463"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302112345561"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="next" id="2302128177196"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="next" id="2300727199497"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="next" id="2300329641948"/>
			<DeclRefExpr type="unsigned int" spelling="length" id="2302946923825"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="tail" id="2303860132911"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="next" id="2302737568097"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2300674031561"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2304252975352"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2303308183379"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="GLOBAL CONTROL STRUCTURE" comment_scope_start="688" comment_scope_end="722">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="unsigned int" spelling="errors" id="2300212363619"/>
			<FieldDecl type="unsigned int" spelling="warnings" id="2301232424256"/>
			<FieldDecl type="unsigned int" spelling="optimize_zlib" id="2302878354175"/>
			<FieldDecl type="unsigned int" spelling="quiet" id="2300920848069"/>
			<FieldDecl type="unsigned int" spelling="verbose" id="2303343689080"/>
			<FieldDecl type="unsigned int" spelling="skip" id="2301115993143"/>
			<FieldDecl type="png_uint_32" spelling="idat_max" id="2301742834974"/>
			<FieldDecl type="int" spelling="status_code" id="2300821263066"/>
			<FieldDecl type="struct IDAT_list" spelling="idat_cache" id="2301124926548"/>
			<StructDecl type="struct global" spelling="global" id="2303309617299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC GLOBAL VARIABLES: OWNER INITIALIZE" comment_scope_start="691" comment_scope_end="691"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="print file errors to stderr" comment_scope_start="692" comment_scope_end="692">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="errors" id="2300212363619"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="print libpng warnings to stderr" comment_scope_start="693" comment_scope_end="693">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="warnings" id="2301232424256"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Run optimization search" comment_scope_start="694" comment_scope_end="694">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="optimize_zlib" id="2302878354175"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="search" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="don't output summaries" comment_scope_start="695" comment_scope_end="695">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="quiet" id="2300920848069"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="various internal tracking" comment_scope_start="696" comment_scope_end="696">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="verbose" id="2303343689080"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Non-critical chunks to skip" comment_scope_start="697" comment_scope_end="697">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="skip" id="2301115993143"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks with a bad CRC" comment_scope_start="699" comment_scope_end="699"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks not safe to copy" comment_scope_start="700" comment_scope_end="700"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks not used by libpng" comment_scope_start="701" comment_scope_end="701"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks only used in transforms" comment_scope_start="702" comment_scope_end="702"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Everything but tRNS, sBIT, gAMA and sRGB" comment_scope_start="703" comment_scope_end="703"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Everything but tRNS and sBIT" comment_scope_start="704" comment_scope_end="704"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="0 to perform no re-chunking" comment_scope_start="706" comment_scope_end="706">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="idat_max" id="2301742834974"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Accumulated status code" comment_scope_start="708" comment_scope_end="708">
		<SYMBOLS>
			<FieldDecl type="int" spelling="status_code" id="2300821263066"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="found a too-far-back error" comment_scope_start="709" comment_scope_end="709"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="fixed an invalid CRC" comment_scope_start="710" comment_scope_end="710"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="damaged PNG stream (may be fixable)" comment_scope_start="711" comment_scope_end="711"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="truncated but still readable" comment_scope_start="712" comment_scope_end="712"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="could not read the file" comment_scope_start="713" comment_scope_end="713"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="write error (this terminates the read)" comment_scope_start="714" comment_scope_end="714"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="internal limits/errors encountered" comment_scope_start="715" comment_scope_end="715"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC GLOBAL VARIABLES: USED INTERNALLY BY IDAT READ CODE" comment_scope_start="717" comment_scope_end="717"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Cache of file IDAT information buffers" comment_scope_start="718" comment_scope_end="718">
		<SYMBOLS>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="struct IDAT_list" spelling="idat_cache" id="2301124926548"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The structure is shared across all uses of this global control
       * structure to avoid reallocation between IDAT streams." comment_scope_start="719" comment_scope_end="722">
		<SYMBOLS>
			<StructDecl type="struct global" spelling="global" id="2303309617299"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Call this once (and only once) to initialize the control" comment_scope_start="738" comment_scope_end="753">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2302785627522"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302568671092"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300872221306"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301887845124"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301703732870"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303813157218"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302506060120"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301912247708"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300528516316"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303886814350"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302819236065"/>
			<UnexposedExpr type="void (*)(struct IDAT_list *)" spelling="IDAT_list_init" id="2303945054167"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300842732934"/>
			<CallExpr type="void" spelling="clear" id="2301141499411"/>
			<CallExpr type="void" spelling="IDAT_list_init" id="2303791792238"/>
			<FunctionDecl type="void (struct global *)" spelling="global_init" id="2302826259416"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2304009572427"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302887765264"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302443722027"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2301719215333"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2301135835260"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302485281066"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302110984179"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302997979864"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2300732016988"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302660246310"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2301113183814"/>
			<DeclRefExpr type="void (struct IDAT_list *)" spelling="IDAT_list_init" id="2301312977322"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302168319612"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2300419306316"/>
			<MemberRefExpr type="unsigned int" spelling="warnings" id="2301231278053"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2301681721058"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2303512683909"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_max" id="2303732716773"/>
			<MemberRefExpr type="unsigned int" spelling="optimize_zlib" id="2301097782613"/>
			<MemberRefExpr type="unsigned int" spelling="skip" id="2301729038852"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302566916388"/>
			<MemberRefExpr type="struct IDAT_list" spelling="idat_cache" id="2300813214290"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Globals" comment_scope_start="742" comment_scope_end="746">
		<SYMBOLS>
			<UnexposedExpr type="struct global *" spelling="global" id="2301887845124"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301703732870"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303813157218"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302506060120"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2301719215333"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2301135835260"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302485281066"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302110984179"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2300419306316"/>
			<MemberRefExpr type="unsigned int" spelling="warnings" id="2301231278053"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2301681721058"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2303512683909"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="no re-chunking of IDAT" comment_scope_start="747" comment_scope_end="747">
		<SYMBOLS>
			<UnexposedExpr type="struct global *" spelling="global" id="2301912247708"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2302997979864"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_max" id="2303732716773"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return true if this chunk is to be skipped according to the --strip
    * option.  This code needs to recognize all known ancillary chunks in order
    * to handle the --strip=unsafe option." comment_scope_start="757" comment_scope_end="827">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303890712077"/>
			<UnexposedExpr type="int" spelling="skip" id="2303093566886"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2302736265450"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2300889042926"/>
			<UnexposedExpr type="int" spelling="skip" id="2301329978846"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2303642885836"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2302739183026"/>
			<UnexposedExpr type="int" spelling="skip" id="2300848570752"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2300134217734"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2301814636581"/>
			<UnexposedExpr type="int" spelling="skip" id="2303240423344"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2301872113933"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2303541983601"/>
			<UnexposedExpr type="int" spelling="skip" id="2303754765009"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2302854766450"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2304105045771"/>
			<UnexposedExpr type="int" spelling="skip" id="2303677753503"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2304142599823"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2302725873717"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="int (const struct global *, png_uint_32)" spelling="skip_chunk_type" id="2302066934803"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302074387273"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303345266435"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2302461003427"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2300094846934"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2300830916195"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2302429464496"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302556552960"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2301646188109"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2300656269245"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2300372428649"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2301686864580"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2300052346027"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2301062696689"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2303204269198"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2303696665294"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="order" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Never strip critical chunks:" comment_scope_start="762" comment_scope_end="767">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303890712077"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302074387273"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303345266435"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks that are treated as, effectively, critical because they affect
       * correct interpretation of the pixel values:" comment_scope_start="768" comment_scope_end="773">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="pixel"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks that specify gamma encoding which should therefore only be
       * removed if the user insists:" comment_scope_start="774" comment_scope_end="781">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2303093566886"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2302736265450"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2300889042926"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2302461003427"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2300372428649"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="removed" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="gamma"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks that affect color interpretation - not used by libpng and rarely
       * used by applications, but technically still required for correct
       * interpretation of the image data:" comment_scope_start="782" comment_scope_end="790">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2301329978846"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2303642885836"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2302739183026"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2300094846934"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2301686864580"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="color"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Other chunks that are used by libpng in image transformations (as
       * opposed to known chunks that have get/set APIs but are not otherwise
       * used.)" comment_scope_start="791" comment_scope_end="799">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2300848570752"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2300134217734"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2301814636581"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2300830916195"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2300052346027"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="All other chunks that libpng knows about and affect neither image
       * interpretation nor libpng transforms - chunks that are effectively
       * unused by libpng even though libpng might recognize and store them." comment_scope_start="800" comment_scope_end="810">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2303240423344"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2301872113933"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2303541983601"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2302429464496"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2301062696689"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Chunks that libpng does not know about (notice that this depends on the
       * list above including all known chunks!)  The decision here depends on
       * whether the safe-to-copy bit is set in the chunk type." comment_scope_start="811" comment_scope_end="817">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302556552960"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="decision" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="as above" comment_scope_start="818" comment_scope_end="818">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2303754765009"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2302854766450"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2304105045771"/>
			<DeclRefExpr type="const struct global *" spelling="global" id="2301646188109"/>
			<MemberRefExpr type="const unsigned int" spelling="skip" id="2303204269198"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PER-FILE CONTROL STRUCTURE" comment_scope_start="829" comment_scope_end="833">
		<SYMBOLS>
			<StructDecl type="struct chunk" spelling="chunk" id="2303017246788"/>
			<StructDecl type="struct IDAT" spelling="IDAT" id="2302803502916"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ANCESTORS" comment_scope_start="834" comment_scope_end="836">
		<SYMBOLS>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<FieldDecl type="struct global *" spelling="global" id="2300372308529"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC PER-FILE VARIABLES: CALLER INITIALIZE" comment_scope_start="837" comment_scope_end="838">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="file_name" id="2301248244120"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="public" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Name of output file (if required)" comment_scope_start="839" comment_scope_end="839">
		<SYMBOLS>
			<FieldDecl type="const char *" spelling="out_name" id="2301492194996"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC PER-FILE VARIABLES: SET BY PNG READ CODE" comment_scope_start="841" comment_scope_end="842"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="File specific result codes" comment_scope_start="841" comment_scope_end="842"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set to a bit mask of the following:" comment_scope_start="843" comment_scope_end="843">
		<SYMBOLS>
			<FieldDecl type="int" spelling="status_code" id="2300368053806"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Records a read error errno" comment_scope_start="844" comment_scope_end="844">
		<SYMBOLS>
			<FieldDecl type="int" spelling="read_errno" id="2300818222438"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Records a write error errno" comment_scope_start="845" comment_scope_end="845">
		<SYMBOLS>
			<FieldDecl type="int" spelling="write_errno" id="2302093932274"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IHDR information" comment_scope_start="847" comment_scope_end="858">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<FieldDecl type="png_uint_32" spelling="width" id="2300713206919"/>
			<FieldDecl type="png_uint_32" spelling="height" id="2302886815007"/>
			<FieldDecl type="png_byte" spelling="bit_depth" id="2301082005464"/>
			<FieldDecl type="png_byte" spelling="color_type" id="2300456962362"/>
			<FieldDecl type="png_byte" spelling="compression_method" id="2301535835188"/>
			<FieldDecl type="png_byte" spelling="filter_method" id="2302183616194"/>
			<FieldDecl type="png_byte" spelling="interlace_method" id="2300514649747"/>
			<FieldDecl type="udigit [5]" spelling="image_bytes" id="2300989532157"/>
			<FieldDecl type="int" spelling="image_digits" id="2302781879163"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PROTECTED PER-FILE VARIABLES: USED BY THE READ CODE" comment_scope_start="859" comment_scope_end="859"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Original PNG file" comment_scope_start="860" comment_scope_end="860">
		<SYMBOLS>
			<TypeRef type="FILE" spelling="FILE" id="2301466053697"/>
			<FieldDecl type="FILE *" spelling="file" id="2301607562851"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="If a new one is being written" comment_scope_start="861" comment_scope_end="861">
		<SYMBOLS>
			<TypeRef type="FILE" spelling="FILE" id="2301466053697"/>
			<FieldDecl type="FILE *" spelling="out" id="2302409912850"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set while reading a PNG" comment_scope_start="862" comment_scope_end="862">
		<SYMBOLS>
			<TypeRef type="jmp_buf" spelling="jmp_buf" id="2302731086909"/>
			<FieldDecl type="jmp_buf" spelling="jmpbuf" id="2300955773733"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PROTECTED CHUNK SPECIFIC VARIABLES: USED BY CHUNK CODE" comment_scope_start="864" comment_scope_end="872"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The following variables are used during reading to record the length, type
    * and data position of the *next* chunk or, right at the start, the
    * signature (in length,type).
    *
    * When a chunk control structure is instantiated these values are copied
    * into the structure and can then be overritten with the data for the next
    * chunk." comment_scope_start="864" comment_scope_end="872"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Position of first byte of chunk data" comment_scope_start="873" comment_scope_end="873">
		<SYMBOLS>
			<TypeRef type="fpos_t" spelling="fpos_t" id="2300458481401"/>
			<FieldDecl type="fpos_t" spelling="data_pos" id="2300581315698"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="First word (length or signature start)" comment_scope_start="874" comment_scope_end="874">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="length" id="2302672895576"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="word" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Second word (type or signature end)" comment_scope_start="875" comment_scope_end="875">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="type" id="2304196194539"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="second" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="word" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Running chunk CRC (used by read_chunk)" comment_scope_start="876" comment_scope_end="876">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="crc" id="2301454345020"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="These counts are maintained by the read and write routines below and are
    * reset by the chunk handling code.  They record the total number of bytes
    * read or written for the chunk, including the header (length,type) bytes." comment_scope_start="878" comment_scope_end="881"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Count of bytes read (in the chunk)" comment_scope_start="882" comment_scope_end="882">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="read_count" id="2301196738036"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Count of bytes written (in the chunk)" comment_scope_start="883" comment_scope_end="883">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="write_count" id="2301131637397"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="As defined here:" comment_scope_start="884" comment_scope_end="884">
		<SYMBOLS>
			<FieldDecl type="int" spelling="state" id="2300722417695"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The signature is being written" comment_scope_start="885" comment_scope_end="885"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Non-IDAT chunks are being written" comment_scope_start="886" comment_scope_end="886"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="An IDAT stream is being written" comment_scope_start="887" comment_scope_end="887"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Two pointers used to enable clean-up in the event of fatal errors and to
    * hold state about the parser process (only one of each at present.)" comment_scope_start="889" comment_scope_end="894">
		<SYMBOLS>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<FieldDecl type="struct chunk *" spelling="chunk" id="2303409957655"/>
			<FieldDecl type="struct IDAT *" spelling="idat" id="2302132037179"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="pointers" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="parser" type=" 'Divide and Conquer/ Greedy Algorithms"/>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Interface to allocate a new chunk or IDAT control structure.  The result
    * is returned by setting one or other of the above variables.  Note that the
    * relevant initializer is called by the allocator function.  The alloc_ptr
    * is used only by the implementation of the allocate function." comment_scope_start="895" comment_scope_end="901">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<FieldDecl type="void *" spelling="alloc_ptr" id="2301245805491"/>
			<FieldDecl type="void (*)(struct file *, int)" spelling="alloc" id="2300130304688"/>
			<ParmDecl type="int" spelling="idat" id="2300932627998"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocate" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="allocator" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="allocate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="idat: allocate IDAT not chunk" comment_scope_start="902" comment_scope_end="903">
		<SYMBOLS>
			<StructDecl type="struct file" spelling="file" id="2300002762157"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Valid longjmp (stop) codes are:" comment_scope_start="905" comment_scope_end="905"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="generic png_error" comment_scope_start="906" comment_scope_end="906"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="generic png_error" comment_scope_start="907" comment_scope_end="907"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="generic zlib error" comment_scope_start="908" comment_scope_end="908"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="detected an invalid PNG" comment_scope_start="909" comment_scope_end="909"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="read failed" comment_scope_start="910" comment_scope_end="910"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="error in write" comment_scope_start="911" comment_scope_end="911"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected (internal?) error" comment_scope_start="912" comment_scope_end="912"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Print a string with spaces replaced by '_' and non-printing characters by
    * an octal escape." comment_scope_start="916" comment_scope_end="929">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="str" id="2302904632271"/>
			<UnexposedExpr type="const unsigned short **(*)(void)" spelling="__ctype_b_loc" id="2302028908143"/>
			<UnexposedExpr type="const char *" spelling="str" id="2303538418686"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302785427052"/>
			<UnexposedExpr type="const char *" spelling="str" id="2303557804210"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303559360287"/>
			<UnexposedExpr type="const unsigned short **(*)(void)" spelling="__ctype_b_loc" id="2302522516489"/>
			<UnexposedExpr type="const char *" spelling="str" id="2304069820362"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2301779482846"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2302771958037"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2303061109172"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2301902737852"/>
			<UnexposedExpr type="const char *" spelling="str" id="2302134602831"/>
			<CallExpr type="const unsigned short **" spelling="__ctype_b_loc" id="2303493702821"/>
			<CallExpr type="int" spelling="_IO_putc" id="2300749488205"/>
			<CallExpr type="const unsigned short **" spelling="__ctype_b_loc" id="2301405110104"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301873425522"/>
			<CallExpr type="int" spelling="fprintf" id="2300762013786"/>
			<StringLiteral type="char [6]" spelling="&quot;\\%.3o&quot;" id="2302843102018"/>
			<FunctionDecl type="void (const char *, FILE *)" spelling="emit_string" id="2300374315645"/>
			<DeclRefExpr type="const char *" spelling="str" id="2302722577353"/>
			<DeclRefExpr type="const char *" spelling="str" id="2300736646120"/>
			<DeclRefExpr type="const unsigned short **(void)" spelling="__ctype_b_loc" id="2303279916860"/>
			<DeclRefExpr type="const char *" spelling="str" id="2303418535282"/>
			<DeclRefExpr type="int" spelling="_ISgraph" id="2304039189344"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301242671861"/>
			<DeclRefExpr type="const char *" spelling="str" id="2300137604117"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2301079490682"/>
			<DeclRefExpr type="const unsigned short **(void)" spelling="__ctype_b_loc" id="2303575579603"/>
			<DeclRefExpr type="const char *" spelling="str" id="2301260589830"/>
			<DeclRefExpr type="int" spelling="_ISspace" id="2302278011421"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303349792909"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2304220502561"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302868238273"/>
			<DeclRefExpr type="FILE *" spelling="out" id="2300530075418"/>
			<DeclRefExpr type="const char *" spelling="str" id="2304176658315"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="print" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="octal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Generic error message routine, takes a 'stop' code but can be used
    * elsewhere.  Always outputs a message." comment_scope_start="949" comment_scope_end="982">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="code" id="2301352717149"/>
			<UnexposedExpr type="int" spelling="read_errno" id="2303771850399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301195955201"/>
			<UnexposedExpr type="int" spelling="write_errno" id="2301100280261"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300873851601"/>
			<UnexposedExpr type="int" spelling="read_errno" id="2304165979968"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300719865277"/>
			<UnexposedExpr type="int" spelling="err" id="2304140204095"/>
			<UnexposedExpr type="int" spelling="write_errno" id="2301678134823"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301150329094"/>
			<UnexposedExpr type="int" spelling="err" id="2301773772865"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301973947063"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301815263518"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302731788223"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301457625398"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2302484433450"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301707708540"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2301009323187"/>
			<UnexposedExpr type="int" spelling="err" id="2303939409391"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2302886813174"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300795204309"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2303471140396"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303888231095"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2300693673409"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301128042017"/>
			<CallExpr type="int" spelling="fprintf" id="2302580557959"/>
			<CallExpr type="char *" spelling="strerror" id="2301540622004"/>
			<CallExpr type="int" spelling="fprintf" id="2300734880483"/>
			<StringLiteral type="char [16]" spelling="&quot;libpng warning:&quot;" id="2300322220129"/>
			<StringLiteral type="char [14]" spelling="&quot;libpng error:&quot;" id="2301558277435"/>
			<StringLiteral type="char [12]" spelling="&quot;zlib error:&quot;" id="2301235291669"/>
			<StringLiteral type="char [8]" spelling="&quot;invalid&quot;" id="2302043618490"/>
			<StringLiteral type="char [14]" spelling="&quot;read failure:&quot;" id="2300513143989"/>
			<StringLiteral type="char [12]" spelling="&quot;write error&quot;" id="2300860118153"/>
			<StringLiteral type="char [18]" spelling="&quot;unexpected error:&quot;" id="2301724476357"/>
			<StringLiteral type="char [26]" spelling="&quot;INVALID (internal error):&quot;" id="2302178097017"/>
			<StringLiteral type="char [16]" spelling="&quot;%s: %s %s [%s]\n&quot;" id="2303982204635"/>
			<StringLiteral type="char [11]" spelling="&quot;%s: %s %s\n&quot;" id="2303795170904"/>
			<VarDecl type="const char *" spelling="reason" id="2303648088613"/>
			<VarDecl type="int" spelling="err" id="2302377334737"/>
			<FunctionDecl type="void (struct file *, int, const char *)" spelling="emit_error" id="2302087421113"/>
			<DeclRefExpr type="int" spelling="code" id="2300967564209"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2301447088259"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2301455456175"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302869945040"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300765394245"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2303961133988"/>
			<DeclRefExpr type="int" spelling="err" id="2301141951291"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300661821143"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302230481709"/>
			<DeclRefExpr type="int" spelling="err" id="2303813179498"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301633302712"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2303163824764"/>
			<DeclRefExpr type="int" spelling="err" id="2302348495343"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300222009853"/>
			<DeclRefExpr type="int" spelling="err" id="2304174810130"/>
			<DeclRefExpr type="int" spelling="err" id="2300275531250"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302668277154"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2301236504929"/>
			<DeclRefExpr type="int" spelling="err" id="2300339263797"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2304073415007"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302371734004"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301277300356"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2303014319195"/>
			<DeclRefExpr type="const char *" spelling="what" id="2300365110112"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2302668108634"/>
			<DeclRefExpr type="int" spelling="err" id="2301010540783"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2303425461296"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303309444880"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303281209367"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300395855707"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301668705977"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300430433386"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2302894318124"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300478177474"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303211731311"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2303890692807"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2302175731718"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="If either of the chunk pointers are set end them here, the IDAT structure
    * must be deallocated first as it may deallocate the chunk structure." comment_scope_start="992" comment_scope_end="1007">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301292403560"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301683953951"/>
			<UnexposedExpr type="void (*)(struct IDAT **)" spelling="IDAT_end" id="2304166823618"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300311308194"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303740752343"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302912040080"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2300077532927"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302125368282"/>
			<UnexposedExpr type="int" spelling="status_code" id="2303785336744"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300607120945"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2304229822056"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301468907500"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2303613658413"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2300577253257"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303322052598"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2300504670092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301012999220"/>
			<CallExpr type="void" spelling="IDAT_end" id="2302606746049"/>
			<CallExpr type="void" spelling="chunk_end" id="2302063334824"/>
			<CallExpr type="int" spelling="fclose" id="2302824315278"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301310320464"/>
			<DeclRefExpr type="void (struct IDAT **)" spelling="IDAT_end" id="2301095676887"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301779179085"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304135887368"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2300656197203"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301674735417"/>
			<DeclRefExpr type="int" spelling="rc" id="2303814062934"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300495475925"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303288874716"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2301716031717"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303567403596"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302580288142"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302790681065"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300932940086"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303874098805"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2304034714137"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301485373197"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2301052579284"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2302794044713"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2301155625967"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pointers" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: this is bitwise |, all the following functions must execute and
       * must succeed." comment_scope_start="1008" comment_scope_end="1016">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(FILE *)" spelling="ferror" id="2302973310132"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2301221302399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301200260039"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fflush" id="2302551762633"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2300956278029"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303713061318"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="fclose" id="2303029141977"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303483873226"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304050562498"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="perror" id="2302021003997"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2302217578563"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300003799510"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="emit_error" id="2303359263103"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301757823773"/>
			<CallExpr type="int" spelling="ferror" id="2303983324899"/>
			<CallExpr type="int" spelling="fflush" id="2303281615114"/>
			<CallExpr type="int" spelling="fclose" id="2303621908079"/>
			<CallExpr type="void" spelling="perror" id="2300711060958"/>
			<CallExpr type="void" spelling="emit_error" id="2304242119505"/>
			<StringLiteral type="char [19]" spelling="&quot;output write error&quot;" id="2302104469806"/>
			<DeclRefExpr type="int (FILE *)" spelling="ferror" id="2301871323967"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300913326397"/>
			<DeclRefExpr type="int (FILE *)" spelling="fflush" id="2304019214151"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303456233045"/>
			<DeclRefExpr type="int (FILE *)" spelling="fclose" id="2301803433284"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300006360086"/>
			<DeclRefExpr type="void (const char *)" spelling="perror" id="2302900061901"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304229616911"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="emit_error" id="2302280754799"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300299232640"/>
			<DeclRefExpr type="int" spelling="rc" id="2301629483976"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2302220252967"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2300593032577"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2301101063076"/>
			<MemberRefExpr type="const char *" spelling="out_name" id="2302520758042"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Accumulate the result codes" comment_scope_start="1019" comment_scope_end="1023">
		<SYMBOLS>
			<UnexposedExpr type="struct global *" spelling="global" id="2304199850263"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302120461819"/>
			<UnexposedExpr type="int" spelling="rc" id="2302454719157"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2302931196671"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302968688385"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301494202212"/>
			<CallExpr type="void" spelling="clear" id="2300189825702"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302206225730"/>
			<DeclRefExpr type="int" spelling="rc" id="2301765788759"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2301948216790"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300536175996"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302149471566"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301858221042"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302679126729"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="status code: non-zero on read or write error" comment_scope_start="1024" comment_scope_end="1024">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="rc" id="2301561947596"/>
			<DeclRefExpr type="int" spelling="rc" id="2303290218184"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Initialize a file control structure.  This will open the given files as
    * well.  The status code returned is 0 on success, non zero (using the flags
    * above) on a file open error." comment_scope_start="1030" comment_scope_end="1084">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2302728606628"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303621925780"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303781656839"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302401698430"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300851848403"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301085747789"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302439060696"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300355829940"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2300825970543"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303549985751"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303842329097"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300338525444"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300699635252"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300048536480"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300543874772"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303527494088"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300198416572"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303751145915"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300002920737"/>
			<UnexposedExpr type="void *" spelling="alloc_ptr" id="2301934862985"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301368418541"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2302554198296"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2304155645096"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2303195798124"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303788972414"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302086621419"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2303491023024"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2300974500485"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2300156378958"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303897401000"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302412480414"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303623624373"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302305993192"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="perror" id="2301911483192"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302413015076"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2303497554766"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302032780668"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2304122502606"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2302537575239"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303363298275"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300724732083"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302338814135"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2301790997782"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301724285788"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="perror" id="2300471146679"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2301557889459"/>
			<CallExpr type="void" spelling="clear" id="2301178813881"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302168302318"/>
			<CallExpr type="FILE *" spelling="fopen" id="2303831454562"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300690243769"/>
			<CallExpr type="void" spelling="perror" id="2301679698218"/>
			<CallExpr type="FILE *" spelling="fopen" id="2301555144547"/>
			<CallExpr type="int *" spelling="__errno_location" id="2301795017604"/>
			<CallExpr type="void" spelling="perror" id="2300986429995"/>
			<StringLiteral type="char [18]" spelling="&quot;file_name != NULL&quot;" id="2301755704306"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300966255406"/>
			<StringLiteral type="const char [112]" spelling="&quot;int file_init(struct file *, struct global *, const char *, const char *, void *, void (*)(struct file *, int))&quot;" id="2303491122220"/>
			<StringLiteral type="char [3]" spelling="&quot;rb&quot;" id="2300616755052"/>
			<StringLiteral type="char [3]" spelling="&quot;wb&quot;" id="2301976798668"/>
			<FunctionDecl type="int (struct file *, struct global *, const char *, const char *, void *, void (*)(struct file *, int))" spelling="file_init" id="2300412732094"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2302507477275"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300246528389"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303289589253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303615395369"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2303246148886"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304185458992"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2303276893578"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303210886014"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2302787178794"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301234469017"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302355481191"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301034187597"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300017896847"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301082802590"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301273236490"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301920867503"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302534980718"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303556923827"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304164504961"/>
			<DeclRefExpr type="void *" spelling="alloc_ptr" id="2301194461538"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300279302783"/>
			<DeclRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2301044464342"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2301272659677"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2303605296619"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300412385296"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301309352101"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2300620110660"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2302143680681"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301342773075"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301912274521"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2302210152205"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303357614370"/>
			<DeclRefExpr type="void (const char *)" spelling="perror" id="2301281165568"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2302913541003"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2303342009161"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303174092275"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2303044037072"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2300483971704"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303220698929"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300604809977"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2304261608522"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302124953362"/>
			<DeclRefExpr type="void (const char *)" spelling="perror" id="2303976751743"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2302945023384"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301559791647"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2301016195737"/>
			<MemberRefExpr type="const char *" spelling="out_name" id="2301402322957"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300734626683"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2302052681251"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303936066997"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2303109243912"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2302618292985"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303113168885"/>
			<MemberRefExpr type="int" spelling="state" id="2302902158870"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300297454113"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302877107403"/>
			<MemberRefExpr type="void *" spelling="alloc_ptr" id="2302838354776"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303168426993"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2300206380553"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2300889147946"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2303322135856"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301722927933"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2300840112319"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2303507810574"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303672078182"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301050306035"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returned" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="jmpbuf is garbage: must be set by read_png" comment_scope_start="1046" comment_scope_end="1056">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300543874772"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303527494088"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300198416572"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303751145915"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300002920737"/>
			<UnexposedExpr type="void *" spelling="alloc_ptr" id="2301934862985"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301368418541"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2302554198296"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301273236490"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301920867503"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302534980718"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303556923827"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304164504961"/>
			<DeclRefExpr type="void *" spelling="alloc_ptr" id="2301194461538"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300279302783"/>
			<DeclRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2301044464342"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303113168885"/>
			<MemberRefExpr type="int" spelling="state" id="2302902158870"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300297454113"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302877107403"/>
			<MemberRefExpr type="void *" spelling="alloc_ptr" id="2302838354776"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303168426993"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="garbage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Open the files:" comment_scope_start="1057" comment_scope_end="1064">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="file_name" id="2304155645096"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2303195798124"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303788972414"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302086621419"/>
			<UnexposedExpr type="FILE *(*)(const char *, const char *)" spelling="fopen" id="2303491023024"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2300974500485"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2300156378958"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303897401000"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302412480414"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303623624373"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302305993192"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302168302318"/>
			<CallExpr type="FILE *" spelling="fopen" id="2303831454562"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300690243769"/>
			<StringLiteral type="char [18]" spelling="&quot;file_name != NULL&quot;" id="2301755704306"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300966255406"/>
			<StringLiteral type="const char [112]" spelling="&quot;int file_init(struct file *, struct global *, const char *, const char *, void *, void (*)(struct file *, int))&quot;" id="2303491122220"/>
			<StringLiteral type="char [3]" spelling="&quot;rb&quot;" id="2300616755052"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2301272659677"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2303605296619"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300412385296"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301309352101"/>
			<DeclRefExpr type="FILE *(const char *, const char *)" spelling="fopen" id="2300620110660"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2302143680681"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301342773075"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301912274521"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2302210152205"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303357614370"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2300206380553"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2300889147946"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2303322135856"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301722927933"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Always output: please give a readable file!" comment_scope_start="1065" comment_scope_end="1068">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(const char *)" spelling="perror" id="2301911483192"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302413015076"/>
			<CallExpr type="void" spelling="perror" id="2301679698218"/>
			<DeclRefExpr type="void (const char *)" spelling="perror" id="2301281165568"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2302913541003"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Like emit_error but checks the global 'errors' flag" comment_scope_start="1088" comment_scope_end="1092">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2302904514102"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301196605035"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301801121690"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="emit_error" id="2300291230642"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300277292463"/>
			<UnexposedExpr type="int" spelling="code" id="2303657058033"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301506128319"/>
			<CallExpr type="void" spelling="emit_error" id="2302129200360"/>
			<FunctionDecl type="void (struct file *, int, const char *)" spelling="log_error" id="2300895379730"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302408664894"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="emit_error" id="2301765566128"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301929232657"/>
			<DeclRefExpr type="int" spelling="code" id="2303842000663"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301698885980"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2300538417119"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303003168944"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="In fact because chunk::chunk_type is validated prior to any call to this
    * function it will always return a-zA-Z, but the extra codes are just there
    * to help in finding internal (programming) errors.  Note that the code only
    * ever considers the low 7 bits of the value (so it is not necessary for the
    * type_name function to mask of the byte.)" comment_scope_start="1097" comment_scope_end="1108">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2301173040288"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2301793863522"/>
			<UnexposedExpr type="png_uint_32" spelling="v" id="2300575463191"/>
			<StringLiteral type="char [33]" spelling="&quot;!abcdefghijklmnopqrstuvwxyz56789&quot;" id="2300011609705"/>
			<StringLiteral type="char [33]" spelling="&quot;@ABCDEFGHIJKLMNOPQRSTUVWXYZ01234&quot;" id="2303850905751"/>
			<FunctionDecl type="char (png_uint_32)" spelling="type_char" id="2302358121942"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2303568645970"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2303012649499"/>
			<DeclRefExpr type="png_uint_32" spelling="v" id="2303780579368"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return control when a PNG file cannot be read. This outputs an 'ERR'
    * summary line too." comment_scope_start="1130" comment_scope_end="1181">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="log_error" id="2303152879799"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301156240933"/>
			<UnexposedExpr type="int" spelling="code" id="2301063648883"/>
			<UnexposedExpr type="const char *" spelling="what" id="2300953268839"/>
			<UnexposedExpr type="int" spelling="quiet" id="2301889171658"/>
			<UnexposedExpr type="unsigned int" spelling="quiet" id="2302364040931"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303614062978"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302145809134"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303915574819"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301697673955"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *, int)" spelling="current_type" id="2301190715391"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304061458926"/>
			<UnexposedExpr type="int" spelling="code" id="2300592545534"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303537394216"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300497305810"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302835297296"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2302666650540"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300980232891"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301223975470"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2301543009144"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301980685790"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2302495141833"/>
			<UnexposedExpr type="int" spelling="status_code" id="2304253992140"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301236329191"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="strcode" id="2301880368398"/>
			<UnexposedExpr type="int" spelling="code" id="2303634010733"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300098727086"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2300648042975"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2303180674072"/>
			<UnexposedExpr type="int" spelling="read_errno" id="2301451920609"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303528039194"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300526352538"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304182344320"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301500398289"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300266812676"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2302437929739"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2300602654889"/>
			<UnexposedExpr type="int" spelling="write_errno" id="2300489626667"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302302328433"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300220252324"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532326461"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302451964872"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2304057452408"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301500198289"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302467993205"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532161574"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301991410512"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2304226837731"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302869382141"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300077405322"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303412532908"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302957225685"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300880901201"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301119345607"/>
			<UnexposedExpr type="void (*)(struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2304018175284"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="jmpbuf" id="2301363456665"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301298057030"/>
			<UnexposedExpr type="int" spelling="code" id="2300115187097"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="log_error" id="2303036935177"/>
			<CallExpr type="png_uint_32" spelling="current_type" id="2303613160857"/>
			<CallExpr type="void" spelling="type_name" id="2301647475047"/>
			<CallExpr type="int" spelling="fputs" id="2301527305136"/>
			<CallExpr type="int" spelling="printf" id="2300331004191"/>
			<CallExpr type="const char *" spelling="strcode" id="2300100551910"/>
			<CallExpr type="void" spelling="emit_string" id="2302354062122"/>
			<CallExpr type="char *" spelling="strerror" id="2300514203964"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301227833239"/>
			<CallExpr type="void" spelling="emit_string" id="2302954579573"/>
			<CallExpr type="char *" spelling="strerror" id="2301531610657"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303648051114"/>
			<CallExpr type="void" spelling="emit_string" id="2300928132733"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303017175285"/>
			<CallExpr type="int" spelling="fputs" id="2300728836201"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302086783434"/>
			<CallExpr type="void" spelling="longjmp" id="2300878235138"/>
			<StringLiteral type="char [5]" spelling="&quot;HEAD&quot;" id="2300531605159"/>
			<StringLiteral type="char [14]" spelling="&quot; ERR %.2x %s &quot;" id="2303038691408"/>
			<VarDecl type="png_uint_32" spelling="type" id="2303451203070"/>
			<FunctionDecl type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303109522227"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="log_error" id="2302649424950"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300796967557"/>
			<DeclRefExpr type="int" spelling="code" id="2302309610915"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301685838823"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300874666279"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301167772294"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304283567049"/>
			<DeclRefExpr type="png_uint_32 (struct file *, int)" spelling="current_type" id="2301485866233"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302177406261"/>
			<DeclRefExpr type="int" spelling="code" id="2302573719094"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301473741791"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302607861823"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304275867647"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2300091990710"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301290549507"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301331225751"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303593879449"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300807884936"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2301297853399"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301620650784"/>
			<DeclRefExpr type="const char *(int)" spelling="strcode" id="2303754206243"/>
			<DeclRefExpr type="int" spelling="code" id="2303449106306"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2301144469310"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2301027730365"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304137234246"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303576071979"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303114813730"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303015047360"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2300092328228"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2303989432165"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301652579013"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300331309940"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303908850706"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302121356085"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2302538203161"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301052778089"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301335653520"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303272017252"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300714338127"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2300512142801"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302464664077"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302700636505"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301992557307"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301260621795"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302832678584"/>
			<DeclRefExpr type="void (struct __jmp_buf_tag *, int) __attribute__((noreturn))" spelling="longjmp" id="2301903123465"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303426337697"/>
			<DeclRefExpr type="int" spelling="code" id="2301953994293"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2301483090532"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301502191118"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302516906308"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2300874351978"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300338189840"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300392879495"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303402804887"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2302653230328"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301519129417"/>
			<MemberRefExpr type="jmp_buf" spelling="jmpbuf" id="2301712400040"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The chunk being read is typically identified by file-&gt;chunk or, if this is
    * NULL, by file-&gt;type.  This may be wrong if libpng reads ahead, but this
    * only happens with IDAT where libpng reads the header then jumps around
    * finding errors in the previous chunks.  We know that is happening because
    * we are at the start of the IDAT (i.e. no IDAT data has yet been written.)
    *
    * SUMMARY FORMAT (stop):
    *
    * IDAT ERR status code read-errno write-errno message file
    *
    * 'uncompressed' will be 0 if there was a problem in the IHDR.  The errno
    * values are emit_string(strerror(errno))." comment_scope_start="1136" comment_scope_end="1177">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="quiet" id="2301889171658"/>
			<UnexposedExpr type="unsigned int" spelling="quiet" id="2302364040931"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303614062978"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302145809134"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303915574819"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301697673955"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *, int)" spelling="current_type" id="2301190715391"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304061458926"/>
			<UnexposedExpr type="int" spelling="code" id="2300592545534"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303537394216"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300497305810"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302835297296"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2302666650540"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300980232891"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301223975470"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2301543009144"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301980685790"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2302495141833"/>
			<UnexposedExpr type="int" spelling="status_code" id="2304253992140"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301236329191"/>
			<UnexposedExpr type="const char *(*)(int)" spelling="strcode" id="2301880368398"/>
			<UnexposedExpr type="int" spelling="code" id="2303634010733"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300098727086"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2300648042975"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2303180674072"/>
			<UnexposedExpr type="int" spelling="read_errno" id="2301451920609"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303528039194"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300526352538"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304182344320"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301500398289"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300266812676"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2302437929739"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2300602654889"/>
			<UnexposedExpr type="int" spelling="write_errno" id="2300489626667"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302302328433"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300220252324"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532326461"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302451964872"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2304057452408"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301500198289"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302467993205"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532161574"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301991410512"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2304226837731"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302869382141"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300077405322"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303412532908"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302957225685"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300880901201"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="png_uint_32" spelling="current_type" id="2303613160857"/>
			<CallExpr type="void" spelling="type_name" id="2301647475047"/>
			<CallExpr type="int" spelling="fputs" id="2301527305136"/>
			<CallExpr type="int" spelling="printf" id="2300331004191"/>
			<CallExpr type="const char *" spelling="strcode" id="2300100551910"/>
			<CallExpr type="void" spelling="emit_string" id="2302354062122"/>
			<CallExpr type="char *" spelling="strerror" id="2300514203964"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301227833239"/>
			<CallExpr type="void" spelling="emit_string" id="2302954579573"/>
			<CallExpr type="char *" spelling="strerror" id="2301531610657"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303648051114"/>
			<CallExpr type="void" spelling="emit_string" id="2300928132733"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303017175285"/>
			<CallExpr type="int" spelling="fputs" id="2300728836201"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302086783434"/>
			<StringLiteral type="char [5]" spelling="&quot;HEAD&quot;" id="2300531605159"/>
			<StringLiteral type="char [14]" spelling="&quot; ERR %.2x %s &quot;" id="2303038691408"/>
			<VarDecl type="png_uint_32" spelling="type" id="2303451203070"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300874666279"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301167772294"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304283567049"/>
			<DeclRefExpr type="png_uint_32 (struct file *, int)" spelling="current_type" id="2301485866233"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302177406261"/>
			<DeclRefExpr type="int" spelling="code" id="2302573719094"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301473741791"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302607861823"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304275867647"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2300091990710"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301290549507"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301331225751"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303593879449"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300807884936"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2301297853399"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301620650784"/>
			<DeclRefExpr type="const char *(int)" spelling="strcode" id="2303754206243"/>
			<DeclRefExpr type="int" spelling="code" id="2303449106306"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2301144469310"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2301027730365"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304137234246"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303576071979"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303114813730"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303015047360"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2300092328228"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2303989432165"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301652579013"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300331309940"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303908850706"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302121356085"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2302538203161"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301052778089"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301335653520"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303272017252"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300714338127"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2300512142801"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302464664077"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302700636505"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301992557307"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301260621795"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2301483090532"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301502191118"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302516906308"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2300874351978"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300338189840"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300392879495"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303402804887"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2302653230328"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="uncompressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="need two quiets to stop this." comment_scope_start="1149" comment_scope_end="1149">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="quiet" id="2301889171658"/>
			<UnexposedExpr type="unsigned int" spelling="quiet" id="2302364040931"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303614062978"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302145809134"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300874666279"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2301483090532"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301502191118"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Gropes in struct chunk and IDAT" comment_scope_start="1154" comment_scope_end="1154">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 (*)(struct file *, int)" spelling="current_type" id="2301190715391"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304061458926"/>
			<UnexposedExpr type="int" spelling="code" id="2300592545534"/>
			<CallExpr type="png_uint_32" spelling="current_type" id="2303613160857"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304283567049"/>
			<DeclRefExpr type="png_uint_32 (struct file *, int)" spelling="current_type" id="2301485866233"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302177406261"/>
			<DeclRefExpr type="int" spelling="code" id="2302573719094"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="magic: an IDAT header, produces bogons for too many IDATs" comment_scope_start="1162" comment_scope_end="1162"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="not a registered chunk!" comment_scope_start="1163" comment_scope_end="1163">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2301543009144"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301980685790"/>
			<CallExpr type="int" spelling="fputs" id="2301527305136"/>
			<StringLiteral type="char [5]" spelling="&quot;HEAD&quot;" id="2300531605159"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303593879449"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300807884936"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This only works one strerror at a time, because of the way strerror is
       * implemented." comment_scope_start="1166" comment_scope_end="1177">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300098727086"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2300648042975"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2303180674072"/>
			<UnexposedExpr type="int" spelling="read_errno" id="2301451920609"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303528039194"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300526352538"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304182344320"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301500398289"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2300266812676"/>
			<UnexposedExpr type="const char *" spelling="strerror" id="2302437929739"/>
			<UnexposedExpr type="char *(*)(int)" spelling="strerror" id="2300602654889"/>
			<UnexposedExpr type="int" spelling="write_errno" id="2300489626667"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302302328433"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300220252324"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532326461"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302451964872"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2304057452408"/>
			<UnexposedExpr type="const char *" spelling="what" id="2301500198289"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302467993205"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303532161574"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301991410512"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2304226837731"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2302869382141"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300077405322"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303412532908"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302957225685"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300880901201"/>
			<CallExpr type="void" spelling="emit_string" id="2302354062122"/>
			<CallExpr type="char *" spelling="strerror" id="2300514203964"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301227833239"/>
			<CallExpr type="void" spelling="emit_string" id="2302954579573"/>
			<CallExpr type="char *" spelling="strerror" id="2301531610657"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303648051114"/>
			<CallExpr type="void" spelling="emit_string" id="2300928132733"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303017175285"/>
			<CallExpr type="int" spelling="fputs" id="2300728836201"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302086783434"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2301144469310"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2301027730365"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304137234246"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303576071979"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303114813730"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303015047360"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2300092328228"/>
			<DeclRefExpr type="char *(int)" spelling="strerror" id="2303989432165"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301652579013"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300331309940"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303908850706"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302121356085"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2302538203161"/>
			<DeclRefExpr type="const char *" spelling="what" id="2301052778089"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301335653520"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303272017252"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300714338127"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2300512142801"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302464664077"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302700636505"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301992557307"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301260621795"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300392879495"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2303402804887"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2302653230328"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Error message for a chunk; the chunk name comes from 'type'" comment_scope_start="1191" comment_scope_end="1202">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2301767457580"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303462444554"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303936060672"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2302457602062"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2300538104844"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302972637130"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300925619575"/>
			<UnexposedExpr type="void (*)(FILE *)" spelling="type_sep" id="2303079892423"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301973831485"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2303691819897"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302410387682"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303719611610"/>
			<UnexposedExpr type="void (*)(FILE *)" spelling="type_sep" id="2301539356620"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302707404880"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2302758992775"/>
			<UnexposedExpr type="const char *" spelling="what" id="2303075954520"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301487484109"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303054389162"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302867348235"/>
			<CallExpr type="int" spelling="fputs" id="2300489173810"/>
			<CallExpr type="void" spelling="type_sep" id="2303651608587"/>
			<CallExpr type="void" spelling="type_name" id="2302871650737"/>
			<CallExpr type="void" spelling="type_sep" id="2301998190523"/>
			<CallExpr type="int" spelling="fputs" id="2302388820778"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302949753148"/>
			<FunctionDecl type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301644911549"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301208886081"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304290013505"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300573051022"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302082831719"/>
			<DeclRefExpr type="void (FILE *)" spelling="type_sep" id="2300380893306"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303820087045"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2304105711538"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300231482922"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301238488052"/>
			<DeclRefExpr type="void (FILE *)" spelling="type_sep" id="2303499047447"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303018053498"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2302671272637"/>
			<DeclRefExpr type="const char *" spelling="what" id="2300404887969"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301583955561"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301843468339"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301066470497"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2303134609575"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303063740158"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2304187889288"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Input file positioning - we jump around in the input file while reading
 * stuff, these wrappers deal with the error handling." comment_scope_start="1204" comment_scope_end="1211">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(FILE *restrict, fpos_t *restrict)" spelling="fgetpos" id="2301412310978"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2300758588080"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304043224336"/>
			<UnexposedExpr type="fpos_t *" spelling="pos" id="2301588814290"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="fpos_t" spelling="fpos_t" id="2300458481401"/>
			<CallExpr type="int" spelling="fgetpos" id="2302647414736"/>
			<DeclRefExpr type="int (FILE *restrict, fpos_t *restrict)" spelling="fgetpos" id="2302476954492"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301986448096"/>
			<DeclRefExpr type="fpos_t *" spelling="pos" id="2303163383339"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2302603920286"/>
			<ParmDecl type="struct file *" spelling="file" id="2302344811725"/>
			<ParmDecl type="fpos_t *" spelling="pos" id="2301571184879"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is unexpected, so perror it" comment_scope_start="1212" comment_scope_end="1215">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(const char *)" spelling="perror" id="2300525952719"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2303959866674"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300310676528"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300470317498"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302993675767"/>
			<CallExpr type="void" spelling="perror" id="2302395163665"/>
			<CallExpr type="void" spelling="stop" id="2303208285158"/>
			<StringLiteral type="char [8]" spelling="&quot;fgetpos&quot;" id="2301752314421"/>
			<DeclRefExpr type="void (const char *)" spelling="perror" id="2300688188635"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300504581265"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303659028159"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301283532719"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2301204192079"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Get the current position and store it in 'data_pos'.  The corresponding
    * setpos() function is chunk specific because it uses the copy of the
    * position for the specific chunk." comment_scope_start="1230" comment_scope_end="1236">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, fpos_t *)" spelling="file_getpos" id="2303256693756"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302492260207"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301406257977"/>
			<CallExpr type="void" spelling="file_getpos" id="2300223329872"/>
			<FunctionDecl type="void (struct file *)" spelling="getpos" id="2303852029687"/>
			<DeclRefExpr type="void (struct file *, fpos_t *)" spelling="file_getpos" id="2301222462049"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301324294261"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302951001030"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2301066464762"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read utility - read a single byte, returns a value in the range 0..255 or EOF
 * on a read error.  In the latter case status_code and read_errno are updated
 * appropriately." comment_scope_start="1239" comment_scope_end="1256">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(_IO_FILE *)" spelling="_IO_getc" id="2304018160514"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2300523479355"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302877842754"/>
			<UnexposedExpr type="int" spelling="ch" id="2301459432715"/>
			<UnexposedExpr type="int" spelling="ch" id="2300329277225"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300625417074"/>
			<UnexposedExpr type="int" spelling="ch" id="2303991593297"/>
			<UnexposedExpr type="int" spelling="ch" id="2303887839562"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301432918102"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<CallExpr type="int" spelling="_IO_getc" id="2303283428168"/>
			<VarDecl type="int" spelling="ch" id="2301648725630"/>
			<DeclRefExpr type="int (_IO_FILE *)" spelling="_IO_getc" id="2300367048807"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301443734684"/>
			<DeclRefExpr type="int" spelling="ch" id="2301955530922"/>
			<DeclRefExpr type="int" spelling="ch" id="2303980704092"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301941283220"/>
			<DeclRefExpr type="int" spelling="ch" id="2300434868513"/>
			<DeclRefExpr type="int" spelling="ch" id="2303430644731"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301713169982"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2303781388112"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300949309496"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301259507465"/>
			<ParmDecl type="struct file *" spelling="file" id="2300262511550"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="utility" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="out of range character" comment_scope_start="1257" comment_scope_end="1257">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2302732696662"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304133707603"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2303429387054"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="range" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="character" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is very unexpected; an error message is always output:" comment_scope_start="1259" comment_scope_end="1261">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="emit_error" id="2300611311883"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304127816732"/>
			<CallExpr type="void" spelling="emit_error" id="2303432562690"/>
			<StringLiteral type="char [10]" spelling="&quot;file read&quot;" id="2300735205128"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="emit_error" id="2301431386610"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300980630638"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Interrupted, try again" comment_scope_start="1264" comment_scope_end="1264">
		<SYMBOLS>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2300354371192"/>
			<CallExpr type="int *" spelling="__errno_location" id="2301939244427"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2303565873334"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="try" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="An error, it doesn't really matter what the error is but it gets
       * recorded anyway." comment_scope_start="1273" comment_scope_end="1279">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(FILE *)" spelling="ferror" id="2300169602293"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2304244654444"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300756852163"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300803056004"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2300424007722"/>
			<UnexposedExpr type="int (*)(FILE *)" spelling="feof" id="2302469233567"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2304260442130"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303453617338"/>
			<CallExpr type="int" spelling="ferror" id="2300204081884"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300391574956"/>
			<CallExpr type="int" spelling="feof" id="2303688288515"/>
			<DeclRefExpr type="int (FILE *)" spelling="ferror" id="2300882380582"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303627194727"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303700578101"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2301273117200"/>
			<DeclRefExpr type="int (FILE *)" spelling="feof" id="2302551653530"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303069572066"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2301101166769"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2301148170870"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2301084272616"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="I.e. a regular EOF, no error" comment_scope_start="1280" comment_scope_end="1280">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303247152655"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303156134567"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300733485009"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="regular" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected" comment_scope_start="1282" comment_scope_end="1282"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="'TRUNCATED' is used for all cases of failure to read a byte, because of
    * the way libpng works a byte read is never attempted unless the byte is
    * expected to be there, so EOF should not occur." comment_scope_start="1286" comment_scope_end="1292">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2302237503454"/>
			<FunctionDecl type="int (struct file *)" spelling="read_byte" id="2302700829818"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303774090751"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301692280272"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read a byte when an error is not expected to happen because the byte has
    * been read before without error." comment_scope_start="1296" comment_scope_end="1309">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(_IO_FILE *)" spelling="_IO_getc" id="2304000090722"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2303651558041"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304217983506"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303889296274"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302365621900"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303043708552"/>
			<UnexposedExpr type="int" spelling="ch" id="2301341380621"/>
			<UnexposedExpr type="int" spelling="ch" id="2302745675511"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303856099347"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304200375939"/>
			<UnexposedExpr type="int" spelling="ch" id="2301387739932"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="int" spelling="_IO_getc" id="2300958623215"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300222450916"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300136881715"/>
			<CallExpr type="void" spelling="stop" id="2300016280258"/>
			<StringLiteral type="char [7]" spelling="&quot;reread&quot;" id="2301885107917"/>
			<VarDecl type="int" spelling="ch" id="2301438878762"/>
			<FunctionDecl type="png_byte (struct file *)" spelling="reread_byte" id="2301954727330"/>
			<DeclRefExpr type="int (_IO_FILE *)" spelling="_IO_getc" id="2303529203938"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300164713044"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2303150722980"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302894637644"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2302061149662"/>
			<DeclRefExpr type="int" spelling="ch" id="2302563428806"/>
			<DeclRefExpr type="int" spelling="ch" id="2303669990110"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300393295445"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300351249412"/>
			<DeclRefExpr type="int" spelling="ch" id="2303714476109"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2300676999450"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2300789325333"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The same but for a four byte quantity" comment_scope_start="1313" comment_scope_end="1322">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2302432030264"/>
			<UnexposedExpr type="unsigned int" spelling="reread_byte" id="2300044719413"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301482500595"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300331931845"/>
			<UnexposedExpr type="png_uint_32" spelling="result" id="2302643799855"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2302728880563"/>
			<VarDecl type="png_uint_32" spelling="result" id="2300861466626"/>
			<VarDecl type="int" spelling="i" id="2300305704998"/>
			<FunctionDecl type="png_uint_32 (struct file *)" spelling="reread_4" id="2302250962292"/>
			<DeclRefExpr type="int" spelling="i" id="2302043583337"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2303598543235"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2304184748658"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2301555827318"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302716028433"/>
			<DeclRefExpr type="png_uint_32" spelling="result" id="2300194852141"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Skip exactly 12 bytes in the input stream - used to skip a CRC and chunk
    * header that has been read before." comment_scope_start="1326" comment_scope_end="1338">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(FILE *, long, int)" spelling="fseek" id="2300390734772"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2301972306407"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300067310454"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2301883214282"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302914272572"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303573251965"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303706004584"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301950370262"/>
			<CallExpr type="int" spelling="fseek" id="2304273024106"/>
			<CallExpr type="int *" spelling="__errno_location" id="2303251759119"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300350846769"/>
			<CallExpr type="void" spelling="stop" id="2304244571457"/>
			<StringLiteral type="char [7]" spelling="&quot;reskip&quot;" id="2302006731414"/>
			<FunctionDecl type="void (struct file *)" spelling="skip_12" id="2303892958799"/>
			<DeclRefExpr type="int (FILE *, long, int)" spelling="fseek" id="2301819099643"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303910633419"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2302883275970"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301066356070"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2300520929281"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301724500766"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301581610383"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2302678179067"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2303423084950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Since the chunks were read before this shouldn't fail:" comment_scope_start="1330" comment_scope_end="1337">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(FILE *, long, int)" spelling="fseek" id="2300390734772"/>
			<UnexposedExpr type="FILE *" spelling="file" id="2301972306407"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300067310454"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2301883214282"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302914272572"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303573251965"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303706004584"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301950370262"/>
			<CallExpr type="int" spelling="fseek" id="2304273024106"/>
			<CallExpr type="int *" spelling="__errno_location" id="2303251759119"/>
			<CallExpr type="int *" spelling="__errno_location" id="2300350846769"/>
			<CallExpr type="void" spelling="stop" id="2304244571457"/>
			<StringLiteral type="char [7]" spelling="&quot;reskip&quot;" id="2302006731414"/>
			<DeclRefExpr type="int (FILE *, long, int)" spelling="fseek" id="2301819099643"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303910633419"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2302883275970"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301066356070"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2300520929281"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301724500766"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301581610383"/>
			<MemberRefExpr type="FILE *" spelling="file" id="2302678179067"/>
			<MemberRefExpr type="int" spelling="read_errno" id="2303423084950"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="fail" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Write one byte to the output - this causes a fatal error if the write
    * fails and the read of this PNG file immediately terminates.  Just
    * increments the write count if there is no output file." comment_scope_start="1342" comment_scope_end="1358">
		<SYMBOLS>
			<UnexposedExpr type="FILE *" spelling="out" id="2300449508632"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303147199672"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303204613323"/>
			<UnexposedExpr type="int" spelling="b" id="2300085102394"/>
			<UnexposedExpr type="FILE *" spelling="out" id="2303512449217"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302674047466"/>
			<UnexposedExpr type="int" spelling="b" id="2303394769301"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303730326542"/>
			<UnexposedExpr type="int *(*)(void)" spelling="__errno_location" id="2303584696426"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300386672843"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300958091405"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304064322394"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303792799551"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303244641480"/>
			<CallExpr type="int *" spelling="__errno_location" id="2301346445976"/>
			<CallExpr type="void" spelling="stop" id="2302232097669"/>
			<StringLiteral type="char [11]" spelling="&quot;write byte&quot;" id="2300739493584"/>
			<FunctionDecl type="void (struct file *, int)" spelling="write_byte" id="2304057022142"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300197550153"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302335182174"/>
			<DeclRefExpr type="int" spelling="b" id="2302339698481"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300584987291"/>
			<DeclRefExpr type="int" spelling="b" id="2303064497434"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302455341994"/>
			<DeclRefExpr type="int *(void)" spelling="__errno_location" id="2301511472259"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300364345596"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303217840082"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302234123999"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301446798934"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2302024465374"/>
			<MemberRefExpr type="FILE *" spelling="out" id="2303740649423"/>
			<MemberRefExpr type="int" spelling="write_errno" id="2302360975313"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302758172849"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303371512598"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="terminates" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="increments" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Derivatives of the read/write functions." comment_scope_start="1360" comment_scope_end="1362">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<ParmDecl type="struct file *" spelling="file" id="2300314428199"/>
			<ParmDecl type="png_uint_32 *" spelling="pu" id="2303727449589"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="derivatives" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read four bytes, returns the number of bytes read successfully and, if all
    * four bytes are read, assigns the result to *pu." comment_scope_start="1363" comment_scope_end="1382">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2304270430783"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304214521940"/>
			<UnexposedExpr type="int" spelling="ch" id="2300701733837"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2302416100890"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2301250843202"/>
			<UnexposedExpr type="unsigned int" spelling="ch" id="2301173683845"/>
			<UnexposedExpr type="int" spelling="ch" id="2302498680395"/>
			<UnexposedExpr type="png_uint_32 *" spelling="pu" id="2300964171693"/>
			<UnexposedExpr type="png_uint_32" spelling="val" id="2302794781777"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2300779837124"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="read_byte" id="2303206880375"/>
			<VarDecl type="unsigned int" spelling="i" id="2301899527347"/>
			<VarDecl type="png_uint_32" spelling="val" id="2301470028513"/>
			<VarDecl type="int" spelling="ch" id="2302106266217"/>
			<FunctionDecl type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2304201303325"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2302440258378"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303307447050"/>
			<DeclRefExpr type="int" spelling="ch" id="2303757964668"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2302946807726"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2303313737913"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2302358990543"/>
			<DeclRefExpr type="int" spelling="ch" id="2303124233555"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2301350962510"/>
			<DeclRefExpr type="png_uint_32 *" spelling="pu" id="2303738429939"/>
			<DeclRefExpr type="png_uint_32" spelling="val" id="2301355948719"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2301462115453"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="assigns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="CRC handling - read but calculate the CRC while doing so." comment_scope_start="1384" comment_scope_end="1386">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<ParmDecl type="struct file *" spelling="file" id="2303699282151"/>
			<ParmDecl type="png_uint_32" spelling="length" id="2302499892440"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Reads 'length' bytes and updates the CRC, returns true on success, false
    * if the input is truncated." comment_scope_start="1387" comment_scope_end="1410">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304266368991"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2303515445444"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303943194398"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2303952142871"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303859382821"/>
			<UnexposedExpr type="int" spelling="ch" id="2300383658589"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="crc_one_byte" id="2304161208823"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300422187910"/>
			<UnexposedExpr type="int" spelling="ch" id="2302064737743"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300816801948"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300885018260"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="read_byte" id="2303974664999"/>
			<CallExpr type="png_uint_32" spelling="crc_one_byte" id="2303319839997"/>
			<VarDecl type="png_uint_32" spelling="crc" id="2301019560448"/>
			<VarDecl type="int" spelling="ch" id="2303758631767"/>
			<FunctionDecl type="int (struct file *, png_uint_32)" spelling="crc_read_many" id="2303350830786"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301507598539"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302313145706"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2303201050959"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301303603674"/>
			<DeclRefExpr type="int" spelling="ch" id="2300748029111"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2301785019121"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2303158345080"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2302255468520"/>
			<DeclRefExpr type="int" spelling="ch" id="2301208564948"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303236156652"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300383698497"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2302461860698"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2301598935446"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2302246931595"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="updates" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Truncated" comment_scope_start="1400" comment_scope_end="1400"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="OK" comment_scope_start="1409" comment_scope_end="1409"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Fill in the image_bytes field given the IHDR information, calls stop on
    * error." comment_scope_start="1414" comment_scope_end="1532">
		<SYMBOLS>
			<LabelRef type="" spelling="invalid_bit_depth" id="2300682356273"/>
			<LabelRef type="" spelling="invalid_bit_depth" id="2300682356273"/>
			<LabelRef type="" spelling="invalid_bit_depth" id="2300682356273"/>
			<LabelRef type="" spelling="invalid_bit_depth" id="2300682356273"/>
			<LabelRef type="" spelling="invalid_bit_depth" id="2300682356273"/>
			<UnexposedExpr type="png_uint_16" spelling="bit_depth" id="2300598982304"/>
			<UnexposedExpr type="png_byte" spelling="bit_depth" id="2302264343426"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300293237215"/>
			<UnexposedExpr type="int" spelling="color_type" id="2303107913126"/>
			<UnexposedExpr type="png_byte" spelling="color_type" id="2300799799311"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301067807988"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2302346027455"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304238695562"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2301835226476"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302944175223"/>
			<UnexposedExpr type="int" spelling="pd" id="2302619688836"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2300834742884"/>
			<UnexposedExpr type="int" spelling="pd" id="2303225392752"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302499832530"/>
			<UnexposedExpr type="int" spelling="pd" id="2301952660032"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2304059315742"/>
			<UnexposedExpr type="int" spelling="pd" id="2300561393040"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302963112092"/>
			<UnexposedExpr type="int" spelling="pd" id="2301073958666"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303413192702"/>
			<UnexposedExpr type="int" spelling="pd" id="2301396956729"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2304131457538"/>
			<UnexposedExpr type="int" spelling="pd" id="2302872473370"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302904044164"/>
			<UnexposedExpr type="int" spelling="pd" id="2302125501560"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302449121869"/>
			<UnexposedExpr type="int" spelling="pd" id="2302339460622"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302870379273"/>
			<UnexposedExpr type="int" spelling="pd" id="2300657825807"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2300220697149"/>
			<UnexposedExpr type="int" spelling="pd" id="2302595958939"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2301497275441"/>
			<UnexposedExpr type="int" spelling="pd" id="2300263403132"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302692275817"/>
			<UnexposedExpr type="int" spelling="pd" id="2301729954886"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303157170790"/>
			<UnexposedExpr type="int" spelling="pd" id="2303094005601"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2301297298282"/>
			<UnexposedExpr type="int" spelling="pd" id="2300324466147"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2300730544014"/>
			<UnexposedExpr type="int" spelling="pd" id="2300226863894"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2301724825186"/>
			<UnexposedExpr type="int" spelling="pd" id="2303393801840"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2302871971682"/>
			<UnexposedExpr type="int" spelling="pd" id="2300842510873"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2301321869424"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2302165554931"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302226781767"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2302658647201"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301699097894"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303608819068"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302883208292"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2302013297206"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300861659302"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2300525418000"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301208952898"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303465473338"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302226529807"/>
			<UnexposedExpr type="int" spelling="compression_method" id="2300399671752"/>
			<UnexposedExpr type="png_byte" spelling="compression_method" id="2303012791049"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303045082561"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2301311411688"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301041611068"/>
			<UnexposedExpr type="int" spelling="filter_method" id="2302301321978"/>
			<UnexposedExpr type="png_byte" spelling="filter_method" id="2301355400392"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300606994356"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303576672395"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301690568643"/>
			<UnexposedExpr type="int" spelling="interlace_method" id="2303720073720"/>
			<UnexposedExpr type="png_byte" spelling="interlace_method" id="2304233973282"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300371425042"/>
			<UnexposedExpr type="int" spelling="pass" id="2302635286450"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300970871961"/>
			<UnexposedExpr type="png_uint_32" spelling="pw" id="2301670926198"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2302042267473"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300790595505"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2301801833822"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300465041580"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2300145217782"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300195314665"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2301626309139"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="pw" id="2300439160167"/>
			<UnexposedExpr type="png_uint_32" spelling="pw" id="2300189837948"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303640493507"/>
			<UnexposedExpr type="int (*)(uarb, int, unsigned int)" spelling="uarb_shift" id="2302767600784"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300268230340"/>
			<UnexposedExpr type="int" spelling="digits" id="2300047573906"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301069786600"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300925832502"/>
			<UnexposedExpr type="int" spelling="digits" id="2302298745013"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2303697278085"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2302891954094"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301965395401"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2300106282387"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302592182915"/>
			<UnexposedExpr type="int" spelling="digits" id="2302124326944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300905214881"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302335317748"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2302476197821"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2301042728414"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2303777338968"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300945829540"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300609274839"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2300762867025"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300352258714"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2303935418913"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="width" id="2302293865466"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2303128266818"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300628346089"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303246976409"/>
			<UnexposedExpr type="int (*)(uarb, int, unsigned int)" spelling="uarb_shift" id="2300624344631"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2303295157012"/>
			<UnexposedExpr type="int" spelling="digits" id="2302032916003"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301160243596"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302855189946"/>
			<UnexposedExpr type="int" spelling="digits" id="2300267906167"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301349536981"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2300175946158"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2301146930560"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300582861737"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302817138481"/>
			<UnexposedExpr type="int" spelling="digits" id="2300434380886"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2302441670778"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301534819079"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2300538429216"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301022413556"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2301650160846"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303975041543"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2303720318228"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301419259967"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2300981945990"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300335007588"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2302155579047"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301132248230"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301811891276"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<CallExpr type="void" spelling="stop_invalid" id="2303070494076"/>
			<CallExpr type="void" spelling="stop_invalid" id="2304294496346"/>
			<CallExpr type="void" spelling="stop_invalid" id="2303124070302"/>
			<CallExpr type="void" spelling="stop_invalid" id="2301434523293"/>
			<CallExpr type="void" spelling="stop_invalid" id="2303713094209"/>
			<CallExpr type="void" spelling="stop_invalid" id="2303220163336"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2301018931491"/>
			<CallExpr type="int" spelling="uarb_set" id="2301783295658"/>
			<CallExpr type="int" spelling="uarb_set" id="2302929599811"/>
			<CallExpr type="int" spelling="uarb_shift" id="2301736314801"/>
			<CallExpr type="int" spelling="uarb_inc" id="2304217953299"/>
			<CallExpr type="int" spelling="uarb_mult32" id="2303978868434"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2303666348852"/>
			<CallExpr type="int" spelling="uarb_set" id="2302471668743"/>
			<CallExpr type="int" spelling="uarb_set" id="2303553281367"/>
			<CallExpr type="int" spelling="uarb_shift" id="2300623241229"/>
			<CallExpr type="int" spelling="uarb_inc" id="2304068658210"/>
			<CallExpr type="int" spelling="uarb_mult32" id="2303697040969"/>
			<CallExpr type="void" spelling="stop_invalid" id="2302126712211"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303116756686"/>
			<StringLiteral type="char [18]" spelling="&quot;IHDR: colour type&quot;" id="2300477333023"/>
			<StringLiteral type="char [16]" spelling="&quot;IHDR: bit depth&quot;" id="2300342952162"/>
			<StringLiteral type="char [12]" spelling="&quot;IHDR: width&quot;" id="2300294562970"/>
			<StringLiteral type="char [13]" spelling="&quot;IHDR: height&quot;" id="2301602442446"/>
			<StringLiteral type="char [25]" spelling="&quot;IHDR: compression method&quot;" id="2301782157176"/>
			<StringLiteral type="char [20]" spelling="&quot;IHDR: filter method&quot;" id="2300609479553"/>
			<StringLiteral type="char [23]" spelling="&quot;IHDR: interlace method&quot;" id="2302525277676"/>
			<StringLiteral type="char [51]" spelling="&quot;file-&gt;image_digits &gt;= 1 &amp;&amp; file-&gt;image_digits &lt;= 5&quot;" id="2302083171618"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303501787527"/>
			<StringLiteral type="const char [35]" spelling="&quot;int calc_image_size(struct file *)&quot;" id="2301875798988"/>
			<VarDecl type="png_uint_16" spelling="pd" id="2300468217991"/>
			<VarDecl type="int" spelling="pass" id="2302696401480"/>
			<VarDecl type="int" spelling="image_digits" id="2303757787502"/>
			<VarDecl type="udigit [2]" spelling="row_width" id="2303170304717"/>
			<VarDecl type="udigit [3]" spelling="row_bytes" id="2301232236903"/>
			<VarDecl type="png_uint_32" spelling="pw" id="2300745896095"/>
			<VarDecl type="int" spelling="digits" id="2302453022152"/>
			<VarDecl type="int" spelling="digits" id="2300484000632"/>
			<VarDecl type="udigit [2]" spelling="row_width" id="2304245527508"/>
			<VarDecl type="udigit [3]" spelling="row_bytes" id="2300803274162"/>
			<FunctionDecl type="int (struct file *)" spelling="calc_image_size" id="2300893941843"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303670382941"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302533733040"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2300734734410"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301122224602"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303736664638"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300312192187"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301366737909"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303250528396"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301767817241"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303522944181"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302424297419"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302678943407"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300741674802"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302522057329"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302087165869"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303683057158"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303197723059"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303392251416"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300342805554"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300830844262"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303801554637"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2303674068444"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302129604180"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301667244328"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300422035223"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2302694875776"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300908116186"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302830355303"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303806023417"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303970310362"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302779763329"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302158215092"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300420045715"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303915170809"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300399908039"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301258289288"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2302702709579"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301876813744"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301307399232"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2302231306270"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302183779266"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302766997711"/>
			<DeclRefExpr type="int" spelling="pass" id="2302088668952"/>
			<DeclRefExpr type="int" spelling="pass" id="2300869718932"/>
			<DeclRefExpr type="int" spelling="pass" id="2302042295328"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301908118327"/>
			<DeclRefExpr type="int" spelling="pass" id="2301645491741"/>
			<DeclRefExpr type="int" spelling="pass" id="2303477964075"/>
			<DeclRefExpr type="int" spelling="pass" id="2300786260061"/>
			<DeclRefExpr type="int" spelling="pass" id="2300602323531"/>
			<DeclRefExpr type="int" spelling="pass" id="2302752358212"/>
			<DeclRefExpr type="int" spelling="pass" id="2303134249168"/>
			<DeclRefExpr type="png_uint_32" spelling="pw" id="2301733597644"/>
			<DeclRefExpr type="int" spelling="digits" id="2304067497104"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2304253200134"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301242423251"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2302770494733"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300516078411"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2300989217461"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2303180383001"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2302699495429"/>
			<DeclRefExpr type="png_uint_32" spelling="pw" id="2301282720279"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301868696884"/>
			<DeclRefExpr type="int" spelling="digits" id="2301102221704"/>
			<DeclRefExpr type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2302807889498"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301752122210"/>
			<DeclRefExpr type="int" spelling="digits" id="2300563930065"/>
			<DeclRefExpr type="int" spelling="digits" id="2300771581546"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2301739095133"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2303317548919"/>
			<DeclRefExpr type="int" spelling="digits" id="2302622276373"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2303496302882"/>
			<DeclRefExpr type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2301491605024"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304127056910"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2301962832906"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2302920545440"/>
			<DeclRefExpr type="int" spelling="digits" id="2302435920881"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302771434125"/>
			<DeclRefExpr type="int" spelling="pass" id="2303225848236"/>
			<DeclRefExpr type="int" spelling="pass" id="2300618525723"/>
			<DeclRefExpr type="int" spelling="pass" id="2303241228431"/>
			<DeclRefExpr type="int" spelling="pass" id="2301760593624"/>
			<DeclRefExpr type="int" spelling="pass" id="2301052972065"/>
			<DeclRefExpr type="int" spelling="pass" id="2301408966012"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303353583672"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2300565219418"/>
			<DeclRefExpr type="int" spelling="digits" id="2301333065168"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2301299856271"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2303947903405"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2303719614520"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2304162960554"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2302281534409"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2300049106192"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2300030201893"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302400385847"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300315060481"/>
			<DeclRefExpr type="int" spelling="digits" id="2302191274588"/>
			<DeclRefExpr type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2300955061493"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300920796590"/>
			<DeclRefExpr type="int" spelling="digits" id="2301841073506"/>
			<DeclRefExpr type="int" spelling="digits" id="2301103114700"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2300562745610"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300529139454"/>
			<DeclRefExpr type="int" spelling="digits" id="2302792508407"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300630081277"/>
			<DeclRefExpr type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2300279415472"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302412346401"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300035801392"/>
			<DeclRefExpr type="int" spelling="digits" id="2302913379477"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303056330028"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2303920063996"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302453433661"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301508084214"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303815583750"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303690949770"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301574587505"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302225244178"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2301503079693"/>
			<MemberRefExpr type="png_byte" spelling="color_type" id="2300220117584"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2300372406146"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2300670707559"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303308786256"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2300333044624"/>
			<MemberRefExpr type="png_byte" spelling="compression_method" id="2301854703543"/>
			<MemberRefExpr type="png_byte" spelling="filter_method" id="2301979613886"/>
			<MemberRefExpr type="png_byte" spelling="interlace_method" id="2300024088790"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2303621897013"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2302123737713"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303741556142"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2302756179209"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2302994740321"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2302284386759"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2300150085335"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2304280116322"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2301754269167"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2301641021461"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2300662275910"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2302561972983"/>
			<LabelStmt type="" spelling="invalid_bit_depth" id="2302021495192"/>
			<LabelStmt type="" spelling="invalid_bit_depth" id="2302021495192"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="g" comment_scope_start="1428" comment_scope_end="1428"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="rgb" comment_scope_start="1438" comment_scope_end="1438"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ga" comment_scope_start="1445" comment_scope_end="1445"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="rgba" comment_scope_start="1452" comment_scope_end="1452"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Interlacing makes the image larger because of the replication of
          * both the filter byte and the padding to a byte boundary." comment_scope_start="1475" comment_scope_end="1506">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="pass" id="2302635286450"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300970871961"/>
			<UnexposedExpr type="png_uint_32" spelling="pw" id="2301670926198"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2302042267473"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300790595505"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2301801833822"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300465041580"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2300145217782"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300195314665"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2301626309139"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="pw" id="2300439160167"/>
			<UnexposedExpr type="png_uint_32" spelling="pw" id="2300189837948"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303640493507"/>
			<UnexposedExpr type="int (*)(uarb, int, unsigned int)" spelling="uarb_shift" id="2302767600784"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300268230340"/>
			<UnexposedExpr type="int" spelling="digits" id="2300047573906"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301069786600"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300925832502"/>
			<UnexposedExpr type="int" spelling="digits" id="2302298745013"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2303697278085"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2302891954094"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301965395401"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2300106282387"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302592182915"/>
			<UnexposedExpr type="int" spelling="digits" id="2302124326944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300905214881"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302335317748"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2302476197821"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2301018931491"/>
			<CallExpr type="int" spelling="uarb_set" id="2301783295658"/>
			<CallExpr type="int" spelling="uarb_set" id="2302929599811"/>
			<CallExpr type="int" spelling="uarb_shift" id="2301736314801"/>
			<CallExpr type="int" spelling="uarb_inc" id="2304217953299"/>
			<CallExpr type="int" spelling="uarb_mult32" id="2303978868434"/>
			<VarDecl type="int" spelling="pass" id="2302696401480"/>
			<VarDecl type="int" spelling="image_digits" id="2303757787502"/>
			<VarDecl type="udigit [2]" spelling="row_width" id="2303170304717"/>
			<VarDecl type="udigit [3]" spelling="row_bytes" id="2301232236903"/>
			<VarDecl type="png_uint_32" spelling="pw" id="2300745896095"/>
			<VarDecl type="int" spelling="digits" id="2302453022152"/>
			<DeclRefExpr type="int" spelling="pass" id="2302088668952"/>
			<DeclRefExpr type="int" spelling="pass" id="2300869718932"/>
			<DeclRefExpr type="int" spelling="pass" id="2302042295328"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301908118327"/>
			<DeclRefExpr type="int" spelling="pass" id="2301645491741"/>
			<DeclRefExpr type="int" spelling="pass" id="2303477964075"/>
			<DeclRefExpr type="int" spelling="pass" id="2300786260061"/>
			<DeclRefExpr type="int" spelling="pass" id="2300602323531"/>
			<DeclRefExpr type="int" spelling="pass" id="2302752358212"/>
			<DeclRefExpr type="int" spelling="pass" id="2303134249168"/>
			<DeclRefExpr type="png_uint_32" spelling="pw" id="2301733597644"/>
			<DeclRefExpr type="int" spelling="digits" id="2304067497104"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2304253200134"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301242423251"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2302770494733"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300516078411"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2300989217461"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2303180383001"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2302699495429"/>
			<DeclRefExpr type="png_uint_32" spelling="pw" id="2301282720279"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301868696884"/>
			<DeclRefExpr type="int" spelling="digits" id="2301102221704"/>
			<DeclRefExpr type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2302807889498"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301752122210"/>
			<DeclRefExpr type="int" spelling="digits" id="2300563930065"/>
			<DeclRefExpr type="int" spelling="digits" id="2300771581546"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2301739095133"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2303317548919"/>
			<DeclRefExpr type="int" spelling="digits" id="2302622276373"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2303496302882"/>
			<DeclRefExpr type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2301491605024"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304127056910"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2301962832906"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2302920545440"/>
			<DeclRefExpr type="int" spelling="digits" id="2302435920881"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302771434125"/>
			<DeclRefExpr type="int" spelling="pass" id="2303225848236"/>
			<DeclRefExpr type="int" spelling="pass" id="2300618525723"/>
			<DeclRefExpr type="int" spelling="pass" id="2303241228431"/>
			<DeclRefExpr type="int" spelling="pass" id="2301760593624"/>
			<DeclRefExpr type="int" spelling="pass" id="2301052972065"/>
			<DeclRefExpr type="int" spelling="pass" id="2301408966012"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303353583672"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2300565219418"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2303621897013"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2302123737713"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303741556142"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2302756179209"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="makes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="larger" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="interlacing"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="padding"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="calculate 1+((pw*pd+7)&gt;&gt;3) in row_bytes" comment_scope_start="1491" comment_scope_end="1496">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2302042267473"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300790595505"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2301801833822"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300465041580"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2300145217782"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300195314665"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2301626309139"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="pw" id="2300439160167"/>
			<UnexposedExpr type="png_uint_32" spelling="pw" id="2300189837948"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303640493507"/>
			<UnexposedExpr type="int (*)(uarb, int, unsigned int)" spelling="uarb_shift" id="2302767600784"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300268230340"/>
			<UnexposedExpr type="int" spelling="digits" id="2300047573906"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301069786600"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300925832502"/>
			<UnexposedExpr type="int" spelling="digits" id="2302298745013"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2301018931491"/>
			<CallExpr type="int" spelling="uarb_set" id="2301783295658"/>
			<CallExpr type="int" spelling="uarb_set" id="2302929599811"/>
			<CallExpr type="int" spelling="uarb_shift" id="2301736314801"/>
			<CallExpr type="int" spelling="uarb_inc" id="2304217953299"/>
			<DeclRefExpr type="int" spelling="digits" id="2304067497104"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2304253200134"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301242423251"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2302770494733"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300516078411"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2300989217461"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2303180383001"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2302699495429"/>
			<DeclRefExpr type="png_uint_32" spelling="pw" id="2301282720279"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2301868696884"/>
			<DeclRefExpr type="int" spelling="digits" id="2301102221704"/>
			<DeclRefExpr type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2302807889498"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2301752122210"/>
			<DeclRefExpr type="int" spelling="digits" id="2300563930065"/>
			<DeclRefExpr type="int" spelling="digits" id="2300771581546"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2301739095133"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2303317548919"/>
			<DeclRefExpr type="int" spelling="digits" id="2302622276373"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Add row_bytes * pass-height to the file image_bytes field" comment_scope_start="1497" comment_scope_end="1502">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2303697278085"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2302891954094"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301965395401"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2300106282387"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302592182915"/>
			<UnexposedExpr type="int" spelling="digits" id="2302124326944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300905214881"/>
			<CallExpr type="int" spelling="uarb_mult32" id="2303978868434"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2303496302882"/>
			<DeclRefExpr type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2301491605024"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304127056910"/>
			<DeclRefExpr type="int" spelling="image_digits" id="2301962832906"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2302920545440"/>
			<DeclRefExpr type="int" spelling="digits" id="2302435920881"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302771434125"/>
			<DeclRefExpr type="int" spelling="pass" id="2303225848236"/>
			<DeclRefExpr type="int" spelling="pass" id="2300618525723"/>
			<DeclRefExpr type="int" spelling="pass" id="2303241228431"/>
			<DeclRefExpr type="int" spelling="pass" id="2301760593624"/>
			<DeclRefExpr type="int" spelling="pass" id="2301052972065"/>
			<DeclRefExpr type="int" spelling="pass" id="2301408966012"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2302123737713"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303741556142"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="As above, but use image_width in place of the pass width:" comment_scope_start="1514" comment_scope_end="1519">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2301042728414"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2303777338968"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300945829540"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2300609274839"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2300762867025"/>
			<UnexposedExpr type="int (*)(uarb, png_alloc_size_t)" spelling="uarb_set" id="2300352258714"/>
			<UnexposedExpr type="udigit *" spelling="row_width" id="2303935418913"/>
			<UnexposedExpr type="png_alloc_size_t" spelling="width" id="2302293865466"/>
			<UnexposedExpr type="png_uint_32" spelling="width" id="2303128266818"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300628346089"/>
			<UnexposedExpr type="png_uint_16" spelling="pd" id="2303246976409"/>
			<UnexposedExpr type="int (*)(uarb, int, unsigned int)" spelling="uarb_shift" id="2300624344631"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2303295157012"/>
			<UnexposedExpr type="int" spelling="digits" id="2302032916003"/>
			<UnexposedExpr type="int (*)(uarb, int, png_int_32)" spelling="uarb_inc" id="2301160243596"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302855189946"/>
			<UnexposedExpr type="int" spelling="digits" id="2300267906167"/>
			<CallExpr type="int" spelling="uarb_mult_digit" id="2303666348852"/>
			<CallExpr type="int" spelling="uarb_set" id="2302471668743"/>
			<CallExpr type="int" spelling="uarb_set" id="2303553281367"/>
			<CallExpr type="int" spelling="uarb_shift" id="2300623241229"/>
			<CallExpr type="int" spelling="uarb_inc" id="2304068658210"/>
			<DeclRefExpr type="int" spelling="digits" id="2301333065168"/>
			<DeclRefExpr type="int (uarb, int, uarb, volatile int, png_uint_16)" spelling="uarb_mult_digit" id="2301299856271"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2303947903405"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2303719614520"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2304162960554"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2302281534409"/>
			<DeclRefExpr type="int (uarb, png_alloc_size_t)" spelling="uarb_set" id="2300049106192"/>
			<DeclRefExpr type="udigit [2]" spelling="row_width" id="2300030201893"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302400385847"/>
			<DeclRefExpr type="png_uint_16" spelling="pd" id="2300315060481"/>
			<DeclRefExpr type="int" spelling="digits" id="2302191274588"/>
			<DeclRefExpr type="int (uarb, int, unsigned int)" spelling="uarb_shift" id="2300955061493"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300920796590"/>
			<DeclRefExpr type="int" spelling="digits" id="2301841073506"/>
			<DeclRefExpr type="int" spelling="digits" id="2301103114700"/>
			<DeclRefExpr type="int (uarb, int, png_int_32)" spelling="uarb_inc" id="2300562745610"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300529139454"/>
			<DeclRefExpr type="int" spelling="digits" id="2302792508407"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2302994740321"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set row_bytes * image-height to the file image_bytes field" comment_scope_start="1520" comment_scope_end="1523">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2301349536981"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2300175946158"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2301146930560"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300582861737"/>
			<UnexposedExpr type="udigit *" spelling="row_bytes" id="2302817138481"/>
			<UnexposedExpr type="int" spelling="digits" id="2300434380886"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2302441670778"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301534819079"/>
			<CallExpr type="int" spelling="uarb_mult32" id="2303697040969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300630081277"/>
			<DeclRefExpr type="int (uarb, int, uarb, int, png_uint_32)" spelling="uarb_mult32" id="2300279415472"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302412346401"/>
			<DeclRefExpr type="udigit [3]" spelling="row_bytes" id="2300035801392"/>
			<DeclRefExpr type="int" spelling="digits" id="2302913379477"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303056330028"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2302284386759"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2300150085335"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2304280116322"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PER-CHUNK CONTROL STRUCTURE
 * This structure is instantiated for each chunk, except for the IDAT chunks
 * where one chunk control structure is used for the whole of a single stream of
 * IDAT chunks (see the IDAT control structure below)." comment_scope_start="1534" comment_scope_end="1564">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="fpos_t" spelling="fpos_t" id="2300458481401"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<FieldDecl type="struct file *" spelling="file" id="2300567707337"/>
			<FieldDecl type="struct global *" spelling="global" id="2301690790239"/>
			<FieldDecl type="udigit [5]" spelling="uncompressed_bytes" id="2304135422393"/>
			<FieldDecl type="int" spelling="uncompressed_digits" id="2303186522233"/>
			<FieldDecl type="udigit [5]" spelling="compressed_bytes" id="2302463824743"/>
			<FieldDecl type="int" spelling="compressed_digits" id="2303593079417"/>
			<FieldDecl type="fpos_t" spelling="chunk_data_pos" id="2300596883604"/>
			<FieldDecl type="png_uint_32" spelling="chunk_length" id="2302296147567"/>
			<FieldDecl type="png_uint_32" spelling="chunk_type" id="2300518708735"/>
			<FieldDecl type="png_uint_32" spelling="write_crc" id="2302968459438"/>
			<FieldDecl type="png_uint_32" spelling="rewrite_offset" id="2303337655073"/>
			<FieldDecl type="int" spelling="rewrite_length" id="2303552789199"/>
			<FieldDecl type="png_byte [2]" spelling="rewrite_buffer" id="2300490967220"/>
			<StructDecl type="struct chunk" spelling="chunk" id="2302144882401"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ANCESTORS" comment_scope_start="1541" comment_scope_end="1544">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<FieldDecl type="struct file *" spelling="file" id="2300567707337"/>
			<FieldDecl type="struct global *" spelling="global" id="2301690790239"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC IDAT INFORMATION: SET BY THE ZLIB CODE" comment_scope_start="1545" comment_scope_end="1550">
		<SYMBOLS>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<FieldDecl type="udigit [5]" spelling="uncompressed_bytes" id="2304135422393"/>
			<FieldDecl type="int" spelling="uncompressed_digits" id="2303186522233"/>
			<FieldDecl type="udigit [5]" spelling="compressed_bytes" id="2302463824743"/>
			<FieldDecl type="int" spelling="compressed_digits" id="2303593079417"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="public" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC PER-CHUNK INFORMATION: USED BY CHUNK READ CODE" comment_scope_start="1551" comment_scope_end="1554"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This information is filled in by chunk_init from the data in the file
    * control structure, but chunk_length may be changed later." comment_scope_start="1551" comment_scope_end="1554"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Position of first byte of chunk data" comment_scope_start="1555" comment_scope_end="1555">
		<SYMBOLS>
			<TypeRef type="fpos_t" spelling="fpos_t" id="2300458481401"/>
			<FieldDecl type="fpos_t" spelling="chunk_data_pos" id="2300596883604"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="From header (or modified below)" comment_scope_start="1556" comment_scope_end="1556">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="chunk_length" id="2302296147567"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="From header" comment_scope_start="1557" comment_scope_end="1557">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="chunk_type" id="2300518708735"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PUBLIC PER-CHUNK INFORMATION: FOR THE CHUNK WRITE CODE" comment_scope_start="1559" comment_scope_end="1559"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Output CRC (may differ from read_crc)" comment_scope_start="1560" comment_scope_end="1560">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="write_crc" id="2302968459438"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Count of bytes before rewrite." comment_scope_start="1561" comment_scope_end="1561">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="rewrite_offset" id="2303337655073"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Number of bytes left to change" comment_scope_start="1562" comment_scope_end="1562">
		<SYMBOLS>
			<FieldDecl type="int" spelling="rewrite_length" id="2303552789199"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Buffer of new byte values" comment_scope_start="1563" comment_scope_end="1563">
		<SYMBOLS>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<FieldDecl type="png_byte [2]" spelling="rewrite_buffer" id="2300490967220"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="When a chunk is initialized the file length/type/pos are copied into the
    * corresponding chunk fields and the new chunk is registered in the file
    * structure.  There can only be one chunk at a time.
    *
    * NOTE: this routine must onely be called from the file alloc routine!" comment_scope_start="1583" comment_scope_end="1608">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300838711620"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300452065610"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300307632293"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302280063477"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300358434855"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2303567907436"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301571057461"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302020250342"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300622190898"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302669135775"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300224414012"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300859286936"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302357283621"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301407993796"/>
			<UnexposedExpr type="fpos_t" spelling="data_pos" id="2304001930891"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303166163854"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301636542496"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303659324475"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300276646971"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301461403000"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303947798486"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304173045830"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303615414606"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302656180477"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303442966227"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301525463050"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301960653727"/>
			<CallExpr type="void" spelling="clear" id="2301843119052"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk == NULL&quot;" id="2300814092280"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303746910703"/>
			<StringLiteral type="const char [57]" spelling="&quot;void chunk_init(struct chunk *const, struct file *const)&quot;" id="2300774509662"/>
			<FunctionDecl type="void (struct chunk *const, struct file *const)" spelling="chunk_init" id="2303245154371"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303449568756"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300081316338"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304269372723"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2302683269544"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2303421956443"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2302842338282"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2304160214255"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303612258344"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2300087580487"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300800645794"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2302817193080"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303765400946"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2300814006858"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2302739439124"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2301389096184"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303845940322"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2302521327909"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2301108441129"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2302279615886"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2301775980519"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303235195267"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302754061527"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2301518539451"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300415587030"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300512513322"/>
			<MemberRefExpr type="fpos_t" spelling="chunk_data_pos" id="2303177119997"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2303143047349"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303702298061"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301401845343"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2303772028026"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301214759643"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2303455734347"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301965387566"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2304158190346"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="alloc" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Compresssed/uncompressed size information (from the zlib control structure
    * that is used to check the compressed data in a chunk.)" comment_scope_start="1601" comment_scope_end="1608">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303615414606"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302656180477"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303442966227"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301525463050"/>
			<FunctionDecl type="void (struct chunk *const, struct file *const)" spelling="chunk_init" id="2303245154371"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2302521327909"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2301108441129"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2302279615886"/>
			<DeclRefExpr type="struct chunk *const" spelling="chunk" id="2301775980519"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2303455734347"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301965387566"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2304158190346"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="uncompressed"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Guess the actual chunk type that causes a stop()" comment_scope_start="1612" comment_scope_end="1636">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301299786669"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303051255284"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2301830326379"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301765548903"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303427068289"/>
			<UnexposedExpr type="int" spelling="code" id="2300576056783"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302481859745"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2301612820852"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300923611643"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302231584310"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301738115448"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301048992585"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="type" id="2301480951727"/>
			<FunctionDecl type="png_uint_32 (struct file *, int)" spelling="current_type" id="2300665413554"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302171227504"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301872104160"/>
			<DeclRefExpr type="int" spelling="code" id="2303375147058"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302801862226"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301510139442"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300012763579"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304219154949"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302984556629"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301778751910"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2300198585789"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300312980020"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303144200111"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301372674817"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This may return png_IDAT for errors detected (late) in the header; that
    * includes any inter-chunk consistency check that libpng performs.  Assume
    * that if the chunk_type is png_IDAT and the file write count is 8 this is
    * what is happening." comment_scope_start="1614" comment_scope_end="1632">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301299786669"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303051255284"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2301830326379"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301765548903"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303427068289"/>
			<UnexposedExpr type="int" spelling="code" id="2300576056783"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302481859745"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2301612820852"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300923611643"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302231584310"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="type" id="2301480951727"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302171227504"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301872104160"/>
			<DeclRefExpr type="int" spelling="code" id="2303375147058"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302801862226"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301510139442"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300012763579"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2304219154949"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301778751910"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2300198585789"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300312980020"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303144200111"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="includes" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is probably wrong for the excess IDATs case, because then libpng
       * whines about too many of them (apparently in some cases erroneously)
       * when the header is read." comment_scope_start="1623" comment_scope_end="1628">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="code" id="2300576056783"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302481859745"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2301612820852"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300923611643"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="int" spelling="code" id="2303375147058"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302801862226"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301510139442"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303144200111"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="magic" comment_scope_start="1629" comment_scope_end="1629">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300012763579"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Reset the position to 'chunk_data_pos' - the start of the data for this
    * chunk.  As a side effect the read_count in the file is reset to 8, just
    * after the length/type header." comment_scope_start="1640" comment_scope_end="1647">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303865987472"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300502309909"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303519278155"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300842927372"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303161565783"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300526236091"/>
			<CallExpr type="void" spelling="file_setpos" id="2303626695215"/>
			<FunctionDecl type="void (struct chunk *)" spelling="setpos" id="2302363564969"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301723937661"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2304026188538"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301400733242"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302469952024"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2302092780292"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300370657028"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2302020913723"/>
			<MemberRefExpr type="fpos_t" spelling="chunk_data_pos" id="2303576512342"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Specific chunk handling - called for each chunk header, all special chunk
 * processing is initiated in these functions." comment_scope_start="1649" comment_scope_end="1663">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<FunctionDecl type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2303271283883"/>
			<ParmDecl type="struct file *" spelling="file" id="2303586278362"/>
			<ParmDecl type="png_uint_32" spelling="offset" id="2302061106921"/>
			<ParmDecl type="struct file *" spelling="file" id="2302288409309"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="initiated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The next functions handle special processing for those chunks with LZ data,
 * the data is identified and checked for validity.  If there are problems which
 * cannot be corrected the routines return false, otherwise true (although
 * modification to the zlib header may be required.)
 *
 * The compressed data is in zlib format (RFC1950) and consequently has a
 * minimum length of 7 bytes." comment_scope_start="1649" comment_scope_end="1663">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<FunctionDecl type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2303271283883"/>
			<ParmDecl type="struct file *" spelling="file" id="2303586278362"/>
			<ParmDecl type="png_uint_32" spelling="offset" id="2302061106921"/>
			<ParmDecl type="struct file *" spelling="file" id="2302288409309"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="modification" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="minimum" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="zTXt and iCCP have exactly the same form - keyword, null, compression
    * method then compressed data." comment_scope_start="1664" comment_scope_end="1691">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303298255210"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300814515944"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303517197060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303482043805"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303555497642"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301321928255"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302511574903"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303956707371"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302000797334"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2303301197735"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303066188863"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303407917464"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302171895253"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300466042821"/>
			<UnexposedExpr type="int" spelling="reread_byte" id="2301360453559"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300630685161"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302767637197"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303287993619"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302554880711"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="zlib_check" id="2303769869773"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301342391306"/>
			<UnexposedExpr type="png_uint_32" spelling="index" id="2302417890907"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2300246499360"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301751648197"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303730758174"/>
			<CallExpr type="void" spelling="setpos" id="2303813456676"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301111224661"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301247193302"/>
			<CallExpr type="int" spelling="zlib_check" id="2302480482823"/>
			<CallExpr type="void" spelling="chunk_message" id="2302635171144"/>
			<StringLiteral type="char [36]" spelling="&quot;chunk != NULL &amp;&amp; file-&gt;idat == NULL&quot;" id="2301473289380"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300860292370"/>
			<StringLiteral type="const char [37]" spelling="&quot;int process_zTXt_iCCP(struct file *)&quot;" id="2300433166906"/>
			<StringLiteral type="char [10]" spelling="&quot;too short&quot;" id="2300280877550"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2302503541175"/>
			<VarDecl type="png_uint_32" spelling="length" id="2303594352878"/>
			<VarDecl type="png_uint_32" spelling="index" id="2300273460785"/>
			<FunctionDecl type="int (struct file *)" spelling="process_zTXt_iCCP" id="2302244383222"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300206024757"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302444292485"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303471484557"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303712557504"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303137174920"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300542395934"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302437606449"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301285117202"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2302375452332"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304083759683"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302600726997"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300204465805"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2300745267306"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302943716483"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304102602398"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304202506825"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2300058170188"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2304152650595"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304246096125"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2303607479694"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301527766330"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2302276173656"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2300296808951"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300870018344"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300311778137"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303652746240"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303486244671"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2300870344731"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="ztxt"/>
			<PROBLEM_DOMAIN word="iccp"/>
			<PROBLEM_DOMAIN word="compression"/>
			<PROBLEM_DOMAIN word="compressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="keyword null terminator" comment_scope_start="1680" comment_scope_end="1680">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="reread_byte" id="2301360453559"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300630685161"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302767637197"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301111224661"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302943716483"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304102602398"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="compression method" comment_scope_start="1684" comment_scope_end="1684">
		<SYMBOLS>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303287993619"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302554880711"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301247193302"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2304152650595"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304246096125"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="skip" comment_scope_start="1690" comment_scope_end="1690"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Like zTXt but more fields." comment_scope_start="1696" comment_scope_end="1708">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301476121933"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303379483478"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301115836495"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303749050916"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302608836349"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302378147980"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300115129272"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303408900690"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300959035744"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2300197030918"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300682383506"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2301630186647"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301509784616"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304009773702"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302984282366"/>
			<CallExpr type="void" spelling="setpos" id="2301643636930"/>
			<StringLiteral type="char [36]" spelling="&quot;chunk != NULL &amp;&amp; file-&gt;idat == NULL&quot;" id="2303629230892"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302284944667"/>
			<StringLiteral type="const char [32]" spelling="&quot;int process_iTXt(struct file *)&quot;" id="2301382314678"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2303216419683"/>
			<VarDecl type="png_uint_32" spelling="length" id="2301071801106"/>
			<VarDecl type="png_uint_32" spelling="index" id="2300029539115"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301971268035"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300358165272"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301288989103"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300983153736"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302187608706"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302268087914"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302282008159"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302105718335"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2303275543363"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301718149564"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304115575147"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303725030344"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2301151565439"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301610714705"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300798750288"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303069169582"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303600164256"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="ztxt"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="keyword null terminator" comment_scope_start="1709" comment_scope_end="1709">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="reread_byte" id="2300240278242"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2304097549657"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302444684415"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303288250533"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303212299486"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303838858371"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="uncompressed text" comment_scope_start="1713" comment_scope_end="1713">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="reread_byte" id="2303596599693"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300513222257"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302411643334"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300757300661"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2301912356451"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303874263166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="uncompressed"/>
			<PROBLEM_DOMAIN word="text"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="nothing to check" comment_scope_start="1714" comment_scope_end="1714"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="compression method" comment_scope_start="1718" comment_scope_end="1718">
		<SYMBOLS>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300503990283"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300867658936"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2302676801664"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303999215473"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303424543014"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Skip the language tag (null terminated)." comment_scope_start="1720" comment_scope_end="1736">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301206746774"/>
			<UnexposedExpr type="int" spelling="reread_byte" id="2300826412878"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301316593908"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300312647828"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303715348718"/>
			<UnexposedExpr type="int" spelling="reread_byte" id="2301088837021"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303899409081"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304127133092"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="zlib_check" id="2302468117575"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303673961229"/>
			<UnexposedExpr type="png_uint_32" spelling="index" id="2301598605490"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301468425618"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303971478782"/>
			<CallExpr type="int" spelling="zlib_check" id="2302093351897"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301324868465"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302464702088"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2300092072239"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302335719990"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300670938069"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303167302204"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304046431304"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2302945439173"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300822274051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303211760722"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2302858883498"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303163732615"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2304116344083"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="terminated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="terminator" comment_scope_start="1725" comment_scope_end="1725">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="reread_byte" id="2300826412878"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301316593908"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300312647828"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301468425618"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302335719990"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300670938069"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Skip the translated keyword" comment_scope_start="1727" comment_scope_end="1734">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303715348718"/>
			<UnexposedExpr type="int" spelling="reread_byte" id="2301088837021"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303899409081"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304127133092"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="zlib_check" id="2302468117575"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303673961229"/>
			<UnexposedExpr type="png_uint_32" spelling="index" id="2301598605490"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303971478782"/>
			<CallExpr type="int" spelling="zlib_check" id="2302093351897"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303167302204"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304046431304"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2302945439173"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300822274051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303211760722"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2302858883498"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303163732615"/>
			<DeclRefExpr type="png_uint_32" spelling="index" id="2304116344083"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="terminator" comment_scope_start="1732" comment_scope_end="1732">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="reread_byte" id="2301088837021"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303899409081"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304127133092"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303971478782"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300822274051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303211760722"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Ran out of bytes in the compressed case." comment_scope_start="1738" comment_scope_end="1740"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="skip" comment_scope_start="1745" comment_scope_end="1745"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IDAT READ/WRITE CONTROL STRUCTURE" comment_scope_start="1748" comment_scope_end="1764">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="struct file *" spelling="file" id="2300114312517"/>
			<FieldDecl type="struct global *" spelling="global" id="2302574546676"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_list_head" id="2302549070016"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_list_tail" id="2300635684784"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_cur" id="2303222842772"/>
			<FieldDecl type="unsigned int" spelling="idat_count" id="2302756633232"/>
			<FieldDecl type="png_uint_32" spelling="idat_index" id="2300874158987"/>
			<FieldDecl type="png_uint_32" spelling="idat_length" id="2303066393661"/>
			<StructDecl type="struct IDAT" spelling="IDAT" id="2302111443396"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ANCESTORS" comment_scope_start="1751" comment_scope_end="1754">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<FieldDecl type="struct file *" spelling="file" id="2300114312517"/>
			<FieldDecl type="struct global *" spelling="global" id="2302574546676"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PROTECTED IDAT INFORMATION: SET BY THE IDAT READ CODE" comment_scope_start="1755" comment_scope_end="1755"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="START of the list of IDAT information" comment_scope_start="1756" comment_scope_end="1756">
		<SYMBOLS>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_list_head" id="2302549070016"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="*END* of the list of IDAT information" comment_scope_start="1757" comment_scope_end="1757">
		<SYMBOLS>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_list_tail" id="2300635684784"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PROTECTED IDAT INFORMATION: USED BY THE IDAT WRITE CODE" comment_scope_start="1759" comment_scope_end="1759"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Current list entry" comment_scope_start="1760" comment_scope_end="1760">
		<SYMBOLS>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<FieldDecl type="struct IDAT_list *" spelling="idat_cur" id="2303222842772"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="And the *current* index into the list" comment_scope_start="1761" comment_scope_end="1761">
		<SYMBOLS>
			<FieldDecl type="unsigned int" spelling="idat_count" id="2302756633232"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Index of *next* input byte to write" comment_scope_start="1762" comment_scope_end="1762">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="idat_index" id="2300874158987"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Cache of current chunk length" comment_scope_start="1763" comment_scope_end="1763">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="idat_length" id="2303066393661"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: there is currently no IDAT_reset, so a stream cannot contain more than
 * one IDAT sequence (i.e. MNG is not supported)." comment_scope_start="1766" comment_scope_end="1782">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT **" spelling="idat_var" id="2302945741133"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303967417156"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304083328124"/>
			<UnexposedExpr type="struct IDAT **" spelling="idat_var" id="2301920008875"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2304242882281"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300928375438"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300195797221"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300574287588"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304229465660"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300613503060"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300096750876"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302485408603"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302932286602"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300273690805"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<CallExpr type="void" spelling="clear" id="2301654303783"/>
			<CallExpr type="void" spelling="__assert_fail" id="2304030146522"/>
			<CallExpr type="void" spelling="chunk_end" id="2301958999165"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk != NULL&quot;" id="2301182337522"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301027168432"/>
			<StringLiteral type="const char [30]" spelling="&quot;void IDAT_end(struct IDAT **)&quot;" id="2300210264643"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2301233096328"/>
			<VarDecl type="struct file *" spelling="file" id="2303715514016"/>
			<DeclRefExpr type="struct IDAT **" spelling="idat_var" id="2303491603864"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300855962349"/>
			<DeclRefExpr type="struct IDAT **" spelling="idat_var" id="2303674171136"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2303457316883"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301612390456"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301757584997"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304101147234"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302145512559"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304121023199"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2302078560766"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302616143417"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300362910554"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303514065671"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303962747083"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302110369501"/>
			<ParmDecl type="struct IDAT **" spelling="idat_var" id="2303009357537"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="contain" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="mng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Regardless of why the IDAT was killed set the state back to CHUNKS (it may
    * already be CHUNKS because the state isn't changed until process_IDAT
    * returns; a stop will cause IDAT_end to be entered in state CHUNKS!)" comment_scope_start="1783" comment_scope_end="1788">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300725255025"/>
			<FunctionDecl type="void (struct IDAT **)" spelling="IDAT_end" id="2304208255990"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303246319541"/>
			<MemberRefExpr type="int" spelling="state" id="2303832637464"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="When the chunk is png_IDAT instantiate an IDAT control structure in place
    * of a chunk control structure.  The IDAT will instantiate a chunk control
    * structure using the file alloc routine.
    *
    * NOTE: this routine must only be called from the file alloc routine!" comment_scope_start="1792" comment_scope_end="1823">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301813211721"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300448587672"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301489618597"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303079312025"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301383075441"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304205398980"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304184816667"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303040172637"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301720072914"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301752299321"/>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2302654009951"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303972406435"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300853331556"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302555155976"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302906512031"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303535560573"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300554289568"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301567326377"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303206108379"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302238018189"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300351936859"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300614308344"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300837192482"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303973433669"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2304287544404"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302321262555"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301866201901"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301258201975"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300180271080"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302415586211"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301731039414"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301401885975"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300653979857"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302556384015"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301794586535"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302541734700"/>
			<CallExpr type="void" spelling="clear" id="2303549484340"/>
			<CallExpr type="void" spelling="alloc" id="2303077453947"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300501770479"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk == NULL&quot;" id="2302772402279"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2304221196443"/>
			<StringLiteral type="const char [55]" spelling="&quot;void IDAT_init(struct IDAT *const, struct file *const)&quot;" id="2300484790981"/>
			<StringLiteral type="char [19]" spelling="&quot;file-&gt;idat == NULL&quot;" id="2300047752560"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302329807496"/>
			<StringLiteral type="const char [55]" spelling="&quot;void IDAT_init(struct IDAT *const, struct file *const)&quot;" id="2300194992949"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk != NULL&quot;" id="2302286644796"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2304117055852"/>
			<StringLiteral type="const char [55]" spelling="&quot;void IDAT_init(struct IDAT *const, struct file *const)&quot;" id="2303082888380"/>
			<FunctionDecl type="void (struct IDAT *const, struct file *const)" spelling="IDAT_init" id="2303275308243"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300148742511"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300385227339"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303308419015"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2302131556479"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300057442235"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301290591858"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2302820112298"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2303903224475"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2304128329362"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2302836699707"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303761832785"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2300768864108"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303817684800"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2303640420907"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2300857732050"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2300151808906"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2303931685902"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303811287837"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303003653588"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2304009792585"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2300799921637"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300852378217"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2301366466894"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2302646710856"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302998470160"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302105103629"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304266979441"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301125518463"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2303392718948"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300725183404"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303302151248"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302833113665"/>
			<MemberRefExpr type="struct IDAT_list" spelling="idat_cache" id="2304235643857"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303611647932"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2302650937936"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2304139516876"/>
			<MemberRefExpr type="struct IDAT_list" spelling="idat_cache" id="2300154391280"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303290101716"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2301342037966"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303432263454"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302125867391"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301368540949"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="alloc" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="alloc" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Initialize the tail to the pre-allocated buffer and set the count to 0
    * (empty.)" comment_scope_start="1807" comment_scope_end="1812">
		<SYMBOLS>
			<UnexposedExpr type="struct global *" spelling="global" id="2303206108379"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302238018189"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300351936859"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300614308344"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300837192482"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303973433669"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2303640420907"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2300857732050"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2300151808906"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2303931685902"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302833113665"/>
			<MemberRefExpr type="struct IDAT_list" spelling="idat_cache" id="2304235643857"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303611647932"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2302650937936"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2304139516876"/>
			<MemberRefExpr type="struct IDAT_list" spelling="idat_cache" id="2300154391280"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303290101716"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="tail" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="empty" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Now the chunk.  The allocator calls the initializer of the new chunk and
    * stores the result in file-&gt;chunk:" comment_scope_start="1813" comment_scope_end="1815"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="chunk" comment_scope_start="1816" comment_scope_end="1816">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2304287544404"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302321262555"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301866201901"/>
			<CallExpr type="void" spelling="alloc" id="2303077453947"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303811287837"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2303003653588"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2301342037966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="And store this for cleanup (and to check for double alloc or failure to
    * free.)" comment_scope_start="1819" comment_scope_end="1823">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300653979857"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302556384015"/>
			<FunctionDecl type="void (struct IDAT *const, struct file *const)" spelling="IDAT_init" id="2303275308243"/>
			<DeclRefExpr type="struct file *const" spelling="file" id="2301366466894"/>
			<DeclRefExpr type="struct IDAT *const" spelling="idat" id="2302646710856"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301368540949"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="store" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="double" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="alloc" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="free" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return the length for the next IDAT chunk, taking into account
    * rechunking." comment_scope_start="1827" comment_scope_end="1904">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="idat_max" id="2303849659457"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302795317283"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300489368333"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2303650639260"/>
			<UnexposedExpr type="int" spelling="start" id="2301148493806"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302691475932"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303382868095"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_cur" id="2301342473017"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300781084773"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303503460692"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300656602330"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301068413157"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303864741357"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303657653321"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300307237963"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301575381429"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2304177795299"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301790476057"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2303308938628"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300964345813"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300239919516"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2301407219044"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302633807289"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302192098997"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303308876626"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303931253334"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300022949477"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2302224940331"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2303071616772"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301528091963"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300124112779"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301723911283"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2304029552518"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2301905210258"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301541402481"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302837748972"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300760240340"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_list_tail" id="2302393877533"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302994129323"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303826183238"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300142133967"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_list_tail" id="2301122085003"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300990638329"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302232593615"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304293266364"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="next" id="2303573920485"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302892434889"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301897329210"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2304292812699"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301407503008"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301828941624"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2303360190424"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303731052038"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2302721240760"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303210490285"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2300994455858"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301476442385"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303533096798"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300754769010"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2302724997812"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300083896681"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2301274964247"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2303760197286"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302069566057"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300718034315"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2301729986213"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301136773813"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302017663183"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300612728010"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303711744781"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2301126971387"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302015170017"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304122602658"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2303752461858"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303324121861"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2302093985888"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2301710914077"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2300221341306"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2302335019303"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303634233983"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302182344014"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301009772154"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2300807962411"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300004809395"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300151231468"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2303212596410"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2300228124390"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2300654630630"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300635853660"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303586583499"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303471189070"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301126370426"/>
			<StringLiteral type="char [82]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length &amp;&amp; idat-&gt;idat_length == cur-&gt;lengths[count]&quot;" id="2302526717069"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303377157812"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2300974799560"/>
			<StringLiteral type="char [28]" spelling="&quot;cur != idat-&gt;idat_list_tail&quot;" id="2300563195699"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300625261649"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2304058630923"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301186084285"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300905212753"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2303414273590"/>
			<StringLiteral type="char [12]" spelling="&quot;cur != NULL&quot;" id="2301852587883"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301494554419"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2304220631460"/>
			<VarDecl type="png_uint_32" spelling="len" id="2301965349083"/>
			<VarDecl type="const struct IDAT_list *" spelling="cur" id="2304091503862"/>
			<VarDecl type="unsigned int" spelling="count" id="2302637894725"/>
			<VarDecl type="png_uint_32" spelling="have" id="2300231483846"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2301877104184"/>
			<VarDecl type="unsigned int" spelling="j" id="2303396268738"/>
			<FunctionDecl type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2302167914220"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301726867820"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2300189113796"/>
			<DeclRefExpr type="int" spelling="start" id="2301421597550"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303956110398"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302052624292"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302952401267"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2302747818504"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303082246079"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300955589966"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300091382575"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303753677797"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300302167265"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301207498626"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300284482145"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302038451644"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303357877913"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303540295984"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2303485412778"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302612250112"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2304285375246"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302046174959"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2301791038148"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301615222785"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300776686530"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303886589207"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2304095484302"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300438215224"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303297525237"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303995087427"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302624958442"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303622537891"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303002229114"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302931544018"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300020927628"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301420548381"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303541190826"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300322098041"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303210007157"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2301270800984"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2302081699155"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303377510872"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301908267907"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302431477787"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303693095199"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303338997732"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300076082382"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300203769572"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300463152552"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2303127805280"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303386094445"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300362760551"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2302198573309"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2302400296156"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2300709836714"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303373722370"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301240049841"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2303705086068"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302735611555"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304008607900"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300179911994"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2303723762531"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2303968035734"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2301661189346"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_max" id="2300525826975"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303625150497"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303815239387"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303109529938"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301852971694"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304282657527"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303197784099"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300952857606"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2302928003964"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302670045766"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303777472184"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302475121138"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2301997341778"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2301042692959"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2303399211841"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303741368036"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302246741089"/>
			<MemberRefExpr type="struct IDAT_list *const" spelling="next" id="2300434400303"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2303636081335"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2302696871959"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2302708477224"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303221458584"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303026243216"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300958511554"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302040292821"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2300689915803"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301232767847"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303091158400"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2301996850639"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="use original chunk lengths" comment_scope_start="1833" comment_scope_end="1833">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2303650639260"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2300189113796"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="use the cache" comment_scope_start="1839" comment_scope_end="1839">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302691475932"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303382868095"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303956110398"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303815239387"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Otherwise rechunk_length is called at the end of a chunk for the length
       * of the next one." comment_scope_start="1841" comment_scope_end="1849">
		<SYMBOLS>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_cur" id="2301342473017"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300781084773"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303503460692"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300656602330"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301068413157"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303864741357"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303657653321"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300307237963"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301575381429"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2304177795299"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301790476057"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2303308938628"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300964345813"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300239919516"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2301407219044"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302633807289"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302192098997"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303308876626"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303931253334"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300022949477"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2302224940331"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2303071616772"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301528091963"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300124112779"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300635853660"/>
			<StringLiteral type="char [82]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length &amp;&amp; idat-&gt;idat_length == cur-&gt;lengths[count]&quot;" id="2302526717069"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303377157812"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2300974799560"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302052624292"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302952401267"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2302747818504"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303082246079"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300955589966"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300091382575"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303753677797"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300302167265"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301207498626"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300284482145"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302038451644"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303357877913"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303540295984"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2303485412778"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302612250112"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303109529938"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301852971694"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304282657527"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303197784099"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300952857606"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2302928003964"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302670045766"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303777472184"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302475121138"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2301997341778"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return length of the *next* chunk" comment_scope_start="1850" comment_scope_end="1853">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301723911283"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2304029552518"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2301905210258"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301541402481"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302837748972"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2304285375246"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302046174959"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2301791038148"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301615222785"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2301042692959"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2303399211841"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="End of this list" comment_scope_start="1854" comment_scope_end="1859">
		<SYMBOLS>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300760240340"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_list_tail" id="2302393877533"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302994129323"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303826183238"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2300142133967"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="idat_list_tail" id="2301122085003"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300990638329"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302232593615"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304293266364"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="next" id="2303573920485"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302892434889"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301897329210"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2304292812699"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301407503008"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301828941624"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2303360190424"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303731052038"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2302721240760"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303210490285"/>
			<UnexposedExpr type="const png_uint_32 *" spelling="lengths" id="2300994455858"/>
			<UnexposedExpr type="const struct IDAT_list *" spelling="cur" id="2301476442385"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303586583499"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303471189070"/>
			<StringLiteral type="char [28]" spelling="&quot;cur != idat-&gt;idat_list_tail&quot;" id="2300563195699"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300625261649"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2304058630923"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301186084285"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300905212753"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2303414273590"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300776686530"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303886589207"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2304095484302"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300438215224"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303297525237"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303995087427"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302624958442"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303622537891"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303002229114"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2302931544018"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2300020927628"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301420548381"/>
			<DeclRefExpr type="const struct IDAT_list *" spelling="cur" id="2303541190826"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303741368036"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302246741089"/>
			<MemberRefExpr type="struct IDAT_list *const" spelling="next" id="2300434400303"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2303636081335"/>
			<MemberRefExpr type="const unsigned int" spelling="count" id="2302696871959"/>
			<MemberRefExpr type="png_uint_32 const[16]" spelling="lengths" id="2302708477224"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="rechunking" comment_scope_start="1861" comment_scope_end="1861"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The chunk size is the lesser of file-&gt;idat_max and the number
       * of remaining bytes." comment_scope_start="1863" comment_scope_end="1870">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303533096798"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300754769010"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2302724997812"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300083896681"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2301274964247"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2303760197286"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302069566057"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300718034315"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<VarDecl type="png_uint_32" spelling="have" id="2300231483846"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2301877104184"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300322098041"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303210007157"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2301270800984"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2302081699155"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303377510872"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303221458584"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303026243216"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300958511554"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="lesser" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="the next IDAT in the list" comment_scope_start="1871" comment_scope_end="1871">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2301729986213"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301136773813"/>
			<VarDecl type="unsigned int" spelling="j" id="2303396268738"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301908267907"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302040292821"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Add up the remaining bytes.  This can't overflow because the
             * individual lengths are always &lt;= 0x7fffffff, so when we add two
             * of them overflow is not possible." comment_scope_start="1875" comment_scope_end="1882">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302017663183"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300612728010"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303711744781"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301126370426"/>
			<StringLiteral type="char [12]" spelling="&quot;cur != NULL&quot;" id="2301852587883"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301494554419"/>
			<StringLiteral type="const char [47]" spelling="&quot;png_uint_32 rechunk_length(struct IDAT *, int)&quot;" id="2304220631460"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302431477787"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303693095199"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303338997732"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="add" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: IDAT_list::count here, not IDAT_list::length" comment_scope_start="1883" comment_scope_end="1889">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="j" id="2301126971387"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302015170017"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304122602658"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2303752461858"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303324121861"/>
			<UnexposedExpr type="unsigned int" spelling="j" id="2302093985888"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2301710914077"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2300221341306"/>
			<UnexposedExpr type="png_uint_32" spelling="len" id="2302335019303"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300076082382"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300203769572"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300463152552"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2303127805280"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303386094445"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300362760551"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2302198573309"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2302400296156"/>
			<DeclRefExpr type="png_uint_32" spelling="len" id="2300709836714"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2300689915803"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301232767847"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="If this was the end return the count of the available bytes" comment_scope_start="1891" comment_scope_end="1897">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303634233983"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302182344014"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301009772154"/>
			<UnexposedExpr type="png_uint_32" spelling="have" id="2300807962411"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300004809395"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300151231468"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303373722370"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301240049841"/>
			<DeclRefExpr type="png_uint_32" spelling="have" id="2303705086068"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302735611555"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304008607900"/>
			<DeclRefExpr type="unsigned int" spelling="j" id="2300179911994"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303091158400"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2301996850639"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Process the IDAT stream, this is the more complex than the preceding
    * cases because the compressed data is spread across multiple IDAT chunks
    * (typically).  Rechunking of the data is not handled here; all this
    * function does is establish whether the zlib header needs to be modified.
    *
    * Initially the function returns false, indicating that the chunk should not
    * be written.  It does this until the last IDAT chunk is passed in, then it
    * checks the zlib data and returns true.
    *
    * It does not return false on a fatal error; it calls stop instead.
    *
    * The caller must have an instantiated (IDAT) control structure and it must
    * have extent over the whole read of the IDAT stream.  For a PNG this means
    * the whole PNG read, for MNG it could have lesser extent." comment_scope_start="1908" comment_scope_end="2007">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303223901460"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301792987731"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303726564207"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303741577817"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300342856787"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302946978346"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301979109018"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301844594597"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302472155741"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302612015880"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301474102545"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303227782471"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300140042370"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303928969149"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2301034774798"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301408190574"/>
			<UnexposedExpr type="struct IDAT_list *(*)(struct IDAT_list *)" spelling="IDAT_list_extend" id="2300458606808"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302269512838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303182442771"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300676064541"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302241545954"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303456641764"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301609908281"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302068383647"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303484433361"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300871518094"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301116757329"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302708576592"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2302900120217"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302774192819"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301421242306"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304175056870"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301576070334"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2301834084843"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300115509072"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304202798842"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="zlib_check" id="2302039783405"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302897810649"/>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int)" spelling="uarb_cmp" id="2303115853363"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2302365941886"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303086857129"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2303673591415"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301652109937"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2301547233053"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302438993596"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302499861927"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2302655273753"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300527773957"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304148795085"/>
			<UnexposedExpr type="int" spelling="cmp" id="2300363951667"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2303018757327"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300049470873"/>
			<UnexposedExpr type="int" spelling="cmp" id="2304242695076"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300695775868"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303746744284"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303966130642"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301248982115"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301912743352"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304108818352"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300062486344"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304146161572"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_head" id="2301676777834"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304004299340"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303794836856"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300938223059"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2304197576740"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300211071553"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300921125699"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300245191288"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302556376653"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300244935395"/>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301009217857"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304056741239"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303558566498"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303635869146"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300143570705"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300723832118"/>
			<CallExpr type="struct IDAT_list *" spelling="IDAT_list_extend" id="2303979462869"/>
			<CallExpr type="void" spelling="stop" id="2301729090111"/>
			<CallExpr type="void" spelling="setpos" id="2302959818142"/>
			<CallExpr type="int" spelling="zlib_check" id="2301607192258"/>
			<CallExpr type="int" spelling="uarb_cmp" id="2302500827872"/>
			<CallExpr type="void" spelling="type_message" id="2302864819961"/>
			<CallExpr type="void" spelling="stop" id="2300294433322"/>
			<CallExpr type="void" spelling="setpos" id="2301373934605"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2303621938218"/>
			<CallExpr type="void" spelling="stop" id="2300719042900"/>
			<StringLiteral type="char [42]" spelling="&quot;file-&gt;idat != NULL &amp;&amp; file-&gt;chunk != NULL&quot;" id="2303913206243"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302964586262"/>
			<StringLiteral type="const char [32]" spelling="&quot;int process_IDAT(struct file *)&quot;" id="2301278856314"/>
			<StringLiteral type="char [14]" spelling="&quot;out of memory&quot;" id="2301348719215"/>
			<StringLiteral type="char [24]" spelling="&quot;extra uncompressed data&quot;" id="2302665178766"/>
			<StringLiteral type="char [34]" spelling="&quot;IDAT: uncompressed data too small&quot;" id="2302825516237"/>
			<StringLiteral type="char [26]" spelling="&quot;could not uncompress IDAT&quot;" id="2302892993924"/>
			<VarDecl type="struct IDAT_list *" spelling="list" id="2302180123576"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302211385059"/>
			<VarDecl type="int" spelling="cmp" id="2303441827692"/>
			<FunctionDecl type="int (struct file *)" spelling="process_IDAT" id="2301082659588"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304133279568"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301077473775"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303375167682"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301894586663"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302226173714"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303951062370"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302485111748"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304161411004"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301987707855"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303526613417"/>
			<DeclRefExpr type="struct IDAT_list *(struct IDAT_list *)" spelling="IDAT_list_extend" id="2302279022570"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302487512987"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302935869408"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304215267636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303486285551"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304269047456"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303190549494"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302068105283"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303758936007"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302222155969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301703513012"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303531632222"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2304035920537"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300357881712"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2304180011288"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302484178269"/>
			<DeclRefExpr type="int" spelling="cmp" id="2300446086305"/>
			<DeclRefExpr type="int (uarb, int, uarb, int)" spelling="uarb_cmp" id="2301293896906"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302944597694"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302905773803"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300337259571"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301882882341"/>
			<DeclRefExpr type="int" spelling="cmp" id="2303513894598"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301077842354"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302185291476"/>
			<DeclRefExpr type="int" spelling="cmp" id="2300194327236"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300180419889"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301119267345"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2300285191343"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300532996308"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300352037882"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302148050912"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303164331169"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300448432571"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300300280904"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301079802476"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302606496012"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304145388371"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302120896746"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2300413571026"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300680742459"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303478858104"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302708968417"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302832601385"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300682548487"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2304082333914"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302564668679"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301482302458"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300201927359"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302216654691"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302338123487"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2302647638518"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303772362719"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303717974845"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302371400251"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2303473480074"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302544650299"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303997341142"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303395497548"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302556555059"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301661037848"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2300311325891"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2301525621154"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2302468791076"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301234335929"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300964613346"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303410536090"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303421653418"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303218634581"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303452423510"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2303247315921"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303397733105"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2303681553357"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303514199932"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303111354897"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301584642772"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2300235934914"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302071960845"/>
			<MemberRefExpr type="int" spelling="state" id="2302932213904"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="complex" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="modified" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="lesser" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="mng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="We need to first check the entire sequence of IDAT chunks to ensure the
    * stream is in sync.  Do this by building a list of all the chunks and
    * recording the length of each because the length may have been fixed up by
    * sync_stream below.
    *
    * At the end of the list of chunks, where the type of the next chunk is not
    * png_IDAT, process the whole stream using the list data to check validity
    * then return control to the start and rewrite everything." comment_scope_start="1928" comment_scope_end="1945">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302612015880"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301474102545"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303227782471"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300140042370"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303928969149"/>
			<UnexposedExpr type="unsigned int" spelling="length" id="2301034774798"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301408190574"/>
			<UnexposedExpr type="struct IDAT_list *(*)(struct IDAT_list *)" spelling="IDAT_list_extend" id="2300458606808"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302269512838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303182442771"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300676064541"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302241545954"/>
			<CallExpr type="struct IDAT_list *" spelling="IDAT_list_extend" id="2303979462869"/>
			<CallExpr type="void" spelling="stop" id="2301729090111"/>
			<StringLiteral type="char [14]" spelling="&quot;out of memory&quot;" id="2301348719215"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303951062370"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302485111748"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304161411004"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301987707855"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303526613417"/>
			<DeclRefExpr type="struct IDAT_list *(struct IDAT_list *)" spelling="IDAT_list_extend" id="2302279022570"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302487512987"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302935869408"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304215267636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303486285551"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300201927359"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302216654691"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302338123487"/>
			<MemberRefExpr type="unsigned int" spelling="length" id="2302647638518"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Move to the next block" comment_scope_start="1946" comment_scope_end="1949">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303456641764"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301609908281"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302068383647"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303484433361"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304269047456"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303190549494"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302068105283"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303772362719"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2303717974845"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302371400251"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="And fill in the next IDAT information buffer." comment_scope_start="1951" comment_scope_end="1953">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300871518094"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301116757329"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302708576592"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2302900120217"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302774192819"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301421242306"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303758936007"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302222155969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301703513012"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2303473480074"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302544650299"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303997341142"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303395497548"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The type of the next chunk was recorded in the file control structure by
    * the caller, if this is png_IDAT return 'skip' to the caller." comment_scope_start="1954" comment_scope_end="1957">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304175056870"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301576070334"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303531632222"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302556555059"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="skip this for the moment" comment_scope_start="1958" comment_scope_end="1958"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is the final IDAT chunk, so run the tests to check for the too far
    * back error and possibly optimize the window bits.  This means going back
    * to the start of the first chunk data, which is stored in the original
    * chunk allocation." comment_scope_start="1960" comment_scope_end="1971">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2301834084843"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300115509072"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304202798842"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="zlib_check" id="2302039783405"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302897810649"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<CallExpr type="void" spelling="setpos" id="2302959818142"/>
			<CallExpr type="int" spelling="zlib_check" id="2301607192258"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302211385059"/>
			<VarDecl type="int" spelling="cmp" id="2303441827692"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2304035920537"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300357881712"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2304180011288"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302484178269"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301661037848"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="final" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="allocation" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The IDAT stream was successfully uncompressed; see whether it
       * contained the correct number of bytes of image data." comment_scope_start="1972" comment_scope_end="1983">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(uarb, int, uarb, int)" spelling="uarb_cmp" id="2303115853363"/>
			<UnexposedExpr type="udigit *" spelling="image_bytes" id="2302365941886"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303086857129"/>
			<UnexposedExpr type="int" spelling="image_digits" id="2303673591415"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301652109937"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2301547233053"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302438993596"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302499861927"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2302655273753"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300527773957"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304148795085"/>
			<UnexposedExpr type="int" spelling="cmp" id="2300363951667"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2303018757327"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300049470873"/>
			<UnexposedExpr type="int" spelling="cmp" id="2304242695076"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300695775868"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303746744284"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="uarb_cmp" id="2302500827872"/>
			<CallExpr type="void" spelling="type_message" id="2302864819961"/>
			<CallExpr type="void" spelling="stop" id="2300294433322"/>
			<StringLiteral type="char [24]" spelling="&quot;extra uncompressed data&quot;" id="2302665178766"/>
			<StringLiteral type="char [34]" spelling="&quot;IDAT: uncompressed data too small&quot;" id="2302825516237"/>
			<DeclRefExpr type="int" spelling="cmp" id="2300446086305"/>
			<DeclRefExpr type="int (uarb, int, uarb, int)" spelling="uarb_cmp" id="2301293896906"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302944597694"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302905773803"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300337259571"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301882882341"/>
			<DeclRefExpr type="int" spelling="cmp" id="2303513894598"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301077842354"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302185291476"/>
			<DeclRefExpr type="int" spelling="cmp" id="2300194327236"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300180419889"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301119267345"/>
			<MemberRefExpr type="udigit [5]" spelling="image_bytes" id="2300311325891"/>
			<MemberRefExpr type="int" spelling="image_digits" id="2301525621154"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2302468791076"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301234335929"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300964613346"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303410536090"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="number" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="uncompressed"/>
			<PROBLEM_DOMAIN word="image"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return the stream to the start of the first IDAT chunk; the length
       * is set in the write case below but the input chunk variables must be
       * set (once) here:" comment_scope_start="1984" comment_scope_end="1992">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303966130642"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301248982115"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301912743352"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304108818352"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300062486344"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304146161572"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_head" id="2301676777834"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304004299340"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303794836856"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300938223059"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2304197576740"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300211071553"/>
			<CallExpr type="void" spelling="setpos" id="2301373934605"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2300285191343"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300532996308"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300352037882"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302148050912"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303164331169"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300448432571"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300300280904"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301079802476"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303421653418"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303218634581"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303452423510"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2303247315921"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303397733105"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2303681553357"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303514199932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Count of chunks read in current list" comment_scope_start="1993" comment_scope_end="1993">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300921125699"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302606496012"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303111354897"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Index into chunk data" comment_scope_start="1994" comment_scope_end="1994">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300245191288"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304145388371"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301584642772"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Update the chunk length to the correct value for the IDAT chunk:" comment_scope_start="1996" comment_scope_end="1996"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="start" comment_scope_start="1997" comment_scope_end="1997">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302556376653"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300244935395"/>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301009217857"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304056741239"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2303621938218"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302120896746"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2300413571026"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300680742459"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2300235934914"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302071960845"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Change the state to writing IDAT chunks" comment_scope_start="1999" comment_scope_end="2003">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303558566498"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303478858104"/>
			<MemberRefExpr type="int" spelling="state" id="2302932213904"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Failure to decompress the IDAT stream; give up." comment_scope_start="2005" comment_scope_end="2005"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ZLIB CONTROL STRUCTURE" comment_scope_start="2009" comment_scope_end="2037">
		<SYMBOLS>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct global" spelling="struct global" id="2303655607165"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="z_stream" spelling="z_stream" id="2300967976493"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<FieldDecl type="struct IDAT *" spelling="idat" id="2302326228679"/>
			<FieldDecl type="struct chunk *" spelling="chunk" id="2302283592214"/>
			<FieldDecl type="struct file *" spelling="file" id="2304142681747"/>
			<FieldDecl type="struct global *" spelling="global" id="2300476552673"/>
			<FieldDecl type="png_uint_32" spelling="rewrite_offset" id="2303104736559"/>
			<FieldDecl type="udigit [5]" spelling="compressed_bytes" id="2301816095398"/>
			<FieldDecl type="int" spelling="compressed_digits" id="2301946220417"/>
			<FieldDecl type="udigit [5]" spelling="uncompressed_bytes" id="2300266000396"/>
			<FieldDecl type="int" spelling="uncompressed_digits" id="2301357682504"/>
			<FieldDecl type="int" spelling="file_bits" id="2301867832671"/>
			<FieldDecl type="int" spelling="ok_bits" id="2300498230532"/>
			<FieldDecl type="int" spelling="cksum" id="2302600595039"/>
			<FieldDecl type="z_stream" spelling="z" id="2300908893943"/>
			<FieldDecl type="png_uint_32" spelling="extra_bytes" id="2300202487920"/>
			<FieldDecl type="int" spelling="state" id="2302374194582"/>
			<FieldDecl type="int" spelling="rc" id="2300011717055"/>
			<FieldDecl type="int" spelling="window_bits" id="2301123415121"/>
			<FieldDecl type="png_byte [2]" spelling="header" id="2303219479712"/>
			<StructDecl type="struct zlib" spelling="zlib" id="2303308159508"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ANCESTORS" comment_scope_start="2012" comment_scope_end="2012"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: May be NULL" comment_scope_start="2013" comment_scope_end="2013">
		<SYMBOLS>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<FieldDecl type="struct IDAT *" spelling="idat" id="2302326228679"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="null" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="GLOBAL ZLIB INFORMATION: SET BY THE CALLER" comment_scope_start="2018" comment_scope_end="2020">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="rewrite_offset" id="2303104736559"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="GLOBAL ZLIB INFORMATION: SET BY THE ZLIB READ CODE" comment_scope_start="2021" comment_scope_end="2025">
		<SYMBOLS>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<TypeRef type="udigit" spelling="udigit" id="2303883336078"/>
			<FieldDecl type="udigit [5]" spelling="compressed_bytes" id="2301816095398"/>
			<FieldDecl type="int" spelling="compressed_digits" id="2301946220417"/>
			<FieldDecl type="udigit [5]" spelling="uncompressed_bytes" id="2300266000396"/>
			<FieldDecl type="int" spelling="uncompressed_digits" id="2301357682504"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="global" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="window bits from the file" comment_scope_start="2026" comment_scope_end="2026">
		<SYMBOLS>
			<FieldDecl type="int" spelling="file_bits" id="2301867832671"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set &lt;16 on a successful read" comment_scope_start="2027" comment_scope_end="2027">
		<SYMBOLS>
			<FieldDecl type="int" spelling="ok_bits" id="2300498230532"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set on a checksum error" comment_scope_start="2028" comment_scope_end="2028">
		<SYMBOLS>
			<FieldDecl type="int" spelling="cksum" id="2302600595039"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PROTECTED ZLIB INFORMATION: USED BY THE ZLIB ROUTINES" comment_scope_start="2030" comment_scope_end="2031">
		<SYMBOLS>
			<TypeRef type="z_stream" spelling="z_stream" id="2300967976493"/>
			<FieldDecl type="z_stream" spelling="z" id="2300908893943"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="protected" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Count of extra compressed bytes" comment_scope_start="2032" comment_scope_end="2032">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FieldDecl type="png_uint_32" spelling="extra_bytes" id="2300202487920"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Last return code" comment_scope_start="2034" comment_scope_end="2034">
		<SYMBOLS>
			<FieldDecl type="int" spelling="rc" id="2300011717055"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="0 if no change" comment_scope_start="2035" comment_scope_end="2035">
		<SYMBOLS>
			<FieldDecl type="int" spelling="window_bits" id="2301123415121"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return a string for the zlib return code" comment_scope_start="2056" comment_scope_end="2071">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="rc" id="2303372452886"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302302011593"/>
			<StringLiteral type="char [5]" spelling="&quot;Z_OK&quot;" id="2301517182871"/>
			<StringLiteral type="char [13]" spelling="&quot;Z_STREAM_END&quot;" id="2302082540404"/>
			<StringLiteral type="char [12]" spelling="&quot;Z_NEED_DICT&quot;" id="2302980494358"/>
			<StringLiteral type="char [8]" spelling="&quot;Z_ERRNO&quot;" id="2303998387129"/>
			<StringLiteral type="char [15]" spelling="&quot;Z_STREAM_ERROR&quot;" id="2301036864360"/>
			<StringLiteral type="char [13]" spelling="&quot;Z_DATA_ERROR&quot;" id="2301016416293"/>
			<StringLiteral type="char [12]" spelling="&quot;Z_MEM_ERROR&quot;" id="2300131910071"/>
			<StringLiteral type="char [12]" spelling="&quot;Z_BUF_ERROR&quot;" id="2301906403053"/>
			<StringLiteral type="char [16]" spelling="&quot;Z_VERSION_ERROR&quot;" id="2300203757403"/>
			<StringLiteral type="char [15]" spelling="&quot;Z_*INVALID_RC*&quot;" id="2303370404700"/>
			<FunctionDecl type="const char *(struct zlib *)" spelling="zlib_rc" id="2300965450227"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300902158675"/>
			<MemberRefExpr type="int" spelling="rc" id="2302543530316"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Output a message given a zlib rc" comment_scope_start="2075" comment_scope_end="2090">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2303706731059"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301776887945"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302137250100"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302385402126"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304094719185"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2300845310761"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2301413678876"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2300991891812"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302925669242"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301123503412"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301406301388"/>
			<UnexposedExpr type="void (*)(FILE *)" spelling="type_sep" id="2302298050551"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301376435758"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2302887909855"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302818901501"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303531033212"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303542851175"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301336666722"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2303840779881"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300764359203"/>
			<UnexposedExpr type="int" spelling="unexpected" id="2303676020071"/>
			<UnexposedExpr type="int" spelling="rc" id="2303871771988"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301953292626"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_rc" id="2300688700794"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304146603761"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2301646181023"/>
			<CallExpr type="int" spelling="fputs" id="2302719499571"/>
			<CallExpr type="void" spelling="type_sep" id="2301288213312"/>
			<CallExpr type="void" spelling="type_name" id="2300396576556"/>
			<CallExpr type="int" spelling="fprintf" id="2303797141915"/>
			<CallExpr type="const char *" spelling="zlib_rc" id="2301348830980"/>
			<StringLiteral type="char [13]" spelling="&quot;[no message]&quot;" id="2300424862214"/>
			<StringLiteral type="char [30]" spelling="&quot;: %szlib error: %d (%s) (%s)\n&quot;" id="2301022446691"/>
			<StringLiteral type="char [12]" spelling="&quot;unexpected &quot;" id="2301281537442"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2303072433893"/>
			<VarDecl type="const char *" spelling="reason" id="2303257974005"/>
			<FunctionDecl type="void (struct zlib *, int)" spelling="zlib_message" id="2300520188033"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301166591042"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302322849362"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2301982168350"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300168641654"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2300276838557"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301524814316"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300322336342"/>
			<DeclRefExpr type="void (FILE *)" spelling="type_sep" id="2304163845618"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301688929437"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2303039457617"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303943258613"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302748605079"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302163102429"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300013868455"/>
			<DeclRefExpr type="int" spelling="unexpected" id="2303537593247"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302944137699"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_rc" id="2300991606091"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301494798377"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2301929590133"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2300768789182"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302463923683"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2302756586484"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302334013622"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2302073189693"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300995916655"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2301698986429"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301296041091"/>
			<MemberRefExpr type="int" spelling="rc" id="2301707643796"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Output the summary line now; this ensures a summary line always gets
    * output regardless of the manner of exit." comment_scope_start="2095" comment_scope_end="2155">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="quiet" id="2301115747492"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301048173050"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300739998123"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301601712606"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301780029506"/>
			<UnexposedExpr type="int" spelling="cksum" id="2304224995584"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302808812885"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2303773628105"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302232061277"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303595088533"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300773650562"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301700831266"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303299040612"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303196069349"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300419189583"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2302583238091"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2301433195218"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302643701543"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301393913606"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301239899784"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2302191489019"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2303482440125"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_flevel" id="2303503129495"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303668785292"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303096758516"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302548290387"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2300614796089"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301997104469"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2301572725000"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2302258916232"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300063753499"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2300946102608"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300822734333"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300028008563"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302972436361"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301209048780"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2301913547183"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2304138373238"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303899671223"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2300627822706"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304105723050"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303552282996"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2301781058793"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303058242202"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303747573367"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2301607735799"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302227903504"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301084135939"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303144569587"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2300014937575"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2304174396237"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2301596964156"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2300225253486"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303047497731"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300291150117"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302998509697"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2301061824036"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_flevel" id="2300421408152"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302757626074"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2300494935049"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300811637219"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_rc" id="2304265419697"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300618577123"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2302522652892"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2303873057046"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301178640231"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2301413861667"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302825493932"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302715960045"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303169127195"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303922730952"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2301201714026"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2301687631821"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301683239266"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302121606675"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303217416724"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300332311366"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304236024352"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300338654286"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2302282761229"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2301832759178"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302585797345"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301039749558"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303725558855"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304262658701"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303763076768"/>
			<CallExpr type="void" spelling="type_name" id="2303595680856"/>
			<CallExpr type="int" spelling="printf" id="2300726199354"/>
			<CallExpr type="const char *" spelling="zlib_flevel" id="2303529998207"/>
			<CallExpr type="void" spelling="uarb_print" id="2300524261273"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301942533649"/>
			<CallExpr type="void" spelling="uarb_print" id="2302587809725"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301353146136"/>
			<CallExpr type="int" spelling="fputs" id="2300673529043"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301044391392"/>
			<CallExpr type="void" spelling="type_name" id="2302183789177"/>
			<CallExpr type="int" spelling="printf" id="2303543156785"/>
			<CallExpr type="const char *" spelling="zlib_flevel" id="2302082496143"/>
			<CallExpr type="const char *" spelling="zlib_rc" id="2302679238783"/>
			<CallExpr type="void" spelling="uarb_print" id="2302352382963"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302989737295"/>
			<CallExpr type="void" spelling="emit_string" id="2302516900219"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303747923074"/>
			<CallExpr type="int" spelling="fputs" id="2300508733837"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302651874563"/>
			<StringLiteral type="char [4]" spelling="&quot;CHK&quot;" id="2300537728635"/>
			<StringLiteral type="char [4]" spelling="&quot;TFB&quot;" id="2300631901776"/>
			<StringLiteral type="char [4]" spelling="&quot;OK &quot;" id="2300849946981"/>
			<StringLiteral type="char [4]" spelling="&quot;OPT&quot;" id="2300396227766"/>
			<StringLiteral type="char [14]" spelling="&quot; %s %s %d %d &quot;" id="2301871226474"/>
			<StringLiteral type="char [15]" spelling="&quot; SKP %s %d %s &quot;" id="2300638945519"/>
			<StringLiteral type="char [13]" spelling="&quot;[no_message]&quot;" id="2300411638936"/>
			<VarDecl type="const char *" spelling="reason" id="2302699042517"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300811943394"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302770696977"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300893592623"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300662361979"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300375502701"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302096012759"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2303081594229"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303877866514"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303868634937"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300277331678"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302090407279"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302360463955"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302259507425"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301941141499"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2300658663806"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302924514032"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_flevel" id="2302327789792"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302705571202"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300915045515"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300379324066"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2301809438783"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301355601303"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301971456922"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302375830230"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302538214501"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302440447014"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2300091261223"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301871876968"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304230728817"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301599879587"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303794786098"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301020535058"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2301733286701"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300630644155"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300277730135"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302839504308"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301307228505"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302628113124"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303146660725"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302674873729"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2303197082877"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_flevel" id="2304121865054"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300203381374"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304223304647"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_rc" id="2303809212646"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301100740323"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2301751172448"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303258012406"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301723547695"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300051023658"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301369577158"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302312117295"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2302151679173"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300986769938"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301648247060"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301305487251"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301361635254"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303464895252"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303582315408"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300598959804"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300169785132"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302357239918"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303840179184"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2302070625768"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302663160986"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300207701369"/>
			<MemberRefExpr type="int" spelling="cksum" id="2302398189223"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303704209861"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2303851910277"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302816339757"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2302295107770"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2301947658195"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303474563851"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301492766754"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302431260602"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2301240594950"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301000458535"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2304152983603"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300227562269"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2303501309946"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300462642142"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302685726313"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300824029926"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2303027431211"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2301844665769"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301065966281"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303124422423"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301308862442"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2302417001274"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303524043602"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2300290698574"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2303046082529"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="exit" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stream was read ok" comment_scope_start="2100" comment_scope_end="2100">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301601712606"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301780029506"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302770696977"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300207701369"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="checksum error" comment_scope_start="2105" comment_scope_end="2105">
		<SYMBOLS>
			<StringLiteral type="char [4]" spelling="&quot;CHK&quot;" id="2300537728635"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2300662361979"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="fixing a too-far-back error" comment_scope_start="2108" comment_scope_end="2108">
		<SYMBOLS>
			<StringLiteral type="char [4]" spelling="&quot;TFB&quot;" id="2300631901776"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2303081594229"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="optimizing window bits" comment_scope_start="2114" comment_scope_end="2114">
		<SYMBOLS>
			<StringLiteral type="char [4]" spelling="&quot;OPT&quot;" id="2300396227766"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302090407279"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="SUMMARY FORMAT (for a successful zlib inflate):
          *
          * IDAT reason flevel file-bits ok-bits compressed uncompressed file" comment_scope_start="2116" comment_scope_end="2130">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2302583238091"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2301433195218"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302643701543"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301393913606"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301239899784"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2302191489019"/>
			<UnexposedExpr type="const char *" spelling="reason" id="2303482440125"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_flevel" id="2303503129495"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303668785292"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303096758516"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302548290387"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2300614796089"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301997104469"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2301572725000"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2302258916232"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300063753499"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2300946102608"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300822734333"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300028008563"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302972436361"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2301209048780"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2301913547183"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2304138373238"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303899671223"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2300627822706"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304105723050"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303552282996"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2301781058793"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303058242202"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303747573367"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2301607735799"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302227903504"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301084135939"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303144569587"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2300014937575"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2304174396237"/>
			<CallExpr type="void" spelling="type_name" id="2303595680856"/>
			<CallExpr type="int" spelling="printf" id="2300726199354"/>
			<CallExpr type="const char *" spelling="zlib_flevel" id="2303529998207"/>
			<CallExpr type="void" spelling="uarb_print" id="2300524261273"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301942533649"/>
			<CallExpr type="void" spelling="uarb_print" id="2302587809725"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301353146136"/>
			<CallExpr type="int" spelling="fputs" id="2300673529043"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301044391392"/>
			<StringLiteral type="char [14]" spelling="&quot; %s %s %d %d &quot;" id="2301871226474"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302360463955"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302259507425"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301941141499"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2300658663806"/>
			<DeclRefExpr type="const char *" spelling="reason" id="2302924514032"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_flevel" id="2302327789792"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302705571202"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300915045515"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300379324066"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2301809438783"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301355601303"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301971456922"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302375830230"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302538214501"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302440447014"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2300091261223"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301871876968"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304230728817"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301599879587"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2303794786098"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301020535058"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2301733286701"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300630644155"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300277730135"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302839504308"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301307228505"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2301947658195"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303474563851"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301492766754"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302431260602"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2301240594950"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301000458535"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2304152983603"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300227562269"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2303501309946"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300462642142"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="uncompressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is a zlib read error; the chunk will be skipped.  For an IDAT
          * stream this will also cause a fatal read error (via stop()).
          *
          * SUMMARY FORMAT:
          *
          * IDAT SKP flevel file-bits z-rc compressed message file
          *
          * z-rc is the zlib failure code; message is the error message with
          * spaces replaced by '-'.  The compressed byte count indicates where
          * in the zlib stream the error occurred." comment_scope_start="2134" comment_scope_end="2154">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2301596964156"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2300225253486"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303047497731"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300291150117"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302998509697"/>
			<UnexposedExpr type="int (*)(const char *, ...)" spelling="printf" id="2301061824036"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_flevel" id="2300421408152"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302757626074"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2300494935049"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300811637219"/>
			<UnexposedExpr type="const char *(*)(struct zlib *)" spelling="zlib_rc" id="2304265419697"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300618577123"/>
			<UnexposedExpr type="void (*)(uarb, int, FILE *)" spelling="uarb_print" id="2302522652892"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2303873057046"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301178640231"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2301413861667"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302825493932"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2302715960045"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2303169127195"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303922730952"/>
			<UnexposedExpr type="void (*)(const char *, FILE *)" spelling="emit_string" id="2301201714026"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2301687631821"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301683239266"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302121606675"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303217416724"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300332311366"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304236024352"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2300338654286"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2302282761229"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2301832759178"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302585797345"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301039749558"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303725558855"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2304262658701"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stdout" id="2303763076768"/>
			<CallExpr type="void" spelling="type_name" id="2302183789177"/>
			<CallExpr type="int" spelling="printf" id="2303543156785"/>
			<CallExpr type="const char *" spelling="zlib_flevel" id="2302082496143"/>
			<CallExpr type="const char *" spelling="zlib_rc" id="2302679238783"/>
			<CallExpr type="void" spelling="uarb_print" id="2302352382963"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302989737295"/>
			<CallExpr type="void" spelling="emit_string" id="2302516900219"/>
			<CallExpr type="int" spelling="_IO_putc" id="2303747923074"/>
			<CallExpr type="int" spelling="fputs" id="2300508733837"/>
			<CallExpr type="int" spelling="_IO_putc" id="2302651874563"/>
			<StringLiteral type="char [15]" spelling="&quot; SKP %s %d %s &quot;" id="2300638945519"/>
			<StringLiteral type="char [13]" spelling="&quot;[no_message]&quot;" id="2300411638936"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302628113124"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303146660725"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302674873729"/>
			<DeclRefExpr type="int (const char *, ...)" spelling="printf" id="2303197082877"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_flevel" id="2304121865054"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300203381374"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304223304647"/>
			<DeclRefExpr type="const char *(struct zlib *)" spelling="zlib_rc" id="2303809212646"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301100740323"/>
			<DeclRefExpr type="void (uarb, int, FILE *)" spelling="uarb_print" id="2301751172448"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303258012406"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301723547695"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300051023658"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301369577158"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2302312117295"/>
			<DeclRefExpr type="void (const char *, FILE *)" spelling="emit_string" id="2302151679173"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300986769938"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301648247060"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2301305487251"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301361635254"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303464895252"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303582315408"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300598959804"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2300169785132"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2302357239918"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stdout" id="2303840179184"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302685726313"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300824029926"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2303027431211"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2301844665769"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2301065966281"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303124422423"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301308862442"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2302417001274"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303524043602"/>
			<MemberRefExpr type="const char *" spelling="file_name" id="2300290698574"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2303046082529"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected" comment_scope_start="2162" comment_scope_end="2162">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2300047123202"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300246566672"/>
			<CallExpr type="void" spelling="zlib_message" id="2303927901996"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2302617387289"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304113877171"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Reinitializes a zlib with a different window_bits" comment_scope_start="2170" comment_scope_end="2192">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2304235989057"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300553783321"/>
			<UnexposedExpr type="int" spelling="state" id="2302171764065"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303938049977"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300776786635"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301883182555"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304169447389"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301334216098"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300848558200"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300787992265"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2301887496136"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303473995731"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301457520059"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303286132183"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302018788439"/>
			<UnexposedExpr type="int (*)(z_streamp, int)" spelling="inflateReset2" id="2302157849700"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303192571386"/>
			<UnexposedExpr type="int" spelling="rc" id="2301963920232"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300160477565"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2301640780496"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303310047807"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301181461875"/>
			<CallExpr type="int" spelling="inflateReset2" id="2300608913712"/>
			<CallExpr type="void" spelling="zlib_message" id="2301413839397"/>
			<StringLiteral type="char [17]" spelling="&quot;zlib-&gt;state &gt;= 0&quot;" id="2301333088128"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301743923430"/>
			<StringLiteral type="const char [35]" spelling="&quot;int zlib_reset(struct zlib *, int)&quot;" id="2303193265805"/>
			<FunctionDecl type="int (struct zlib *, int)" spelling="zlib_reset" id="2302524947860"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301445958402"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300116525912"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303687194529"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300921327623"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303939479808"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302658858332"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302912871956"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302278423757"/>
			<DeclRefExpr type="int" spelling="window_bits" id="2302225838150"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301947020925"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301647790859"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300730579454"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302741498505"/>
			<DeclRefExpr type="int (z_streamp, int)" spelling="inflateReset2" id="2303855274852"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303925076263"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300112323772"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2300138274977"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303407432814"/>
			<MemberRefExpr type="int" spelling="state" id="2303871508245"/>
			<MemberRefExpr type="int" spelling="state" id="2301947724662"/>
			<MemberRefExpr type="const Bytef *" spelling="next_in" id="2304250727275"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301215444090"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2300979287825"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302374863638"/>
			<MemberRefExpr type="Bytef *" spelling="next_out" id="2301778901746"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301597363543"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2302630380566"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303256240969"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2300166164533"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2303479808315"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2303919522176"/>
			<MemberRefExpr type="int" spelling="state" id="2303379162656"/>
			<MemberRefExpr type="int" spelling="rc" id="2300609255122"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302150400377"/>
			<MemberRefExpr type="int" spelling="rc" id="2303095258651"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="initialized by zlib_init" comment_scope_start="2172" comment_scope_end="2172">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2304235989057"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300553783321"/>
			<UnexposedExpr type="int" spelling="state" id="2302171764065"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303938049977"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300776786635"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301181461875"/>
			<StringLiteral type="char [17]" spelling="&quot;zlib-&gt;state &gt;= 0&quot;" id="2301333088128"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301743923430"/>
			<StringLiteral type="const char [35]" spelling="&quot;int zlib_reset(struct zlib *, int)&quot;" id="2303193265805"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301445958402"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300116525912"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303687194529"/>
			<MemberRefExpr type="int" spelling="state" id="2303871508245"/>
			<MemberRefExpr type="int" spelling="state" id="2301947724662"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="initialized, once" comment_scope_start="2183" comment_scope_end="2183">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303286132183"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300730579454"/>
			<MemberRefExpr type="int" spelling="state" id="2303379162656"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected" comment_scope_start="2187" comment_scope_end="2187">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2301640780496"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303310047807"/>
			<CallExpr type="void" spelling="zlib_message" id="2301413839397"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2300138274977"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303407432814"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Initialize a zlib_control; the result is true/false" comment_scope_start="2197" comment_scope_end="2242">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(void *, size_t)" spelling="clear" id="2300019484231"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301319324751"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302032414636"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303225767453"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302290690664"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302713796996"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300357414990"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301266377182"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300453528533"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303225091441"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301180117020"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300586611063"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302245138762"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302676664956"/>
			<UnexposedExpr type="png_uint_32" spelling="offset" id="2301427240431"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302989162463"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301153790617"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301554160264"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301289750451"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301405512254"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303257096089"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302723965852"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2301507766889"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302977234213"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303561231034"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304243960238"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302315048687"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301353396762"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303754733623"/>
			<UnexposedExpr type="int (*)(z_streamp, int, const char *, int)" spelling="inflateInit2_" id="2301433168552"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300326496565"/>
			<UnexposedExpr type="int" spelling="rc" id="2300441079969"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303403403260"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2301110227163"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301667405477"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300726984569"/>
			<TypeRef type="z_stream" spelling="z_stream" id="2300967976493"/>
			<CallExpr type="void" spelling="clear" id="2300463681008"/>
			<CallExpr type="int" spelling="inflateInit2_" id="2303455451699"/>
			<CallExpr type="void" spelling="zlib_message" id="2302135903822"/>
			<StringLiteral type="char [7]" spelling="&quot;1.2.11&quot;" id="2300568483807"/>
			<FunctionDecl type="int (struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2302046913393"/>
			<DeclRefExpr type="void (void *, size_t)" spelling="clear" id="2302533740551"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300349534978"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302955211257"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302178853428"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301621296957"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303168491256"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301113948095"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302797160378"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303384544891"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301018767911"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301781461862"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304009944404"/>
			<DeclRefExpr type="png_uint_32" spelling="offset" id="2303838981180"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301979383278"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302439123886"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303731533330"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301567982109"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302466070737"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304269447424"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304214606328"/>
			<DeclRefExpr type="int" spelling="window_bits" id="2302490152431"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301687077884"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301816776131"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300427181035"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300968419325"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302321839822"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302783005688"/>
			<DeclRefExpr type="int (z_streamp, int, const char *, int)" spelling="inflateInit2_" id="2300211067763"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302990824750"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302526647583"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301995625827"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304219204202"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303754358477"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301292239292"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301919075160"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300837511637"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2302828354644"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301135397919"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301628904217"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303386171416"/>
			<MemberRefExpr type="const Bytef *" spelling="next_in" id="2301102488579"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300272489474"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2302476147880"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303976762693"/>
			<MemberRefExpr type="alloc_func" spelling="zalloc" id="2301089970884"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303081194981"/>
			<MemberRefExpr type="free_func" spelling="zfree" id="2301251469763"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301650534681"/>
			<MemberRefExpr type="voidpf" spelling="opaque" id="2302940880862"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301546417328"/>
			<MemberRefExpr type="int" spelling="state" id="2301985632407"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2304216218885"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2300404798247"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300603345598"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2300924535942"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300981526448"/>
			<MemberRefExpr type="int" spelling="cksum" id="2300768473627"/>
			<MemberRefExpr type="int" spelling="rc" id="2300135827283"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300681922921"/>
			<MemberRefExpr type="int" spelling="rc" id="2300620028903"/>
			<MemberRefExpr type="int" spelling="state" id="2301242865193"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="initialize" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="never changed for this zlib" comment_scope_start="2205" comment_scope_end="2205">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302676664956"/>
			<UnexposedExpr type="png_uint_32" spelling="offset" id="2301427240431"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304009944404"/>
			<DeclRefExpr type="png_uint_32" spelling="offset" id="2303838981180"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303386171416"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="*_out does not need to be set:" comment_scope_start="2207" comment_scope_end="2219">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302989162463"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301153790617"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301554160264"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301289750451"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301405512254"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303257096089"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302723965852"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2301507766889"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302977234213"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303561231034"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301979383278"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302439123886"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303731533330"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301567982109"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302466070737"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304269447424"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304214606328"/>
			<DeclRefExpr type="int" spelling="window_bits" id="2302490152431"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301687077884"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301816776131"/>
			<MemberRefExpr type="const Bytef *" spelling="next_in" id="2301102488579"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300272489474"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2302476147880"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303976762693"/>
			<MemberRefExpr type="alloc_func" spelling="zalloc" id="2301089970884"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303081194981"/>
			<MemberRefExpr type="free_func" spelling="zfree" id="2301251469763"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301650534681"/>
			<MemberRefExpr type="voidpf" spelling="opaque" id="2302940880862"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301546417328"/>
			<MemberRefExpr type="int" spelling="state" id="2301985632407"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2304216218885"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2300404798247"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2300603345598"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="These values are sticky across reset (in addition to the stuff in the
    * first block, which is actually constant.)" comment_scope_start="2220" comment_scope_end="2223">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304243960238"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300427181035"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2300924535942"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="addition" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="constant" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unset" comment_scope_start="2224" comment_scope_end="2224">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302315048687"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300968419325"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300981526448"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="set when a checksum error is detected" comment_scope_start="2225" comment_scope_end="2225">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301353396762"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302321839822"/>
			<MemberRefExpr type="int" spelling="cksum" id="2300768473627"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="'0' means use the header; inflateInit2 should always succeed because it
    * does nothing apart from allocating the internal zstate." comment_scope_start="2227" comment_scope_end="2232">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303754733623"/>
			<UnexposedExpr type="int (*)(z_streamp, int, const char *, int)" spelling="inflateInit2_" id="2301433168552"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300326496565"/>
			<UnexposedExpr type="int" spelling="rc" id="2300441079969"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303403403260"/>
			<TypeRef type="z_stream" spelling="z_stream" id="2300967976493"/>
			<CallExpr type="int" spelling="inflateInit2_" id="2303455451699"/>
			<StringLiteral type="char [7]" spelling="&quot;1.2.11&quot;" id="2300568483807"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302783005688"/>
			<DeclRefExpr type="int (z_streamp, int, const char *, int)" spelling="inflateInit2_" id="2300211067763"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302990824750"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302526647583"/>
			<MemberRefExpr type="int" spelling="rc" id="2300135827283"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300681922921"/>
			<MemberRefExpr type="int" spelling="rc" id="2300620028903"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="allocating" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected" comment_scope_start="2233" comment_scope_end="2233">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2301110227163"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301667405477"/>
			<CallExpr type="void" spelling="zlib_message" id="2302135903822"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301995625827"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304219204202"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="initialized" comment_scope_start="2239" comment_scope_end="2239">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300726984569"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303754358477"/>
			<MemberRefExpr type="int" spelling="state" id="2301242865193"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return the zlib stream window bits required for data of the given size." comment_scope_start="2246" comment_scope_end="2263">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ndigits" id="2304143449122"/>
			<UnexposedExpr type="uarbc" spelling="size" id="2303314526318"/>
			<UnexposedExpr type="int" spelling="cb" id="2301174103369"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2301534979644"/>
			<UnexposedExpr type="int" spelling="cb" id="2300887385003"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2300556365209"/>
			<UnexposedExpr type="int" spelling="cb" id="2300994975333"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2300347668097"/>
			<UnexposedExpr type="int" spelling="cb" id="2300525172372"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2301128809166"/>
			<UnexposedExpr type="int" spelling="cb" id="2301071410607"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2300593995391"/>
			<UnexposedExpr type="int" spelling="cb" id="2300024600839"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2300171074323"/>
			<UnexposedExpr type="int" spelling="cb" id="2303077933249"/>
			<UnexposedExpr type="png_uint_16" spelling="cb" id="2304068360289"/>
			<TypeRef type="png_uint_16" spelling="png_uint_16" id="2303090242471"/>
			<VarDecl type="png_uint_16" spelling="cb" id="2302677264180"/>
			<FunctionDecl type="int (uarbc, int)" spelling="max_window_bits" id="2301800283692"/>
			<DeclRefExpr type="int" spelling="ndigits" id="2302199051862"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2302857416954"/>
			<DeclRefExpr type="uarbc" spelling="size" id="2302653534872"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2302240096468"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2301460384346"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2302733879575"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2301325554247"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2301025745208"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2301377852723"/>
			<DeclRefExpr type="png_uint_16" spelling="cb" id="2300073297671"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read nbytes compressed bytes; the stream will be initialized if required.
    * Bytes are always being reread and errors are fatal.  The return code is as
    * follows:
    *
    *    -1: saw the &quot;too far back&quot; error
    *     0: ok, keep going
    *     1: saw Z_STREAM_END (zlib-&gt;extra_bytes indicates too much data)
    *     2: a zlib error that cannot be corrected (error message already
    *        output if required.)" comment_scope_start="2267" comment_scope_end="2297">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2303937433081"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302847923332"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303029916794"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303995408754"/>
			<UnexposedExpr type="int" spelling="state" id="2300122425628"/>
			<UnexposedExpr type="int" spelling="state" id="2303592397505"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301766257752"/>
			<UnexposedExpr type="png_uint_32" spelling="in_bytes" id="2302484750949"/>
			<UnexposedExpr type="png_uint_32" spelling="nbytes" id="2301069044820"/>
			<UnexposedExpr type="int" spelling="endrc" id="2303741770698"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301953123725"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303328167828"/>
			<UnexposedExpr type="int" spelling="state" id="2302507467609"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300305420157"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301051539551"/>
			<StringLiteral type="char [11]" spelling="&quot;state &gt;= 0&quot;" id="2302307908795"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302887345810"/>
			<StringLiteral type="const char [45]" spelling="&quot;int zlib_advance(struct zlib *, png_uint_32)&quot;" id="2302700490936"/>
			<VarDecl type="int" spelling="state" id="2302346666385"/>
			<VarDecl type="int" spelling="endrc" id="2300427443281"/>
			<VarDecl type="png_uint_32" spelling="in_bytes" id="2300447712316"/>
			<VarDecl type="struct file *" spelling="file" id="2304222700120"/>
			<VarDecl type="png_uint_32" spelling="out_bytes" id="2304101587787"/>
			<VarDecl type="int" spelling="flush" id="2300480773780"/>
			<VarDecl type="png_byte" spelling="bIn" id="2300217901228"/>
			<VarDecl type="png_byte" spelling="bOut" id="2303862009662"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301892250200"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300903444028"/>
			<DeclRefExpr type="int" spelling="state" id="2303178126338"/>
			<DeclRefExpr type="int" spelling="state" id="2302994787815"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300407034332"/>
			<DeclRefExpr type="png_uint_32" spelling="in_bytes" id="2302988941317"/>
			<DeclRefExpr type="png_uint_32" spelling="nbytes" id="2300887498370"/>
			<DeclRefExpr type="int" spelling="endrc" id="2301401280080"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300279065840"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300331633163"/>
			<DeclRefExpr type="int" spelling="state" id="2301364008407"/>
			<MemberRefExpr type="int" spelling="state" id="2301387271035"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2300879994375"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="first header byte" comment_scope_start="2298" comment_scope_end="2298"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Check against the existing value - it may not need to be
                * changed.  Note that a bogus file_bits is allowed through once,
                * to see if it works, but the window_bits value is set to 15,
                * the maximum." comment_scope_start="2305" comment_scope_end="2309"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="no change" comment_scope_start="2310" comment_scope_end="2310">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="new_bits" id="2302350041634"/>
			<DeclRefExpr type="int" spelling="new_bits" id="2304279145744"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="rewrite required" comment_scope_start="2313" comment_scope_end="2313">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="new_bits" id="2300539366271"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2301131391200"/>
			<DeclRefExpr type="int" spelling="new_bits" id="2303812574824"/>
			<DeclRefExpr type="int" spelling="file_bits" id="2301703307157"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="second header byte" comment_scope_start="2321" comment_scope_end="2321"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="top 3 bits" comment_scope_start="2323" comment_scope_end="2323">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="bIn" id="2300416517478"/>
			<UnexposedExpr type="png_byte" spelling="bIn" id="2302958614583"/>
			<VarDecl type="int" spelling="b2" id="2302381639790"/>
			<DeclRefExpr type="png_byte" spelling="bIn" id="2300067471869"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="top" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The checksum calculation, on the first 11 bits:" comment_scope_start="2325" comment_scope_end="2327">
		<SYMBOLS>
			<UnexposedExpr type="png_byte *" spelling="header" id="2301823448406"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300232209962"/>
			<UnexposedExpr type="int" spelling="b2" id="2300318208865"/>
			<DeclRefExpr type="int" spelling="b2" id="2300337285966"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300507424868"/>
			<DeclRefExpr type="int" spelling="b2" id="2303731034914"/>
			<MemberRefExpr type="png_byte [2]" spelling="header" id="2302980999137"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Update the checksum byte if required:" comment_scope_start="2328" comment_scope_end="2338">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="bIn" id="2300907994998"/>
			<UnexposedExpr type="png_byte" spelling="bIn" id="2302075574419"/>
			<UnexposedExpr type="int" spelling="b2" id="2303932157095"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303863426128"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303901296931"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2303013480706"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302567750997"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302888064086"/>
			<UnexposedExpr type="int" spelling="b2" id="2301440716498"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<DeclRefExpr type="png_byte" spelling="bIn" id="2301860540249"/>
			<DeclRefExpr type="int" spelling="b2" id="2303264617550"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300976161436"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302168647299"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300869509310"/>
			<DeclRefExpr type="png_byte" spelling="bIn" id="2302798894854"/>
			<DeclRefExpr type="int" spelling="b2" id="2301955252402"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301694496898"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302359889459"/>
			<MemberRefExpr type="int" spelling="cksum" id="2300349701390"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="If the first byte wasn't changed this indicates an error in
                   * the checksum calculation; signal this by setting 'cksum'." comment_scope_start="2331" comment_scope_end="2338">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="file_bits" id="2303863426128"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303901296931"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2303013480706"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302567750997"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302888064086"/>
			<UnexposedExpr type="int" spelling="b2" id="2301440716498"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300976161436"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302168647299"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300869509310"/>
			<DeclRefExpr type="png_byte" spelling="bIn" id="2302798894854"/>
			<DeclRefExpr type="int" spelling="b2" id="2301955252402"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301694496898"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302359889459"/>
			<MemberRefExpr type="int" spelling="cksum" id="2300349701390"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="signal" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="After the header bytes" comment_scope_start="2345" comment_scope_end="2345"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="For some streams, perhaps only those compressed with 'superfast
       * compression' (which results in a lot of copying) Z_BUF_ERROR can happen
       * immediately after all output has been flushed on the next input byte.
       * This is handled below when Z_BUF_ERROR is detected by adding an output
       * byte." comment_scope_start="2349" comment_scope_end="2357">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302279038607"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303635028512"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300274444487"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303278706916"/>
			<DeclRefExpr type="png_byte" spelling="bIn" id="2302855549862"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303407996499"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301997045460"/>
			<DeclRefExpr type="png_byte" spelling="bOut" id="2302045495799"/>
			<MemberRefExpr type="const Bytef *" spelling="next_in" id="2303343368168"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302667118019"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2303805900632"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300503211957"/>
			<MemberRefExpr type="Bytef *" spelling="next_out" id="2304024384170"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303246310157"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="compression"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Initially" comment_scope_start="2358" comment_scope_end="2358">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301353594462"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303887228593"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2302208146661"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301147686723"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Initially use Z_NO_FLUSH in an attempt to persuade zlib to look at this
       * byte without confusing what is going on with output." comment_scope_start="2360" comment_scope_end="2365">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="flush" id="2301326198835"/>
			<DeclRefExpr type="png_uint_32" spelling="out_bytes" id="2303172604351"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: expression 3 is only evaluated on 'continue', because of the
       * 'break' at the end of this loop below." comment_scope_start="2366" comment_scope_end="2381">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="endrc" id="2301407163679"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300260236963"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303146608181"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303356724399"/>
			<UnexposedExpr type="int (*)(z_streamp, int)" spelling="inflate" id="2301475260649"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300449072709"/>
			<UnexposedExpr type="int" spelling="flush" id="2300091532978"/>
			<UnexposedExpr type="uInt" spelling="avail_out" id="2303521510944"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300986004145"/>
			<UnexposedExpr type="int" spelling="rc" id="2304144927368"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300990006042"/>
			<UnexposedExpr type="uInt" spelling="avail_out" id="2301518825046"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303827359844"/>
			<CallExpr type="int" spelling="inflate" id="2303969674086"/>
			<DeclRefExpr type="int" spelling="endrc" id="2301229427172"/>
			<DeclRefExpr type="int" spelling="flush" id="2301043604122"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300997811730"/>
			<DeclRefExpr type="png_byte" spelling="bOut" id="2300587399165"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300436475984"/>
			<DeclRefExpr type="png_uint_32" spelling="out_bytes" id="2302824135646"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304082342715"/>
			<DeclRefExpr type="int (z_streamp, int)" spelling="inflate" id="2302648684125"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302049452211"/>
			<DeclRefExpr type="int" spelling="flush" id="2300943357702"/>
			<DeclRefExpr type="png_uint_32" spelling="out_bytes" id="2302390567886"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303348328740"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301005164889"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300992392572"/>
			<MemberRefExpr type="Bytef *" spelling="next_out" id="2300311302050"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300679880637"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2300863694804"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302022225729"/>
			<MemberRefExpr type="int" spelling="rc" id="2302305778595"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300086916176"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2303809820402"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302475496031"/>
			<MemberRefExpr type="int" spelling="rc" id="2303428049908"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2302011456616"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2302393657028"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="evaluated" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="continue" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="break" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Try another output byte." comment_scope_start="2382" comment_scope_end="2382"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Try another input byte" comment_scope_start="2385" comment_scope_end="2385"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Both avail_out and avail_in are 1 yet zlib returned a code
                * indicating no progress was possible.  This is unexpected." comment_scope_start="2387" comment_scope_end="2389"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="unexpected" comment_scope_start="2390" comment_scope_end="2390">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2304162456553"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300045711440"/>
			<CallExpr type="void" spelling="zlib_message" id="2303417673473"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301064181570"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300943730159"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stop processing" comment_scope_start="2391" comment_scope_end="2391">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="endrc" id="2302060617328"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Zlib is supposed to have made progress:" comment_scope_start="2395" comment_scope_end="2399">
		<SYMBOLS>
			<UnexposedExpr type="uInt" spelling="avail_out" id="2304031032173"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300883648634"/>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2303510035733"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300668662591"/>
			<UnexposedExpr type="uInt" spelling="avail_out" id="2303953641639"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303947186823"/>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2301560030315"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300953120492"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303526969622"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301234253375"/>
			<StringLiteral type="char [48]" spelling="&quot;zlib-&gt;z.avail_out == 0 || zlib-&gt;z.avail_in == 0&quot;" id="2300041616222"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303230521178"/>
			<StringLiteral type="const char [45]" spelling="&quot;int zlib_advance(struct zlib *, png_uint_32)&quot;" id="2300187006253"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300309326657"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302255509515"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302267000852"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301156397464"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303309277110"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2303899177429"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301099837592"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2303430117708"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303448472092"/>
			<MemberRefExpr type="uInt" spelling="avail_out" id="2303421047389"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303706734850"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2300598126254"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303020078513"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="progress" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is the successful end." comment_scope_start="2400" comment_scope_end="2400"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="end of stream" comment_scope_start="2401" comment_scope_end="2401">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302406619925"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303720573044"/>
			<MemberRefExpr type="int" spelling="state" id="2300327671366"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stream error" comment_scope_start="2406" comment_scope_end="2406">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2300090996654"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303275419104"/>
			<CallExpr type="void" spelling="zlib_message" id="2301266080674"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301407205350"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302669686680"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The too far back error can be corrected, others cannot:" comment_scope_start="2411" comment_scope_end="2417">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="msg" id="2302834185678"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301184060894"/>
			<UnexposedExpr type="int (*)(const char *, const char *)" spelling="strcmp" id="2303675767363"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2300103531313"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300444744905"/>
			<CallExpr type="int" spelling="strcmp" id="2300365680181"/>
			<StringLiteral type="char [30]" spelling="&quot;invalid distance too far back&quot;" id="2302581894096"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302865779924"/>
			<DeclRefExpr type="int (const char *, const char *)" spelling="strcmp" id="2303668396069"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300681565166"/>
			<DeclRefExpr type="int" spelling="endrc" id="2300902132334"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2300788062955"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300314807955"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303534193529"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300946728314"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="FALLTHROUGH" comment_scope_start="2418" comment_scope_end="2420"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stream error" comment_scope_start="2421" comment_scope_end="2421">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2303593551978"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303629919177"/>
			<CallExpr type="void" spelling="zlib_message" id="2303690335509"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301492527789"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303450492826"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="switch (inflate rc)" comment_scope_start="2424" comment_scope_end="2424"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Control gets here when further output is not possible; endrc may
          * still be ZLIB_OK if more input is required." comment_scope_start="2426" comment_scope_end="2429"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="for (output bytes)" comment_scope_start="2430" comment_scope_end="2430"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Keep a running count of output byte produced:" comment_scope_start="2432" comment_scope_end="2435">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302355741075"/>
			<UnexposedExpr type="int (*)(uarb, int, png_uint_32)" spelling="uarb_add32" id="2301323173880"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2302636944976"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302627090911"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2301551635205"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303253324741"/>
			<UnexposedExpr type="png_uint_32" spelling="out_bytes" id="2300507628990"/>
			<CallExpr type="int" spelling="uarb_add32" id="2302722129208"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301604808800"/>
			<DeclRefExpr type="int (uarb, int, png_uint_32)" spelling="uarb_add32" id="2301354508716"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303040056842"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301296730764"/>
			<DeclRefExpr type="png_uint_32" spelling="out_bytes" id="2301399102641"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2302520783347"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2302495965863"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2302514911343"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Keep going, the loop will terminate when endrc is no longer set to
       * ZLIB_OK or all the input bytes have been consumed; meanwhile keep
       * adding input bytes." comment_scope_start="2436" comment_scope_end="2442">
		<SYMBOLS>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2303261016687"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302710235493"/>
			<UnexposedExpr type="int" spelling="endrc" id="2300214701598"/>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2303685085210"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303565276626"/>
			<UnexposedExpr type="int" spelling="endrc" id="2302141921456"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2304131528622"/>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2301419131700"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303337341136"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300663011697"/>
			<StringLiteral type="char [42]" spelling="&quot;zlib-&gt;z.avail_in == 0 || endrc != ZLIB_OK&quot;" id="2303625262938"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303841401235"/>
			<StringLiteral type="const char [45]" spelling="&quot;int zlib_advance(struct zlib *, png_uint_32)&quot;" id="2304261011657"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304235426063"/>
			<DeclRefExpr type="int" spelling="endrc" id="2302085474007"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303602131450"/>
			<DeclRefExpr type="int" spelling="endrc" id="2300284296262"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300465606839"/>
			<DeclRefExpr type="png_uint_32" spelling="in_bytes" id="2303142599626"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302900386593"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2302016965668"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300917626098"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2303314840622"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303825901854"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2300121314645"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2300597250135"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="terminate" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="adding" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="while (input bytes)" comment_scope_start="2443" comment_scope_end="2443"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Update the running total of input bytes consumed" comment_scope_start="2447" comment_scope_end="2450">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303211638455"/>
			<UnexposedExpr type="int (*)(uarb, int, png_uint_32)" spelling="uarb_add32" id="2302139904439"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2300580754264"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301899509840"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2302492778725"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303926092530"/>
			<UnexposedExpr type="png_uint_32" spelling="in_bytes" id="2303032173081"/>
			<UnexposedExpr type="uInt" spelling="avail_in" id="2302995890530"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303782181298"/>
			<CallExpr type="int" spelling="uarb_add32" id="2301930990574"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301413465385"/>
			<DeclRefExpr type="int (uarb, int, png_uint_32)" spelling="uarb_add32" id="2300931566002"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302373083529"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303251481004"/>
			<DeclRefExpr type="png_uint_32" spelling="in_bytes" id="2302981755727"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301693900659"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2300711655793"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2301894463208"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2302579378211"/>
			<MemberRefExpr type="uInt" spelling="avail_in" id="2302670019670"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2301775295750"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="total" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="At the end of the stream update the chunk with the accumulated
    * information if it is an improvement:" comment_scope_start="2451" comment_scope_end="2483">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="endrc" id="2302065291810"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300227402251"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303617417987"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2300574866296"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300670673696"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301387309715"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302298531802"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300244756517"/>
			<UnexposedExpr type="int (*)(uarb, uarb, int)" spelling="uarb_copy" id="2303667869377"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2300214728321"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302452261805"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2302076085225"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303662865765"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2301301961439"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302442880496"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300990936042"/>
			<UnexposedExpr type="int (*)(uarb, uarb, int)" spelling="uarb_copy" id="2301890935386"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2304064448754"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302181459471"/>
			<UnexposedExpr type="udigit *" spelling="compressed_bytes" id="2303733096433"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302360988123"/>
			<UnexposedExpr type="int" spelling="compressed_digits" id="2300382659932"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301751812063"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2301782689435"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303882554864"/>
			<UnexposedExpr type="png_byte *" spelling="header" id="2303353779949"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303032700556"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302989512087"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303051320858"/>
			<UnexposedExpr type="png_byte *" spelling="header" id="2300615756995"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300630333306"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2303140328133"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303556722132"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2303838791754"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302235855486"/>
			<UnexposedExpr type="int" spelling="cksum" id="2302908062575"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302406145140"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301107450486"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302411792644"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303894571291"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303642063156"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303770543606"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301560630348"/>
			<UnexposedExpr type="png_uint_32" spelling="in_bytes" id="2301975757623"/>
			<UnexposedExpr type="png_uint_32" spelling="nbytes" id="2303348706690"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2301624496058"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303258334497"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300770156835"/>
			<UnexposedExpr type="png_uint_32" spelling="nbytes" id="2302150454145"/>
			<UnexposedExpr type="png_uint_32" spelling="in_bytes" id="2303796207851"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301497258495"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2304103632530"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303596032314"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<CallExpr type="int" spelling="uarb_copy" id="2303234797410"/>
			<CallExpr type="int" spelling="uarb_copy" id="2302028069528"/>
			<CallExpr type="void" spelling="chunk_message" id="2300502032293"/>
			<StringLiteral type="char [22]" spelling="&quot;extra compressed data&quot;" id="2301154000333"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2303724396844"/>
			<DeclRefExpr type="int" spelling="endrc" id="2303847888801"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303265516964"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303901523691"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300032638524"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301731071824"/>
			<DeclRefExpr type="int (uarb, uarb, int)" spelling="uarb_copy" id="2302081317439"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302184927200"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300030960138"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301170101462"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300353788167"/>
			<DeclRefExpr type="int (uarb, uarb, int)" spelling="uarb_copy" id="2301402551959"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300325273621"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302772486514"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300114160100"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300944666827"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302643966302"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303493053746"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301657943711"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300526887899"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300314223069"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301957429486"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300562652026"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303460265623"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300675007240"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303085458401"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302315370954"/>
			<DeclRefExpr type="png_uint_32" spelling="in_bytes" id="2302348984805"/>
			<DeclRefExpr type="png_uint_32" spelling="nbytes" id="2301673359848"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2301561594874"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301149442319"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302175190166"/>
			<DeclRefExpr type="png_uint_32" spelling="nbytes" id="2302531920904"/>
			<DeclRefExpr type="png_uint_32" spelling="in_bytes" id="2301875061816"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302124421121"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302667635893"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2304202679376"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300447133555"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302366172687"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2303740210021"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2304187952465"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2301209078332"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2301923072154"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2300562235853"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2304205767172"/>
			<MemberRefExpr type="udigit [5]" spelling="compressed_bytes" id="2303467367126"/>
			<MemberRefExpr type="int" spelling="compressed_digits" id="2302660873618"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2300600243434"/>
			<MemberRefExpr type="png_byte [2]" spelling="header" id="2302177013179"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2302471608656"/>
			<MemberRefExpr type="png_byte [2]" spelling="header" id="2302752109636"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2301314828838"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2300548371853"/>
			<MemberRefExpr type="int" spelling="cksum" id="2300395483375"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2304170084399"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300187323957"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2303081725710"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303452140686"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300640256228"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300577661506"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2300451787357"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302813677645"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="A rewrite is required" comment_scope_start="2467" comment_scope_end="2470">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301107450486"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302411792644"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303894571291"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303642063156"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300562652026"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303460265623"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300675007240"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2304170084399"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300187323957"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2303081725710"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Like zlib_advance but also handles a stream of IDAT chunks." comment_scope_start="2490" comment_scope_end="2604">
		<SYMBOLS>
			<LabelRef type="" spelling="end_check" id="2302367542729"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303361013056"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301257470692"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304265010423"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_head" id="2301071130215"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300363254797"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304232972464"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302668887727"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302607081154"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302147305571"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2300553824718"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304023719403"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2304094162006"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302607182207"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300393235189"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2304052680873"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302758803716"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301555147950"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302424208197"/>
			<UnexposedExpr type="int" spelling="skip" id="2304059242487"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2301798407968"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302285753132"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302729751014"/>
			<UnexposedExpr type="int (*)(struct zlib *, png_uint_32)" spelling="zlib_advance" id="2303917944766"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303504329981"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2302254442824"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303294683501"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301725191090"/>
			<UnexposedExpr type="int" spelling="rc" id="2303882371046"/>
			<UnexposedExpr type="int" spelling="errors" id="2302827786857"/>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2303623611512"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302860971922"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304088744253"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2301859707150"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302301094835"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301709019796"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301755200825"/>
			<UnexposedExpr type="int" spelling="count" id="2302777501617"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301322749778"/>
			<UnexposedExpr type="int" spelling="j" id="2302589902956"/>
			<UnexposedExpr type="int" spelling="jcount" id="2304241747990"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2302077603042"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302553512264"/>
			<UnexposedExpr type="int" spelling="j" id="2303901199712"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2302781509812"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301808109482"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303747699109"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302435608959"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2302489114306"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2301934168341"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301865828783"/>
			<UnexposedExpr type="int" spelling="count" id="2300366861105"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300526018470"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301762830048"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300863894201"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300222324695"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2300368450012"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2300697913943"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301122246261"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300848217547"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301808011701"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301171708048"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301764768035"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2304024437340"/>
			<UnexposedExpr type="int" spelling="rc" id="2302765438676"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302999442382"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2304267914727"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302799798319"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303493286985"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302839251614"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303893483816"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2300716612167"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300050749111"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2302822125545"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2304270524171"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2301659693014"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303823468286"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2300074958940"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302127828342"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301966272581"/>
			<UnexposedExpr type="int (*)(struct zlib *, png_uint_32)" spelling="zlib_advance" id="2303667916101"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303102817091"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2304068496926"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300932329098"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302103246191"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2300274101711"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300549138977"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2301651437027"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301163059854"/>
			<UnexposedExpr type="int" spelling="rc" id="2301037507044"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302368794510"/>
			<CallExpr type="void" spelling="skip_12" id="2302543834966"/>
			<CallExpr type="int" spelling="zlib_advance" id="2301060206358"/>
			<CallExpr type="void" spelling="chunk_message" id="2303213843241"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302296138925"/>
			<CallExpr type="int" spelling="zlib_advance" id="2300844977957"/>
			<StringLiteral type="char [26]" spelling="&quot;zlib-&gt;rewrite_offset == 0&quot;" id="2300965592417"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303142799695"/>
			<StringLiteral type="const char [28]" spelling="&quot;int zlib_run(struct zlib *)&quot;" id="2301673256072"/>
			<StringLiteral type="char [22]" spelling="&quot;extra compressed data&quot;" id="2302947081190"/>
			<StringLiteral type="char [43]" spelling="&quot;zlib-&gt;rewrite_offset &lt; chunk-&gt;chunk_length&quot;" id="2300769562119"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302145492675"/>
			<StringLiteral type="const char [28]" spelling="&quot;int zlib_run(struct zlib *)&quot;" id="2302778071896"/>
			<VarDecl type="struct IDAT_list *" spelling="list" id="2301750991476"/>
			<VarDecl type="struct IDAT_list *" spelling="last" id="2300542663979"/>
			<VarDecl type="int" spelling="skip" id="2302527899623"/>
			<VarDecl type="unsigned int" spelling="count" id="2303862714633"/>
			<VarDecl type="unsigned int" spelling="i" id="2300065266570"/>
			<VarDecl type="int" spelling="rc" id="2302337414636"/>
			<VarDecl type="struct IDAT_list *" spelling="check" id="2302357657851"/>
			<VarDecl type="int" spelling="j" id="2302888488119"/>
			<VarDecl type="int" spelling="jcount" id="2304236581806"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2300825138413"/>
			<VarDecl type="int" spelling="rc" id="2302951085008"/>
			<FunctionDecl type="int (struct zlib *)" spelling="zlib_run" id="2302483295457"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303406056705"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300657214408"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303745268329"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302241898736"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301823451836"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300098118396"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301842231306"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300717297312"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2302665120461"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303286506395"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2303322816626"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303776406718"/>
			<DeclRefExpr type="int" spelling="skip" id="2302792156145"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2301839135029"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301622503373"/>
			<DeclRefExpr type="int" spelling="skip" id="2303942721932"/>
			<DeclRefExpr type="int" spelling="rc" id="2300626116417"/>
			<DeclRefExpr type="int (struct zlib *, png_uint_32)" spelling="zlib_advance" id="2303543096670"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302063487794"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303004114600"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303680070011"/>
			<DeclRefExpr type="int" spelling="rc" id="2301460919706"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304024116451"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303706721737"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302438690250"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303003753356"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301133283526"/>
			<DeclRefExpr type="int" spelling="j" id="2302806844248"/>
			<DeclRefExpr type="int" spelling="jcount" id="2302999922320"/>
			<DeclRefExpr type="int" spelling="j" id="2301035919579"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2303259049849"/>
			<DeclRefExpr type="int" spelling="j" id="2300750511791"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2304101031194"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301631123625"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302838500804"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301328999599"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2300438382562"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302283000437"/>
			<DeclRefExpr type="int" spelling="jcount" id="2303245793402"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2301247882084"/>
			<DeclRefExpr type="int" spelling="j" id="2301260789506"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302372237090"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2304026055702"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302314562450"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303698848563"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2301986059819"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301791889502"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300466102728"/>
			<DeclRefExpr type="int" spelling="rc" id="2300175092549"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300699663380"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301109241985"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301289356029"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304052887606"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301389211409"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301855868128"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302028904551"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303374791688"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302519949685"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301083951454"/>
			<DeclRefExpr type="int" spelling="rc" id="2300398943008"/>
			<DeclRefExpr type="int (struct zlib *, png_uint_32)" spelling="zlib_advance" id="2301430262933"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303305896861"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302747146308"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302119764877"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300246952201"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302422493376"/>
			<DeclRefExpr type="int" spelling="rc" id="2300929681009"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2301366544176"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302273907774"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2303403772670"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301892576787"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300395337655"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304169166844"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300035749361"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301171319401"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301563192241"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2303739652152"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300606567302"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2301523002580"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302854983291"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300661560189"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300605113408"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302374714438"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2303192755765"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303212725294"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300026659426"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2304018584773"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301956296199"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302291545544"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300153412268"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2301910030034"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303596859802"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2302534592379"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2301096579147"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303928654164"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2300942109311"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303994526101"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303125958683"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2302323374159"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300081741630"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The 'extra_bytes' field is set by zlib_advance if there is extra
    * compressed data in the chunk it handles (if it sees Z_STREAM_END before
    * all the input data has been used.)  This function uses the value to update
    * the correct chunk length, so the problem should only ever be detected once
    * for each chunk.  zlib_advance outputs the error message, though see the
    * IDAT specific check below." comment_scope_start="2492" comment_scope_end="2506">
		<SYMBOLS>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303361013056"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301257470692"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304265010423"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_head" id="2301071130215"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300363254797"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304232972464"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302668887727"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302607081154"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302147305571"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<VarDecl type="struct IDAT_list *" spelling="list" id="2301750991476"/>
			<VarDecl type="struct IDAT_list *" spelling="last" id="2300542663979"/>
			<VarDecl type="int" spelling="skip" id="2302527899623"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303406056705"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300657214408"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303745268329"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302241898736"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2301366544176"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2302273907774"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_head" id="2303403772670"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301892576787"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300395337655"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304169166844"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="message"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="'rewrite_offset' is the offset of the LZ data within the chunk, for
       * IDAT it should be 0:" comment_scope_start="2507" comment_scope_end="2511">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2300553824718"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304023719403"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2304094162006"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302607182207"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300393235189"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302368794510"/>
			<StringLiteral type="char [26]" spelling="&quot;zlib-&gt;rewrite_offset == 0&quot;" id="2300965592417"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303142799695"/>
			<StringLiteral type="const char [28]" spelling="&quot;int zlib_run(struct zlib *)&quot;" id="2301673256072"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301823451836"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2300098118396"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301842231306"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300035749361"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301171319401"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="offset" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Process each IDAT_list in turn; the caller has left the stream
       * positioned at the start of the first IDAT chunk data." comment_scope_start="2512" comment_scope_end="2584">
		<SYMBOLS>
			<LabelRef type="" spelling="end_check" id="2302367542729"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2304052680873"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302758803716"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301555147950"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302424208197"/>
			<UnexposedExpr type="int" spelling="skip" id="2304059242487"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2301798407968"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302285753132"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302729751014"/>
			<UnexposedExpr type="int (*)(struct zlib *, png_uint_32)" spelling="zlib_advance" id="2303917944766"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303504329981"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2302254442824"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303294683501"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301725191090"/>
			<UnexposedExpr type="int" spelling="rc" id="2303882371046"/>
			<UnexposedExpr type="int" spelling="errors" id="2302827786857"/>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2303623611512"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302860971922"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304088744253"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2301859707150"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302301094835"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301709019796"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301755200825"/>
			<UnexposedExpr type="int" spelling="count" id="2302777501617"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301322749778"/>
			<UnexposedExpr type="int" spelling="j" id="2302589902956"/>
			<UnexposedExpr type="int" spelling="jcount" id="2304241747990"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2302077603042"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302553512264"/>
			<UnexposedExpr type="int" spelling="j" id="2303901199712"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2302781509812"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301808109482"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303747699109"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302435608959"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2302489114306"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2301934168341"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301865828783"/>
			<UnexposedExpr type="int" spelling="count" id="2300366861105"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300526018470"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301762830048"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300863894201"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300222324695"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2300368450012"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2300697913943"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301122246261"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300848217547"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301808011701"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301171708048"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301764768035"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2304024437340"/>
			<UnexposedExpr type="int" spelling="rc" id="2302765438676"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302999442382"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2304267914727"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302799798319"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303493286985"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<CallExpr type="void" spelling="skip_12" id="2302543834966"/>
			<CallExpr type="int" spelling="zlib_advance" id="2301060206358"/>
			<CallExpr type="void" spelling="chunk_message" id="2303213843241"/>
			<StringLiteral type="char [22]" spelling="&quot;extra compressed data&quot;" id="2302947081190"/>
			<VarDecl type="unsigned int" spelling="count" id="2303862714633"/>
			<VarDecl type="unsigned int" spelling="i" id="2300065266570"/>
			<VarDecl type="int" spelling="rc" id="2302337414636"/>
			<VarDecl type="struct IDAT_list *" spelling="check" id="2302357657851"/>
			<VarDecl type="int" spelling="j" id="2302888488119"/>
			<VarDecl type="int" spelling="jcount" id="2304236581806"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300717297312"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2302665120461"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303286506395"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2303322816626"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303776406718"/>
			<DeclRefExpr type="int" spelling="skip" id="2302792156145"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2301839135029"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301622503373"/>
			<DeclRefExpr type="int" spelling="skip" id="2303942721932"/>
			<DeclRefExpr type="int" spelling="rc" id="2300626116417"/>
			<DeclRefExpr type="int (struct zlib *, png_uint_32)" spelling="zlib_advance" id="2303543096670"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302063487794"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303004114600"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303680070011"/>
			<DeclRefExpr type="int" spelling="rc" id="2301460919706"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304024116451"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303706721737"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302438690250"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303003753356"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301133283526"/>
			<DeclRefExpr type="int" spelling="j" id="2302806844248"/>
			<DeclRefExpr type="int" spelling="jcount" id="2302999922320"/>
			<DeclRefExpr type="int" spelling="j" id="2301035919579"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2303259049849"/>
			<DeclRefExpr type="int" spelling="j" id="2300750511791"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2304101031194"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301631123625"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302838500804"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301328999599"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2300438382562"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302283000437"/>
			<DeclRefExpr type="int" spelling="jcount" id="2303245793402"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2301247882084"/>
			<DeclRefExpr type="int" spelling="j" id="2301260789506"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302372237090"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2304026055702"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302314562450"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303698848563"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2301986059819"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301791889502"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300466102728"/>
			<DeclRefExpr type="int" spelling="rc" id="2300175092549"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300699663380"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301109241985"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301289356029"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304052887606"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301563192241"/>
			<MemberRefExpr type="struct file *" spelling="file" id="2303739652152"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300606567302"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2301523002580"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302854983291"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300661560189"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300605113408"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302374714438"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2303192755765"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303212725294"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300026659426"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2304018584773"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301956296199"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302291545544"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300153412268"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2301910030034"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="process" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="left" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Skip CRC and next IDAT header" comment_scope_start="2524" comment_scope_end="2524">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2304059242487"/>
			<DeclRefExpr type="int" spelling="skip" id="2302792156145"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="for the next time" comment_scope_start="2527" comment_scope_end="2527">
		<SYMBOLS>
			<DeclRefExpr type="int" spelling="skip" id="2303942721932"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="keep going" comment_scope_start="2533" comment_scope_end="2533"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stop" comment_scope_start="2536" comment_scope_end="2536"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="There may be extra chunks; if there are and one of them is
                   * not zero length output the 'extra data' message.  Only do
                   * this check if errors are being output." comment_scope_start="2537" comment_scope_end="2563">
		<SYMBOLS>
			<LabelRef type="" spelling="end_check" id="2302367542729"/>
			<UnexposedExpr type="int" spelling="errors" id="2302827786857"/>
			<UnexposedExpr type="unsigned int" spelling="errors" id="2303623611512"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302860971922"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2304088744253"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2301859707150"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2302301094835"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2301709019796"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301755200825"/>
			<UnexposedExpr type="int" spelling="count" id="2302777501617"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2301322749778"/>
			<UnexposedExpr type="int" spelling="j" id="2302589902956"/>
			<UnexposedExpr type="int" spelling="jcount" id="2304241747990"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2302077603042"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302553512264"/>
			<UnexposedExpr type="int" spelling="j" id="2303901199712"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2302781509812"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301808109482"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2303747699109"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2302435608959"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2302489114306"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2301934168341"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301865828783"/>
			<UnexposedExpr type="int" spelling="count" id="2300366861105"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300526018470"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="check" id="2301762830048"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<CallExpr type="void" spelling="chunk_message" id="2303213843241"/>
			<StringLiteral type="char [22]" spelling="&quot;extra compressed data&quot;" id="2302947081190"/>
			<VarDecl type="struct IDAT_list *" spelling="check" id="2302357657851"/>
			<VarDecl type="int" spelling="j" id="2302888488119"/>
			<VarDecl type="int" spelling="jcount" id="2304236581806"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2304024116451"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2303706721737"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302438690250"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2303003753356"/>
			<DeclRefExpr type="unsigned int" spelling="count" id="2301133283526"/>
			<DeclRefExpr type="int" spelling="j" id="2302806844248"/>
			<DeclRefExpr type="int" spelling="jcount" id="2302999922320"/>
			<DeclRefExpr type="int" spelling="j" id="2301035919579"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2303259049849"/>
			<DeclRefExpr type="int" spelling="j" id="2300750511791"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2304101031194"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301631123625"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302838500804"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301328999599"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2300438382562"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2302283000437"/>
			<DeclRefExpr type="int" spelling="jcount" id="2303245793402"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="check" id="2301247882084"/>
			<DeclRefExpr type="int" spelling="j" id="2301260789506"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2301523002580"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302854983291"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300661560189"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300605113408"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302374714438"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2303192755765"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303212725294"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Terminate the list at the current position, reducing the
                   * length of the last IDAT too if required." comment_scope_start="2566" comment_scope_end="2571">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2300863894201"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300222324695"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2300368450012"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2300697913943"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301122246261"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2300848217547"/>
			<UnexposedExpr type="unsigned int" spelling="i" id="2301808011701"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301171708048"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301764768035"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2304024437340"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2302372237090"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2304026055702"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302314562450"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2303698848563"/>
			<DeclRefExpr type="unsigned int" spelling="i" id="2301986059819"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2301791889502"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300466102728"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2300026659426"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2304018584773"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301956296199"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302291545544"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300153412268"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
			<LabelStmt type="" spelling="end_check" id="2301979722371"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="terminate" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="reducing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="FALLTHROUGH" comment_scope_start="2572" comment_scope_end="2576">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="rc" id="2302765438676"/>
			<DeclRefExpr type="int" spelling="rc" id="2300175092549"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="At the end of the compressed data and Z_STREAM_END was not seen." comment_scope_start="2579" comment_scope_end="2584">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2302999442382"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="last" id="2304267914727"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2302799798319"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="list" id="2303493286985"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2300699663380"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="last" id="2301109241985"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2301289356029"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="list" id="2304052887606"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2301910030034"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="compressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The extra bytes in the chunk are handled now by adjusting the chunk
       * length to exclude them; the zlib data is always stored at the end of
       * the PNG chunk (although clearly this is not necessary.)  zlib_advance
       * has already output a warning message." comment_scope_start="2596" comment_scope_end="2603">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300549138977"/>
			<UnexposedExpr type="png_uint_32" spelling="extra_bytes" id="2301651437027"/>
			<UnexposedExpr type="struct zlib *" spelling="zlib" id="2301163059854"/>
			<UnexposedExpr type="int" spelling="rc" id="2301037507044"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300246952201"/>
			<DeclRefExpr type="struct zlib *" spelling="zlib" id="2302422493376"/>
			<DeclRefExpr type="int" spelling="rc" id="2300929681009"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2302323374159"/>
			<MemberRefExpr type="png_uint_32" spelling="extra_bytes" id="2300081741630"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="message"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="global function; not a member function" comment_scope_start="2606" comment_scope_end="2606"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Check the stream of zlib compressed data in either idat (if given) or (if
    * not) chunk.  In fact it is zlib_run that handles the difference in reading
    * a single chunk and a list of IDAT chunks.
    *
    * In either case the input file must be positioned at the first byte of zlib
    * compressed data (the first header byte).
    *
    * The return value is true on success, including the case where the zlib
    * header may need to be rewritten, and false on an unrecoverable error.
    *
    * In the case of IDAT chunks 'offset' should be 0." comment_scope_start="2608" comment_scope_end="2752">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, fpos_t *)" spelling="file_getpos" id="2300664623769"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302008020265"/>
			<UnexposedExpr type="int (*)(struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2303083848535"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301704534649"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304116547803"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301358022862"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300217814686"/>
			<UnexposedExpr type="png_uint_32" spelling="offset" id="2302810611821"/>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2300974414298"/>
			<UnexposedExpr type="int" spelling="rc" id="2300480906135"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301122841994"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300720447369"/>
			<UnexposedExpr type="unsigned int" spelling="optimize_zlib" id="2302377424138"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300760547980"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300639457455"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2300204378810"/>
			<UnexposedExpr type="int" spelling="cksum" id="2300206516801"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301489289405"/>
			<UnexposedExpr type="int (*)(uarbc, int)" spelling="max_window_bits" id="2304265936738"/>
			<UnexposedExpr type="uarbc" spelling="uncompressed_bytes" id="2303262643543"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2303336161676"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2300535648715"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2304052159479"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2300063739352"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301287991062"/>
			<UnexposedExpr type="int" spelling="cksum" id="2303759880188"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2300455495870"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301949810966"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2300529113301"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303480154707"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2300529834733"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303588447269"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303893975779"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2302347752765"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2301767346208"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301003553283"/>
			<UnexposedExpr type="int (*)(struct zlib *, int)" spelling="zlib_reset" id="2300582807858"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303030319194"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303610576802"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878167100"/>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2301132862809"/>
			<UnexposedExpr type="int" spelling="rc" id="2302810683780"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2302410991606"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2303310161393"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303363467875"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2301196301656"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303147416327"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303874296649"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302097772238"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2303307941897"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303064488331"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303218869249"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301896097364"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2302853661705"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301469036514"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301107152401"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301403367894"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2300004512833"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301841553503"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303784468669"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301258657826"/>
			<TypeRef type="fpos_t" spelling="fpos_t" id="2300458481401"/>
			<TypeRef type="struct zlib" spelling="struct zlib" id="2300704756981"/>
			<CallExpr type="void" spelling="file_getpos" id="2301999406361"/>
			<CallExpr type="int" spelling="zlib_init" id="2301626768776"/>
			<CallExpr type="int" spelling="zlib_run" id="2303203456732"/>
			<CallExpr type="void" spelling="zlib_end" id="2300870043179"/>
			<CallExpr type="int" spelling="max_window_bits" id="2300333721641"/>
			<CallExpr type="void" spelling="chunk_message" id="2301937181398"/>
			<CallExpr type="void" spelling="zlib_message" id="2300792037106"/>
			<CallExpr type="void" spelling="zlib_end" id="2303478617042"/>
			<CallExpr type="int" spelling="zlib_reset" id="2300312252054"/>
			<CallExpr type="void" spelling="file_setpos" id="2303054950296"/>
			<CallExpr type="int" spelling="zlib_run" id="2300247214863"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303270702601"/>
			<CallExpr type="void" spelling="zlib_message" id="2302307977825"/>
			<CallExpr type="void" spelling="zlib_end" id="2304080517299"/>
			<CallExpr type="void" spelling="zlib_end" id="2303388965251"/>
			<CallExpr type="void" spelling="zlib_end" id="2301453062934"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303156414001"/>
			<CallExpr type="void" spelling="zlib_end" id="2301337422816"/>
			<CallExpr type="void" spelling="zlib_end" id="2301501787151"/>
			<StringLiteral type="char [14]" spelling="&quot;zlib checksum&quot;" id="2302806244704"/>
			<StringLiteral type="char [12]" spelling="&quot;[truncated]&quot;" id="2301137677494"/>
			<StringLiteral type="char [16]" spelling="&quot;test_bits == 15&quot;" id="2303319455679"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302606494661"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2302173641813"/>
			<StringLiteral type="char [30]" spelling="&quot;invalid distance too far back&quot;" id="2300671318030"/>
			<StringLiteral type="char [25]" spelling="&quot;zlib.ok_bits == max_bits&quot;" id="2302307912232"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300312899599"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2303274511337"/>
			<VarDecl type="fpos_t" spelling="start_pos" id="2300753549821"/>
			<VarDecl type="struct zlib" spelling="zlib" id="2300071107162"/>
			<VarDecl type="int" spelling="min_bits" id="2303376270006"/>
			<VarDecl type="int" spelling="max_bits" id="2300889120032"/>
			<VarDecl type="int" spelling="rc" id="2301256268393"/>
			<VarDecl type="int" spelling="test_bits" id="2304233185387"/>
			<FunctionDecl type="int (struct file *, png_uint_32)" spelling="zlib_check" id="2300027977886"/>
			<DeclRefExpr type="void (struct file *, fpos_t *)" spelling="file_getpos" id="2300010383342"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304116765143"/>
			<DeclRefExpr type="fpos_t" spelling="start_pos" id="2302755001210"/>
			<DeclRefExpr type="int (struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2301461982946"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304182669025"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304170948960"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300223586272"/>
			<DeclRefExpr type="png_uint_32" spelling="offset" id="2301692413096"/>
			<DeclRefExpr type="int" spelling="rc" id="2303265298564"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301656519156"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300774443631"/>
			<DeclRefExpr type="int" spelling="rc" id="2301060471380"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302626118410"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2304107282879"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300851338687"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301394179276"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301747265064"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302708607403"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300652205210"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302157557333"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302373676154"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304243274838"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303249630615"/>
			<DeclRefExpr type="int (uarbc, int)" spelling="max_window_bits" id="2300041121379"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303639585567"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301547208537"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302737859421"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303418615347"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2302126344371"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302202015443"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2301645865628"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300510207894"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2302702351173"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300504036346"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303474703703"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2303794376480"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300858412279"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302991886428"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300600119762"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2303350203639"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300062502558"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301494260635"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302468694604"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2300362485936"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300479280289"/>
			<DeclRefExpr type="int (struct zlib *, int)" spelling="zlib_reset" id="2302467989368"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301011234075"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300737114016"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2300062566138"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302391759654"/>
			<DeclRefExpr type="fpos_t" spelling="start_pos" id="2304139150532"/>
			<DeclRefExpr type="int" spelling="rc" id="2304002754258"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301630393155"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301566773734"/>
			<DeclRefExpr type="int" spelling="rc" id="2303212645668"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302168212402"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2303783864931"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302646790166"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301317478387"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300803758966"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300010285290"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300659834477"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300419795104"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301711739008"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301120530010"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304007083133"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2300575270084"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302680059919"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303263132655"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2301695431351"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301885103755"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302263795321"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301409039748"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300523363021"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300013009281"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300502004118"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302897716939"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300462399993"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300962773056"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2303519769502"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300483128050"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302203124248"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303958192128"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301330322098"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302482591519"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301612495193"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2301880954880"/>
			<MemberRefExpr type="unsigned int" spelling="optimize_zlib" id="2300652586030"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303585471597"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302595336140"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301764092533"/>
			<MemberRefExpr type="int" spelling="cksum" id="2303375145561"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2303586061853"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2301964178009"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303936850295"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302067361485"/>
			<MemberRefExpr type="int" spelling="cksum" id="2301030695765"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300379110822"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2304135114950"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303736101652"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303521972960"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303723094041"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2304033951907"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303359200367"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303650187117"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302772160971"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2301407375272"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="including" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="offset" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Record the start of the LZ data to allow a re-read." comment_scope_start="2624" comment_scope_end="2626">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, fpos_t *)" spelling="file_getpos" id="2300664623769"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302008020265"/>
			<CallExpr type="void" spelling="file_getpos" id="2301999406361"/>
			<DeclRefExpr type="void (struct file *, fpos_t *)" spelling="file_getpos" id="2300010383342"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304116765143"/>
			<DeclRefExpr type="fpos_t" spelling="start_pos" id="2302755001210"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="First test the existing (file) window bits:" comment_scope_start="2627" comment_scope_end="2745">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2303083848535"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301704534649"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304116547803"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301358022862"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300217814686"/>
			<UnexposedExpr type="png_uint_32" spelling="offset" id="2302810611821"/>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2300974414298"/>
			<UnexposedExpr type="int" spelling="rc" id="2300480906135"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301122841994"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300720447369"/>
			<UnexposedExpr type="unsigned int" spelling="optimize_zlib" id="2302377424138"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300760547980"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300639457455"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2300204378810"/>
			<UnexposedExpr type="int" spelling="cksum" id="2300206516801"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301489289405"/>
			<UnexposedExpr type="int (*)(uarbc, int)" spelling="max_window_bits" id="2304265936738"/>
			<UnexposedExpr type="uarbc" spelling="uncompressed_bytes" id="2303262643543"/>
			<UnexposedExpr type="udigit *" spelling="uncompressed_bytes" id="2303336161676"/>
			<UnexposedExpr type="int" spelling="uncompressed_digits" id="2300535648715"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2304052159479"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2300063739352"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301287991062"/>
			<UnexposedExpr type="int" spelling="cksum" id="2303759880188"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2300455495870"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301949810966"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2300529113301"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303480154707"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2300529834733"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303588447269"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303893975779"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2302347752765"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2301767346208"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301003553283"/>
			<UnexposedExpr type="int (*)(struct zlib *, int)" spelling="zlib_reset" id="2300582807858"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303030319194"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303610576802"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878167100"/>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2301132862809"/>
			<UnexposedExpr type="int" spelling="rc" id="2302810683780"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2302410991606"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2303310161393"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303363467875"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2301196301656"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303147416327"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303874296649"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302097772238"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2303307941897"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303064488331"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303218869249"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301896097364"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2302853661705"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301469036514"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301107152401"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301403367894"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2300004512833"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301841553503"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303784468669"/>
			<CallExpr type="int" spelling="zlib_init" id="2301626768776"/>
			<CallExpr type="int" spelling="zlib_run" id="2303203456732"/>
			<CallExpr type="void" spelling="zlib_end" id="2300870043179"/>
			<CallExpr type="int" spelling="max_window_bits" id="2300333721641"/>
			<CallExpr type="void" spelling="chunk_message" id="2301937181398"/>
			<CallExpr type="void" spelling="zlib_message" id="2300792037106"/>
			<CallExpr type="void" spelling="zlib_end" id="2303478617042"/>
			<CallExpr type="int" spelling="zlib_reset" id="2300312252054"/>
			<CallExpr type="void" spelling="file_setpos" id="2303054950296"/>
			<CallExpr type="int" spelling="zlib_run" id="2300247214863"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303270702601"/>
			<CallExpr type="void" spelling="zlib_message" id="2302307977825"/>
			<CallExpr type="void" spelling="zlib_end" id="2304080517299"/>
			<CallExpr type="void" spelling="zlib_end" id="2303388965251"/>
			<CallExpr type="void" spelling="zlib_end" id="2301453062934"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303156414001"/>
			<CallExpr type="void" spelling="zlib_end" id="2301337422816"/>
			<StringLiteral type="char [14]" spelling="&quot;zlib checksum&quot;" id="2302806244704"/>
			<StringLiteral type="char [12]" spelling="&quot;[truncated]&quot;" id="2301137677494"/>
			<StringLiteral type="char [16]" spelling="&quot;test_bits == 15&quot;" id="2303319455679"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302606494661"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2302173641813"/>
			<StringLiteral type="char [30]" spelling="&quot;invalid distance too far back&quot;" id="2300671318030"/>
			<StringLiteral type="char [25]" spelling="&quot;zlib.ok_bits == max_bits&quot;" id="2302307912232"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300312899599"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2303274511337"/>
			<VarDecl type="int" spelling="min_bits" id="2303376270006"/>
			<VarDecl type="int" spelling="max_bits" id="2300889120032"/>
			<VarDecl type="int" spelling="rc" id="2301256268393"/>
			<VarDecl type="int" spelling="test_bits" id="2304233185387"/>
			<DeclRefExpr type="int (struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2301461982946"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304182669025"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304170948960"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300223586272"/>
			<DeclRefExpr type="png_uint_32" spelling="offset" id="2301692413096"/>
			<DeclRefExpr type="int" spelling="rc" id="2303265298564"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301656519156"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300774443631"/>
			<DeclRefExpr type="int" spelling="rc" id="2301060471380"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302626118410"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2304107282879"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300851338687"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301394179276"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301747265064"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302708607403"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300652205210"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302157557333"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302373676154"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304243274838"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303249630615"/>
			<DeclRefExpr type="int (uarbc, int)" spelling="max_window_bits" id="2300041121379"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303639585567"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301547208537"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302737859421"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303418615347"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2302126344371"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302202015443"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2301645865628"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300510207894"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2302702351173"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300504036346"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303474703703"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2303794376480"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300858412279"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302991886428"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300600119762"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2303350203639"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300062502558"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301494260635"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302468694604"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2300362485936"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300479280289"/>
			<DeclRefExpr type="int (struct zlib *, int)" spelling="zlib_reset" id="2302467989368"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301011234075"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300737114016"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2300062566138"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302391759654"/>
			<DeclRefExpr type="fpos_t" spelling="start_pos" id="2304139150532"/>
			<DeclRefExpr type="int" spelling="rc" id="2304002754258"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301630393155"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301566773734"/>
			<DeclRefExpr type="int" spelling="rc" id="2303212645668"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302168212402"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2303783864931"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302646790166"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301317478387"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300803758966"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300010285290"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300659834477"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300419795104"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301711739008"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301120530010"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304007083133"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2300575270084"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302680059919"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303263132655"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2301695431351"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301885103755"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302263795321"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301409039748"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300523363021"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300013009281"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300502004118"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302897716939"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300462399993"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300962773056"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2303519769502"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300483128050"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301330322098"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302482591519"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301612495193"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2301880954880"/>
			<MemberRefExpr type="unsigned int" spelling="optimize_zlib" id="2300652586030"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303585471597"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302595336140"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301764092533"/>
			<MemberRefExpr type="int" spelling="cksum" id="2303375145561"/>
			<MemberRefExpr type="udigit [5]" spelling="uncompressed_bytes" id="2303586061853"/>
			<MemberRefExpr type="int" spelling="uncompressed_digits" id="2301964178009"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303936850295"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302067361485"/>
			<MemberRefExpr type="int" spelling="cksum" id="2301030695765"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300379110822"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2304135114950"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303736101652"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303521972960"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303723094041"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2304033951907"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303359200367"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303650187117"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302772160971"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2301407375272"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="window bits" comment_scope_start="2628" comment_scope_end="2628">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2303083848535"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301704534649"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304116547803"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301358022862"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300217814686"/>
			<UnexposedExpr type="png_uint_32" spelling="offset" id="2302810611821"/>
			<CallExpr type="int" spelling="zlib_init" id="2301626768776"/>
			<DeclRefExpr type="int (struct zlib *, struct IDAT *, struct chunk *, int, png_uint_32)" spelling="zlib_init" id="2301461982946"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304182669025"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304170948960"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300223586272"/>
			<DeclRefExpr type="png_uint_32" spelling="offset" id="2301692413096"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301330322098"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302482591519"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The first run using the existing window bits." comment_scope_start="2632" comment_scope_end="2637">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2300974414298"/>
			<UnexposedExpr type="int" spelling="rc" id="2300480906135"/>
			<CallExpr type="int" spelling="zlib_run" id="2303203456732"/>
			<DeclRefExpr type="int" spelling="rc" id="2303265298564"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301656519156"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300774443631"/>
			<DeclRefExpr type="int" spelling="rc" id="2301060471380"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="too far back error" comment_scope_start="2638" comment_scope_end="2647">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2301122841994"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300720447369"/>
			<UnexposedExpr type="unsigned int" spelling="optimize_zlib" id="2302377424138"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300760547980"/>
			<UnexposedExpr type="int" spelling="window_bits" id="2300639457455"/>
			<UnexposedExpr type="int" spelling="file_bits" id="2300204378810"/>
			<UnexposedExpr type="int" spelling="cksum" id="2300206516801"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302626118410"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2304107282879"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300851338687"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301394179276"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301747265064"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302708607403"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300652205210"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302157557333"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301612495193"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2301880954880"/>
			<MemberRefExpr type="unsigned int" spelling="optimize_zlib" id="2300652586030"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2303585471597"/>
			<MemberRefExpr type="int" spelling="window_bits" id="2302595336140"/>
			<MemberRefExpr type="int" spelling="file_bits" id="2301764092533"/>
			<MemberRefExpr type="int" spelling="cksum" id="2303375145561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The trivial case where the stream is ok and optimization was
                * not requested." comment_scope_start="2648" comment_scope_end="2653">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301489289405"/>
			<CallExpr type="void" spelling="zlib_end" id="2300870043179"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302373676154"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304243274838"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="cksum is set if there is an error in the zlib header checksum
             * calculation in the original file (and this may be the only reason
             * a rewrite is required).  We can't rely on the file window bits in
             * this case, so do the optimization anyway." comment_scope_start="2661" comment_scope_end="2671">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="cksum" id="2303759880188"/>
			<UnexposedExpr type="void (*)(struct chunk *, const char *)" spelling="chunk_message" id="2300455495870"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301949810966"/>
			<CallExpr type="void" spelling="chunk_message" id="2301937181398"/>
			<StringLiteral type="char [14]" spelling="&quot;zlib checksum&quot;" id="2302806244704"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300510207894"/>
			<DeclRefExpr type="void (struct chunk *, const char *)" spelling="chunk_message" id="2302702351173"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300504036346"/>
			<MemberRefExpr type="int" spelling="cksum" id="2301030695765"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300379110822"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="zlib"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Truncated stream; unrecoverable, gets converted to ZLIB_FATAL" comment_scope_start="2672" comment_scope_end="2673">
		<SYMBOLS>
			<StringLiteral type="char [12]" spelling="&quot;[truncated]&quot;" id="2301137677494"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2303474703703"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2304135114950"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303736101652"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="converted" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="expected" comment_scope_start="2674" comment_scope_end="2674">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2300529113301"/>
			<CallExpr type="void" spelling="zlib_message" id="2300792037106"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2303794376480"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300858412279"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="FALLTHROUGH" comment_scope_start="2675" comment_scope_end="2677"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Unrecoverable error; skip the chunk; a zlib_message has already
             * been output." comment_scope_start="2678" comment_scope_end="2683">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303480154707"/>
			<CallExpr type="void" spelling="zlib_end" id="2303478617042"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2302991886428"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300600119762"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Optimize window bits or fix a too-far-back error.  min_bits and
       * max_bits have been set appropriately, ok_bits records the bit value
       * known to work." comment_scope_start="2685" comment_scope_end="2739">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="min_bits" id="2300529834733"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303588447269"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303893975779"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2302347752765"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2301767346208"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301003553283"/>
			<UnexposedExpr type="int (*)(struct zlib *, int)" spelling="zlib_reset" id="2300582807858"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303030319194"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303610576802"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878167100"/>
			<UnexposedExpr type="int (*)(struct zlib *)" spelling="zlib_run" id="2301132862809"/>
			<UnexposedExpr type="int" spelling="rc" id="2302810683780"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2302410991606"/>
			<UnexposedExpr type="int" spelling="min_bits" id="2303310161393"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303363467875"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2301196301656"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303147416327"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303874296649"/>
			<UnexposedExpr type="const char *" spelling="msg" id="2302097772238"/>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2303307941897"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303064488331"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303218869249"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301896097364"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2302853661705"/>
			<CallExpr type="int" spelling="zlib_reset" id="2300312252054"/>
			<CallExpr type="void" spelling="file_setpos" id="2303054950296"/>
			<CallExpr type="int" spelling="zlib_run" id="2300247214863"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303270702601"/>
			<CallExpr type="void" spelling="zlib_message" id="2302307977825"/>
			<CallExpr type="void" spelling="zlib_end" id="2304080517299"/>
			<CallExpr type="void" spelling="zlib_end" id="2303388965251"/>
			<CallExpr type="void" spelling="zlib_end" id="2301453062934"/>
			<StringLiteral type="char [16]" spelling="&quot;test_bits == 15&quot;" id="2303319455679"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302606494661"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2302173641813"/>
			<StringLiteral type="char [30]" spelling="&quot;invalid distance too far back&quot;" id="2300671318030"/>
			<VarDecl type="int" spelling="test_bits" id="2304233185387"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2303350203639"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300062502558"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301494260635"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302468694604"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2300362485936"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300479280289"/>
			<DeclRefExpr type="int (struct zlib *, int)" spelling="zlib_reset" id="2302467989368"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301011234075"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300737114016"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2300062566138"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302391759654"/>
			<DeclRefExpr type="fpos_t" spelling="start_pos" id="2304139150532"/>
			<DeclRefExpr type="int" spelling="rc" id="2304002754258"/>
			<DeclRefExpr type="int (struct zlib *)" spelling="zlib_run" id="2301630393155"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301566773734"/>
			<DeclRefExpr type="int" spelling="rc" id="2303212645668"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302168212402"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2303783864931"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2302646790166"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301317478387"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300803758966"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300010285290"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300659834477"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300419795104"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301711739008"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301120530010"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304007083133"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2300575270084"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302680059919"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2303263132655"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2301695431351"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301885103755"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302263795321"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301409039748"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300523363021"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303521972960"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303723094041"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2304033951907"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303359200367"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303650187117"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="if 16" comment_scope_start="2689" comment_scope_end="2689">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="min_bits" id="2300529834733"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303588447269"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2303893975779"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2302347752765"/>
			<DeclRefExpr type="int" spelling="min_bits" id="2303350203639"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300062502558"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2301494260635"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302468694604"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2303521972960"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This happens when the stream really is damaged and it
                      * contains a distance code that addresses bytes before
                      * the start of the uncompressed data." comment_scope_start="2704" comment_scope_end="2709">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="test_bits" id="2301196301656"/>
			<UnexposedExpr type="int" spelling="test_bits" id="2303147416327"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303874296649"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303270702601"/>
			<StringLiteral type="char [16]" spelling="&quot;test_bits == 15&quot;" id="2303319455679"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302606494661"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2302173641813"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300803758966"/>
			<DeclRefExpr type="int" spelling="test_bits" id="2300010285290"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300659834477"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="uncompressed"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Output the error that wasn't output before:" comment_scope_start="2710" comment_scope_end="2713">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="msg" id="2302097772238"/>
			<StringLiteral type="char [30]" spelling="&quot;invalid distance too far back&quot;" id="2300671318030"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300419795104"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2301711739008"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303723094041"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2304033951907"/>
			<MemberRefExpr type="const char *" spelling="msg" id="2303359200367"/>
			<MemberRefExpr type="z_stream" spelling="z" id="2303650187117"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="stream error" comment_scope_start="2714" comment_scope_end="2714">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *, int)" spelling="zlib_message" id="2303307941897"/>
			<CallExpr type="void" spelling="zlib_message" id="2302307977825"/>
			<DeclRefExpr type="void (struct zlib *, int)" spelling="zlib_message" id="2301120530010"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2304007083133"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="success" comment_scope_start="2720" comment_scope_end="2720"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="A fatal error; this happens if a too-far-back error was
                   * hiding a more serious error, zlib_advance has already
                   * output a zlib_message." comment_scope_start="2725" comment_scope_end="2731">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2301896097364"/>
			<CallExpr type="void" spelling="zlib_end" id="2303388965251"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2301885103755"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302263795321"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="inflateReset2 failed" comment_scope_start="2734" comment_scope_end="2734"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The loop guarantees this" comment_scope_start="2741" comment_scope_end="2745">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301469036514"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2301107152401"/>
			<UnexposedExpr type="int" spelling="ok_bits" id="2301403367894"/>
			<UnexposedExpr type="int" spelling="max_bits" id="2300004512833"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301841553503"/>
			<UnexposedExpr type="void (*)(struct zlib *)" spelling="zlib_end" id="2303784468669"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303156414001"/>
			<CallExpr type="void" spelling="zlib_end" id="2301337422816"/>
			<StringLiteral type="char [25]" spelling="&quot;zlib.ok_bits == max_bits&quot;" id="2302307912232"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300312899599"/>
			<StringLiteral type="const char [43]" spelling="&quot;int zlib_check(struct file *, png_uint_32)&quot;" id="2303274511337"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300013009281"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300502004118"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2302897716939"/>
			<DeclRefExpr type="int" spelling="max_bits" id="2300462399993"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300962773056"/>
			<DeclRefExpr type="void (struct zlib *)" spelling="zlib_end" id="2303519769502"/>
			<DeclRefExpr type="struct zlib" spelling="zlib" id="2300483128050"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2302772160971"/>
			<MemberRefExpr type="int" spelling="ok_bits" id="2301407375272"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="zlib initialization failed - skip the chunk" comment_scope_start="2747" comment_scope_end="2747"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="**************************** LIBPNG CALLBACKS ******************************" comment_scope_start="2754" comment_scope_end="2785">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="void (struct file *)" spelling="read_chunk" id="2303672630773"/>
			<ParmDecl type="struct file *" spelling="file" id="2301101739720"/>
			<ParmDecl type="struct file *" spelling="file" id="2300189529769"/>
			<ParmDecl type="png_uint_32" spelling="file_crc" id="2303260305096"/>
			<ParmDecl type="png_uint_32" spelling="next_length" id="2301857172798"/>
			<ParmDecl type="png_uint_32" spelling="next_type" id="2304171181582"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The strategy here is to run a regular libpng PNG file read but examine the
 * input data (from the file) before passing it to libpng so as to be aware of
 * the state we expect libpng to be in.  Warning and error callbacks are also
 * intercepted so that they can be quieted and interpreted.  Interpretation
 * depends on a somewhat risky string match for known error messages; let us
 * hope that this can be fixed in the next version of libpng.
 *
 * The control structure is pointed to by the libpng error pointer.  It contains
 * that set of structures which must persist across multiple read callbacks,
 * which is pretty much everything except the 'zlib' control structure.
 *
 * The file structure is instantiated in the caller of the per-file routine, but
 * the per-file routine contains the chunk and IDAT control structures." comment_scope_start="2754" comment_scope_end="2785">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="void (struct file *)" spelling="read_chunk" id="2303672630773"/>
			<ParmDecl type="struct file *" spelling="file" id="2301101739720"/>
			<ParmDecl type="struct file *" spelling="file" id="2300189529769"/>
			<ParmDecl type="png_uint_32" spelling="file_crc" id="2303260305096"/>
			<ParmDecl type="png_uint_32" spelling="next_length" id="2301857172798"/>
			<ParmDecl type="png_uint_32" spelling="next_type" id="2304171181582"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="regular" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="examine" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="pointer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="png"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The three routines read_chunk, process_chunk and sync_stream can only be
 * called via a call to read_chunk and only exit at a return from process_chunk.
 * These routines could have been written as one confusing large routine,
 * instead this code relies on the compiler to do tail call elimination.  The
 * possible calls are as follows:
 *
 * read_chunk
 *    -&gt; sync_stream
 *       -&gt; process_chunk
 *    -&gt; process_chunk
 *       -&gt; read_chunk
 *       returns" comment_scope_start="2754" comment_scope_end="2785">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<FunctionDecl type="void (struct file *)" spelling="read_chunk" id="2303672630773"/>
			<ParmDecl type="struct file *" spelling="file" id="2301101739720"/>
			<ParmDecl type="struct file *" spelling="file" id="2300189529769"/>
			<ParmDecl type="png_uint_32" spelling="file_crc" id="2303260305096"/>
			<ParmDecl type="png_uint_32" spelling="next_length" id="2301857172798"/>
			<ParmDecl type="png_uint_32" spelling="next_type" id="2304171181582"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="exit" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="tail" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Called when the chunk data has been read, next_length and next_type
    * will be set for the next chunk (or 0 if this is IEND).
    *
    * When this routine returns, chunk_length and chunk_type will be set for the
    * next chunk to write because if a chunk is skipped this return calls back
    * to read_chunk." comment_scope_start="2786" comment_scope_end="2949">
		<SYMBOLS>
			<LabelRef type="" spelling="skip_chunk" id="2301845254762"/>
			<LabelRef type="" spelling="skip_chunk" id="2301845254762"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303933220228"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301045422128"/>
			<UnexposedExpr type="int" spelling="verbose" id="2302726645263"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2300630473082"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300539442514"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300936580420"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2301659712222"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302081733600"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2301658429414"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304265132055"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301912282513"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303780986388"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2302476219206"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302287506865"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300842281606"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303260172458"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2300249101602"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302560268062"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2300737251989"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2301545982972"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301599596962"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303878722673"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303758649636"/>
			<UnexposedExpr type="int" spelling="skip" id="2300601905178"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2300129577414"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300505546612"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303629235699"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2301560151633"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300748704419"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300926054109"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303871970493"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300246420845"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2303161299316"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302462515257"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302635493993"/>
			<UnexposedExpr type="int (*)(const struct global *, png_uint_32)" spelling="skip_chunk_type" id="2304124049796"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2301851229463"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302266083200"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303332213028"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303171482367"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300619692816"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2302604237116"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302567876188"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302077800107"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301100302154"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303273790630"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303126490528"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302323355411"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300929804975"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303916506284"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300289512340"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301695156236"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301162305501"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301107656922"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2303922442214"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302619761001"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302580137430"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302347499571"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300290197214"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303160105511"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302375790698"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303029976193"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301576036111"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300213652327"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300839418982"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300481557643"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2302916731976"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301924963644"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303824171415"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2303682882574"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301180870671"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300890660322"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300351422151"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301641752811"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300911879196"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301291360849"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301221039817"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300117553916"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2303973120746"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303242428994"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2302071250834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301845146829"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303074748556"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302765035314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303351583367"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2302810281548"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301445152706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301755746598"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2300318798944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301111631501"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300469527189"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2304013139496"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304059504113"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302356412569"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303832628706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301022486850"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300854047650"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303322344685"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301102619998"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301064454537"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301424783809"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300298754504"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301810346879"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303222433383"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300259445236"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="calc_image_size" id="2301982890183"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303542613946"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_zTXt_iCCP" id="2302710692895"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302456410191"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302441832245"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303183688105"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2304268354888"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300492537256"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302258119009"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_iTXt" id="2301271197079"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303609242525"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2303155070152"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302425969204"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2304003623959"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303566490630"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301465779476"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_IDAT" id="2300953300774"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302077168677"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303928983730"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2300691075265"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303863013376"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2301385199902"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300835277401"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303319532912"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2300404992256"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301994639780"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2301625372638"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2303900612390"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301809525318"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2300741673269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301858805073"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="fputs" id="2301985765240"/>
			<CallExpr type="void" spelling="type_name" id="2303343995006"/>
			<CallExpr type="int" spelling="fprintf" id="2301564091442"/>
			<CallExpr type="void" spelling="type_message" id="2303723100078"/>
			<CallExpr type="void" spelling="stop" id="2302393889431"/>
			<CallExpr type="void" spelling="type_message" id="2302406095899"/>
			<CallExpr type="int" spelling="skip_chunk_type" id="2301277808422"/>
			<CallExpr type="void" spelling="alloc" id="2301161798937"/>
			<CallExpr type="void" spelling="alloc" id="2302244969893"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300182578072"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300332553048"/>
			<CallExpr type="void" spelling="getpos" id="2304132485175"/>
			<CallExpr type="void" spelling="stop_invalid" id="2302610904980"/>
			<CallExpr type="void" spelling="setpos" id="2301831853376"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2303486286718"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2302103313060"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303999027731"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301048438807"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301141749352"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300514231425"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301202064966"/>
			<CallExpr type="int" spelling="calc_image_size" id="2302764983719"/>
			<CallExpr type="int" spelling="process_zTXt_iCCP" id="2302859749080"/>
			<CallExpr type="void" spelling="chunk_end" id="2302242182876"/>
			<CallExpr type="void" spelling="file_setpos" id="2303109366135"/>
			<CallExpr type="int" spelling="process_iTXt" id="2302341268218"/>
			<CallExpr type="void" spelling="chunk_end" id="2303415224152"/>
			<CallExpr type="void" spelling="file_setpos" id="2300653812136"/>
			<CallExpr type="int" spelling="process_IDAT" id="2304190869961"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303875559194"/>
			<CallExpr type="void" spelling="read_chunk" id="2303647360605"/>
			<CallExpr type="void" spelling="getpos" id="2303346697730"/>
			<CallExpr type="void" spelling="read_chunk" id="2303676647672"/>
			<StringLiteral type="char [3]" spelling="&quot;  &quot;" id="2301951197170"/>
			<StringLiteral type="char [20]" spelling="&quot; %lu 0x%.8x 0x%.8x\n&quot;" id="2302454549422"/>
			<StringLiteral type="char [8]" spelling="&quot;bad CRC&quot;" id="2303263066542"/>
			<StringLiteral type="char [26]" spelling="&quot;bad CRC in critical chunk&quot;" id="2303095055508"/>
			<StringLiteral type="char [17]" spelling="&quot;skipped: bad CRC&quot;" id="2303960249822"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk != NULL&quot;" id="2300760349818"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302217886391"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2300935527199"/>
			<StringLiteral type="char [36]" spelling="&quot;file-&gt;chunk-&gt;chunk_type == png_IDAT&quot;" id="2303743577138"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302022042316"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2302910435936"/>
			<StringLiteral type="char [12]" spelling="&quot;IHDR length&quot;" id="2302264802851"/>
			<StringLiteral type="char [22]" spelling="&quot;next_type == png_IDAT&quot;" id="2300337677821"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302892624545"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2304020418776"/>
			<VarDecl type="png_uint_32" spelling="type" id="2302851968773"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2304256376664"/>
			<FunctionDecl type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302472505443"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302075366181"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302408637336"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303562190036"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303513487321"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2303220533203"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301611844382"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302364722752"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2303078924076"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301323039162"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302623122433"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303053172197"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302867135238"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301833437075"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2300387440958"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303186484033"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300406944356"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301316738836"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303902952151"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300357471000"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301530064529"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302950451051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301770975382"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2302926788429"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301917789607"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300697562304"/>
			<DeclRefExpr type="int (const struct global *, png_uint_32)" spelling="skip_chunk_type" id="2303841217265"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302249522474"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300356978233"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303477325191"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303015809592"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303735811437"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300622118222"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303407919947"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303509420053"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303836887185"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300414363394"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300968833152"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303571576709"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302707206705"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301945075766"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302862703759"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300617326024"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303623901063"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300183658524"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301605663384"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2302597811928"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2300597788336"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301469329346"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304269604031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300826554155"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302517795324"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300137369607"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303353571389"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2301858916918"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302148620285"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2301235561496"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300196364396"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300677858191"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2303687258376"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302317028227"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300911178135"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2304275802778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301325584872"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301298717913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302342680901"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302008759786"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302435140496"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2301970274969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303095132574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301234985619"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300255845074"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302087631145"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301439131625"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300651859255"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301337938169"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302929583913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300316470989"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300323384335"/>
			<DeclRefExpr type="int (struct file *)" spelling="calc_image_size" id="2301426319060"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300692455703"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_zTXt_iCCP" id="2303773667158"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301584434670"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2302986394325"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301694950418"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2300349602154"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300880020015"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304039361336"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_iTXt" id="2303652964619"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302099839457"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2302567410356"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302276140181"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302794286634"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301902350435"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303702760770"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_IDAT" id="2303506450015"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303154757663"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2300400233262"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303072748603"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302984441557"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2304164070331"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300393893773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301413207902"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2301837079124"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300144478075"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303149045331"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2303680754725"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303389590426"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2302500887253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300500637323"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303106805276"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2304083388813"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302614717695"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302816247399"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301800551580"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2302530141753"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2300585441837"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302461441923"/>
			<MemberRefExpr type="unsigned int" spelling="skip" id="2302977297382"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302739855719"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300911814275"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303390238720"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303037349993"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303426168067"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303428468257"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300676944407"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2303069246470"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302386676239"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302959668178"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302551352631"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2301029610915"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303821931220"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301990375571"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300375346087"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301885125853"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2303587282256"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302981905571"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2302552924934"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301853616966"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301127623548"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2301470344652"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2301942963358"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303471117959"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2304289044362"/>
			<MemberRefExpr type="png_byte" spelling="color_type" id="2301052244300"/>
			<MemberRefExpr type="png_byte" spelling="compression_method" id="2303577892326"/>
			<MemberRefExpr type="png_byte" spelling="filter_method" id="2304194457530"/>
			<MemberRefExpr type="png_byte" spelling="interlace_method" id="2302080436186"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301577095552"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2301364366988"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300751406117"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2300353880843"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2302903522956"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302761628546"/>
			<LabelStmt type="" spelling="skip_chunk" id="2300237136759"/>
			<LabelStmt type="" spelling="skip_chunk" id="2300237136759"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The basic structure seems correct but the CRC may not match, in this
    * case assume that it is simply a bad CRC, either wrongly calculated or
    * because of damaged stream data." comment_scope_start="2804" comment_scope_end="2832">
		<SYMBOLS>
			<LabelRef type="" spelling="skip_chunk" id="2301845254762"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2301545982972"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301599596962"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303878722673"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303758649636"/>
			<UnexposedExpr type="int" spelling="skip" id="2300601905178"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2300129577414"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300505546612"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303629235699"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2301560151633"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300748704419"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300926054109"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303871970493"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300246420845"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2303161299316"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302462515257"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302635493993"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="type_message" id="2303723100078"/>
			<CallExpr type="void" spelling="stop" id="2302393889431"/>
			<CallExpr type="void" spelling="type_message" id="2302406095899"/>
			<StringLiteral type="char [8]" spelling="&quot;bad CRC&quot;" id="2303263066542"/>
			<StringLiteral type="char [26]" spelling="&quot;bad CRC in critical chunk&quot;" id="2303095055508"/>
			<StringLiteral type="char [17]" spelling="&quot;skipped: bad CRC&quot;" id="2303960249822"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301833437075"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2300387440958"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303186484033"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300406944356"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301316738836"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303902952151"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300357471000"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301530064529"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302950451051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301770975382"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2302926788429"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301917789607"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300697562304"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2300585441837"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302461441923"/>
			<MemberRefExpr type="unsigned int" spelling="skip" id="2302977297382"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302739855719"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The behavior is set by the 'skip' setting; if it is anything other
       * than SKIP_BAD_CRC ignore the bad CRC and return the chunk, with a
       * corrected CRC and possibly processed, to libpng.  Otherwise skip the
       * chunk, which will result in a fatal error if the chunk is critical." comment_scope_start="2810" comment_scope_end="2816">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303758649636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303186484033"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302461441923"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processed" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Ignore the bad CRC" comment_scope_start="2817" comment_scope_end="2820">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="skip" id="2300601905178"/>
			<UnexposedExpr type="unsigned int" spelling="skip" id="2300129577414"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300505546612"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303629235699"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2301560151633"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300748704419"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300926054109"/>
			<CallExpr type="void" spelling="type_message" id="2303723100078"/>
			<StringLiteral type="char [8]" spelling="&quot;bad CRC&quot;" id="2303263066542"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300406944356"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2301316738836"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303902952151"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300357471000"/>
			<MemberRefExpr type="unsigned int" spelling="skip" id="2302977297382"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302739855719"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This will cause an IEND with a bad CRC to stop" comment_scope_start="2821" comment_scope_end="2828">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303871970493"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300246420845"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, const char *)" spelling="type_message" id="2303161299316"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302462515257"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302635493993"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="stop" id="2302393889431"/>
			<CallExpr type="void" spelling="type_message" id="2302406095899"/>
			<StringLiteral type="char [26]" spelling="&quot;bad CRC in critical chunk&quot;" id="2303095055508"/>
			<StringLiteral type="char [17]" spelling="&quot;skipped: bad CRC&quot;" id="2303960249822"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301530064529"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302950451051"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301770975382"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, const char *)" spelling="type_message" id="2302926788429"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301917789607"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300697562304"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: this cannot be reached for IEND because it is critical." comment_scope_start="2829" comment_scope_end="2831">
		<SYMBOLS>
			<LabelRef type="" spelling="skip_chunk" id="2301845254762"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Check for other 'skip' cases and handle these; these only apply to
    * ancillary chunks (and not tRNS, which should probably have been a critical
    * chunk.)" comment_scope_start="2834" comment_scope_end="2840">
		<SYMBOLS>
			<LabelRef type="" spelling="skip_chunk" id="2301845254762"/>
			<UnexposedExpr type="int (*)(const struct global *, png_uint_32)" spelling="skip_chunk_type" id="2304124049796"/>
			<UnexposedExpr type="const struct global *" spelling="global" id="2301851229463"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302266083200"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303332213028"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303171482367"/>
			<CallExpr type="int" spelling="skip_chunk_type" id="2301277808422"/>
			<DeclRefExpr type="int (const struct global *, png_uint_32)" spelling="skip_chunk_type" id="2303841217265"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302249522474"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300356978233"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300911814275"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The chunk may still be skipped if problems are detected in the LZ data,
    * however the LZ data check requires a chunk.  Handle this by instantiating
    * a chunk unless an IDAT is already instantiated (IDAT control structures
    * instantiate their own chunk.)" comment_scope_start="2841" comment_scope_end="2846">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300619692816"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303477325191"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="chunk" comment_scope_start="2847" comment_scope_end="2847">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2302604237116"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302567876188"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302077800107"/>
			<CallExpr type="void" spelling="alloc" id="2301161798937"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303015809592"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303735811437"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303390238720"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IDAT" comment_scope_start="2850" comment_scope_end="2850">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303126490528"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302323355411"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300929804975"/>
			<CallExpr type="void" spelling="alloc" id="2302244969893"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303407919947"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303509420053"/>
			<MemberRefExpr type="void (*)(struct file *, int)" spelling="alloc" id="2303426168067"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The chunk length must be updated for process_IDAT" comment_scope_start="2854" comment_scope_end="2858">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303916506284"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300289512340"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301695156236"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301162305501"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301107656922"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2303922442214"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302619761001"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302580137430"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302347499571"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300290197214"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303160105511"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302375790698"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303029976193"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301576036111"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300213652327"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300839418982"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300182578072"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300332553048"/>
			<StringLiteral type="char [20]" spelling="&quot;file-&gt;chunk != NULL&quot;" id="2300760349818"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302217886391"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2300935527199"/>
			<StringLiteral type="char [36]" spelling="&quot;file-&gt;chunk-&gt;chunk_type == png_IDAT&quot;" id="2303743577138"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302022042316"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2302910435936"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303836887185"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300414363394"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300968833152"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303571576709"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302707206705"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301945075766"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302862703759"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300617326024"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303428468257"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300676944407"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2303069246470"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302386676239"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302959668178"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302551352631"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2301029610915"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2303821931220"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301990375571"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="updated" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Record the 'next' information too, now that the original values for
    * this chunk have been copied.  Notice that the IDAT chunks only make a
    * copy of the position of the first chunk, this is fine - process_IDAT does
    * not need the position of this chunk." comment_scope_start="2860" comment_scope_end="2868">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300481557643"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2302916731976"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301924963644"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303824171415"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2303682882574"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301180870671"/>
			<CallExpr type="void" spelling="getpos" id="2304132485175"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303623901063"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300183658524"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301605663384"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2302597811928"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2300597788336"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301469329346"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300375346087"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301885125853"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="record" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Do per-type processing, note that if this code does not return from the
    * function the chunk will be skipped.  The rewrite is cancelled here so that
    * it can be set in the per-chunk processing." comment_scope_start="2869" comment_scope_end="2880">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300890660322"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300351422151"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301641752811"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300911879196"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301291360849"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304269604031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300826554155"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302517795324"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2303587282256"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2302981905571"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2302552924934"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301853616966"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read this now and update the control structure with the information
          * it contains.  The header is validated completely to ensure this is a
          * PNG." comment_scope_start="2881" comment_scope_end="2905">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301221039817"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300117553916"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2303973120746"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303242428994"/>
			<UnexposedExpr type="void (*)(struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2302071250834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301845146829"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303074748556"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302765035314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303351583367"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2302810281548"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301445152706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301755746598"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2300318798944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301111631501"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300469527189"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2304013139496"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304059504113"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302356412569"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303832628706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301022486850"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300854047650"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303322344685"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301102619998"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301064454537"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301424783809"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300298754504"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301810346879"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303222433383"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300259445236"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="calc_image_size" id="2301982890183"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303542613946"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<CallExpr type="void" spelling="stop_invalid" id="2302610904980"/>
			<CallExpr type="void" spelling="setpos" id="2301831853376"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2303486286718"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2302103313060"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303999027731"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301048438807"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301141749352"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300514231425"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301202064966"/>
			<CallExpr type="int" spelling="calc_image_size" id="2302764983719"/>
			<StringLiteral type="char [12]" spelling="&quot;IHDR length&quot;" id="2302264802851"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2304256376664"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300137369607"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303353571389"/>
			<DeclRefExpr type="void (struct file *, const char *) __attribute__((noreturn))" spelling="stop_invalid" id="2301858916918"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302148620285"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2301235561496"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300196364396"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300677858191"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2303687258376"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302317028227"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300911178135"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2304275802778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301325584872"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301298717913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302342680901"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302008759786"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302435140496"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2301970274969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303095132574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301234985619"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300255845074"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302087631145"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301439131625"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300651859255"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301337938169"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302929583913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300316470989"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300323384335"/>
			<DeclRefExpr type="int (struct file *)" spelling="calc_image_size" id="2301426319060"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300692455703"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301127623548"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2301470344652"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2301942963358"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303471117959"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2304289044362"/>
			<MemberRefExpr type="png_byte" spelling="color_type" id="2301052244300"/>
			<MemberRefExpr type="png_byte" spelling="compression_method" id="2303577892326"/>
			<MemberRefExpr type="png_byte" spelling="filter_method" id="2304194457530"/>
			<MemberRefExpr type="png_byte" spelling="interlace_method" id="2302080436186"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="update" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="validated" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read all the IHDR information and validate it." comment_scope_start="2891" comment_scope_end="2900">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2303074748556"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302765035314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303351583367"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2302810281548"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301445152706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301755746598"/>
			<UnexposedExpr type="png_uint_32 (*)(struct file *)" spelling="reread_4" id="2300318798944"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301111631501"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300469527189"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2304013139496"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304059504113"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302356412569"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303832628706"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301022486850"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300854047650"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303322344685"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301102619998"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301064454537"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2301424783809"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300298754504"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301810346879"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2303222433383"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300259445236"/>
			<CallExpr type="void" spelling="setpos" id="2301831853376"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2303486286718"/>
			<CallExpr type="png_uint_32" spelling="reread_4" id="2302103313060"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2303999027731"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301048438807"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301141749352"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300514231425"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2301202064966"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2301235561496"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300196364396"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300677858191"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2303687258376"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302317028227"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300911178135"/>
			<DeclRefExpr type="png_uint_32 (struct file *)" spelling="reread_4" id="2304275802778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301325584872"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301298717913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2302342680901"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302008759786"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302435140496"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2301970274969"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303095132574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301234985619"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300255845074"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302087631145"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301439131625"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300651859255"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301337938169"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302929583913"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2300316470989"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300323384335"/>
			<MemberRefExpr type="png_uint_32" spelling="width" id="2301942963358"/>
			<MemberRefExpr type="png_uint_32" spelling="height" id="2303471117959"/>
			<MemberRefExpr type="png_byte" spelling="bit_depth" id="2304289044362"/>
			<MemberRefExpr type="png_byte" spelling="color_type" id="2301052244300"/>
			<MemberRefExpr type="png_byte" spelling="compression_method" id="2303577892326"/>
			<MemberRefExpr type="png_byte" spelling="filter_method" id="2304194457530"/>
			<MemberRefExpr type="png_byte" spelling="interlace_method" id="2302080436186"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This validates all the fields, and calls stop_invalid if
             * there is a problem." comment_scope_start="2901" comment_scope_end="2905">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct file *)" spelling="calc_image_size" id="2301982890183"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303542613946"/>
			<CallExpr type="int" spelling="calc_image_size" id="2302764983719"/>
			<DeclRefExpr type="int (struct file *)" spelling="calc_image_size" id="2301426319060"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300692455703"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="validates" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Ancillary chunks that require further processing:" comment_scope_start="2908" comment_scope_end="2925">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_zTXt_iCCP" id="2302710692895"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302456410191"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302441832245"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303183688105"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2304268354888"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300492537256"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302258119009"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_iTXt" id="2301271197079"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303609242525"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2303155070152"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302425969204"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2304003623959"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303566490630"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301465779476"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="process_IDAT" id="2300953300774"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302077168677"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="process_zTXt_iCCP" id="2302859749080"/>
			<CallExpr type="void" spelling="chunk_end" id="2302242182876"/>
			<CallExpr type="void" spelling="file_setpos" id="2303109366135"/>
			<CallExpr type="int" spelling="process_iTXt" id="2302341268218"/>
			<CallExpr type="void" spelling="chunk_end" id="2303415224152"/>
			<CallExpr type="void" spelling="file_setpos" id="2300653812136"/>
			<CallExpr type="int" spelling="process_IDAT" id="2304190869961"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_zTXt_iCCP" id="2303773667158"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301584434670"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2302986394325"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301694950418"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2300349602154"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300880020015"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304039361336"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_iTXt" id="2303652964619"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302099839457"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2302567410356"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302276140181"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302794286634"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301902350435"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303702760770"/>
			<DeclRefExpr type="int (struct file *)" spelling="process_IDAT" id="2303506450015"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303154757663"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301577095552"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2301364366988"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300751406117"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2300353880843"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="First pass:" comment_scope_start="2926" comment_scope_end="2929">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303928983730"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2300691075265"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303863013376"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303875559194"/>
			<StringLiteral type="char [22]" spelling="&quot;next_type == png_IDAT&quot;" id="2300337677821"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302892624545"/>
			<StringLiteral type="const char [73]" spelling="&quot;void process_chunk(struct file *, png_uint_32, png_uint_32, png_uint_32)&quot;" id="2304020418776"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2300400233262"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303072748603"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302984441557"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Control reaches this point if the chunk must be skipped.  For chunks other
    * than IDAT this means that the zlib compressed data is fatally damanged and
    * the chunk will not be passed to libpng.  For IDAT it means that the end of
    * the IDAT stream has not yet been reached and we must handle the next
    * (IDAT) chunk.  If the LZ data in an IDAT stream cannot be read 'stop' must
    * be used to halt parsing of the PNG." comment_scope_start="2931" comment_scope_end="2940">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2301385199902"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300835277401"/>
			<CallExpr type="void" spelling="read_chunk" id="2303647360605"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2304164070331"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300393893773"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="compressed"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is the generic code to skip the current chunk; simply jump to the
    * next one." comment_scope_start="2941" comment_scope_end="2949">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303319532912"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2300404992256"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301994639780"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2301625372638"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2303900612390"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301809525318"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2300741673269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301858805073"/>
			<CallExpr type="void" spelling="getpos" id="2303346697730"/>
			<CallExpr type="void" spelling="read_chunk" id="2303676647672"/>
			<FunctionDecl type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302472505443"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301413207902"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2301837079124"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300144478075"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303149045331"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2303680754725"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303389590426"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2302500887253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300500637323"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2302903522956"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302761628546"/>
			<LabelStmt type="" spelling="skip_chunk" id="2300237136759"/>
			<LabelStmt type="" spelling="skip_chunk" id="2300237136759"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read a 32-bit value from an 8-byte circular buffer (used only below)." comment_scope_start="2953" comment_scope_end="2961">
		<SYMBOLS>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302368040170"/>
			<UnexposedExpr type="int" spelling="offset" id="2300061181569"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2301095663973"/>
			<UnexposedExpr type="int" spelling="offset" id="2301195421695"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302278950028"/>
			<UnexposedExpr type="int" spelling="offset" id="2300069295241"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302692587885"/>
			<UnexposedExpr type="int" spelling="offset" id="2303577335796"/>
			<FunctionDecl type="png_uint_32 (png_bytep, int)" spelling="get32" id="2302908117385"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2303045964843"/>
			<DeclRefExpr type="int" spelling="offset" id="2302519205239"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2300982898723"/>
			<DeclRefExpr type="int" spelling="offset" id="2301232554221"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2303184470704"/>
			<DeclRefExpr type="int" spelling="offset" id="2300865711928"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2300887055937"/>
			<DeclRefExpr type="int" spelling="offset" id="2303198816038"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="circular" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="circular buffer" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The stream seems to be messed up, attempt to resync from the current chunk
    * header.  Executes stop on a fatal error, otherwise calls process_chunk." comment_scope_start="2965" comment_scope_end="3079">
		<SYMBOLS>
			<LabelRef type="" spelling="truncated" id="2304010880973"/>
			<LabelRef type="" spelling="truncated" id="2304010880973"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303657087671"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2301785371463"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302865542206"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300641651481"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303110872672"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302558593472"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2300886743321"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301767076638"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301926668578"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300012691550"/>
			<UnexposedExpr type="int (*)(int, _IO_FILE *)" spelling="_IO_putc" id="2302920218843"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302591933223"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2301547541634"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303274066505"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301443046406"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302971555314"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2302273266762"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302504951515"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302696043957"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300249403886"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2303767653593"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301489704929"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300492068394"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2302620084796"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303698234030"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302075991166"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303607063074"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300671306631"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302750954653"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301962661048"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303461611470"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2303300742828"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303283248661"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2301135526965"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302290341620"/>
			<UnexposedExpr type="int" spelling="ch" id="2303627524253"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2302826666018"/>
			<UnexposedExpr type="int" spelling="ch" id="2301106117035"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2300532695011"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303285575693"/>
			<UnexposedExpr type="png_uint_32 (*)(png_bytep, int)" spelling="get32" id="2301278714003"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2303163288106"/>
			<UnexposedExpr type="int" spelling="nused" id="2300627906157"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303517329590"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2300691843104"/>
			<UnexposedExpr type="png_uint_32 (*)(png_bytep, int)" spelling="get32" id="2300579146164"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2303365570306"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2301809365656"/>
			<UnexposedExpr type="int (*)(png_uint_32)" spelling="chunk_type_valid" id="2301607240529"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303749597740"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303396308921"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2304067514708"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303483234719"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2301153551765"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2303311292046"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303728752295"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2301271048220"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2302912836276"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2300292327162"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302980728158"/>
			<UnexposedExpr type="int" spelling="ch" id="2303594137021"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2303627132229"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="crc_one_byte" id="2302017403809"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2301224771289"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2301913855338"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2301055429216"/>
			<UnexposedExpr type="unsigned int" spelling="ch" id="2301538413564"/>
			<UnexposedExpr type="int" spelling="ch" id="2301390282615"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304204687859"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302130653843"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="int" spelling="fputs" id="2301859217922"/>
			<CallExpr type="void" spelling="type_name" id="2303811765492"/>
			<CallExpr type="int" spelling="_IO_putc" id="2301928508873"/>
			<CallExpr type="void" spelling="file_setpos" id="2302575813401"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2303444103490"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2303917167408"/>
			<CallExpr type="void" spelling="process_chunk" id="2304164613007"/>
			<CallExpr type="int" spelling="read_byte" id="2303941514801"/>
			<CallExpr type="png_uint_32" spelling="get32" id="2300330291646"/>
			<CallExpr type="png_uint_32" spelling="get32" id="2300560797828"/>
			<CallExpr type="int" spelling="chunk_type_valid" id="2303393297393"/>
			<CallExpr type="void" spelling="process_chunk" id="2304106535412"/>
			<CallExpr type="int" spelling="read_byte" id="2302471519859"/>
			<CallExpr type="png_uint_32" spelling="crc_one_byte" id="2302406886776"/>
			<CallExpr type="void" spelling="stop" id="2300817838124"/>
			<StringLiteral type="char [7]" spelling="&quot; SYNC &quot;" id="2300242275909"/>
			<StringLiteral type="char [19]" spelling="&quot;damaged PNG stream&quot;" id="2301117321560"/>
			<VarDecl type="png_uint_32" spelling="file_crc" id="2301397827569"/>
			<VarDecl type="png_uint_32" spelling="length" id="2302694316896"/>
			<VarDecl type="png_uint_32" spelling="type" id="2304142222850"/>
			<VarDecl type="png_uint_32" spelling="crc" id="2302484952056"/>
			<VarDecl type="png_byte [8]" spelling="buffer" id="2301220314311"/>
			<VarDecl type="unsigned int" spelling="nread" id="2300476805549"/>
			<VarDecl type="unsigned int" spelling="nused" id="2303807349957"/>
			<VarDecl type="int" spelling="ch" id="2304163862615"/>
			<VarDecl type="png_uint_32" spelling="next_length" id="2301043266548"/>
			<VarDecl type="png_uint_32" spelling="next_type" id="2301248371995"/>
			<FunctionDecl type="void (struct file *)" spelling="sync_stream" id="2303237458953"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300116697006"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303616001640"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303634432638"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301350655796"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2303636355824"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301111297689"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303844584489"/>
			<DeclRefExpr type="int (int, _IO_FILE *)" spelling="_IO_putc" id="2301722570011"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300719587808"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2303972457008"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301788932773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301633262417"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303469307270"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2303493940466"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300368028226"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2300276197955"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301929907186"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2303102702039"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300976275240"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304288957899"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303812849334"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301917808135"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2303292505258"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302305674325"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302321423544"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301222523244"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300086090293"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2301788720755"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300520924576"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302279315566"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2304167821675"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2301289418371"/>
			<DeclRefExpr type="int" spelling="ch" id="2303653271047"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2300592561545"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300349432129"/>
			<DeclRefExpr type="int" spelling="ch" id="2302618121271"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2302638687583"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2301251500734"/>
			<DeclRefExpr type="int" spelling="ch" id="2303086022561"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2303209153782"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2300930492995"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2302714054133"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2303712689606"/>
			<DeclRefExpr type="png_uint_32 (png_bytep, int)" spelling="get32" id="2302021649223"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2303283408897"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2301736428555"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300004998235"/>
			<DeclRefExpr type="png_uint_32 (png_bytep, int)" spelling="get32" id="2303027927632"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2303719761845"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2303828706735"/>
			<DeclRefExpr type="int (png_uint_32)" spelling="chunk_type_valid" id="2301657767907"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2301209584033"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300401161154"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302873748160"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301991312245"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301038974893"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300345597076"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303892256290"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2302624597830"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2300097952105"/>
			<DeclRefExpr type="int" spelling="ch" id="2303112279362"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2301181722304"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300154193586"/>
			<DeclRefExpr type="int" spelling="ch" id="2301330785621"/>
			<DeclRefExpr type="int" spelling="ch" id="2304052896598"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2302582765525"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2301120892679"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2303076396736"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2300821049788"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2301466458595"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301943266840"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301294178530"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2303451264044"/>
			<DeclRefExpr type="int" spelling="ch" id="2301070834501"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301068709671"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301205414446"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301501968074"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2301272512977"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301220135781"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2300778545872"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2301260956022"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2304234388987"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303467310058"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2303399675790"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303271833511"/>
			<LabelStmt type="" spelling="truncated" id="2303196739748"/>
			<LabelStmt type="" spelling="truncated" id="2303196739748"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return to the start of the chunk data" comment_scope_start="2980" comment_scope_end="2983">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2301547541634"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303274066505"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301443046406"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302971555314"/>
			<CallExpr type="void" spelling="file_setpos" id="2302575813401"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2303972457008"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301788932773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301633262417"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303469307270"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2301260956022"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2304234388987"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="else completely truncated" comment_scope_start="2984" comment_scope_end="2984">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2302273266762"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302504951515"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2303444103490"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2303493940466"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300368028226"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2300276197955"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Ignore the recorded chunk length, proceed through the data looking for
       * a leading sequence of bytes that match the CRC in the following four
       * bytes.  Each time a match is found check the next 8 bytes for a valid
       * length, chunk-type pair." comment_scope_start="2986" comment_scope_end="3002">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302696043957"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300249403886"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2303767653593"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301489704929"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300492068394"/>
			<UnexposedExpr type="png_uint_32" spelling="crc" id="2302620084796"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303698234030"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2303917167408"/>
			<VarDecl type="png_uint_32" spelling="length" id="2302694316896"/>
			<VarDecl type="png_uint_32" spelling="type" id="2304142222850"/>
			<VarDecl type="png_uint_32" spelling="crc" id="2302484952056"/>
			<VarDecl type="png_byte [8]" spelling="buffer" id="2301220314311"/>
			<VarDecl type="unsigned int" spelling="nread" id="2300476805549"/>
			<VarDecl type="unsigned int" spelling="nused" id="2303807349957"/>
			<VarDecl type="int" spelling="ch" id="2304163862615"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301929907186"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2303102702039"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300976275240"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304288957899"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303812849334"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301917808135"/>
			<DeclRefExpr type="png_uint_32" spelling="crc" id="2303292505258"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302305674325"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303467310058"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="time" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="pair" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="time"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="A match on the CRC; for IEND this is sufficient, but for anything
             * else expect a following chunk header." comment_scope_start="3003" comment_scope_end="3011">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302075991166"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303607063074"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300671306631"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302750954653"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301962661048"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303461611470"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="process_chunk" id="2304164613007"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302321423544"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301222523244"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300086090293"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2301788720755"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300520924576"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302279315566"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2303399675790"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Need 8 bytes" comment_scope_start="3015" comment_scope_end="3022">
		<SYMBOLS>
			<LabelRef type="" spelling="truncated" id="2304010880973"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2303300742828"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303283248661"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2301135526965"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302290341620"/>
			<UnexposedExpr type="int" spelling="ch" id="2303627524253"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2302826666018"/>
			<UnexposedExpr type="int" spelling="ch" id="2301106117035"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="int" spelling="read_byte" id="2303941514801"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2304167821675"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2301289418371"/>
			<DeclRefExpr type="int" spelling="ch" id="2303653271047"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2300592561545"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300349432129"/>
			<DeclRefExpr type="int" spelling="ch" id="2302618121271"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2302638687583"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2301251500734"/>
			<DeclRefExpr type="int" spelling="ch" id="2303086022561"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Prevent overflow" comment_scope_start="3024" comment_scope_end="3025">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2300532695011"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2303209153782"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2300930492995"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="overflow" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="or, nused &amp;= 7 ;-)" comment_scope_start="3026" comment_scope_end="3026">
		<SYMBOLS>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303285575693"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2302714054133"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2303712689606"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Examine the 8 bytes for a valid chunk header." comment_scope_start="3028" comment_scope_end="3045">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 (*)(png_bytep, int)" spelling="get32" id="2301278714003"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2303163288106"/>
			<UnexposedExpr type="int" spelling="nused" id="2300627906157"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2303517329590"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2300691843104"/>
			<UnexposedExpr type="png_uint_32 (*)(png_bytep, int)" spelling="get32" id="2300579146164"/>
			<UnexposedExpr type="png_byte *" spelling="buffer" id="2303365570306"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2301809365656"/>
			<UnexposedExpr type="int (*)(png_uint_32)" spelling="chunk_type_valid" id="2301607240529"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303749597740"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303396308921"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2304067514708"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303483234719"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2301153551765"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2303311292046"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2303728752295"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="png_uint_32" spelling="get32" id="2300330291646"/>
			<CallExpr type="png_uint_32" spelling="get32" id="2300560797828"/>
			<CallExpr type="int" spelling="chunk_type_valid" id="2303393297393"/>
			<CallExpr type="void" spelling="process_chunk" id="2304106535412"/>
			<VarDecl type="png_uint_32" spelling="next_length" id="2301043266548"/>
			<VarDecl type="png_uint_32" spelling="next_type" id="2301248371995"/>
			<DeclRefExpr type="png_uint_32 (png_bytep, int)" spelling="get32" id="2302021649223"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2303283408897"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2301736428555"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300004998235"/>
			<DeclRefExpr type="png_uint_32 (png_bytep, int)" spelling="get32" id="2303027927632"/>
			<DeclRefExpr type="png_byte [8]" spelling="buffer" id="2303719761845"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2303828706735"/>
			<DeclRefExpr type="int (png_uint_32)" spelling="chunk_type_valid" id="2301657767907"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2301209584033"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300401161154"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302873748160"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301991312245"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301038974893"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300345597076"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303892256290"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303271833511"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="examine" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="valid" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Not valid, keep going." comment_scope_start="3044" comment_scope_end="3045"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This catches up with the circular buffer which gets filled above
          * while checking a chunk header.  This code is slightly tricky - if
          * the chunk_type is IEND the buffer will never be used, if it is not
          * the code will always read ahead exactly 8 bytes and pass this on to
          * process_chunk.  So the invariant that IEND leaves the file position
          * after the IEND CRC and other chunk leave it after the *next* chunk
          * header is not broken." comment_scope_start="3049" comment_scope_end="3063">
		<SYMBOLS>
			<LabelRef type="" spelling="truncated" id="2304010880973"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2301271048220"/>
			<UnexposedExpr type="unsigned int" spelling="nused" id="2302912836276"/>
			<UnexposedExpr type="int (*)(struct file *)" spelling="read_byte" id="2300292327162"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302980728158"/>
			<UnexposedExpr type="int" spelling="ch" id="2303594137021"/>
			<CallExpr type="int" spelling="read_byte" id="2302471519859"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2302624597830"/>
			<DeclRefExpr type="unsigned int" spelling="nused" id="2300097952105"/>
			<DeclRefExpr type="int" spelling="ch" id="2303112279362"/>
			<DeclRefExpr type="int (struct file *)" spelling="read_byte" id="2301181722304"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300154193586"/>
			<DeclRefExpr type="int" spelling="ch" id="2301330785621"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="circular" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="while" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="checking" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="circular buffer" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Control gets to here if when 0x7fffffff bytes (plus 8) have been read,
       * ok, treat this as a damaged stream too:" comment_scope_start="3072" comment_scope_end="3075"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="On entry file::data_pos must be set to the position of the first byte
    * of the chunk data *and* the input file must be at this position.  This
    * routine (via process_chunk) instantiates a chunk or IDAT control structure
    * based on file::length and file::type and also resets these fields and
    * file::data_pos for the chunk after this one.  For an IDAT chunk the whole
    * stream of IDATs will be read, until something other than an IDAT is
    * encountered, and the file fields will be set for the chunk after the end
    * of the stream of IDATs.
    *
    * For IEND the file::type field will be set to 0, and nothing beyond the end
    * of the IEND chunk will have been read." comment_scope_start="3083" comment_scope_end="3163">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302728572839"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304253785276"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301076659677"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302281544354"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300848630045"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301378836908"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302062610573"/>
			<UnexposedExpr type="int" spelling="verbose" id="2300799798591"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2303431654667"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302446394550"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303162449533"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303220551121"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302082753065"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2300266953378"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303335150606"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301981949460"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2304118093894"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302519669586"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303155238151"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301334034754"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2302830382608"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303674288855"/>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="crc_read_many" id="2301951153924"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302527933665"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300662188732"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2301990866568"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304208854795"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2300022032567"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301687908723"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2303088384121"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301348976322"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2301718725564"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2303021437722"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2303965748331"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301118512211"/>
			<UnexposedExpr type="unsigned int" spelling="nread" id="2302476785814"/>
			<UnexposedExpr type="int (*)(png_uint_32)" spelling="chunk_type_valid" id="2302926277292"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2302559545273"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300794886341"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302901749156"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302825951867"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303440263970"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2302782742668"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2300314546508"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2303648580719"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302235569004"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2302347473809"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="sync_stream" id="2300437020874"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300779685969"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="stop" id="2301810660717"/>
			<CallExpr type="int" spelling="fputs" id="2300233790529"/>
			<CallExpr type="void" spelling="type_name" id="2301148983833"/>
			<CallExpr type="int" spelling="fprintf" id="2300718635699"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2304290752313"/>
			<CallExpr type="int" spelling="crc_read_many" id="2303104481245"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2300234617113"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2303367521494"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2300220268244"/>
			<CallExpr type="int" spelling="chunk_type_valid" id="2302187147638"/>
			<CallExpr type="void" spelling="process_chunk" id="2301158173499"/>
			<CallExpr type="void" spelling="process_chunk" id="2303343214025"/>
			<CallExpr type="void" spelling="sync_stream" id="2303512992053"/>
			<StringLiteral type="char [17]" spelling="&quot;read beyond IEND&quot;" id="2301256939886"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2301697514173"/>
			<StringLiteral type="char [6]" spelling="&quot; %lu\n&quot;" id="2301905910403"/>
			<VarDecl type="png_uint_32" spelling="length" id="2304193608882"/>
			<VarDecl type="png_uint_32" spelling="type" id="2303948707441"/>
			<VarDecl type="png_uint_32" spelling="file_crc" id="2301950672024"/>
			<VarDecl type="unsigned int" spelling="nread" id="2302807464098"/>
			<VarDecl type="png_uint_32" spelling="next_length" id="2301147033976"/>
			<VarDecl type="png_uint_32" spelling="next_type" id="2301321391893"/>
			<FunctionDecl type="void (struct file *)" spelling="read_chunk" id="2303429978983"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302078165591"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303591310948"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301604235376"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304171396589"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300561194079"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302136969537"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303196409994"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303185392799"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302735525010"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300245707540"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300120636765"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2300029392881"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303602274846"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304116127978"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302618326628"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301162118102"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303416582155"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="crc_read_many" id="2302251280626"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301230433831"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301529332589"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2303817352955"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300135941899"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301653145918"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2304197920512"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301101620414"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2300398547696"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2301012860256"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302559356518"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2303224105850"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2301945526470"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300209696630"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2301000768710"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2301916521853"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301549700989"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2301658925367"/>
			<DeclRefExpr type="unsigned int" spelling="nread" id="2303389999448"/>
			<DeclRefExpr type="int (png_uint_32)" spelling="chunk_type_valid" id="2301104982939"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303088110511"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303999295568"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2301103548046"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300085998058"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302440581118"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300401388084"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303940499078"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2301708125154"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304136126580"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2301467265745"/>
			<DeclRefExpr type="void (struct file *)" spelling="sync_stream" id="2301451514477"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302722225794"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300815282269"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303228028305"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2303577392281"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302985761918"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2300472273255"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301862298481"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="resets" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="After IEND file::type is set to 0, if libpng attempts to read
    * more data at this point this is a bug in libpng." comment_scope_start="3099" comment_scope_end="3111">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300848630045"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301378836908"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302062610573"/>
			<UnexposedExpr type="int" spelling="verbose" id="2300799798591"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2303431654667"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302446394550"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303162449533"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303220551121"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302082753065"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2300266953378"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303335150606"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301981949460"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2304118093894"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2302519669586"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303155238151"/>
			<CallExpr type="void" spelling="stop" id="2301810660717"/>
			<CallExpr type="int" spelling="fputs" id="2300233790529"/>
			<CallExpr type="void" spelling="type_name" id="2301148983833"/>
			<CallExpr type="int" spelling="fprintf" id="2300718635699"/>
			<StringLiteral type="char [17]" spelling="&quot;read beyond IEND&quot;" id="2301256939886"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2301697514173"/>
			<StringLiteral type="char [6]" spelling="&quot; %lu\n&quot;" id="2301905910403"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301604235376"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304171396589"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300561194079"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302136969537"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2303196409994"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303185392799"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302735525010"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300245707540"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300120636765"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2300029392881"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303602274846"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304116127978"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2303577392281"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2302985761918"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="bug" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data point" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Start the read_crc calculation with the chunk type, then read to the end
    * of the chunk data (without processing it in any way) to check that it is
    * all there and calculate the CRC." comment_scope_start="3112" comment_scope_end="3116">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2301334034754"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2302830382608"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303674288855"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2304290752313"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302618326628"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301162118102"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303416582155"/>
			<MemberRefExpr type="png_uint_32" spelling="crc" id="2300472273255"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="else it was truncated" comment_scope_start="3117" comment_scope_end="3117">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct file *, png_uint_32)" spelling="crc_read_many" id="2301951153924"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302527933665"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300662188732"/>
			<CallExpr type="int" spelling="crc_read_many" id="2303104481245"/>
			<DeclRefExpr type="int (struct file *, png_uint_32)" spelling="crc_read_many" id="2302251280626"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301230433831"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301529332589"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="CRC read from file" comment_scope_start="3119" comment_scope_end="3119">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="file_crc" id="2301950672024"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="do not read beyond IEND" comment_scope_start="3124" comment_scope_end="3124">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301687908723"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301101620414"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Adjust the read count back to the correct value for this
                   * chunk." comment_scope_start="3137" comment_scope_end="3143">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300794886341"/>
			<UnexposedExpr type="void (*)(struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2302901749156"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302825951867"/>
			<UnexposedExpr type="png_uint_32" spelling="file_crc" id="2303440263970"/>
			<UnexposedExpr type="png_uint_32" spelling="next_length" id="2302782742668"/>
			<UnexposedExpr type="png_uint_32" spelling="next_type" id="2300314546508"/>
			<CallExpr type="void" spelling="process_chunk" id="2301158173499"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303999295568"/>
			<DeclRefExpr type="void (struct file *, png_uint_32, png_uint_32, png_uint_32)" spelling="process_chunk" id="2301103548046"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300085998058"/>
			<DeclRefExpr type="png_uint_32" spelling="file_crc" id="2302440581118"/>
			<DeclRefExpr type="png_uint_32" spelling="next_length" id="2300401388084"/>
			<DeclRefExpr type="png_uint_32" spelling="next_type" id="2303940499078"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301862298481"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IEND" comment_scope_start="3147" comment_scope_end="3147"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Control gets to here if the stream seems invalid or damaged in some
    * way.  Either there was a problem reading all the expected data (this
    * chunk's data, its CRC and the length and type of the next chunk) or the
    * next chunk length/type are invalid.  Notice that the cases that end up
    * here all correspond to cases that would otherwise terminate the read of
    * the PNG file." comment_scope_start="3155" comment_scope_end="3163">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *)" spelling="sync_stream" id="2300437020874"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300779685969"/>
			<CallExpr type="void" spelling="sync_stream" id="2303512992053"/>
			<FunctionDecl type="void (struct file *)" spelling="read_chunk" id="2303429978983"/>
			<DeclRefExpr type="void (struct file *)" spelling="sync_stream" id="2301451514477"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302722225794"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="terminate" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This returns a file* from a png_struct in an implementation specific way." comment_scope_start="3165" comment_scope_end="3182">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303076103837"/>
			<UnexposedExpr type="struct file *(*)(png_const_structrp)" spelling="get_control" id="2300671788908"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2301566856836"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300197293665"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2301100562519"/>
			<UnexposedExpr type="struct file *(*)(png_const_structrp)" spelling="get_control" id="2300241667795"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303385521801"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300161080950"/>
			<UnexposedExpr type="unsigned int" spelling="warnings" id="2303419046026"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2300335125178"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303609067688"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="emit_error" id="2302784326450"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300185093468"/>
			<UnexposedExpr type="png_const_charp" spelling="message" id="2300932555449"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_const_structrp" spelling="png_const_structrp" id="2304266875114"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2300936171991"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2301398524798"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2300936171991"/>
			<TypeRef type="png_const_charp" spelling="png_const_charp" id="2301398524798"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<CallExpr type="void" spelling="stop" id="2302343857854"/>
			<CallExpr type="struct file *" spelling="get_control" id="2303543424030"/>
			<CallExpr type="struct file *" spelling="get_control" id="2301974105373"/>
			<CallExpr type="void" spelling="emit_error" id="2300412910987"/>
			<VarDecl type="struct file *" spelling="file" id="2302746103914"/>
			<FunctionDecl type="struct file *(png_const_structrp)" spelling="get_control" id="2303826028593"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="error_handler" id="2302334834741"/>
			<FunctionDecl type="void (png_structp, png_const_charp)" spelling="warning_handler" id="2300804616377"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300175214232"/>
			<DeclRefExpr type="struct file *(png_const_structrp)" spelling="get_control" id="2303792397570"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2301509394696"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2303742689252"/>
			<DeclRefExpr type="struct file *(png_const_structrp)" spelling="get_control" id="2302792615643"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300284037847"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304184891483"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="emit_error" id="2304196902712"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303628190937"/>
			<DeclRefExpr type="png_const_charp" spelling="message" id="2303135592510"/>
			<MemberRefExpr type="unsigned int" spelling="warnings" id="2302465710973"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2304093256164"/>
			<ParmDecl type="png_const_structrp" spelling="png_ptr" id="2300296353575"/>
			<ParmDecl type="png_structp" spelling="png_ptr" id="2304058894395"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2300760464301"/>
			<ParmDecl type="png_structp" spelling="png_ptr" id="2301596531762"/>
			<ParmDecl type="png_const_charp" spelling="message" id="2302097957145"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read callback - this is where the work gets done to check the stream before
 * passing it to libpng" comment_scope_start="3183" comment_scope_end="3187">
		<SYMBOLS>
			<TypeRef type="png_structp" spelling="png_structp" id="2300936171991"/>
			<TypeRef type="png_bytep" spelling="png_bytep" id="2303313601081"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<ParmDecl type="png_structp" spelling="png_ptr" id="2300725700631"/>
			<ParmDecl type="png_bytep" spelling="buffer" id="2302513701509"/>
			<ParmDecl type="size_t" spelling="count" id="2303768858086"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="check" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Return 'count' bytes to libpng in 'buffer'" comment_scope_start="3188" comment_scope_end="3518">
		<SYMBOLS>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<UnexposedExpr type="struct file *(*)(png_const_structrp)" spelling="get_control" id="2303048810948"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303225364250"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2303798196441"/>
			<UnexposedExpr type="size_t" spelling="count" id="2302733673891"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300717092985"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302126117441"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303602155083"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302803817298"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303476647511"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300421592821"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2300892349054"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302495265422"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301848443699"/>
			<UnexposedExpr type="int" spelling="status_code" id="2300528932601"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300931440191"/>
			<UnexposedExpr type="int" spelling="status_code" id="2303533325949"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300517206703"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300568952078"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2302346615378"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303935107730"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302639305867"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2302295249823"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302112249141"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2300850464475"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304260319756"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300949533609"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303836779050"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301076007290"/>
			<UnexposedExpr type="int" spelling="status_code" id="2303724058723"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302030935973"/>
			<UnexposedExpr type="int" spelling="status_code" id="2304243009136"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302432636997"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300824430214"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304243152040"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302918691507"/>
			<UnexposedExpr type="int" spelling="state" id="2303161037425"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304280030158"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301921632255"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303264875389"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300384202605"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300280116928"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304083324378"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303727993329"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303104786099"/>
			<UnexposedExpr type="int" spelling="state" id="2304243492910"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301588348572"/>
			<UnexposedExpr type="int" spelling="state" id="2300067873822"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303677310842"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303995873074"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301756668678"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303143138062"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303257113314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301833420794"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303612518674"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302524683938"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2302531903916"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300722281913"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302089574338"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302418333545"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301545030503"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2303394245066"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301373845326"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2303033555531"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303906165804"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304061122485"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302582763574"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303406597741"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300616203260"/>
			<UnexposedExpr type="int" spelling="state" id="2303237166096"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302063446055"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303230080212"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2300599773429"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301690056656"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2304137160391"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303233674869"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301362106167"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302232610680"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301873961653"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300986048923"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301450688838"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303332485773"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2301220407184"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301858764210"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302056919170"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300184818649"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302021439995"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301518026930"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302910259847"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2304073219113"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302579811266"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302764857893"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300970413389"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303084961612"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2301549193713"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300960200442"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301599739475"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301934916838"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302464792551"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303701952545"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301169523772"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301992059143"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300641714366"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303217550985"/>
			<UnexposedExpr type="int" spelling="state" id="2302044942452"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303547680071"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301975413606"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302315229661"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300408613205"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302971659603"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300341429212"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303450702874"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300455022736"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_callback" id="2302046815692"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301335790497"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302609770253"/>
			<UnexposedExpr type="size_t" spelling="count" id="2300518925162"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303403002053"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303167722128"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300910429963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301091202296"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2301832861732"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303291349530"/>
			<UnexposedExpr type="int" spelling="state" id="2301124631343"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301274675794"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304031085048"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2300494001631"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302378421452"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303112644099"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302958454231"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303479650053"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2302714089129"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302774867346"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300258130459"/>
			<UnexposedExpr type="int" spelling="state" id="2301613943821"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303945858930"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302757229304"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303292500267"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301123128281"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302212981831"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301367871543"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303290974337"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300278910350"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303653058161"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302685420465"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300570706176"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301293464969"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300958763763"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300293556991"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302288122230"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303315045372"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300499304647"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300772067178"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300505337060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303818478946"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302063830908"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300632423498"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300496455385"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302562089838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302783752108"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300185399108"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300529774727"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302336514970"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300235712659"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302970070322"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301049040717"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300744866521"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301579728320"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303133282310"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301691118858"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303058670403"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301592923751"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300508433998"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304242442589"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302527543688"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301568583243"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304226770125"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304082804143"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303796201819"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2302598168296"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301276400304"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2302056565092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301364573836"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303131985489"/>
			<UnexposedExpr type="png_uint_32" spelling="reread_byte" id="2303104326103"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300127416144"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301261801026"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2300480060201"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301684374285"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302092192992"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300948957474"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303871135250"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302420140186"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302645079766"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memmove" id="2301794675063"/>
			<UnexposedExpr type="void *" spelling="rewrite_buffer" id="2303484234127"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2300790708666"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300863714720"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302811363779"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300383280538"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300693136498"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302562976517"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302799136001"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300433585312"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302187965907"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="crc_one_byte" id="2300823658061"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303674080832"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302938063017"/>
			<UnexposedExpr type="int" spelling="b" id="2301254661112"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2302631704515"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2301996081037"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302865955714"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300251683920"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302262622129"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303880113963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300681769064"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300604749921"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302853269422"/>
			<UnexposedExpr type="int" spelling="verbose" id="2301502611381"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2300061164465"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301063274269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301470940713"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303712900354"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301474821315"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2304211326050"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304236065640"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301948406884"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301105732722"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303198534484"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302934322182"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303881301006"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301950580096"/>
			<UnexposedExpr type="int" spelling="state" id="2302605900447"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302229170989"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300325134658"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302645602351"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300752547681"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300861393193"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303071709577"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300471315364"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303806018021"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302056390204"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302002663136"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302580167821"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302746415510"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300060274917"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301304207542"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300869799938"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300451691800"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878506549"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300604966002"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303414119368"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302660818250"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300845145606"/>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301447447415"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300784209569"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303421099538"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302037313218"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303181551509"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302679004315"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301289726891"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301175690219"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2301020708061"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2304156693534"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2301281975194"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303848686624"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302549654834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303867000929"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303779126180"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303635785348"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303780620875"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301963837404"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302295623398"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301938011686"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302584268159"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301754588477"/>
			<UnexposedExpr type="void (*)(struct IDAT **)" spelling="IDAT_end" id="2302893781399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303539653158"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2301115268026"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="write_byte" id="2304086356505"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302441603050"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2300185628128"/>
			<UnexposedExpr type="size_t" spelling="count" id="2302265364514"/>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="struct file *" spelling="get_control" id="2303686145713"/>
			<CallExpr type="void" spelling="stop" id="2300827996522"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303118067967"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300559477624"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2300359627031"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2301144908723"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300980260609"/>
			<CallExpr type="void" spelling="stop" id="2301069008380"/>
			<CallExpr type="void" spelling="stop" id="2303249812073"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301797262517"/>
			<CallExpr type="void" spelling="stop" id="2304199610248"/>
			<CallExpr type="void" spelling="getpos" id="2303378563165"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301625591043"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301013442081"/>
			<CallExpr type="void" spelling="read_chunk" id="2303772878113"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303150695533"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300305626840"/>
			<CallExpr type="void" spelling="read_callback" id="2300490387155"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301583498289"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2304002541013"/>
			<CallExpr type="void" spelling="setpos" id="2301190034947"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303377935175"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302339462285"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300593309654"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300295752348"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300021172849"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<CallExpr type="void" spelling="skip_12" id="2304130121613"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300669660726"/>
			<CallExpr type="void *" spelling="memmove" id="2303363675002"/>
			<CallExpr type="png_uint_32" spelling="crc_one_byte" id="2301430298149"/>
			<CallExpr type="int" spelling="fputs" id="2302618772665"/>
			<CallExpr type="void" spelling="type_name" id="2304224474138"/>
			<CallExpr type="int" spelling="fprintf" id="2303891234900"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2304149076353"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303441031220"/>
			<CallExpr type="void" spelling="stop" id="2303951298749"/>
			<CallExpr type="void" spelling="file_setpos" id="2302216485527"/>
			<CallExpr type="void" spelling="chunk_end" id="2302735890177"/>
			<CallExpr type="void" spelling="IDAT_end" id="2300107281624"/>
			<CallExpr type="void" spelling="write_byte" id="2302320256840"/>
			<StringLiteral type="char [26]" spelling="&quot;read callback for 0 bytes&quot;" id="2303584048332"/>
			<StringLiteral type="char [22]" spelling="&quot;file-&gt;read_count == 0&quot;" id="2303849998324"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301231327058"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301446523507"/>
			<StringLiteral type="char [37]" spelling="&quot;(file-&gt;status_code &amp; TRUNCATED) == 0&quot;" id="2301968159126"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301939996348"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301662545655"/>
			<StringLiteral type="char [37]" spelling="&quot;(file-&gt;status_code &amp; TRUNCATED) != 0&quot;" id="2303562485082"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301819592210"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303085771196"/>
			<StringLiteral type="char [22]" spelling="&quot;not a PNG (too short)&quot;" id="2300741885894"/>
			<StringLiteral type="char [22]" spelling="&quot;not a PNG (signature)&quot;" id="2300812090605"/>
			<StringLiteral type="char [28]" spelling="&quot;file-&gt;state == STATE_CHUNKS&quot;" id="2301918338486"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302811872816"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303539119806"/>
			<StringLiteral type="char [17]" spelling="&quot;not a PNG (IHDR)&quot;" id="2301824214287"/>
			<StringLiteral type="char [22]" spelling="&quot;file-&gt;read_count == 8&quot;" id="2304136809195"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2304209252988"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301784197079"/>
			<StringLiteral type="char [19]" spelling="&quot;file-&gt;idat == NULL&quot;" id="2302563163547"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303815018751"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302446434853"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2303377003892"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300809356771"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302835087044"/>
			<StringLiteral type="char [31]" spelling="&quot;length == sig1 &amp;&amp; type == sig2&quot;" id="2302205583748"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302317716998"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303226111031"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2302121408705"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301003296482"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302192371406"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2300535801881"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302130114826"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301242664526"/>
			<StringLiteral type="char [13]" spelling="&quot;idat != NULL&quot;" id="2301836001431"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301345320808"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301271959596"/>
			<StringLiteral type="char [38]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length&quot;" id="2301932977604"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300576039167"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303534734173"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301109830944"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301820762083"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302321704973"/>
			<StringLiteral type="char [31]" spelling="&quot;idat-&gt;idat_count == cur-&gt;count&quot;" id="2302948647862"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300600042701"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2300729558569"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2304113805051"/>
			<StringLiteral type="char [13]" spelling="&quot; %lu 0x%.8x\n&quot;" id="2303746963574"/>
			<StringLiteral type="char [17]" spelling="&quot;type == png_IDAT&quot;" id="2303174877286"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303029646404"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303828846961"/>
			<StringLiteral type="char [16]" spelling="&quot;pending rewrite&quot;" id="2303123883157"/>
			<VarDecl type="struct file *" spelling="file" id="2301817941315"/>
			<VarDecl type="png_uint_32" spelling="type" id="2302148436289"/>
			<VarDecl type="png_uint_32" spelling="length" id="2302050753071"/>
			<VarDecl type="struct chunk *" spelling="chunk" id="2303552193512"/>
			<VarDecl type="png_uint_32" spelling="b" id="2303253384913"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302793807374"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2302839781917"/>
			<FunctionDecl type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2300867185223"/>
			<DeclRefExpr type="struct file *(png_const_structrp)" spelling="get_control" id="2303534110159"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2304181939737"/>
			<DeclRefExpr type="size_t" spelling="count" id="2302199523164"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302069643062"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302095443603"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301657974644"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302412306868"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300467717541"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302244367071"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300659899271"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302898257701"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301947158867"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2301071827250"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302554154170"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300421720920"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301745479533"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2300706136522"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301731529585"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304264458252"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302345642595"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302855064990"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301645436929"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301725931362"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302498931402"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302997542183"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304023833249"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301871351800"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303325939417"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303346516352"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301731559508"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300865264334"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304284604650"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304043543785"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300117649642"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300027600703"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300873004713"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303418095197"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301717933261"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2303221666773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301572439653"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304164986127"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300026503109"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300900621635"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301106484103"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302313197779"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303678446234"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301835221124"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301495505666"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302503912226"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301814761973"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304149495476"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303280980853"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301132656524"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302322729716"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303896407266"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300604167745"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300199842585"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301961290325"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301944143926"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2304023533323"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303244072286"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300298645425"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300525169248"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300851404821"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302026578643"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300513057567"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303332514137"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301185691539"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301451471863"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303532274620"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303258553572"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303662788966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2304259069234"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302993080362"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303669255954"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304027433264"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303644002929"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300916417553"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301550772966"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300705482001"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301667217541"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303230082991"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303513879811"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300311987455"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300333682962"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302154931265"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2304007380056"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301105541043"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300049079941"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300681204025"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303198624958"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304076456012"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301995318487"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302257457268"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301970090100"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300264004263"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2302433287554"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303413195901"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2302084191769"/>
			<DeclRefExpr type="size_t" spelling="count" id="2300142175358"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302371934524"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303764012846"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301857265482"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302771328117"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301938272792"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300650159862"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301455398362"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302251833060"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2300273703576"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301415412781"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304147470402"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304028334911"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303880770767"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303662551372"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302037819217"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303647866253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302786077570"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301854022648"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303532568276"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302351287267"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302023064485"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300203612345"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302499155584"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300993063024"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302075415158"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300658613500"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301059758631"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301492069441"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303150121660"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303621196650"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303746266739"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300431650356"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300729514390"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301142077469"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2301767201333"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301669326511"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303614142501"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302631690522"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303491987644"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302215346649"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304000269110"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302676147446"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300172129672"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302557469746"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2303680551574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303933357311"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303585661596"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303254881458"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303244951706"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300792968447"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301663909257"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301613673842"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301953856966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303272877162"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301875005951"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memmove" id="2302182863002"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301055542571"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302274922618"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302128018800"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301269674073"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304181828583"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302924146107"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2302525470418"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301928924017"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301582879093"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302300346936"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303163693219"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302861558339"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303560341051"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302486526325"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301072642656"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300889582542"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300168911556"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302672305487"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304279419406"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301282633884"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302476496130"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302739127299"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302737193344"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302307828255"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303098846129"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302967062368"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304093053607"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303086315285"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301940672031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300114766055"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300678973751"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301054376189"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303164101929"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301419994447"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301163576428"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300757911420"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2303548036360"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301354960620"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300596838888"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302385522180"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301991166071"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300276652608"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301197310229"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300417073296"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304153857160"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304042239372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301020043987"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300472314767"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302648386653"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302736024778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300884699712"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301133812672"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2301085471377"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302691308483"/>
			<DeclRefExpr type="void (struct IDAT **)" spelling="IDAT_end" id="2302808978372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301984206222"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302025653021"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303316013094"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2301221001871"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301344176630"/>
			<DeclRefExpr type="size_t" spelling="count" id="2303532058713"/>
			<DeclRefExpr type="void (struct file *, int)" spelling="write_byte" id="2304209871689"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303820029834"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303145764812"/>
			<DeclRefExpr type="size_t" spelling="count" id="2303033731119"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2304003010757"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301837606580"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300672483727"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302986380073"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300236914352"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301661532470"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300829146196"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2300643753497"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300223057294"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301131789646"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300281652505"/>
			<MemberRefExpr type="int" spelling="state" id="2300038707780"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300786175297"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301421901942"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303267288391"/>
			<MemberRefExpr type="int" spelling="state" id="2300438880609"/>
			<MemberRefExpr type="int" spelling="state" id="2301253004590"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300597112321"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302089491889"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300176039678"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303764423030"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2300912084414"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2302948509840"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303775303636"/>
			<MemberRefExpr type="int" spelling="state" id="2300960966558"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303520508121"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301010724631"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300657372495"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303430278707"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301547089107"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304040738806"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302742241990"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302037645715"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303026214279"/>
			<MemberRefExpr type="int" spelling="state" id="2303651024671"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303539196800"/>
			<MemberRefExpr type="int" spelling="state" id="2303762057971"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302769284552"/>
			<MemberRefExpr type="int" spelling="state" id="2303115530826"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2300127874189"/>
			<MemberRefExpr type="int" spelling="state" id="2301205841303"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301938671315"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301881518048"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300601786085"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303928040703"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303519143253"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302334602158"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304022667682"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300777057175"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303926644513"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301254558714"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301831578166"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304135990923"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301977773659"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304235153516"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301166282907"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302907134943"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2300148321944"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302994158213"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301851419039"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2304113324513"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303148668941"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2301770979759"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300184746978"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303599588232"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301129398430"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2300370790276"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2302751647970"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301319410686"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2303539793967"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300767676845"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302023818586"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301291452737"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2303707062593"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301156796991"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300588452498"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300584579181"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2300356965987"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301901556705"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300317992563"/>
			<MemberRefExpr type="int" spelling="state" id="2303578491203"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302867987481"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303178611823"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303450059688"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301553646692"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302932333676"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301599174816"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302508635734"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302945848785"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301294639684"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300847743681"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301556169578"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302309671129"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303122372775"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304020249926"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301634847600"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302153672704"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2304042218069"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300982353050"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301933209724"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303924117961"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2303140467834"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304271324657"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301727720596"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301321243167"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="buffer" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="For the chunk be *WRITTEN*" comment_scope_start="3191" comment_scope_end="3191">
		<SYMBOLS>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<VarDecl type="png_uint_32" spelling="type" id="2302148436289"/>
			<VarDecl type="png_uint_32" spelling="length" id="2302050753071"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="libpng should always ask for at least one byte" comment_scope_start="3194" comment_scope_end="3197">
		<SYMBOLS>
			<UnexposedExpr type="size_t" spelling="count" id="2302733673891"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300717092985"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302126117441"/>
			<CallExpr type="void" spelling="stop" id="2300827996522"/>
			<StringLiteral type="char [26]" spelling="&quot;read callback for 0 bytes&quot;" id="2303584048332"/>
			<DeclRefExpr type="size_t" spelling="count" id="2302199523164"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302069643062"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302095443603"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The callback always reads ahead by 8 bytes - the signature or chunk header
    * - these bytes are stored in chunk_length and chunk_type.  This block is
    * executed once for the signature and once for the first chunk right at the
    * start." comment_scope_start="3198" comment_scope_end="3243">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303602155083"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302803817298"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303476647511"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300421592821"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2300892349054"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302495265422"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301848443699"/>
			<UnexposedExpr type="int" spelling="status_code" id="2300528932601"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300931440191"/>
			<UnexposedExpr type="int" spelling="status_code" id="2303533325949"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300517206703"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300568952078"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2302346615378"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303935107730"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302639305867"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2302295249823"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302112249141"/>
			<UnexposedExpr type="unsigned int (*)(struct file *, png_uint_32 *)" spelling="read_4" id="2300850464475"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304260319756"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300949533609"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2303836779050"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301076007290"/>
			<UnexposedExpr type="int" spelling="status_code" id="2303724058723"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302030935973"/>
			<UnexposedExpr type="int" spelling="status_code" id="2304243009136"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302432636997"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300824430214"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304243152040"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302918691507"/>
			<UnexposedExpr type="int" spelling="state" id="2303161037425"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2304280030158"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301921632255"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303264875389"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300384202605"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300280116928"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304083324378"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303727993329"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303104786099"/>
			<UnexposedExpr type="int" spelling="state" id="2304243492910"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301588348572"/>
			<UnexposedExpr type="int" spelling="state" id="2300067873822"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303677310842"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303995873074"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301756668678"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303143138062"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303257113314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301833420794"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303612518674"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302524683938"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2302531903916"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300722281913"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303118067967"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300559477624"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2300359627031"/>
			<CallExpr type="unsigned int" spelling="read_4" id="2301144908723"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300980260609"/>
			<CallExpr type="void" spelling="stop" id="2301069008380"/>
			<CallExpr type="void" spelling="stop" id="2303249812073"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301797262517"/>
			<CallExpr type="void" spelling="stop" id="2304199610248"/>
			<CallExpr type="void" spelling="getpos" id="2303378563165"/>
			<StringLiteral type="char [22]" spelling="&quot;file-&gt;read_count == 0&quot;" id="2303849998324"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301231327058"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301446523507"/>
			<StringLiteral type="char [37]" spelling="&quot;(file-&gt;status_code &amp; TRUNCATED) == 0&quot;" id="2301968159126"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301939996348"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301662545655"/>
			<StringLiteral type="char [37]" spelling="&quot;(file-&gt;status_code &amp; TRUNCATED) != 0&quot;" id="2303562485082"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301819592210"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303085771196"/>
			<StringLiteral type="char [22]" spelling="&quot;not a PNG (too short)&quot;" id="2300741885894"/>
			<StringLiteral type="char [22]" spelling="&quot;not a PNG (signature)&quot;" id="2300812090605"/>
			<StringLiteral type="char [28]" spelling="&quot;file-&gt;state == STATE_CHUNKS&quot;" id="2301918338486"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302811872816"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303539119806"/>
			<StringLiteral type="char [17]" spelling="&quot;not a PNG (IHDR)&quot;" id="2301824214287"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301657974644"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302412306868"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300467717541"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302244367071"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300659899271"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302898257701"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301947158867"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2301071827250"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302554154170"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300421720920"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301745479533"/>
			<DeclRefExpr type="unsigned int (struct file *, png_uint_32 *)" spelling="read_4" id="2300706136522"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301731529585"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304264458252"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302345642595"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302855064990"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301645436929"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301725931362"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302498931402"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302997542183"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304023833249"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301871351800"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303325939417"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303346516352"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301731559508"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300865264334"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304284604650"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304043543785"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300117649642"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300027600703"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300873004713"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303418095197"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301717933261"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2303221666773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301572439653"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2304003010757"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301837606580"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300672483727"/>
			<MemberRefExpr type="int" spelling="status_code" id="2302986380073"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300236914352"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2301661532470"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300829146196"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2300643753497"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2300223057294"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301131789646"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300281652505"/>
			<MemberRefExpr type="int" spelling="state" id="2300038707780"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300786175297"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2301421901942"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303267288391"/>
			<MemberRefExpr type="int" spelling="state" id="2300438880609"/>
			<MemberRefExpr type="int" spelling="state" id="2301253004590"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300597112321"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302089491889"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="block" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="right" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Else write it (this is the initialization of write_count, prior to
          * this it contains CLEAR garbage.)" comment_scope_start="3224" comment_scope_end="3228">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303104786099"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300865264334"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303267288391"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="clear" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="garbage" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The first chunk must be a well formed IHDR (this could be relaxed to
          * use the checks in process_chunk, but that seems unnecessary.)" comment_scope_start="3234" comment_scope_end="3239">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301756668678"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303143138062"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303257113314"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301833420794"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303612518674"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302524683938"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="stop" id="2304199610248"/>
			<StringLiteral type="char [17]" spelling="&quot;not a PNG (IHDR)&quot;" id="2301824214287"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300027600703"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300873004713"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2303418095197"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301717933261"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2300597112321"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2302089491889"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="checks" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The position of the data must be stored too" comment_scope_start="3240" comment_scope_end="3242">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *)" spelling="getpos" id="2302531903916"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300722281913"/>
			<CallExpr type="void" spelling="getpos" id="2303378563165"/>
			<DeclRefExpr type="void (struct file *)" spelling="getpos" id="2303221666773"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301572439653"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Retrieve previous state (because the read callbacks are made pretty much
    * byte-by-byte in the sequential reader prior to 1.7)." comment_scope_start="3245" comment_scope_end="3257">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302089574338"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302418333545"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301545030503"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2303394245066"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301373845326"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2303033555531"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303906165804"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304164986127"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300026503109"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300900621635"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301106484103"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302313197779"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303678446234"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301835221124"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2300176039678"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2303764423030"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2300912084414"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="retrieve" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="previous" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="sequential" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is the signature case; for IDAT and other chunks these values will
       * be overwritten when read_chunk is called below." comment_scope_start="3258" comment_scope_end="3263">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304061122485"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302582763574"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303406597741"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300616203260"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301495505666"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302503912226"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301814761973"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2304149495476"/>
			<MemberRefExpr type="png_uint_32" spelling="length" id="2302948509840"/>
			<MemberRefExpr type="png_uint_32" spelling="type" id="2303775303636"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="values" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Complete the read of a chunk; as a side effect this also instantiates
       * a chunk control structure and sets the file length/type/data_pos fields
       * for the *NEXT* chunk header.
       *
       * NOTE: at an IDAT any following IDAT chunks will also be read and the
       * next_ fields will refer to the chunk after the last IDAT.
       *
       * NOTE: read_chunk only returns when it has read a chunk that must now be
       * written." comment_scope_start="3269" comment_scope_end="3293">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2303237166096"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302063446055"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303230080212"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2300599773429"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301690056656"/>
			<UnexposedExpr type="png_uint_32" spelling="read_count" id="2304137160391"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303233674869"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301362106167"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302232610680"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301873961653"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300986048923"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301450688838"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303332485773"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="read_chunk" id="2301220407184"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301858764210"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302056919170"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300184818649"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302021439995"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301518026930"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302910259847"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2304073219113"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302579811266"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302764857893"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300970413389"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303084961612"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301625591043"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301013442081"/>
			<CallExpr type="void" spelling="read_chunk" id="2303772878113"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303150695533"/>
			<StringLiteral type="char [22]" spelling="&quot;file-&gt;read_count == 8&quot;" id="2304136809195"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2304209252988"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301784197079"/>
			<StringLiteral type="char [19]" spelling="&quot;file-&gt;idat == NULL&quot;" id="2302563163547"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303815018751"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302446434853"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2303377003892"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300809356771"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302835087044"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303280980853"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301132656524"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302322729716"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303896407266"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300604167745"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300199842585"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301961290325"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301944143926"/>
			<DeclRefExpr type="void (struct file *)" spelling="read_chunk" id="2304023533323"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303244072286"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300298645425"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300525169248"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300851404821"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302026578643"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300513057567"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303332514137"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301185691539"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301451471863"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303532274620"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303258553572"/>
			<MemberRefExpr type="int" spelling="state" id="2300960966558"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303520508121"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2301010724631"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2300657372495"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303430278707"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301547089107"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304040738806"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302742241990"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302037645715"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="complete" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="refer" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Do the initialization that was not done before." comment_scope_start="3287" comment_scope_end="3290">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="chunk_length" id="2304073219113"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302579811266"/>
			<UnexposedExpr type="png_uint_32" spelling="chunk_type" id="2302764857893"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300970413389"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2303332514137"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301185691539"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301451471863"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303532274620"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304040738806"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_type" id="2302742241990"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="do" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="And start writing the new chunk." comment_scope_start="3291" comment_scope_end="3293">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303084961612"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303258553572"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302037645715"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The chunk_ fields describe a chunk that must be written, or hold the
       * signature.  Write the header first.  In the signature case this
       * rewrites the signature." comment_scope_start="3295" comment_scope_end="3509">
		<SYMBOLS>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2301549193713"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300960200442"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301599739475"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301934916838"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302464792551"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2303701952545"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301169523772"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2301992059143"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2300641714366"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303217550985"/>
			<UnexposedExpr type="int" spelling="state" id="2302044942452"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303547680071"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301975413606"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302315229661"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300408613205"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302971659603"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300341429212"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303450702874"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300455022736"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_callback" id="2302046815692"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301335790497"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302609770253"/>
			<UnexposedExpr type="size_t" spelling="count" id="2300518925162"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303403002053"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303167722128"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300910429963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301091202296"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2301832861732"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303291349530"/>
			<UnexposedExpr type="int" spelling="state" id="2301124631343"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301274675794"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304031085048"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2300494001631"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302378421452"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303112644099"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302958454231"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303479650053"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2302714089129"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302774867346"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300258130459"/>
			<UnexposedExpr type="int" spelling="state" id="2301613943821"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303945858930"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302757229304"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303292500267"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301123128281"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302212981831"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301367871543"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303290974337"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300278910350"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303653058161"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302685420465"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300570706176"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301293464969"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300958763763"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300293556991"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302288122230"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303315045372"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300499304647"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300772067178"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300505337060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303818478946"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302063830908"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300632423498"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300496455385"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302562089838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302783752108"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300185399108"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300529774727"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302336514970"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300235712659"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302970070322"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301049040717"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300744866521"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301579728320"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303133282310"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301691118858"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303058670403"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301592923751"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300508433998"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304242442589"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302527543688"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301568583243"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304226770125"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304082804143"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303796201819"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2302598168296"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301276400304"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2302056565092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301364573836"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303131985489"/>
			<UnexposedExpr type="png_uint_32" spelling="reread_byte" id="2303104326103"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300127416144"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301261801026"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2300480060201"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301684374285"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302092192992"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300948957474"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303871135250"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302420140186"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302645079766"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memmove" id="2301794675063"/>
			<UnexposedExpr type="void *" spelling="rewrite_buffer" id="2303484234127"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2300790708666"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300863714720"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302811363779"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300383280538"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300693136498"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302562976517"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302799136001"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300433585312"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302187965907"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="crc_one_byte" id="2300823658061"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303674080832"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302938063017"/>
			<UnexposedExpr type="int" spelling="b" id="2301254661112"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2302631704515"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2301996081037"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302865955714"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300251683920"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302262622129"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303880113963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300681769064"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300604749921"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302853269422"/>
			<UnexposedExpr type="int" spelling="verbose" id="2301502611381"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2300061164465"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301063274269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301470940713"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303712900354"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301474821315"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2304211326050"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304236065640"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301948406884"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301105732722"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303198534484"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302934322182"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303881301006"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301950580096"/>
			<UnexposedExpr type="int" spelling="state" id="2302605900447"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302229170989"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300325134658"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302645602351"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300752547681"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300861393193"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303071709577"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300471315364"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303806018021"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302056390204"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302002663136"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302580167821"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302746415510"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300060274917"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301304207542"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300869799938"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300451691800"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878506549"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300604966002"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303414119368"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302660818250"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300845145606"/>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301447447415"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300784209569"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303421099538"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302037313218"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303181551509"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302679004315"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301289726891"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301175690219"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2301020708061"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2304156693534"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2301281975194"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303848686624"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302549654834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303867000929"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303779126180"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303635785348"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303780620875"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301963837404"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302295623398"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301938011686"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302584268159"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301754588477"/>
			<UnexposedExpr type="void (*)(struct IDAT **)" spelling="IDAT_end" id="2302893781399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303539653158"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300305626840"/>
			<CallExpr type="void" spelling="read_callback" id="2300490387155"/>
			<CallExpr type="void" spelling="__assert_fail" id="2301583498289"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2304002541013"/>
			<CallExpr type="void" spelling="setpos" id="2301190034947"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303377935175"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302339462285"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300593309654"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300295752348"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300021172849"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<CallExpr type="void" spelling="skip_12" id="2304130121613"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300669660726"/>
			<CallExpr type="void *" spelling="memmove" id="2303363675002"/>
			<CallExpr type="png_uint_32" spelling="crc_one_byte" id="2301430298149"/>
			<CallExpr type="int" spelling="fputs" id="2302618772665"/>
			<CallExpr type="void" spelling="type_name" id="2304224474138"/>
			<CallExpr type="int" spelling="fprintf" id="2303891234900"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2304149076353"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303441031220"/>
			<CallExpr type="void" spelling="stop" id="2303951298749"/>
			<CallExpr type="void" spelling="file_setpos" id="2302216485527"/>
			<CallExpr type="void" spelling="chunk_end" id="2302735890177"/>
			<CallExpr type="void" spelling="IDAT_end" id="2300107281624"/>
			<StringLiteral type="char [31]" spelling="&quot;length == sig1 &amp;&amp; type == sig2&quot;" id="2302205583748"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302317716998"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303226111031"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2302121408705"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301003296482"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302192371406"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2300535801881"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302130114826"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301242664526"/>
			<StringLiteral type="char [13]" spelling="&quot;idat != NULL&quot;" id="2301836001431"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301345320808"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301271959596"/>
			<StringLiteral type="char [38]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length&quot;" id="2301932977604"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300576039167"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303534734173"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301109830944"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301820762083"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302321704973"/>
			<StringLiteral type="char [31]" spelling="&quot;idat-&gt;idat_count == cur-&gt;count&quot;" id="2302948647862"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300600042701"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2300729558569"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2304113805051"/>
			<StringLiteral type="char [13]" spelling="&quot; %lu 0x%.8x\n&quot;" id="2303746963574"/>
			<StringLiteral type="char [17]" spelling="&quot;type == png_IDAT&quot;" id="2303174877286"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303029646404"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303828846961"/>
			<StringLiteral type="char [16]" spelling="&quot;pending rewrite&quot;" id="2303123883157"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302793807374"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2302839781917"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303662788966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2304259069234"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302993080362"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303669255954"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304027433264"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303644002929"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300916417553"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301550772966"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300705482001"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301667217541"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303230082991"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303513879811"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300311987455"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300333682962"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302154931265"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2304007380056"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301105541043"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300049079941"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300681204025"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303198624958"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304076456012"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301995318487"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302257457268"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301970090100"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300264004263"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2302433287554"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303413195901"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2302084191769"/>
			<DeclRefExpr type="size_t" spelling="count" id="2300142175358"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302371934524"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303764012846"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301857265482"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302771328117"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301938272792"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300650159862"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301455398362"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302251833060"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2300273703576"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301415412781"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304147470402"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304028334911"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303880770767"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303662551372"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302037819217"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303647866253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302786077570"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301854022648"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303532568276"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302351287267"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302023064485"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300203612345"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302499155584"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300993063024"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302075415158"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300658613500"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301059758631"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301492069441"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303150121660"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303621196650"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303746266739"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300431650356"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300729514390"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301142077469"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2301767201333"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301669326511"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303614142501"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302631690522"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303491987644"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302215346649"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304000269110"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302676147446"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300172129672"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302557469746"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2303680551574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303933357311"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303585661596"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303254881458"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303244951706"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300792968447"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301663909257"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301613673842"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301953856966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303272877162"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301875005951"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memmove" id="2302182863002"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301055542571"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302274922618"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302128018800"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301269674073"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304181828583"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302924146107"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2302525470418"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301928924017"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301582879093"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302300346936"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303163693219"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302861558339"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303560341051"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302486526325"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301072642656"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300889582542"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300168911556"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302672305487"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304279419406"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301282633884"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302476496130"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302739127299"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302737193344"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302307828255"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303098846129"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302967062368"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304093053607"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303086315285"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301940672031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300114766055"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300678973751"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301054376189"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303164101929"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301419994447"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301163576428"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300757911420"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2303548036360"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301354960620"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300596838888"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302385522180"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301991166071"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300276652608"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301197310229"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300417073296"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304153857160"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304042239372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301020043987"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300472314767"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302648386653"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302736024778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300884699712"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301133812672"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2301085471377"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302691308483"/>
			<DeclRefExpr type="void (struct IDAT **)" spelling="IDAT_end" id="2302808978372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301984206222"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302025653021"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2303026214279"/>
			<MemberRefExpr type="int" spelling="state" id="2303651024671"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303539196800"/>
			<MemberRefExpr type="int" spelling="state" id="2303762057971"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302769284552"/>
			<MemberRefExpr type="int" spelling="state" id="2303115530826"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2300127874189"/>
			<MemberRefExpr type="int" spelling="state" id="2301205841303"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301938671315"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301881518048"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300601786085"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303928040703"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303519143253"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302334602158"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304022667682"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300777057175"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303926644513"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301254558714"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301831578166"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304135990923"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301977773659"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304235153516"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301166282907"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302907134943"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2300148321944"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302994158213"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301851419039"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2304113324513"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303148668941"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2301770979759"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300184746978"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303599588232"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301129398430"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2300370790276"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2302751647970"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301319410686"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2303539793967"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300767676845"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302023818586"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301291452737"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2303707062593"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301156796991"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300588452498"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300584579181"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2300356965987"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301901556705"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300317992563"/>
			<MemberRefExpr type="int" spelling="state" id="2303578491203"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302867987481"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303178611823"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303450059688"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301553646692"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302932333676"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301599174816"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302508635734"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302945848785"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301294639684"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300847743681"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301556169578"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302309671129"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303122372775"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304020249926"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301634847600"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302153672704"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2304042218069"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300982353050"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301933209724"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303924117961"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2303140467834"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304271324657"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301727720596"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301321243167"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="case" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The header has been written.  If this is really the signature
             * that's all that is required and we can go to normal chunk
             * processing." comment_scope_start="3312" comment_scope_end="3327">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2302044942452"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303547680071"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301975413606"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302315229661"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300408613205"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302971659603"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300341429212"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303450702874"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300455022736"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_callback" id="2302046815692"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301335790497"/>
			<UnexposedExpr type="png_bytep" spelling="buffer" id="2302609770253"/>
			<UnexposedExpr type="size_t" spelling="count" id="2300518925162"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300305626840"/>
			<CallExpr type="void" spelling="read_callback" id="2300490387155"/>
			<StringLiteral type="char [31]" spelling="&quot;length == sig1 &amp;&amp; type == sig2&quot;" id="2302205583748"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302317716998"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303226111031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300049079941"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300681204025"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303198624958"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304076456012"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301995318487"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302257457268"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301970090100"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300264004263"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2302433287554"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303413195901"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2302084191769"/>
			<DeclRefExpr type="size_t" spelling="count" id="2300142175358"/>
			<MemberRefExpr type="int" spelling="state" id="2303651024671"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303539196800"/>
			<MemberRefExpr type="int" spelling="state" id="2303762057971"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processing" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The signature has been written, the tail call to read_callback
                * below (it's just a goto to the start with a decent compiler)
                * will read the IHDR header ahead and validate it." comment_scope_start="3318" comment_scope_end="3322">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2301975413606"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302315229661"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300408613205"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302971659603"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300341429212"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300305626840"/>
			<StringLiteral type="char [31]" spelling="&quot;length == sig1 &amp;&amp; type == sig2&quot;" id="2302205583748"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302317716998"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303226111031"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2300681204025"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2303198624958"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2304076456012"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2301995318487"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302257457268"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="tail" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="goto" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="validate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="signature"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Forces a header read" comment_scope_start="3323" comment_scope_end="3323">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303450702874"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301970090100"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303539196800"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="IHDR: checked above" comment_scope_start="3324" comment_scope_end="3324">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2300455022736"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300264004263"/>
			<MemberRefExpr type="int" spelling="state" id="2303762057971"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="checked" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Set up for write, notice that repositioning the input stream
                * is only necessary if something is to be read from it.  Also
                * notice that for the IDAT stream this must only happen once -
                * on the first IDAT - to get back to the start of the list and
                * this is done inside process_IDAT:" comment_scope_start="3333" comment_scope_end="3342">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301091202296"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32)" spelling="crc_init_4" id="2301832861732"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303291349530"/>
			<UnexposedExpr type="int" spelling="state" id="2301124631343"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301274675794"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2304031085048"/>
			<UnexposedExpr type="void (*)(struct chunk *)" spelling="setpos" id="2300494001631"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302378421452"/>
			<CallExpr type="png_uint_32" spelling="crc_init_4" id="2304002541013"/>
			<CallExpr type="void" spelling="setpos" id="2301190034947"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302771328117"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32)" spelling="crc_init_4" id="2301938272792"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300650159862"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301455398362"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302251833060"/>
			<DeclRefExpr type="void (struct chunk *)" spelling="setpos" id="2300273703576"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301415412781"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302769284552"/>
			<MemberRefExpr type="int" spelling="state" id="2303115530826"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="set" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="first" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="get" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="back" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="start" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="FALLTHROUGH" comment_scope_start="3343" comment_scope_end="3347">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303112644099"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302958454231"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303479650053"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303377935175"/>
			<StringLiteral type="char [14]" spelling="&quot;chunk != NULL&quot;" id="2300535801881"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2302130114826"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301242664526"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304147470402"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304028334911"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2303880770767"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: the arithmetic below overflows and gives a large positive
             * png_uint_32 value until the whole chunk data has been written." comment_scope_start="3348" comment_scope_end="3507">
		<SYMBOLS>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<UnexposedExpr type="png_uint_32" spelling="write_count" id="2302714089129"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302774867346"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2300258130459"/>
			<UnexposedExpr type="int" spelling="state" id="2301613943821"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303945858930"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302757229304"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303292500267"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301123128281"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302212981831"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301367871543"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303290974337"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300278910350"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303653058161"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302685420465"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300570706176"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301293464969"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300958763763"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300293556991"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302288122230"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303315045372"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300499304647"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300772067178"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300505337060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303818478946"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302063830908"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300632423498"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300496455385"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302562089838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302783752108"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300185399108"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300529774727"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302336514970"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300235712659"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302970070322"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301049040717"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300744866521"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301579728320"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303133282310"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301691118858"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303058670403"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301592923751"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300508433998"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304242442589"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302527543688"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301568583243"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304226770125"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304082804143"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303796201819"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2302598168296"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301276400304"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2302056565092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301364573836"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303131985489"/>
			<UnexposedExpr type="png_uint_32" spelling="reread_byte" id="2303104326103"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300127416144"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301261801026"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2300480060201"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301684374285"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302092192992"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300948957474"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303871135250"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302420140186"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302645079766"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memmove" id="2301794675063"/>
			<UnexposedExpr type="void *" spelling="rewrite_buffer" id="2303484234127"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2300790708666"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300863714720"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302811363779"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300383280538"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300693136498"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302562976517"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302799136001"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300433585312"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302187965907"/>
			<UnexposedExpr type="png_uint_32 (*)(png_uint_32, int)" spelling="crc_one_byte" id="2300823658061"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303674080832"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302938063017"/>
			<UnexposedExpr type="int" spelling="b" id="2301254661112"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2302631704515"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2301996081037"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302865955714"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300251683920"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302262622129"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303880113963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300681769064"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300604749921"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302853269422"/>
			<UnexposedExpr type="int" spelling="verbose" id="2301502611381"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2300061164465"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301063274269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301470940713"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303712900354"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301474821315"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2304211326050"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304236065640"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301948406884"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301105732722"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303198534484"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302934322182"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303881301006"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301950580096"/>
			<UnexposedExpr type="int" spelling="state" id="2302605900447"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302229170989"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300325134658"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302645602351"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300752547681"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300861393193"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303071709577"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300471315364"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303806018021"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302056390204"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302002663136"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302580167821"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302746415510"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300060274917"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301304207542"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300869799938"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300451691800"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878506549"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300604966002"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303414119368"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302660818250"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300845145606"/>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301447447415"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300784209569"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303421099538"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2302037313218"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2303181551509"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302679004315"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301289726891"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301175690219"/>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2301020708061"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2304156693534"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2301281975194"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303848686624"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302549654834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303867000929"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303779126180"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303635785348"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303780620875"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301963837404"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302295623398"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301938011686"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302584268159"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301754588477"/>
			<UnexposedExpr type="void (*)(struct IDAT **)" spelling="IDAT_end" id="2302893781399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303539653158"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302339462285"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300593309654"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300295752348"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300021172849"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<CallExpr type="void" spelling="skip_12" id="2304130121613"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300669660726"/>
			<CallExpr type="void *" spelling="memmove" id="2303363675002"/>
			<CallExpr type="png_uint_32" spelling="crc_one_byte" id="2301430298149"/>
			<CallExpr type="int" spelling="fputs" id="2302618772665"/>
			<CallExpr type="void" spelling="type_name" id="2304224474138"/>
			<CallExpr type="int" spelling="fprintf" id="2303891234900"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2304149076353"/>
			<CallExpr type="void" spelling="__assert_fail" id="2303441031220"/>
			<CallExpr type="void" spelling="stop" id="2303951298749"/>
			<CallExpr type="void" spelling="file_setpos" id="2302216485527"/>
			<CallExpr type="void" spelling="chunk_end" id="2302735890177"/>
			<CallExpr type="void" spelling="IDAT_end" id="2300107281624"/>
			<StringLiteral type="char [13]" spelling="&quot;idat != NULL&quot;" id="2301836001431"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301345320808"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301271959596"/>
			<StringLiteral type="char [38]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length&quot;" id="2301932977604"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300576039167"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303534734173"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301109830944"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301820762083"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302321704973"/>
			<StringLiteral type="char [31]" spelling="&quot;idat-&gt;idat_count == cur-&gt;count&quot;" id="2302948647862"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300600042701"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2300729558569"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2304113805051"/>
			<StringLiteral type="char [13]" spelling="&quot; %lu 0x%.8x\n&quot;" id="2303746963574"/>
			<StringLiteral type="char [17]" spelling="&quot;type == png_IDAT&quot;" id="2303174877286"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2303029646404"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303828846961"/>
			<StringLiteral type="char [16]" spelling="&quot;pending rewrite&quot;" id="2303123883157"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302793807374"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2302839781917"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303662551372"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302037819217"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303647866253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302786077570"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301854022648"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303532568276"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302351287267"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302023064485"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300203612345"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302499155584"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300993063024"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302075415158"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300658613500"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301059758631"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301492069441"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303150121660"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303621196650"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303746266739"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300431650356"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300729514390"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301142077469"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2301767201333"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301669326511"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303614142501"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302631690522"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303491987644"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302215346649"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304000269110"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302676147446"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300172129672"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302557469746"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2303680551574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303933357311"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303585661596"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303254881458"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303244951706"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300792968447"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301663909257"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301613673842"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301953856966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303272877162"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301875005951"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memmove" id="2302182863002"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301055542571"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302274922618"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302128018800"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301269674073"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304181828583"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302924146107"/>
			<DeclRefExpr type="png_uint_32 (png_uint_32, int)" spelling="crc_one_byte" id="2302525470418"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301928924017"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301582879093"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302300346936"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303163693219"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302861558339"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303560341051"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302486526325"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301072642656"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300889582542"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300168911556"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302672305487"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304279419406"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301282633884"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302476496130"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302739127299"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302737193344"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302307828255"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303098846129"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302967062368"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304093053607"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303086315285"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301940672031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300114766055"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300678973751"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301054376189"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303164101929"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301419994447"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301163576428"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300757911420"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2303548036360"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301354960620"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2300596838888"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302385522180"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301991166071"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300276652608"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301197310229"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300417073296"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304153857160"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304042239372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301020043987"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300472314767"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302648386653"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302736024778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300884699712"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301133812672"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2301085471377"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302691308483"/>
			<DeclRefExpr type="void (struct IDAT **)" spelling="IDAT_end" id="2302808978372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301984206222"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302025653021"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2300127874189"/>
			<MemberRefExpr type="int" spelling="state" id="2301205841303"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301938671315"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301881518048"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300601786085"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303928040703"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303519143253"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302334602158"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304022667682"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300777057175"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303926644513"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301254558714"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301831578166"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304135990923"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301977773659"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304235153516"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301166282907"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302907134943"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2300148321944"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302994158213"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301851419039"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2304113324513"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303148668941"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2301770979759"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300184746978"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303599588232"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301129398430"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2300370790276"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2302751647970"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301319410686"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2303539793967"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300767676845"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2302023818586"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301291452737"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2303707062593"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301156796991"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300588452498"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300584579181"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2300356965987"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301901556705"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300317992563"/>
			<MemberRefExpr type="int" spelling="state" id="2303578491203"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302867987481"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303178611823"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303450059688"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301553646692"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302932333676"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301599174816"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302508635734"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302945848785"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301294639684"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300847743681"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301556169578"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302309671129"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303122372775"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304020249926"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301634847600"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302153672704"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2304042218069"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300982353050"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301933209724"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303924117961"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2303140467834"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304271324657"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301727720596"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301321243167"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="positive" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="value" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Write the chunk data, normally this just comes from
                * the file.  The only exception is for that part of a
                * chunk which is zlib data and which must be rewritten,
                * and IDAT chunks which can be completely
                * reconstructed." comment_scope_start="3353" comment_scope_end="3365">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2301613943821"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303945858930"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302757229304"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303292500267"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301123128281"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302212981831"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301367871543"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<CallExpr type="void" spelling="__assert_fail" id="2302339462285"/>
			<StringLiteral type="char [13]" spelling="&quot;idat != NULL&quot;" id="2301836001431"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301345320808"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2301271959596"/>
			<VarDecl type="struct IDAT *" spelling="idat" id="2302793807374"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303647866253"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302786077570"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301854022648"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303532568276"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302351287267"/>
			<MemberRefExpr type="int" spelling="state" id="2301205841303"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301938671315"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="zlib"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read an IDAT byte from the input stream of IDAT chunks.
                      * Because the IDAT stream can be re-chunked this stream is
                      * held in the struct IDAT members.  The chunk members, in
                      * particular chunk_length (and therefore the length local)
                      * refer to the output chunk." comment_scope_start="3366" comment_scope_end="3407">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2303290974337"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300278910350"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2303653058161"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302685420465"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300570706176"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301293464969"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300958763763"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300293556991"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302288122230"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303315045372"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300499304647"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300772067178"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300505337060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303818478946"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302063830908"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300632423498"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300496455385"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302562089838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302783752108"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300185399108"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300529774727"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302336514970"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300235712659"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302970070322"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301049040717"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300744866521"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301579728320"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303133282310"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301691118858"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303058670403"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301592923751"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300508433998"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304242442589"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302527543688"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301568583243"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304226770125"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304082804143"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303796201819"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2302598168296"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301276400304"/>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2302056565092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301364573836"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300593309654"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300295752348"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300021172849"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<CallExpr type="void" spelling="skip_12" id="2304130121613"/>
			<StringLiteral type="char [38]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length&quot;" id="2301932977604"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300576039167"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303534734173"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301109830944"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301820762083"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302321704973"/>
			<StringLiteral type="char [31]" spelling="&quot;idat-&gt;idat_count == cur-&gt;count&quot;" id="2302948647862"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300600042701"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2300729558569"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2302839781917"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302023064485"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300203612345"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302499155584"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300993063024"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302075415158"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300658613500"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301059758631"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301492069441"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303150121660"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303621196650"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303746266739"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300431650356"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300729514390"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301142077469"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2301767201333"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301669326511"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303614142501"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302631690522"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303491987644"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302215346649"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2304000269110"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302676147446"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300172129672"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302557469746"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2303680551574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303933357311"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2301881518048"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300601786085"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303928040703"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303519143253"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302334602158"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304022667682"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300777057175"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303926644513"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301254558714"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301831578166"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304135990923"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301977773659"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304235153516"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301166282907"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302907134943"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2300148321944"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302994158213"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301851419039"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2304113324513"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="struct" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="refer" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Advance one chunk" comment_scope_start="3374" comment_scope_end="3379">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300570706176"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301293464969"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300958763763"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300293556991"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2302288122230"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303315045372"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300499304647"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300772067178"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300505337060"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303818478946"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302063830908"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300632423498"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300496455385"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302562089838"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2302783752108"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300185399108"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300529774727"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302336514970"/>
			<TypeRef type="struct IDAT_list" spelling="struct IDAT_list" id="2300474320567"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300593309654"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300295752348"/>
			<StringLiteral type="char [38]" spelling="&quot;idat-&gt;idat_index == idat-&gt;idat_length&quot;" id="2301932977604"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300576039167"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2303534734173"/>
			<StringLiteral type="char [30]" spelling="&quot;cur != NULL &amp;&amp; cur-&gt;count &gt; 0&quot;" id="2301109830944"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2301820762083"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2302321704973"/>
			<VarDecl type="struct IDAT_list *" spelling="cur" id="2302839781917"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302499155584"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300993063024"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302075415158"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300658613500"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301059758631"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2301492069441"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303150121660"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303621196650"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303746266739"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300431650356"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2300729514390"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2303928040703"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303519143253"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302334602158"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2304022667682"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2300777057175"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303926644513"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2301254558714"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: IDAT_list::count here, not IDAT_list::length" comment_scope_start="3380" comment_scope_end="3397">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300235712659"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302970070322"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301049040717"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2300744866521"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301579728320"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2303133282310"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2301691118858"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303058670403"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301592923751"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300508433998"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304242442589"/>
			<UnexposedExpr type="void (*)(const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302527543688"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<CallExpr type="void" spelling="__assert_fail" id="2300021172849"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<StringLiteral type="char [31]" spelling="&quot;idat-&gt;idat_count == cur-&gt;count&quot;" id="2302948647862"/>
			<StringLiteral type="char [72]" spelling="&quot;/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c&quot;" id="2300600042701"/>
			<StringLiteral type="const char [51]" spelling="&quot;void read_callback(png_structp, png_bytep, size_t)&quot;" id="2300729558569"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301142077469"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2301767201333"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301669326511"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303614142501"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302631690522"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2303491987644"/>
			<DeclRefExpr type="void (const char *, const char *, unsigned int, const char *) __attribute__((noreturn))" spelling="__assert_fail" id="2302215346649"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301831578166"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304135990923"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301977773659"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2304235153516"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2301166282907"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302907134943"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="count" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Move on to the next IDAT_list:" comment_scope_start="3385" comment_scope_end="3387">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="next" id="2300436921669"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300773918345"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300553111261"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2304074169304"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="next" id="2302047077523"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is an internal error - read beyond the end of
                            * the pre-calculated stream." comment_scope_start="3388" comment_scope_end="3397">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300820690650"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2300755585085"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2304041136098"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2300465723880"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300704210852"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301848888423"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301427075895"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2300070620036"/>
			<CallExpr type="void" spelling="stop" id="2303988046808"/>
			<StringLiteral type="char [24]" spelling="&quot;read beyond end of IDAT&quot;" id="2304208236503"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300865165871"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300259727151"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2301951579636"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303854798932"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2301390329710"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2300799046136"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2302195968304"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2303754364429"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2303537694201"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302867716458"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="internal" type=" 'Properties of Datastructure / Function / Blocks"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Zero length IDAT chunks are permitted, so the length
                         * here may be 0." comment_scope_start="3400" comment_scope_end="3404">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2304226770125"/>
			<UnexposedExpr type="png_uint_32 *" spelling="lengths" id="2304082804143"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="cur" id="2303796201819"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2302598168296"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2301276400304"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302676147446"/>
			<DeclRefExpr type="struct IDAT_list *" spelling="cur" id="2300172129672"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2302557469746"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2302994158213"/>
			<MemberRefExpr type="png_uint_32 [16]" spelling="lengths" id="2301851419039"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2304113324513"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="And skip 12 bytes to the next chunk data" comment_scope_start="3405" comment_scope_end="3407">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *)" spelling="skip_12" id="2302056565092"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301364573836"/>
			<CallExpr type="void" spelling="skip_12" id="2304130121613"/>
			<DeclRefExpr type="void (struct file *)" spelling="skip_12" id="2303680551574"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303933357311"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="bytes" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="data" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The index is always that of the next byte, the rest of
                      * the information is always the current IDAT chunk and the
                      * current list." comment_scope_start="3409" comment_scope_end="3414">
		<SYMBOLS>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303131985489"/>
			<DeclRefExpr type="struct IDAT *" spelling="idat" id="2303585661596"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2303148668941"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="index" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="list" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read the byte from the stream." comment_scope_start="3416" comment_scope_end="3418">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="reread_byte" id="2303104326103"/>
			<UnexposedExpr type="png_byte (*)(struct file *)" spelling="reread_byte" id="2300127416144"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301261801026"/>
			<CallExpr type="png_byte" spelling="reread_byte" id="2300669660726"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303254881458"/>
			<DeclRefExpr type="png_byte (struct file *)" spelling="reread_byte" id="2303244951706"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300792968447"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="If the byte must be rewritten handle that here" comment_scope_start="3419" comment_scope_end="3434">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2300480060201"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301684374285"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2302092192992"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300948957474"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303871135250"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302420140186"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302645079766"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memmove" id="2301794675063"/>
			<UnexposedExpr type="void *" spelling="rewrite_buffer" id="2303484234127"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2300790708666"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300863714720"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302811363779"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300383280538"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300693136498"/>
			<UnexposedExpr type="png_byte *" spelling="rewrite_buffer" id="2302562976517"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302799136001"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300433585312"/>
			<CallExpr type="void *" spelling="memmove" id="2303363675002"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301663909257"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301613673842"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301953856966"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303272877162"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301875005951"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memmove" id="2302182863002"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301055542571"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302274922618"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2302128018800"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301269674073"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304181828583"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2301770979759"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2300184746978"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2303599588232"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301129398430"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2300370790276"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2302751647970"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2301319410686"/>
			<MemberRefExpr type="png_byte [2]" spelling="rewrite_buffer" id="2303539793967"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300767676845"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="handle" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The CRC is written at:
                *
                *    chunk_write == chunk_length+8..chunk_length+11
                *
                * so 8 to 11.  The CRC is not (yet) conditioned." comment_scope_start="3439" comment_scope_end="3448">
		<SYMBOLS>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<LabelRef type="" spelling="write_crc" id="2301980065935"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2301996081037"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302865955714"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300251683920"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302262622129"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303880113963"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300681769064"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302300346936"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303163693219"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302861558339"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2303560341051"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302486526325"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2301072642656"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2303707062593"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2301156796991"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300588452498"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="crc"/>
			<PROBLEM_DOMAIN word="crc"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This must happen before the chunk_end below:" comment_scope_start="3449" comment_scope_end="3459">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2300604749921"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2302853269422"/>
			<UnexposedExpr type="int" spelling="verbose" id="2301502611381"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2300061164465"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2301063274269"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301470940713"/>
			<UnexposedExpr type="int (*)(const char *restrict, FILE *restrict)" spelling="fputs" id="2303712900354"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301474821315"/>
			<UnexposedExpr type="void (*)(png_uint_32, FILE *)" spelling="type_name" id="2304211326050"/>
			<UnexposedExpr type="png_uint_32" spelling="type" id="2304236065640"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301948406884"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301105732722"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2303198534484"/>
			<UnexposedExpr type="png_uint_32" spelling="length" id="2302934322182"/>
			<UnexposedExpr type="png_uint_32" spelling="write_crc" id="2303881301006"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2301950580096"/>
			<CallExpr type="int" spelling="fputs" id="2302618772665"/>
			<CallExpr type="void" spelling="type_name" id="2304224474138"/>
			<CallExpr type="int" spelling="fprintf" id="2303891234900"/>
			<StringLiteral type="char [4]" spelling="&quot;   &quot;" id="2304113805051"/>
			<StringLiteral type="char [13]" spelling="&quot; %lu 0x%.8x\n&quot;" id="2303746963574"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2300889582542"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300168911556"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302672305487"/>
			<DeclRefExpr type="int (const char *restrict, FILE *restrict)" spelling="fputs" id="2304279419406"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2301282633884"/>
			<DeclRefExpr type="void (png_uint_32, FILE *)" spelling="type_name" id="2302476496130"/>
			<DeclRefExpr type="png_uint_32" spelling="type" id="2302739127299"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2302737193344"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2302307828255"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303098846129"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2302967062368"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304093053607"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300584579181"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2300356965987"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301901556705"/>
			<MemberRefExpr type="png_uint_32" spelling="write_crc" id="2300317992563"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="The IDAT stream is written without a call to read_chunk
                   * until the end is reached.  rechunk_length() calculates the
                   * length of the output chunks.  Control gets to this point at
                   * the end of an *output* chunk - the length calculated by
                   * rechunk_length.  If this corresponds to the end of the
                   * input stream stop writing IDAT chunks, otherwise continue." comment_scope_start="3460" comment_scope_end="3471">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="state" id="2302605900447"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302229170989"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_index" id="2300325134658"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302645602351"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300752547681"/>
			<UnexposedExpr type="png_uint_32" spelling="idat_length" id="2300861393193"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303071709577"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2300471315364"/>
			<UnexposedExpr type="unsigned int" spelling="idat_count" id="2303806018021"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302056390204"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302002663136"/>
			<UnexposedExpr type="unsigned int" spelling="count" id="2302580167821"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2302746415510"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300060274917"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301304207542"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_cur" id="2300869799938"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300451691800"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301878506549"/>
			<UnexposedExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2300604966002"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2303414119368"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302660818250"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303086315285"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301940672031"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300114766055"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300678973751"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301054376189"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303164101929"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301419994447"/>
			<MemberRefExpr type="int" spelling="state" id="2303578491203"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_index" id="2302867987481"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303178611823"/>
			<MemberRefExpr type="png_uint_32" spelling="idat_length" id="2303450059688"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301553646692"/>
			<MemberRefExpr type="unsigned int" spelling="idat_count" id="2302932333676"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301599174816"/>
			<MemberRefExpr type="unsigned int" spelling="count" id="2302508635734"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2302945848785"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301294639684"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_cur" id="2300847743681"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301556169578"/>
			<MemberRefExpr type="struct IDAT_list *" spelling="idat_list_tail" id="2302309671129"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2303122372775"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="gets" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="output" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="continue" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="stream"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Write another IDAT chunk.  Call rechunk_length to
                      * calculate the length required." comment_scope_start="3472" comment_scope_end="3475">
		<SYMBOLS>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2300845145606"/>
			<DeclRefExpr type="png_uint_32" spelling="length" id="2301163576428"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300757911420"/>
			<MemberRefExpr type="png_uint_32" spelling="chunk_length" id="2304020249926"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="length" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="end" comment_scope_start="3476" comment_scope_end="3476">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32 (*)(struct IDAT *, int)" spelling="rechunk_length" id="2301447447415"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2300784209569"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303421099538"/>
			<CallExpr type="png_uint_32" spelling="rechunk_length" id="2304149076353"/>
			<DeclRefExpr type="png_uint_32 (struct IDAT *, int)" spelling="rechunk_length" id="2303548036360"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301354960620"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301634847600"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="for the new chunk" comment_scope_start="3478" comment_scope_end="3478">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2301289726891"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300276652608"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2302153672704"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="new" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="fake out the increment below" comment_scope_start="3479" comment_scope_end="3479">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2301175690219"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301197310229"/>
			<MemberRefExpr type="png_uint_32" spelling="write_count" id="2304042218069"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="increment" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Entered at the end of a non-IDAT chunk and at the end of
                      * the IDAT stream.  The rewrite should have been cleared." comment_scope_start="3484" comment_scope_end="3489">
		<SYMBOLS>
			<UnexposedExpr type="int" spelling="rewrite_length" id="2301020708061"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2304156693534"/>
			<UnexposedExpr type="png_uint_32" spelling="rewrite_offset" id="2301281975194"/>
			<UnexposedExpr type="struct chunk *" spelling="chunk" id="2303848686624"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2302549654834"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303867000929"/>
			<CallExpr type="void" spelling="stop" id="2303951298749"/>
			<StringLiteral type="char [16]" spelling="&quot;pending rewrite&quot;" id="2303123883157"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2300417073296"/>
			<DeclRefExpr type="struct chunk *" spelling="chunk" id="2304153857160"/>
			<DeclRefExpr type="void (struct file *, int, const char *) __attribute__((noreturn))" spelling="stop" id="2304042239372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301020043987"/>
			<MemberRefExpr type="int" spelling="rewrite_length" id="2300982353050"/>
			<MemberRefExpr type="png_uint_32" spelling="rewrite_offset" id="2301933209724"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="cleared" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="stream"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is the last byte so reset chunk_read for the next
                      * chunk and move the input file to the position after the
                      * *next* chunk header if required." comment_scope_start="3490" comment_scope_end="3502">
		<SYMBOLS>
			<UnexposedExpr type="struct file *" spelling="file" id="2303779126180"/>
			<UnexposedExpr type="void (*)(struct file *, const fpos_t *)" spelling="file_setpos" id="2303635785348"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303780620875"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301963837404"/>
			<UnexposedExpr type="struct IDAT *" spelling="idat" id="2302295623398"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301938011686"/>
			<UnexposedExpr type="void (*)(struct chunk **)" spelling="chunk_end" id="2302584268159"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2301754588477"/>
			<UnexposedExpr type="void (*)(struct IDAT **)" spelling="IDAT_end" id="2302893781399"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2303539653158"/>
			<CallExpr type="void" spelling="file_setpos" id="2302216485527"/>
			<CallExpr type="void" spelling="chunk_end" id="2302735890177"/>
			<CallExpr type="void" spelling="IDAT_end" id="2300107281624"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300472314767"/>
			<DeclRefExpr type="void (struct file *, const fpos_t *)" spelling="file_setpos" id="2302648386653"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302736024778"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2300884699712"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301133812672"/>
			<DeclRefExpr type="void (struct chunk **)" spelling="chunk_end" id="2301085471377"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2302691308483"/>
			<DeclRefExpr type="void (struct IDAT **)" spelling="IDAT_end" id="2302808978372"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2301984206222"/>
			<MemberRefExpr type="png_uint_32" spelling="read_count" id="2303924117961"/>
			<MemberRefExpr type="fpos_t" spelling="data_pos" id="2303140467834"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2304271324657"/>
			<MemberRefExpr type="struct chunk *" spelling="chunk" id="2301727720596"/>
			<MemberRefExpr type="struct IDAT *" spelling="idat" id="2301321243167"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="last" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="reset" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="move" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="input" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="next" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="chunk"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="conditioning" comment_scope_start="3505" comment_scope_end="3505">
		<SYMBOLS>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2302025653021"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
			<LabelStmt type="" spelling="write_crc" id="2303892563166"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Write one byte" comment_scope_start="3511" comment_scope_end="3514">
		<SYMBOLS>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2301115268026"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303316013094"/>
			<DeclRefExpr type="png_bytep" spelling="buffer" id="2301221001871"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2301344176630"/>
			<DeclRefExpr type="size_t" spelling="count" id="2303532058713"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="write" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="byte" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="increments chunk_write" comment_scope_start="3515" comment_scope_end="3515">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="write_byte" id="2304086356505"/>
			<UnexposedExpr type="struct file *" spelling="file" id="2302441603050"/>
			<UnexposedExpr type="png_uint_32" spelling="b" id="2300185628128"/>
			<TypeRef type="png_byte" spelling="png_byte" id="2303955408867"/>
			<CallExpr type="void" spelling="write_byte" id="2302320256840"/>
			<DeclRefExpr type="void (struct file *, int)" spelling="write_byte" id="2304209871689"/>
			<DeclRefExpr type="struct file *" spelling="file" id="2303820029834"/>
			<DeclRefExpr type="png_uint_32" spelling="b" id="2303145764812"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="increments" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Bundle the file and an uninitialized chunk and IDAT control structure
 * together to allow implementation of the chunk/IDAT allocate routine." comment_scope_start="3520" comment_scope_end="3528">
		<SYMBOLS>
			<TypeRef type="struct file" spelling="struct file" id="2304001895045"/>
			<TypeRef type="struct chunk" spelling="struct chunk" id="2301643509128"/>
			<TypeRef type="struct IDAT" spelling="struct IDAT" id="2301364705715"/>
			<FieldDecl type="struct file" spelling="file" id="2303253368759"/>
			<FieldDecl type="struct chunk" spelling="chunk" id="2303398183325"/>
			<FieldDecl type="struct IDAT" spelling="idat" id="2304100538160"/>
			<StructDecl type="struct control" spelling="control" id="2300485560274"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="allocate" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This just returns the (file*).  The chunk and idat control structures
    * don't always exist." comment_scope_start="3539" comment_scope_end="3545">
		<SYMBOLS>
			<UnexposedExpr type="png_voidp (*)(png_const_structrp)" spelling="png_get_error_ptr" id="2302724255705"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2302295574369"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2303412649025"/>
			<TypeRef type="struct control" spelling="struct control" id="2303925491657"/>
			<CallExpr type="png_voidp" spelling="png_get_error_ptr" id="2300461352248"/>
			<VarDecl type="struct control *" spelling="control" id="2304149426459"/>
			<FunctionDecl type="struct file *(png_const_structrp)" spelling="get_control" id="2302557321007"/>
			<DeclRefExpr type="png_voidp (png_const_structrp)" spelling="png_get_error_ptr" id="2300462065871"/>
			<DeclRefExpr type="png_const_structrp" spelling="png_ptr" id="2301591788181"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302028711824"/>
			<MemberRefExpr type="struct file" spelling="file" id="2301778889826"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="chunk"/>
			<PROBLEM_DOMAIN word="idat"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="chunk" comment_scope_start="3558" comment_scope_end="3558"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This wraps file_init(&amp;control::file) and simply returns the result from
    * file_init." comment_scope_start="3568" comment_scope_end="3574">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct file *, struct global *, const char *, const char *, void *, void (*)(struct file *, int))" spelling="file_init" id="2301997343169"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2300654769793"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2304152508232"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2301845561324"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2303362003703"/>
			<UnexposedExpr type="void *" spelling="control" id="2300864291201"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2303323823246"/>
			<UnexposedExpr type="void (*)(struct file *, int)" spelling="allocate" id="2303266623339"/>
			<CallExpr type="int" spelling="file_init" id="2303079461470"/>
			<FunctionDecl type="int (struct control *, struct global *, const char *, const char *)" spelling="control_init" id="2301989416690"/>
			<DeclRefExpr type="int (struct file *, struct global *, const char *, const char *, void *, void (*)(struct file *, int))" spelling="file_init" id="2304037360138"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2301406777637"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2303001851566"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2303620399170"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2302251046309"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302889929161"/>
			<DeclRefExpr type="void (struct file *, int)" spelling="allocate" id="2301758298338"/>
			<MemberRefExpr type="struct file" spelling="file" id="2303795674426"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="returns" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="result" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Read a PNG, return 0 on success else an error (status) code; a bit mask as
    * defined for file::status_code as above." comment_scope_start="3578" comment_scope_end="3649">
		<SYMBOLS>
			<UnexposedExpr type="png_structp (*)(png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_read_struct" id="2302935640187"/>
			<UnexposedExpr type="png_voidp" spelling="control" id="2300318755352"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2300651791121"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="error_handler" id="2300013881991"/>
			<UnexposedExpr type="void (*)(png_structp, png_const_charp)" spelling="warning_handler" id="2301765884073"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2302988320128"/>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="log_error" id="2301439460649"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2301279590641"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2300289390444"/>
			<UnexposedExpr type="int (*)(struct __jmp_buf_tag *)" spelling="_setjmp" id="2300496576580"/>
			<UnexposedExpr type="struct __jmp_buf_tag *" spelling="jmpbuf" id="2304168822589"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2301432218290"/>
			<UnexposedExpr type="int" spelling="rc" id="2302603304323"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2303836281117"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300214966706"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32)" spelling="png_set_chunk_cache_max" id="2303645437642"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301363226927"/>
			<UnexposedExpr type="void (*)(png_structrp, png_alloc_size_t)" spelling="png_set_chunk_malloc_max" id="2304111099215"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301886410839"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2303945143822"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2302529710457"/>
			<UnexposedExpr type="png_voidp" spelling="control" id="2300156074385"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2302924370535"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_callback" id="2301538672948"/>
			<UnexposedExpr type="png_infop (*)(png_const_structrp)" spelling="png_create_info_struct" id="2301554936221"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303544741168"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301223106855"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2303268179421"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2302019334942"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2301900454559"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301812702615"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2303322293532"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303368466810"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2302876992363"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2300878068654"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301274359584"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2300479616604"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301429661873"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2304173862834"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2300255120591"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303915250096"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2303985186899"/>
			<UnexposedExpr type="const png_info *" spelling="info_ptr" id="2301242712231"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2303539181903"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2304234616806"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300275035223"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_start_read_image" id="2302005782345"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301900299097"/>
			<UnexposedExpr type="int" spelling="pass" id="2300011326794"/>
			<UnexposedExpr type="int" spelling="passes" id="2304284599153"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2302323210253"/>
			<UnexposedExpr type="void (*)(png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2300057563033"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2302311947251"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2304114794223"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302999877007"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2300741667394"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2300778733011"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300371791821"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_end" id="2302630606193"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300758361662"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2300659005902"/>
			<UnexposedExpr type="void (*)(png_structpp, png_infopp, png_infopp)" spelling="png_destroy_read_struct" id="2302396800322"/>
			<UnexposedExpr type="int" spelling="rc" id="2302410212817"/>
			<TypeRef type="png_structp" spelling="png_structp" id="2300936171991"/>
			<TypeRef type="png_infop" spelling="png_infop" id="2301533878353"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="png_structp" spelling="png_create_read_struct" id="2304151036486"/>
			<CallExpr type="void" spelling="log_error" id="2300642178047"/>
			<CallExpr type="int" spelling="_setjmp" id="2303931659050"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2300420346422"/>
			<CallExpr type="void" spelling="png_set_chunk_cache_max" id="2300098758560"/>
			<CallExpr type="void" spelling="png_set_chunk_malloc_max" id="2300900533511"/>
			<CallExpr type="void" spelling="png_set_read_fn" id="2304229509173"/>
			<CallExpr type="png_infop" spelling="png_create_info_struct" id="2304105630668"/>
			<CallExpr type="void" spelling="png_error" id="2302490992706"/>
			<CallExpr type="int" spelling="fprintf" id="2302072529638"/>
			<CallExpr type="void" spelling="png_read_info" id="2300711055979"/>
			<CallExpr type="png_uint_32" spelling="png_get_image_height" id="2301288770122"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2304272479218"/>
			<CallExpr type="void" spelling="png_start_read_image" id="2304178337767"/>
			<CallExpr type="void" spelling="png_read_row" id="2301200727385"/>
			<CallExpr type="int" spelling="fprintf" id="2302349968207"/>
			<CallExpr type="void" spelling="png_read_end" id="2300530622892"/>
			<CallExpr type="void" spelling="png_destroy_read_struct" id="2303986965637"/>
			<StringLiteral type="char [11]" spelling="&quot;1.6.38.git&quot;" id="2301580365625"/>
			<StringLiteral type="char [26]" spelling="&quot;OOM allocating png_struct&quot;" id="2302172896912"/>
			<StringLiteral type="char [30]" spelling="&quot;OOM allocating info structure&quot;" id="2304126192286"/>
			<StringLiteral type="char [7]" spelling="&quot; INFO\n&quot;" id="2302383600749"/>
			<StringLiteral type="char [6]" spelling="&quot; END\n&quot;" id="2303255560936"/>
			<VarDecl type="png_structp" spelling="png_ptr" id="2301778338636"/>
			<VarDecl type="png_infop" spelling="info_ptr" id="2302633882578"/>
			<VarDecl type="volatile int" spelling="rc" id="2303532874100"/>
			<VarDecl type="png_uint_32" spelling="height" id="2303619093259"/>
			<VarDecl type="int" spelling="passes" id="2303055933038"/>
			<VarDecl type="int" spelling="pass" id="2301352922037"/>
			<VarDecl type="png_uint_32" spelling="y" id="2300382282907"/>
			<FunctionDecl type="int (struct control *)" spelling="read_png" id="2300459161435"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303980170194"/>
			<DeclRefExpr type="png_structp (png_const_charp, png_voidp, png_error_ptr, png_error_ptr)" spelling="png_create_read_struct" id="2304154898312"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302118003548"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="error_handler" id="2301148176136"/>
			<DeclRefExpr type="void (png_structp, png_const_charp)" spelling="warning_handler" id="2304241651081"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2301077342538"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="log_error" id="2301003769770"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302955562576"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302495316663"/>
			<DeclRefExpr type="volatile int" spelling="rc" id="2301536582918"/>
			<DeclRefExpr type="int (struct __jmp_buf_tag *)" spelling="_setjmp" id="2303230064907"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2301841379225"/>
			<DeclRefExpr type="volatile int" spelling="rc" id="2302487945545"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2301586205991"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2301070543298"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32)" spelling="png_set_chunk_cache_max" id="2304093128028"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303149077301"/>
			<DeclRefExpr type="void (png_structrp, png_alloc_size_t)" spelling="png_set_chunk_malloc_max" id="2300253486903"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2304127165151"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2303755072367"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300418800560"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2301320852474"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2304278532908"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302264384437"/>
			<DeclRefExpr type="png_infop (png_const_structrp)" spelling="png_create_info_struct" id="2300277281597"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303172445607"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2303300293938"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2301067517430"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303177975294"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2303557517886"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2301041483317"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300219883659"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2301496003273"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303864770862"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302754446337"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2300591838234"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303259331522"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2300531970648"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2301830447093"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303714529803"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_start_read_image" id="2300183207365"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300320880346"/>
			<DeclRefExpr type="int" spelling="pass" id="2304212066263"/>
			<DeclRefExpr type="int" spelling="pass" id="2301717972193"/>
			<DeclRefExpr type="int" spelling="passes" id="2302349393033"/>
			<DeclRefExpr type="int" spelling="pass" id="2302960367928"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2303733777992"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2301530460339"/>
			<DeclRefExpr type="void (png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2304069696547"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300871052218"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2303684308117"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2303890682428"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2303641286991"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_end" id="2301126331958"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2302900699267"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302236148450"/>
			<DeclRefExpr type="void (png_structpp, png_infopp, png_infopp)" spelling="png_destroy_read_struct" id="2302395102886"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2301444281090"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2301931441571"/>
			<DeclRefExpr type="volatile int" spelling="rc" id="2303364016015"/>
			<MemberRefExpr type="struct file" spelling="file" id="2303132295464"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300297700097"/>
			<MemberRefExpr type="struct file" spelling="file" id="2304185397711"/>
			<MemberRefExpr type="jmp_buf" spelling="jmpbuf" id="2302037182497"/>
			<MemberRefExpr type="struct file" spelling="file" id="2300893025666"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2301934902132"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301135265545"/>
			<MemberRefExpr type="struct file" spelling="file" id="2301263669610"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2302304483386"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2300060355070"/>
			<MemberRefExpr type="struct file" spelling="file" id="2303988127884"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="error" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="bit" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="for" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="This is not really expected." comment_scope_start="3591" comment_scope_end="3595">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(struct file *, int, const char *)" spelling="log_error" id="2301439460649"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2301279590641"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2300289390444"/>
			<CallExpr type="void" spelling="log_error" id="2300642178047"/>
			<StringLiteral type="char [26]" spelling="&quot;OOM allocating png_struct&quot;" id="2302172896912"/>
			<DeclRefExpr type="void (struct file *, int, const char *)" spelling="log_error" id="2301003769770"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302955562576"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2302495316663"/>
			<MemberRefExpr type="struct file" spelling="file" id="2303132295464"/>
			<MemberRefExpr type="int" spelling="status_code" id="2300297700097"/>
			<MemberRefExpr type="struct file" spelling="file" id="2304185397711"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Remove any limits on the size of PNG files that can be read,
          * without this we may reject files based on built-in safety
          * limits." comment_scope_start="3601" comment_scope_end="3631">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2303836281117"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300214966706"/>
			<UnexposedExpr type="void (*)(png_structrp, png_uint_32)" spelling="png_set_chunk_cache_max" id="2303645437642"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301363226927"/>
			<UnexposedExpr type="void (*)(png_structrp, png_alloc_size_t)" spelling="png_set_chunk_malloc_max" id="2304111099215"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301886410839"/>
			<UnexposedExpr type="void (*)(png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2303945143822"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2302529710457"/>
			<UnexposedExpr type="png_voidp" spelling="control" id="2300156074385"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2302924370535"/>
			<UnexposedExpr type="void (*)(png_structp, png_bytep, size_t)" spelling="read_callback" id="2301538672948"/>
			<UnexposedExpr type="png_infop (*)(png_const_structrp)" spelling="png_create_info_struct" id="2301554936221"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303544741168"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301223106855"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2303268179421"/>
			<UnexposedExpr type="void (*)(png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2302019334942"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2301900454559"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301812702615"/>
			<UnexposedExpr type="unsigned int" spelling="verbose" id="2303322293532"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2303368466810"/>
			<UnexposedExpr type="struct control *" spelling="control" id="2302876992363"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2300878068654"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2301274359584"/>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_info" id="2300479616604"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301429661873"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2304173862834"/>
			<UnexposedExpr type="png_uint_32 (*)(png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2300255120591"/>
			<UnexposedExpr type="const png_struct *" spelling="png_ptr" id="2303915250096"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2303985186899"/>
			<UnexposedExpr type="const png_info *" spelling="info_ptr" id="2301242712231"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2303539181903"/>
			<UnexposedExpr type="int (*)(png_structrp)" spelling="png_set_interlace_handling" id="2304234616806"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300275035223"/>
			<UnexposedExpr type="void (*)(png_structrp)" spelling="png_start_read_image" id="2302005782345"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2301900299097"/>
			<UnexposedExpr type="int" spelling="pass" id="2300011326794"/>
			<UnexposedExpr type="int" spelling="passes" id="2304284599153"/>
			<UnexposedExpr type="png_uint_32" spelling="height" id="2302323210253"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<TypeRef type="png_uint_32" spelling="png_uint_32" id="2302334561471"/>
			<CallExpr type="void" spelling="png_set_user_limits" id="2300420346422"/>
			<CallExpr type="void" spelling="png_set_chunk_cache_max" id="2300098758560"/>
			<CallExpr type="void" spelling="png_set_chunk_malloc_max" id="2300900533511"/>
			<CallExpr type="void" spelling="png_set_read_fn" id="2304229509173"/>
			<CallExpr type="png_infop" spelling="png_create_info_struct" id="2304105630668"/>
			<CallExpr type="void" spelling="png_error" id="2302490992706"/>
			<CallExpr type="int" spelling="fprintf" id="2302072529638"/>
			<CallExpr type="void" spelling="png_read_info" id="2300711055979"/>
			<CallExpr type="png_uint_32" spelling="png_get_image_height" id="2301288770122"/>
			<CallExpr type="int" spelling="png_set_interlace_handling" id="2304272479218"/>
			<CallExpr type="void" spelling="png_start_read_image" id="2304178337767"/>
			<StringLiteral type="char [30]" spelling="&quot;OOM allocating info structure&quot;" id="2304126192286"/>
			<StringLiteral type="char [7]" spelling="&quot; INFO\n&quot;" id="2302383600749"/>
			<VarDecl type="png_uint_32" spelling="height" id="2303619093259"/>
			<VarDecl type="int" spelling="passes" id="2303055933038"/>
			<VarDecl type="int" spelling="pass" id="2301352922037"/>
			<VarDecl type="png_uint_32" spelling="y" id="2300382282907"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32, png_uint_32)" spelling="png_set_user_limits" id="2301586205991"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2301070543298"/>
			<DeclRefExpr type="void (png_structrp, png_uint_32)" spelling="png_set_chunk_cache_max" id="2304093128028"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303149077301"/>
			<DeclRefExpr type="void (png_structrp, png_alloc_size_t)" spelling="png_set_chunk_malloc_max" id="2300253486903"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2304127165151"/>
			<DeclRefExpr type="void (png_structrp, png_voidp, png_rw_ptr)" spelling="png_set_read_fn" id="2303755072367"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300418800560"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2301320852474"/>
			<DeclRefExpr type="void (png_structp, png_bytep, size_t)" spelling="read_callback" id="2304278532908"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302264384437"/>
			<DeclRefExpr type="png_infop (png_const_structrp)" spelling="png_create_info_struct" id="2300277281597"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303172445607"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2303300293938"/>
			<DeclRefExpr type="void (png_const_structrp, png_const_charp) __attribute__((noreturn))" spelling="png_error" id="2301067517430"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303177975294"/>
			<DeclRefExpr type="struct control *" spelling="control" id="2303557517886"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2301041483317"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300219883659"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_info" id="2301496003273"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303864770862"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302754446337"/>
			<DeclRefExpr type="png_uint_32 (png_const_structrp, png_const_inforp)" spelling="png_get_image_height" id="2300591838234"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303259331522"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2300531970648"/>
			<DeclRefExpr type="int (png_structrp)" spelling="png_set_interlace_handling" id="2301830447093"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2303714529803"/>
			<DeclRefExpr type="void (png_structrp)" spelling="png_start_read_image" id="2300183207365"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300320880346"/>
			<DeclRefExpr type="int" spelling="pass" id="2304212066263"/>
			<DeclRefExpr type="int" spelling="pass" id="2301717972193"/>
			<DeclRefExpr type="int" spelling="passes" id="2302349393033"/>
			<DeclRefExpr type="int" spelling="pass" id="2302960367928"/>
			<DeclRefExpr type="png_uint_32" spelling="height" id="2303733777992"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2301934902132"/>
			<MemberRefExpr type="struct global *" spelling="global" id="2301135265545"/>
			<MemberRefExpr type="struct file" spelling="file" id="2301263669610"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="remove" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="size" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="png"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NOTE: this skips asking libpng to return either version of
            * the image row, but libpng still reads the rows." comment_scope_start="3632" comment_scope_end="3637">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2300057563033"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2302311947251"/>
			<CallExpr type="void" spelling="png_read_row" id="2301200727385"/>
			<DeclRefExpr type="png_uint_32" spelling="y" id="2301530460339"/>
			<DeclRefExpr type="void (png_structrp, png_bytep, png_bytep)" spelling="png_read_row" id="2304069696547"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2300871052218"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS>
			<PROBLEM_DOMAIN word="libpng"/>
			<PROBLEM_DOMAIN word="image"/>
			<PROBLEM_DOMAIN word="libpng"/>
		</PROBLEM_DOMAINS>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Make sure to read to the end of the file:" comment_scope_start="3643" comment_scope_end="3645">
		<SYMBOLS>
			<UnexposedExpr type="void (*)(png_structrp, png_inforp)" spelling="png_read_end" id="2302630606193"/>
			<UnexposedExpr type="png_structp" spelling="png_ptr" id="2300758361662"/>
			<UnexposedExpr type="png_infop" spelling="info_ptr" id="2300659005902"/>
			<CallExpr type="void" spelling="png_read_end" id="2300530622892"/>
			<DeclRefExpr type="void (png_structrp, png_inforp)" spelling="png_read_end" id="2301126331958"/>
			<DeclRefExpr type="png_structp" spelling="png_ptr" id="2302900699267"/>
			<DeclRefExpr type="png_infop" spelling="info_ptr" id="2302236148450"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="make" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="read" type=" 'Operations as part of Data structure"/>
			<POGRAM_DOMAIN word="end" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Although control_init can return a failure code the structure is always
    * initialized, so control_end can be used to accumulate any status codes." comment_scope_start="3661" comment_scope_end="3672">
		<SYMBOLS>
			<UnexposedExpr type="int (*)(struct control *, struct global *, const char *, const char *)" spelling="control_init" id="2302072263195"/>
			<UnexposedExpr type="struct global *" spelling="global" id="2302223896781"/>
			<UnexposedExpr type="const char *" spelling="file_name" id="2303058695893"/>
			<UnexposedExpr type="const char *" spelling="out_name" id="2302209144607"/>
			<UnexposedExpr type="int" spelling="rc" id="2300268998079"/>
			<UnexposedExpr type="int (*)(struct control *)" spelling="read_png" id="2301292829273"/>
			<UnexposedExpr type="int (*)(struct control *)" spelling="control_end" id="2300189569899"/>
			<UnexposedExpr type="int" spelling="rc" id="2300310561596"/>
			<CallExpr type="int" spelling="control_init" id="2300485344773"/>
			<CallExpr type="int" spelling="read_png" id="2304257932694"/>
			<CallExpr type="int" spelling="control_end" id="2302275925422"/>
			<FunctionDecl type="int (struct global *, const char *, const char *)" spelling="one_file" id="2303396481921"/>
			<DeclRefExpr type="int" spelling="rc" id="2302214284757"/>
			<DeclRefExpr type="int (struct control *, struct global *, const char *, const char *)" spelling="control_init" id="2301890315098"/>
			<DeclRefExpr type="struct control" spelling="control" id="2300944330722"/>
			<DeclRefExpr type="struct global *" spelling="global" id="2303308243963"/>
			<DeclRefExpr type="const char *" spelling="file_name" id="2301719655107"/>
			<DeclRefExpr type="const char *" spelling="out_name" id="2301622172012"/>
			<DeclRefExpr type="int" spelling="rc" id="2300737670520"/>
			<DeclRefExpr type="int" spelling="rc" id="2303251467828"/>
			<DeclRefExpr type="int (struct control *)" spelling="read_png" id="2301068740638"/>
			<DeclRefExpr type="struct control" spelling="control" id="2301494536507"/>
			<DeclRefExpr type="int" spelling="rc" id="2301447336272"/>
			<DeclRefExpr type="int (struct control *)" spelling="control_end" id="2300249853584"/>
			<DeclRefExpr type="struct control" spelling="control" id="2301079581881"/>
			<DeclRefExpr type="int" spelling="rc" id="2302433485895"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="return" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="failure" type=" 'Time Complexity / Space Complexity/ Memory/ Exception"/>
			<POGRAM_DOMAIN word="structure" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ANSI C-90 limits strings to 509 characters, so use a string array:" comment_scope_start="3677" comment_scope_end="3741">
		<SYMBOLS>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<StringLiteral type="char [70]" spelling="&quot;  Tests, optimizes and optionally fixes the zlib header in PNG files.&quot;" id="2303141299669"/>
			<StringLiteral type="char [66]" spelling="&quot;  Optionally, when fixing, strips ancillary chunks from the file.&quot;" id="2303960895787"/>
			<StringLiteral type="char [8]" spelling="&quot;OPTIONS&quot;" id="2300842114944"/>
			<StringLiteral type="char [12]" spelling="&quot;  OPERATION&quot;" id="2301058017984"/>
			<StringLiteral type="char [78]" spelling="&quot;      By default files are just checked for readability with a summary of the&quot;" id="2304018618246"/>
			<StringLiteral type="char [77]" spelling="&quot;      of zlib issues founds for each compressed chunk and the IDAT stream in&quot;" id="2303077470252"/>
			<StringLiteral type="char [16]" spelling="&quot;      the file.&quot;" id="2302725631692"/>
			<StringLiteral type="char [21]" spelling="&quot;    --optimize (-o):&quot;" id="2301013890352"/>
			<StringLiteral type="char [69]" spelling="&quot;      Find the smallest deflate window size for the compressed data.&quot;" id="2301716865856"/>
			<StringLiteral type="char [58]" spelling="&quot;    --strip=[none|crc|unsafe|unused|transform|color|all]:&quot;" id="2300966223741"/>
			<StringLiteral type="char [45]" spelling="&quot;        none (default):   Retain all chunks.&quot;" id="2300293545382"/>
			<StringLiteral type="char [46]" spelling="&quot;        crc:    Remove chunks with a bad CRC.&quot;" id="2303508107814"/>
			<StringLiteral type="char [77]" spelling="&quot;        unsafe: Remove chunks that may be unsafe to retain if the image data&quot;" id="2303447291008"/>
			<StringLiteral type="char [78]" spelling="&quot;                is modified.  This is set automatically if --max is given but&quot;" id="2302933357899"/>
			<StringLiteral type="char [58]" spelling="&quot;                may be cancelled by a later --strip=none.&quot;" id="2300628746794"/>
			<StringLiteral type="char [73]" spelling="&quot;        unused: Remove chunks not used by libpng when decoding an image.&quot;" id="2303495485586"/>
			<StringLiteral type="char [75]" spelling="&quot;                This retains any chunks that might be used by libpng image&quot;" id="2300902043891"/>
			<StringLiteral type="char [33]" spelling="&quot;                transformations.&quot;" id="2300724626092"/>
			<StringLiteral type="char [32]" spelling="&quot;        transform: unused+bKGD.&quot;" id="2300538283355"/>
			<StringLiteral type="char [41]" spelling="&quot;        color:  transform+iCCP and cHRM.&quot;" id="2303697988767"/>
			<StringLiteral type="char [37]" spelling="&quot;        all:    color+gAMA and sRGB.&quot;" id="2302629365019"/>
			<StringLiteral type="char [77]" spelling="&quot;      Only ancillary chunks are ever removed.  In addition the tRNS and sBIT&quot;" id="2304132590751"/>
			<StringLiteral type="char [74]" spelling="&quot;      chunks are never removed as they affect exact interpretation of the&quot;" id="2303566092750"/>
			<StringLiteral type="char [76]" spelling="&quot;      image pixel values.  The following known chunks are treated specially&quot;" id="2300880258204"/>
			<StringLiteral type="char [28]" spelling="&quot;      by the above options:&quot;" id="2303666064568"/>
			<StringLiteral type="char [78]" spelling="&quot;        gAMA, sRGB [all]: These specify the gamma encoding used for the pixel&quot;" id="2303245551655"/>
			<StringLiteral type="char [20]" spelling="&quot;            values.&quot;" id="2303307380363"/>
			<StringLiteral type="char [77]" spelling="&quot;        cHRM, iCCP [color]: These specify how colors are encoded.  iCCP also&quot;" id="2303364871549"/>
			<StringLiteral type="char [71]" spelling="&quot;            specifies the exact encoding of a pixel value; however, in&quot;" id="2300371504283"/>
			<StringLiteral type="char [51]" spelling="&quot;            practice most programs will ignore it.&quot;" id="2301620710018"/>
			<StringLiteral type="char [80]" spelling="&quot;        bKGD [transform]: This is used by libpng transforms.    --max=&lt;number&gt;:&quot;" id="2304183556729"/>
			<StringLiteral type="char [70]" spelling="&quot;      Use IDAT chunks sized &lt;number&gt;.  If no number is given the IDAT&quot;" id="2303947952493"/>
			<StringLiteral type="char [78]" spelling="&quot;      chunks will be the maximum size permitted; 2^31-1 bytes.  If the option&quot;" id="2302935332227"/>
			<StringLiteral type="char [73]" spelling="&quot;      is omitted the original chunk sizes will not be changed.  When the&quot;" id="2303789219707"/>
			<StringLiteral type="char [71]" spelling="&quot;      option is given --strip=unsafe is set automatically. This may be&quot;" id="2304101481391"/>
			<StringLiteral type="char [78]" spelling="&quot;      cancelled if you know that all unknown unsafe-to-copy chunks really are&quot;" id="2301607202846"/>
			<StringLiteral type="char [75]" spelling="&quot;      safe to copy across an IDAT size change.  This is true of all chunks&quot;" id="2300554222594"/>
			<StringLiteral type="char [63]" spelling="&quot;      that have ever been formally proposed as PNG extensions.&quot;" id="2301141169805"/>
			<StringLiteral type="char [11]" spelling="&quot;  MESSAGES&quot;" id="2300270362079"/>
			<StringLiteral type="char [67]" spelling="&quot;      By default the program only outputs summaries for each file.&quot;" id="2302823571179"/>
			<StringLiteral type="char [18]" spelling="&quot;    --quiet (-q):&quot;" id="2300106518065"/>
			<StringLiteral type="char [77]" spelling="&quot;      Do not output the summaries except for files that cannot be read. With&quot;" id="2301092177323"/>
			<StringLiteral type="char [48]" spelling="&quot;      two --quiets these are not output either.&quot;" id="2303801988651"/>
			<StringLiteral type="char [19]" spelling="&quot;    --errors (-e):&quot;" id="2303367297343"/>
			<StringLiteral type="char [71]" spelling="&quot;      Output errors from libpng and the program (except too-far-back).&quot;" id="2301533482799"/>
			<StringLiteral type="char [21]" spelling="&quot;    --warnings (-w):&quot;" id="2301847362412"/>
			<StringLiteral type="char [35]" spelling="&quot;      Output warnings from libpng.&quot;" id="2303379812593"/>
			<StringLiteral type="char [9]" spelling="&quot;  OUTPUT&quot;" id="2301800482537"/>
			<StringLiteral type="char [37]" spelling="&quot;      By default nothing is written.&quot;" id="2300652723983"/>
			<StringLiteral type="char [18]" spelling="&quot;    --out=&lt;file&gt;:&quot;" id="2302280382454"/>
			<StringLiteral type="char [77]" spelling="&quot;      Write the optimized/corrected version of the next PNG to &lt;file&gt;.  This&quot;" id="2302117519904"/>
			<StringLiteral type="char [42]" spelling="&quot;      overrides the following two options&quot;" id="2302276999775"/>
			<StringLiteral type="char [23]" spelling="&quot;    --suffix=&lt;suffix&gt;:&quot;" id="2300829209871"/>
			<StringLiteral type="char [76]" spelling="&quot;      Set --out=&lt;name&gt;&lt;suffix&gt; for all following files unless overridden on&quot;" id="2302721045652"/>
			<StringLiteral type="char [42]" spelling="&quot;      a per-file basis by explicit --out.&quot;" id="2300107229302"/>
			<StringLiteral type="char [23]" spelling="&quot;    --prefix=&lt;prefix&gt;:&quot;" id="2302955288640"/>
			<StringLiteral type="char [77]" spelling="&quot;      Set --out=&lt;prefix&gt;&lt;name&gt; for all the following files unless overridden&quot;" id="2303457428836"/>
			<StringLiteral type="char [45]" spelling="&quot;      on a per-file basis by explicit --out.&quot;" id="2300605110233"/>
			<StringLiteral type="char [77]" spelling="&quot;      These two options can be used together to produce a suffix and prefix.&quot;" id="2300777484388"/>
			<StringLiteral type="char [19]" spelling="&quot;  INTERNAL OPTIONS&quot;" id="2302443189631"/>
			<VarDecl type="size_t" spelling="i" id="2301543384127"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="string" type=" 'Data-Structure and its Components"/>
			<POGRAM_DOMAIN word="array" type=" 'Data-Structure and its Components"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NYI" comment_scope_start="3742" comment_scope_end="3742"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="if at least one file is processed" comment_scope_start="3865" comment_scope_end="3865">
		<SYMBOLS>
			<VarDecl type="int" spelling="done" id="2300935770893"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="if" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="processed" type=" 'Operations as part of Algorithms"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="To help debugging problems:" comment_scope_start="3876" comment_scope_end="3880">
		<SYMBOLS>
			<DeclRefExpr type="struct global" spelling="global" id="2303551172666"/>
			<DeclRefExpr type="struct global" spelling="global" id="2303433382238"/>
			<DeclRefExpr type="struct global" spelling="global" id="2303788295257"/>
			<DeclRefExpr type="struct global" spelling="global" id="2302655846859"/>
			<MemberRefExpr type="unsigned int" spelling="errors" id="2300566242210"/>
			<MemberRefExpr type="unsigned int" spelling="warnings" id="2302700056639"/>
			<MemberRefExpr type="unsigned int" spelling="quiet" id="2300098377020"/>
			<MemberRefExpr type="unsigned int" spelling="verbose" id="2300066305234"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="NYI" comment_scope_start="3950" comment_scope_end="3963">
		<SYMBOLS>
			<UnexposedExpr type="const char **" spelling="argv" id="2300339840846"/>
			<UnexposedExpr type="void (*)(const char *)" spelling="usage" id="2301582725913"/>
			<UnexposedExpr type="const char *" spelling="prog" id="2301503749175"/>
			<UnexposedExpr type="unsigned long (*)(const char *)" spelling="strlen" id="2301033670843"/>
			<UnexposedExpr type="const char **" spelling="argv" id="2303345141078"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<CallExpr type="void" spelling="usage" id="2301666562971"/>
			<CallExpr type="unsigned long" spelling="strlen" id="2304272847917"/>
			<VarDecl type="size_t" spelling="outlen" id="2304094096785"/>
			<DeclRefExpr type="const char **" spelling="argv" id="2301194136709"/>
			<DeclRefExpr type="void (const char *)" spelling="usage" id="2300006788529"/>
			<DeclRefExpr type="const char *" spelling="prog" id="2301300264816"/>
			<DeclRefExpr type="unsigned long (const char *)" spelling="strlen" id="2301764482320"/>
			<DeclRefExpr type="const char **" spelling="argv" id="2300820936259"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS/>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="else this takes precedence" comment_scope_start="3964" comment_scope_end="3964">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="outfile" id="2302452950282"/>
			<DeclRefExpr type="const char *" spelling="outfile" id="2300915357597"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="else" type=" 'Operations as part of Algorithms"/>
			<POGRAM_DOMAIN word="precedence" type=" 'Properties of Datastructure / Function / Blocks"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="Consider the prefix/suffix options" comment_scope_start="3966" comment_scope_end="3983">
		<SYMBOLS>
			<UnexposedExpr type="const char *" spelling="prefix" id="2301909999809"/>
			<UnexposedExpr type="unsigned long (*)(const char *)" spelling="strlen" id="2304282911409"/>
			<UnexposedExpr type="const char *" spelling="prefix" id="2301124434960"/>
			<UnexposedExpr type="size_t" spelling="prefixlen" id="2301538938298"/>
			<UnexposedExpr type="size_t" spelling="outlen" id="2302863563059"/>
			<UnexposedExpr type="int (*)(FILE *, const char *, ...)" spelling="fprintf" id="2301980229587"/>
			<UnexposedExpr type="struct _IO_FILE *" spelling="stderr" id="2300240766185"/>
			<UnexposedExpr type="const char *" spelling="prog" id="2300966126229"/>
			<UnexposedExpr type="const char *" spelling="prefix" id="2302594191448"/>
			<UnexposedExpr type="const char **" spelling="argv" id="2302144780536"/>
			<UnexposedExpr type="const char *" spelling="suffix" id="2304263431136"/>
			<UnexposedExpr type="const char *" spelling="suffix" id="2303581384505"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2303724281818"/>
			<UnexposedExpr type="void *" spelling="temp_name" id="2303766715111"/>
			<UnexposedExpr type="char *" spelling="temp_name" id="2304254503146"/>
			<UnexposedExpr type="const void *" spelling="prefix" id="2301125300457"/>
			<UnexposedExpr type="const char *" spelling="prefix" id="2301081778256"/>
			<UnexposedExpr type="size_t" spelling="prefixlen" id="2300199539756"/>
			<UnexposedExpr type="void *(*)(void *, const void *, unsigned long)" spelling="memcpy" id="2303968090500"/>
			<UnexposedExpr type="char *" spelling="temp_name" id="2303435114990"/>
			<UnexposedExpr type="size_t" spelling="prefixlen" id="2301501731292"/>
			<UnexposedExpr type="const char **" spelling="argv" id="2301450084870"/>
			<UnexposedExpr type="size_t" spelling="outlen" id="2300204873762"/>
			<UnexposedExpr type="size_t" spelling="prefixlen" id="2301758316747"/>
			<UnexposedExpr type="const char *" spelling="temp_name" id="2303766799711"/>
			<UnexposedExpr type="char *" spelling="temp_name" id="2303479860081"/>
			<TypeRef type="size_t" spelling="size_t" id="2300014506183"/>
			<CallExpr type="unsigned long" spelling="strlen" id="2302174706509"/>
			<CallExpr type="int" spelling="fprintf" id="2301786342425"/>
			<CallExpr type="void *" spelling="memcpy" id="2303409373776"/>
			<CallExpr type="void *" spelling="memcpy" id="2300784391756"/>
			<StringLiteral type="char [39]" spelling="&quot;%s: output file name too long: %s%s%s\n&quot;" id="2301494766037"/>
			<StringLiteral type="char [1]" spelling="&quot;&quot;" id="2303058318099"/>
			<VarDecl type="size_t" spelling="prefixlen" id="2302548302179"/>
			<DeclRefExpr type="const char *" spelling="prefix" id="2303986678733"/>
			<DeclRefExpr type="unsigned long (const char *)" spelling="strlen" id="2300282417828"/>
			<DeclRefExpr type="const char *" spelling="prefix" id="2301053166780"/>
			<DeclRefExpr type="size_t" spelling="prefixlen" id="2303742142305"/>
			<DeclRefExpr type="size_t" spelling="outlen" id="2303060200788"/>
			<DeclRefExpr type="int (FILE *, const char *, ...)" spelling="fprintf" id="2304078449493"/>
			<DeclRefExpr type="struct _IO_FILE *" spelling="stderr" id="2300104090449"/>
			<DeclRefExpr type="const char *" spelling="prog" id="2301926157580"/>
			<DeclRefExpr type="const char *" spelling="prefix" id="2302457632715"/>
			<DeclRefExpr type="const char **" spelling="argv" id="2300734144782"/>
			<DeclRefExpr type="const char *" spelling="suffix" id="2301688390469"/>
			<DeclRefExpr type="const char *" spelling="suffix" id="2302912092296"/>
			<DeclRefExpr type="struct global" spelling="global" id="2302007857515"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2303596685600"/>
			<DeclRefExpr type="char [4097]" spelling="temp_name" id="2302833170312"/>
			<DeclRefExpr type="const char *" spelling="prefix" id="2302817514266"/>
			<DeclRefExpr type="size_t" spelling="prefixlen" id="2300299218323"/>
			<DeclRefExpr type="void *(void *, const void *, unsigned long)" spelling="memcpy" id="2303211929464"/>
			<DeclRefExpr type="char [4097]" spelling="temp_name" id="2302810625821"/>
			<DeclRefExpr type="size_t" spelling="prefixlen" id="2301352778967"/>
			<DeclRefExpr type="const char **" spelling="argv" id="2303902637323"/>
			<DeclRefExpr type="size_t" spelling="outlen" id="2300150213456"/>
			<DeclRefExpr type="size_t" spelling="outlen" id="2301385642608"/>
			<DeclRefExpr type="size_t" spelling="prefixlen" id="2302583959936"/>
			<DeclRefExpr type="const char *" spelling="outfile" id="2301365245741"/>
			<DeclRefExpr type="char [4097]" spelling="temp_name" id="2304020062485"/>
			<MemberRefExpr type="int" spelling="status_code" id="2301616560158"/>
		</SYMBOLS>
		<PROGRAM_DOMAINS>
			<POGRAM_DOMAIN word="prefix" type=" 'Operations as part of Data structure"/>
		</PROGRAM_DOMAINS>
		<PROBLEM_DOMAINS/>
	</COMMENT>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ZLIB_VERNUM &lt; 0x1240" comment_scope_start="4021" comment_scope_end="4021"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="ZLIB_VERNUM" comment_scope_start="4030" comment_scope_end="4030"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="No read support" comment_scope_start="4032" comment_scope_end="4032"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PNG_READ_SUPPORTED &amp;&amp; PNG_EASY_ACCESS_SUPPORTED" comment_scope_start="4040" comment_scope_end="4040"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="No setjmp support" comment_scope_start="4041" comment_scope_end="4041"/>
	<COMMENT src_file_location="/home/dewang/smartKT/SmartKT/kgg/projects/libpng/contrib/tools/pngfix.c" comment_text="PNG_SETJMP_SUPPORTED" comment_scope_start="4048" comment_scope_end="4048"/>
</COMMENTS>
